[
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"3\\n2 4 6\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"5\n1 8 6\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Answer:1\\n1 8 6'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5\\n1 8 6\\n1 5 6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1000000) == \"5\" # Test case 1\nassert solution(10000000) == \"5\" # Test case 2\nassert solution(100000000) == \"5\" # Test case 3\nassert solution(1000000000) == \"5\" # Test case 4\nassert solution(10000000000) == \"5\" # Test case 5\n",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5\\n1 8 6'\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n1 8 6\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == ['20', '8']",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '20 8'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10, \"10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10\\n2 4 8 10\") == \"10 2\"\nassert solution(\"10\\n5 7 9 11 13\") == \"5 9 7 11 13\"",
        "num_ids_2": 61,
        "num_ids_4": 95
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"20 8\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Received: {solution(stdin=input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '20 8'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\nassert solution(\"3 3 2\\n1 2 3\\n3 2 3\\n5 1 2\\n5 3 1\") == \"32\"",
        "num_ids_2": 112,
        "num_ids_4": 155
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"24\"\nassert solution() == \"56\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 24, \"Expected result 24, but got {}\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\\nOutput\\n24\\n\\nInput\\n5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\\nOutput\\n56') == '24\\n56'",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '24', 'The solution is not correct.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\n\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n\nassert solution('''3 5 2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25''') == '262'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '24'\nassert solution() == '56'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('') == ''",
        "num_ids_2": 116,
        "num_ids_4": 122
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 4 3 2\n''') == '4'\n\nassert solution('''\n7\n1 3 5 6 5 4 2\n''') == '6'\n\nassert solution('''\n3\n2 2 2\n''') == '1'\n\nassert solution('''\n4\n1 2 4 3\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRR\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\nLRRR\"\nassert solution(input()) == \"6\\nLRLRRR\"\nassert solution(input()) == \"1\\nR\"\nassert solution(input()) == \"4\\nLLRR\"",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLRRR\\n'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR\\n'\nassert solution('3\\n2 2 2\\n') == '1\\nR\\n'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRR\\n'",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\nprint(f\"Output\")\nprint(f\"{k}\")\nprint(f\"{''.join(s)}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Received: {solution(input())}\"\n\ninput_data = [int(x) for x in input().split()]\nn = input_data[0]\na = input_data[1:]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\\n7\\n1 3 5 6 5 4 2\\n\\n3\\n2 2 2\\n\\n4\\n1 2 4 3\") == \"4\\nLRRR\\n\\n6\\nLRLRRR\\n\\n1\\nR\\n\\n4\\nLLRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\\n3\\n2 2 2\\n\\n4\\n1 2 4 3\") == \"6\\nLRLRRR\\n\\n1\\nR\\n\\n4\\nLLRR\"\nassert solution(\"3\\n2 2 2\\n\\n4\\n1 2 4 3\") == \"1\\nR\\n\\n4\\nLLRR\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRR\"",
        "num_ids_2": 174,
        "num_ids_4": 240
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\nLRRR\"\nassert solution(input()) == \"6\\nLRLRRR\"\nassert solution(input()) == \"1\\nR\"\nassert solution(input()) == \"4\\nLLRR\"",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"4\\nLRRR\"\nassert solution(7) == \"6\\nLRLRRR\"\nassert solution(3) == \"1\\nR\"\nassert solution(4) == \"4\\nLLRR\"",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"Expected output: 3\\nReceived output: {}\".format(solution())  # expected output: 3\nassert solution() == 3, \"Expected output: 3\\nReceived output: {}\".format(solution())  # expected output: 3\nassert solution() == -1, \"Expected output: -1\\nReceived output: {}\".format(solution())  # expected output: -1\nassert solution() == -1, \"Expected output: -1\\nReceived output: {}\".format(solution())  # expected output: -1\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"3\"\nassert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"3\"\nassert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"3\"\nassert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"3\"\nassert solution(\"1\\n4\\n4\\n7\\n4\\n1\") == \"-1\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n\\n5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n\\n') == '3\\n\\n'\nassert solution('5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n\\n') == '3\\n\\n'\nassert solution('4\\n1 3 3 7\\n\\n2\\n2 8\\n\\n') == '-1\\n\\n'\nassert solution('2\\n2 8\\n\\n') == '3\\n\\n'\nassert solution('') == '-1\\n\\n'\n",
        "num_ids_2": 124,
        "num_ids_4": 184
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\\n\"\nassert solution(\"2\\n2 8\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n6\\n1 4 4 7 4 1\\n\\nOutput\\n3\\n\\nInput\\n5\\n2 2 5 2 5\\n\\nOutput\\n3\\n\\nInput\\n4\\n1 3 3 7\\n\\nOutput\\n-1\\n\\nInput\\n2\\n2 8\\n\\nOutput\\n3\\n\\n\") == \"Output\\n3\\n-1\\n3\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == '3\\n'\nassert solution('5\\n2 2 5 2 5\\n') == '3\\n'\nassert solution('4\\n1 3 3 7\\n') == '-1\\n'\nassert solution('2\\n2 8\\n') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\n",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\\n\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\\n\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\\n\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 194
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\\n\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\\n\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\\n\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\\n\"\nassert solution(\"1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1098) == 20, \"Output: %s, Expected: %s\" % (solution(1098), 20)\nassert solution(10) == 19, \"Output: %s, Expected: %s\" % (solution(10), 19)",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1098\") == \"20\", \"Test case 1 failed\"\nassert solution(\"10\") == \"19\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1098\") == \"20\", \"The correct number of different numbers is not found\"\nassert solution(\"10\") == \"19\", \"The correct number of different numbers is not found\"\n\nfrom typing import List",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1098) == 20, \"Expected 20, got {}\".format(solution(1098))\nassert solution(10) == 19, \"Expected 19, got {}\".format(solution(10))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\" for i, (input, output) in enumerate(zip(inputs, outputs)):\n    assert solution(input) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input)}\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"2 1 4 5 3\", \"The output is incorrect.\"\nassert solution(stdin=input()) == \"7 4 2 3 6 5 1\", \"The output is incorrect.\"\nassert solution(stdin=input()) == \"5 3 1 2 4\", \"The output is incorrect.\"\nassert solution(stdin=input()) == \"7 3 2 1 4 5 6\", \"The output is incorrect.\"\nassert solution(stdin=input()) == \"7 4 2 3 6 5 1\", \"The output is incorrect.\"\nassert solution(stdin=input()) == \"2 1 4 5 3\", \"The output is incorrect.\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed. Please check your code and the examples.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == []\nassert solution(\"5\\n5 0 0 2 4\\n\") == [5, 3, 1, 2, 4]\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == [7, 3, 2, 1, 4, 5, 6]\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == [7, 4, 2, 3, 6, 5, 1]\nassert solution(\"5\\n2 1 0 0 0\\n\") == [2, 1, 4, 5, 3]",
        "num_ids_2": 41,
        "num_ids_4": 131
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"5 3 1 2 4 \"\nassert solution(5) == \"5 3 1 2 4\"\nassert solution(7) == \"7 3 2 1 4 5 6\"\nassert solution(5) == \"2 1 4 5 3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 3 1 2 4\\n7 3 2 1 4 5 6\\n7 4 2 3 6 5 1\\n2 1 4 5 3\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\\n2 1 1 2 1\\n5 2\\n2 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"4 2\\n1 2 2 3\\n2 1 1 2 2\\n5 2\\n2 1 1 2 1\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n2 1 1 2 1\\n5 2\\n2 1 1 2 1\") == \"NO\"",
        "num_ids_2": 118,
        "num_ids_4": 168
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(stdin)}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"YES\\n1 1 2 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test Failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\") == \"1\\n\"\nassert solution(\"11 5 1\") == \"3\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(1)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The solution is {solution}, but the expected output is {expected_output}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\", \"Invalid test case format.\"\n\nfor _ in range(int(stdin.strip())):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n\n    has_palindrome = False\n    for i in range(n):\n        for j in range(i + 2, n + 1):\n            subseq = a[i:j]\n            if subseq == subseq[::-1]:\n                has_palindrome = True\n                break\n\n    if has_palindrome:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"\nprint(\"YES\" if solution() == \"YES\" else \"NO\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\\n\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\nprint(\"All test cases passed\")",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected: '{expected_output}', Received: '{solution(input())}'\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, \"Test failed\"\nprint(\"YES\" if expected_output else \"NO\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"1557\"\nassert solution(5) == \"99999\"\nassert solution(2) == \"33\"",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 78,
        "num_ids_4": 112
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"The expected output is: {}\\nBut instead got: {}\".format(output, solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\\n1557\", \"The output is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 1557, \"The output should be 1557.\"\nassert solution(5) == 99999, \"The output should be 99999.\"\nassert solution(2) == 33, \"The output should be 33.\"",
        "num_ids_2": 50,
        "num_ids_4": 70
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1337\\n1 2 5 4 6 6 3 1 9\") == \"1553\"\nassert solution(\"11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"33\\n1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 72,
        "num_ids_4": 103
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\nassert solution('2') == '33'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1337\") == \"1553\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"33\") == \"33\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} is incorrect\"\nprint(f\"Test case {i+1} passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"9\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"4\\n4 8 16\\n6\"\nassert solution(\"5\\n1 22 22\\n1 19 38\\n8\\n6 24 48\") == \"7\\n1 22 22\\n2\"",
        "num_ids_2": 181,
        "num_ids_4": 233
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([8]) == \"1\"\nassert solution([1,2,3]) == \"1\"\nassert solution([123,321,456]) == \"1\"\nassert solution([5,10,15]) == \"1\"\nassert solution([15,18,21]) == \"1\"\nassert solution([100,100,101]) == \"1\"\nassert solution([1,22,29]) == \"1\"\nassert solution([3,19,38]) == \"1\"\nassert solution([6,30,46]) == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 60
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(10)) == \"1\"\nassert solution(str(3)) == \"1\"\nassert solution(str(4)) == \"1\"\nassert solution(str(2)) == \"1\"\nassert solution(str(123)) == \"1\"\nassert solution(str(5)) == \"1\"\nassert solution(str(10)) == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 192,
        "num_ids_4": 192
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 4\nassert solution(8) == 4\nassert solution(9) == 5\nassert solution(10) == 5\nassert solution(11) == 5\nassert solution(12) == 6\nassert solution(13) == 6\nassert solution(14) == 6\nassert solution(15) == 7\nassert solution(16) == 7\nassert solution(17) == 7\nassert solution(18) == 8\nassert solution(19) == 8\nassert solution(20) == 8\nassert solution(21) == 9\nassert solution(22) == 9\nassert solution(23) == 9\nassert solution(24) == 10\nassert solution(25) == 10\nassert solution(26) == 10\nassert solution(27) == 10\nassert solution(28) == 10\nassert solution(29) == 11\nassert solution(30) == 11\nassert solution(31) == 11\nassert solution(32) == 11\nassert solution(33) == 11\nassert solution(34) == 12\nassert solution(35) == 12\nassert solution(36) == 12\nassert solution(37) == 12\nassert solution(38) == 12\nassert solution(39) == 12\nassert solution(40) == 13\nassert solution(41) == 13\nassert solution(42) == 13\nassert solution(43) == 13\nassert solution(44) == 13\nassert solution(45) == 13\nassert solution(46) == 14\nassert solution(47) == 14\nassert solution(48) == 14\nassert solution(49) == 14\nassert solution(50) == 14\nassert solution(51) == 14\nassert solution(52) == 15\nassert solution(53) == 15\nassert solution(54) == 15\nassert solution(55) == 15\nassert solution(56) == 15\nassert solution(57) == 15\nassert solution(58) == 15\nassert solution(59) == 15\nassert solution(60) == 16\nassert solution(61) == 16\nassert solution(62) == 16\nassert solution(63) == 16\nassert solution(64) == 16\nassert solution(65) == 16\nassert solution(66) == 16\nassert solution(67) == 16\nassert solution(68) == 17\nassert solution(69) == 17\nassert solution(70) == 17\nassert solution(71) == 17\nassert solution(72) == 17\nassert solution(73) == 17\nassert solution(74) == 17\nassert solution(75) == 17\nassert solution(76) == 17\nassert solution(77) == 17\nassert solution(78) == 18\nassert solution(79) == 18\nassert solution(80) == 18\nassert solution(81) == 18\nassert solution(82) == 18\nassert solution(83) == 18\nassert solution(84) == 18\nassert solution(85) == 18\nassert solution(86) == 18\nassert solution(87) == 18\nassert solution(88) == 18\nassert solution(89) == 18\nassert solution(90) == 18\nassert solution(91) == 18\nassert solution(92) == 18\nassert solution(93) == 18\nassert solution(94) == 18\nassert solution(95) == 18\nassert solution(96) == 19\nassert solution",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"res\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"Please provide the correct input.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 3 3 7\\n2\\n1 100000\\n0\\n\") == \"2\\n\"\n\nassert solution(\"2\\n1 100000\\n0\\n\") == \"0\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin=input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\") == \"2\\n\"\nassert solution(\"2\\n1 100000\") == \"0\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Expected output: 2, but got {}\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '-1\\n2 2 2 1 1 0 4 3 4 4\\n'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '-1\\n'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4\\n'",
        "num_ids_2": 162,
        "num_ids_4": 249
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4') == '1 2 3 0 3\\n'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4') == '-1\\n'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4') == '2 2 2 1 1 0 4 3 4 4\\n'",
        "num_ids_2": 191,
        "num_ids_4": 269
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test cases failed. Output:\\n{solution(input())}\\nExpected output:\\n{expected_output}\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 2 2 1 1 0 4 3 4 4 \"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_solution, \"Your solution is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3 \\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4 \\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, Actual output: {solution()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 2\n1 3 1\n1 5 1\n\"\"\") == '''1 2 3 0 3'''\n\nassert solution(\"\"\"\n3 2\n1 3 1\n1 2 1\n\"\"\") == '''-1'''\n\nassert solution(\"\"\"\n10 3\n4 7 2\n1 10 3\n8 9 1\n\"\"\") == '''2 2 2 1 1 0 4 3 4 4'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 206
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\", \"The solution is incorrect.\"\nassert solution(\"42 42\") == \"0\", \"The solution is incorrect.\"\nassert solution(\"48 72\") == \"-1\", \"The solution is incorrect.\"",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\\n\", \"The first example is incorrect.\"\nassert solution(\"42 42\") == \"0\\n\", \"The second example is incorrect.\"\nassert solution(\"48 72\") == \"-1\\n\", \"The third example is incorrect.\"\n\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\") == \"7\", \"Input 1 failed\"\nassert solution(\"42 42\") == \"0\", \"Input 2 failed\"\nassert solution(\"48 72\") == \"-1\", \"Input 3 failed\"\nprint(\"All input test cases passed\")",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"120 51840\") == 7, \"The output should be 7, but it is: {}\".format(solution(\"120 51840\"))\nassert solution(\"42 42\") == 0, \"The output should be 0, but it is: {}\".format(solution(\"42 42\"))\nassert solution(\"48 72\") == -1, \"The output should be -1, but it is: {}\".format(solution(\"48 72\"))",
        "num_ids_2": 82,
        "num_ids_4": 119
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4) == \"ababababa\"\nassert solution(3, 2) == \"catcat\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"ababababa\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == 'ababababa'\nassert solution(3, 2) == 'catcat'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"ababababa\"\n\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == \"ababababa\"\nassert solution(3, 2) == \"catcat\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4 \\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 85
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n0\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\\n4\\n8 3 5 2\\n\\n5\\n2 1 2 4 3\\n\\n0\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\\n\\n5\\n2 1 2 4 3\\n\\n0\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\\n0\") == \"0\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 140
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\"",
        "num_ids_2": 101,
        "num_ids_4": 125
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '''\n3\n4 1 5\n'''\n\nassert solution('''\n4\n8 3 5 2\n''') == '''\n2\n1 4\n'''\n\nassert solution('''\n5\n2 1 2 4 3\n''') == '''\n0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 79
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n\") == \"2\"\nassert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n\") == \"3\\n4 1 5\\n2\"",
        "num_ids_2": 83,
        "num_ids_4": 177
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution() == \"15\"\nassert solution() == \"-1\"\nassert solution() == \"233\"",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nasdf') == '4'\nassert solution('5 6\\naaaaa') == '15'\nassert solution('5 7\\naaaaa') == '-1'\nassert solution('10 100\\najihiushda') == '233'",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"\n",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"NO\"",
        "num_ids_2": 46,
        "num_ids_4": 54
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"NO\" # add your solution here",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"\n",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 5 1\n    1 2\n    1 3\n    1 4\n    2 3\n    3 4\n    ''') == 'YES\\n2 1\\n2 3\\n3 4'\n\nassert solution('''\n    4 5 3\n    1 2\n    1 3\n    1 4\n    2 3\n    3 4\n    ''') == 'YES\\n1 2\\n1 3\\n4 1'\n\nassert solution('''\n    4 4 3\n    1 2\n    1 4\n    2 3\n    3 4\n    ''') == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10:30\"\nassert solution(input()) == \"11:11\"\nassert solution(input()) == \"02:02\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10:00)<|im_sep|>",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output(), \"Test case failed\"\nfor i in range(1, 7):\n    assert solution(str(i)) == str(expected_output()), \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == \"1\"\nassert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1, \"Solution should return 1 for input 2\"\nassert solution(4) == 2, \"Solution should return 2 for input 4\"\nassert solution(27) == 5, \"Solution should return 5 for input 27\"\nassert solution(42) == 6, \"Solution should return 6 for input 42\"\n",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1, \"Solution should return 1\"\nassert solution(4) == 2, \"Solution should return 2\"\nassert solution(27) == 5, \"Solution should return 5\"\nassert solution(42) == 6, \"Solution should return 6\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Got '{solution(input())}' expected '{output}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\\n\\n2\\n\\n0\\n\\n7\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\\n7\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 143
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\"\nassert solution(\"2\\n1 5\\n3 10\\n2 6\") == \"1\"\nassert solution(\"2\\n1 3\\n5 7\\n3 10\\n1 5\\n3 3\") == \"0\"\nassert solution(\"1\\n2 6\\n3 3\\n4 5\") == \"1\"\nassert solution(\"2\\n1 3\\n2 5\\n5 7\\n3 10\\n1 20\") == \"2\"\nassert solution(\"1\\n2 5\\n3 10\\n1 5\\n3 3\\n2 6\\n1 3\") == \"0\"",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0\\n'\nassert solution('2\\n3 10\\n1 5\\n') == '7\\n'",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('2') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20') == '0'\nassert solution('2\\n3 10\\n1 5') == '7'",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\\n5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\\n3\\n4 5\\n1 2\\n9 20\\n\\n2\\n3 10\\n1 5\\n\\n5\\n1 6\\n2 4\\n\\n1\\n3 3\\n2 4\\n3 10\\n4 5\\n5 5\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5\\n11 5\\n12 5\\n13 5\\n14 5\\n15 5\\n16 5\\n17 5\\n18 5\\n19 5\\n20 5\\n21 5\\n22 5\\n23 5\\n24 5\\n25 5\\n26 5\\n27 5\\n28 5\\n29 5\\n30 5\\n31 5\\n32 5\\n33 5\\n34 5\\n35 5\\n36 5\\n37 5\\n38 5\\n39 5\\n40 5\\n41 5\\n42 5\\n43 5\\n44 5\\n45 5\\n46 5\\n47 5\\n48 5\\n49 5\\n50 5\\n51 5\\n52 5\\n53 5\\n54 5\\n55 5\\n56 5\\n57 5\\n58 5\\n59 5\\n60 5\\n61 5\\n62 5\\n63 5\\n64 5\\n65 5\\n66 5\\n67 5\\n68 5\\n69 5\\n70 5\\n71 5\\n72 5\\n73 5\\n74 5\\n75 5\\n76 5\\n77 5\\n78 5\\n79 5\\n80 5\\n81 5\\n82 5\\n83 5\\n84 5\\n85 5\\n86 5\\n87 5\\n88 5\\n89 5\\n90 5\\n91 5\\n92 5\\n93 5\\n94 5\\n95 5\\n96 5\\n97 5\\n98 5\\n99 5\\n100 5\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\\n3\\n4 5\\n1 2\\n9 20\\n\\n2\\n3 10\\n1 5\\n\\n1\\n3 3\\n2 4\\n3 10\\n4 5\\n5 5\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5\\n11 5\\n12 5\\n13 5\\n14 5\\n15 5\\n16 5\\n17 5\\n18 5\\n19 5\\n20 5\\n21 5\\n22 5\\n23 5\\n24 5\\n25 5\\n26 5\\n27 5\\n28 5\\n29 5\\n30 5\\n31 5\\n32 5\\n33 5\\n34 5\\n35 5\\n36 5\\n37 5\\n38 5\\n39 5\\n40 5\\n41 5\\n42 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0\\n'\nassert solution('2\\n3 10\\n1 5\\n') == '7\\n'",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\\n\") == \"YES\"",
        "num_ids_2": 82,
        "num_ids_4": 103
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index} failed: expected output '{expected_output}', got '{solution(input())}'\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r')) == 'NO'\nassert solution(open('input.txt', 'r')) == 'YES'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 1 2 5') == 'YES'\nassert solution('3 4 5 3') == 'NO'\nassert solution('2 10 10') == 'YES'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"3 4 5 3\") == \"NO\"\nassert solution(\"2 10 10\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 54
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\") == \"NO\\n\"\nassert solution(\"2\\n10 10\") == \"YES\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5\nasdf\n\"\"\") == 4\n\nassert solution(\"\"\"\n5 6\naaaaa\n\"\"\") == 15\n\nassert solution(\"\"\"\n5 7\naaaaa\n\"\"\") == -1\n\nassert solution(\"\"\"\n10 100\najihiushda\n\"\"\") == 233",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233\n",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nInput\n4 5\nasdf\n\nOutput\n4\n\nInput\n5 6\naaaaa\n\nOutput\n15\n\nInput\n5 7\naaaaa\n\nOutput\n-1\n\nInput\n10 100\najihiushda\n\nOutput\n233\n\"\"\") == \"\"\"\nOutput\n15\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\\n\"\nassert solution(\"3 2 2\") == \"7\\n\"\nassert solution(\"1 100 1\") == \"3\\n\"\nassert solution(\"30 20 10\") == \"39\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\"\nassert solution(\"3 2 2\\n\") == \"7\"\nassert solution(\"1 100 1\\n\") == \"3\"\nassert solution(\"30 20 10\\n\") == \"39\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\\n\") == \"4\\n7\\n3\\n39\"\nassert solution(\"1 1 1\\n1 1 2\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n1 31 1\\n1 32 1\\n1 33 1\\n1 34 1\\n1 35 1\\n1 36 1\\n1 37 1\\n1 38 1\\n1 39 1\\n\") == \"4\\n7\\n3\\n39\"\nassert solution(\"1 1 1\\n1 1 2\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n1 31 1\\n1 32 1\\n1 33 1\\n1 34 1\\n1 35 1\\n1 36 1\\n1 37 1\\n1 38 1\\n1 39 1\\n\") == \"4\\n7\\n3\\n39\"\nassert solution(\"1 1 1\\n1 1 2\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n1 31 1\\n1 32 1\\n1 33 1\\n1 34 1\\n1 35 1\\n1 36 1\\n1 37 1\\n1 38 1\\n1 39 1\\n\") == \"",
        "num_ids_2": 381,
        "num_ids_4": 1027
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n7\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\"\nassert solution() == \"NO\\nNO\\nNO\\nNO\"\nassert solution() == \"YES\\nYES\\nYES\\nYES\"\nassert solution() == \"NO\\nNO\\nNO\\nNO\"\nassert solution() == \"YES\\nYES\\nYES\\nYES\"\nassert solution() == \"NO\\nNO\\nNO\\nNO\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"1\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"1\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\"\nassert solution(\"1\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\"",
        "num_ids_2": 323,
        "num_ids_4": 645
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"Test case 1 failed.\"\n\nassert solution() == \"YES\", \"Test case 2 failed.\"\n\nassert solution() == \"YES\", \"Test case 3 failed.\"\n\nassert solution() == \"YES\", \"Test case 4 failed.\"\n\nassert solution() == \"YES\", \"Test case 5 failed.\"\n\nassert solution() == \"YES\", \"Test case 6 failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2",
        "num_ids_2": 290,
        "num_ids_4": 580
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n1 100\\n10 10\\n10 10\\n1 2\\n2 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n2 2\\n1 100\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"6\n    3 4\n    1 2\n    5 6\n    5 7\n    7 4\n    8 9\n    9 8\n    2 5\n    1 1\n    1 1\n    2 2\n    2 2\n    1 100\n    10 10\n    10 10\n    1 2\n    4 5\n    8 4\n    2 2\n    1 1\n    1 1\n    1 2\n    3 4\n    1 2\n    1 1\n    1 1\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"6\n    3 4\n    1 2\n    5 6\n    5 7\n    7 4\n    8 9\n    9 8\n    2 5\n    1 1\n    1 1\n    2 2\n    2 2\n    1 100\n    10 10\n    10 10\n    1 2\n    4 5\n    8 4\n    2 2\n    1 1\n    1 1\n    1 2\n    3 4\n    1 2\n    1 1\n    1 1\"\"\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES\\nNO\\nYES\\nNO\\nYES\\nYES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES\\nNO\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 326,
        "num_ids_4": 326
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Solution {name} has an incorrect output: {output_str} instead of {output_str}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('3') == '0'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\", \"Example 5 failed\"\nassert solution(\"6\") == \"1\", \"Example 6 failed\"\nassert solution(\"3\") == \"0\", \"Example 3 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\nassert solution(\"6\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n())()\\n\") == 5, \"Test case 1 failed\"\nassert solution(\"3\\n()()\\n\") == 4, \"Test case 2 failed\"\nassert solution(\"2\\n(((()\\n\")) == 0, \"Test case 3 failed\"\n\nsolution = lambda stdin: int(str(stdin).split('\\n')[0]) * len(str(stdin)) % (10**9 + 7)",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 5\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n())()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n())()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    )()()\n    ''').strip() == '5\\n'\n    assert solution('''\n    3\n    (\n    ''').strip() == '4\\n'\n    assert solution('''\n    2\n    (\n    ''').strip() == '0\\n'\n\nfrom typing import List",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n())()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n())()\\n') == '5'\nassert solution('3\\n(()\\n') == '4'\nassert solution('2\\n(((\\n') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('1234567') == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5071) == 4, \"Incorrect output\"\nassert solution(705) == 1, \"Incorrect output\"\nassert solution(1241367) == -1, \"Incorrect output\"",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"\n\nfrom typing import List",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcde\") == \"1 1 1 1 1 1 def\"\nassert solution(\"abacbecfd\") == \"2 1 1 1 1 2 1\"\nassert solution(\"aaabbcbb\") == \"2 1 2 1 2 1 2\"\nassert solution(\"abcdedc\") == \"3 1 1 1 1 1 2\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1 def\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(Solution().solution) == 2\nassert solution(Solution().solution2) == 2\nassert solution(Solution().solution3) == 3\nassert solution(Solution().solution4) == 1\nassert solution(Solution().solution5) == 3",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'ab'\nassert solution('aaa') == 'ab'\nassert solution('abc') == 'acb'\nassert solution('abcd') == 'abac'\nassert solution('abcde') == 'abac'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('abcdefgh') == 'abcdefgh'\nassert solution('abcdefghi') == 'abcdefgh'\nassert solution('abcdefghij') == 'abcdefghij'\nassert solution('abcdefghijk') == 'abcdefghijk'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1 2 \"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"",
        "num_ids_2": 55,
        "num_ids_4": 100
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"1 1 1 1 1 2 3\"\nassert solution(\"abcdefg\") == \"1 1 1 1 1 1 1 1\"\nassert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aaabbcc\") == \"1 2 1 2 1 2 1 1 1\"\nassert solution(\"aabbccd\") == \"1 1 1 1 1 2 2 2 2\"\nassert solution(\"aabbccdde\") == \"1 1 1 1 1 2 3 2 3\"\nassert solution(\"abcd\") == \"1 1 1 1 1 2 2 2 2\"\nassert solution(\"abcdabcdabcd\") == \"1 1 1 1 1 2 3 3 3\"\nassert solution(\"abcdabcdabcdabcd\") == \"1 1 1 1 1 2 3 3 3\"\nassert solution(\"abcdabcdabcdabcdabcd\") == \"1 1 1 1 1 2 3 3 3\"",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n1 1 2 1 2 1 2 1 2\\n2\\n1 2 1 2 1 2 1 1'\nassert solution() == '2\\n1 2 1 2 1 1'\nassert solution() == '2\\n1 2 1 1'\nassert solution() == '1\\n1 1 1'\nassert solution() == '1\\n1 1'\n",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"\nassert solution(\"abcde\") == \"1 1 1 1 1 ",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\na\\naba\\nabacaba\\nba\\nabaa\\n\") == \"YES\\na\\nba\\naba\\nabaa\\nabacaba\\n\"\nassert solution(\"5\\na\\nabacaba\\nba\\nabaa\\nabab\\n\") == \"NO\"\nassert solution(\"3\\nqwerty\\nqwerty\\nqwerty\\n\") == \"YES\\nwerty\\nwerty\\nwerty\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 106
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\\nb\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\"\nassert solution(\"a\\naba\\nba\\nabacaba\\naba\\n\") == \"NO\"\nassert solution(\"qwerty\\nqwerty\\nqwerty\\n\") == \"YES\"\nassert solution(\"abc\\ndef\\nghi\\njkl\\n\") == \"YES\"",
        "num_ids_2": 52,
        "num_ids_4": 93
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution(5) == 'YES\\na\\nba\\nabab\\n'\nassert solution(5) == 'NO\\nabab\\naba\\naba\\n'\nassert solution(5) == 'NO\\nabab\\naba\\naba\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'YES'\nassert solution(5) == 'YES'\nassert solution(7) == 'NO'\nassert solution(8) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"\nassert solution(\"a\\nbabacaba\\nba\\naba\\nabacaba\\n\") == \"NO\"\nassert solution(\"qwerty\\nqwerty\\nqwerty\\n\") == \"YES\\nqwerty\\nqwerty\\nqwerty\"",
        "num_ids_2": 67,
        "num_ids_4": 100
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(10) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5\\na\\aba\\abacaba\\ba\\aba\") == \"YES\\na\\ba\\aba\\aba\\abacaba\"\nassert solution(\"Input\\n5\\na\\abacaba\\ba\\aba\") == \"NO\"\nassert solution(\"Input\\n3\\qwerty\\qwerty\\qwerty\") == \"YES\\qwerty\\qwerty\\qwerty\"\nassert solution(\"Input\\n3\\qwerty\\qwerty\\qwerty\") == \"NO\"",
        "num_ids_2": 60,
        "num_ids_4": 113
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"YES\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"YES\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"YES\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(21) == \"YES\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"YES\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"YES\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"YES\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"YES\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"YES\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"YES\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"YES\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"YES\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"YES\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"YES\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"YES\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"YES\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"YES\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"YES\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"YES\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"YES\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"YES\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"YES\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"YES\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"YES\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"YES\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"YES\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"YES\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"YES\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"YES\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"YES\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"YES\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"YES\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"YES\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"YES\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"YES\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"YES\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"YES\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"YES\"\nassert solution(95) == \"YES\"\nassert solution(96) == \"YES\"\nassert solution(97) == \"YES\"\nassert solution(98) == \"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\na\\nba\\naba\\naba\\nabacaba\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 5\nassert solution(7) == 6\nassert solution(8) == 6\nassert solution(9) == 8\nassert solution(10) == 8\nassert solution(11) == 10\nassert solution(12) == 10\nassert solution(13) == 12\nassert solution(14) == 12\nassert solution(15) == 14\nassert solution(16) == 14\nassert solution(17) == 16\nassert solution(18) == 16\nassert solution(19) == 18\nassert solution(20) == 18\nassert solution(21) == 20\nassert solution(22) == 20\nassert solution(23) == 22\nassert solution(24) == 22\nassert solution(25) == 24\nassert solution(26) == 24\nassert solution(27) == 26\nassert solution(28) == 26\nassert solution(29) == 28\nassert solution(30) == 28\nassert solution(31) == 30\nassert solution(32) == 30\nassert solution(33) == 32\nassert solution(34) == 32\nassert solution(35) == 34\nassert solution(36) == 34\nassert solution(37) == 36\nassert solution(38) == 36\nassert solution(39) == 38\nassert solution(40) == 38\nassert solution(41) == 40\nassert solution(42) == 40\nassert solution(43) == 42\nassert solution(44) == 42\nassert solution(45) == 44\nassert solution(46) == 44\nassert solution(47) == 46\nassert solution(48) == 46\nassert solution(49) == 48\nassert solution(50) == 48\nassert solution(51) == 50\nassert solution(52) == 50\nassert solution(53) == 52\nassert solution(54) == 52\nassert solution(55) == 54\nassert solution(56) == 54\nassert solution(57) == 56\nassert solution(58) == 56\nassert solution(59) == 58\nassert solution(60) == 58\nassert solution(61) == 60\nassert solution(62) == 60\nassert solution(63) == 62\nassert solution(64) == 62\nassert solution(65) == 64\nassert solution(66) == 64\nassert solution(67) == 66\nassert solution(68) == 66\nassert solution(69) == 68\nassert solution(70) == 68\nassert solution(71) == 70\nassert solution(72) == 70\nassert solution(73) == 72\nassert solution(74) == 72\nassert solution(75) == 74\nassert solution(76) == 74\nassert solution(77) == 76\nassert solution(78) == 76\nassert solution(79) == 78\nassert solution(80) == 78\nassert solution(81) == 80\nassert solution(82) == 80\nassert solution(83) == 82\nassert solution(84) == 82\nassert solution(85) == 84\nassert solution(86) == 84\nassert solution(87) == 86\nassert solution(88) == 86\nassert solution(89) == 88\nassert solution(90) == 88\nassert solution(91) == 90\nassert solution(92) == 90\nassert solution(93) == 92\nassert solution(94) == 92\nassert solution(95) == 94\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\\n\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, got: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\\n\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\\n\"\n",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"The output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"0\", \"Example 2 should output 0\"\nassert solution(\"5 100\") == \"5\", \"Example 3 should output 5\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 5\") == \"11\"\nassert solution(\"1 10\") == \"11\"\nassert solution(\"10 1\") == \"11\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"11\"\nassert solution(\"10 0\") == \"11\"\n\nassert solution(\"4 10000\") == \"12\"\nassert solution(\"10 10000\") == \"11\"\nassert solution(\"10000 10000\") == \"11\"\nassert solution(\"40000 40000\") == \"12\"\nassert solution(\"10000 40000\") == \"11\"\nassert solution(\"40000 10000\") == \"11\"\nassert solution(\"10000 10000\") == \"11\"\n\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n\nassert solution(\"10000 10000\") == \"11\"\nassert solution(\"1 10000\") == \"1\"\nassert solution(\"1 0 0\") == \"1\"\nassert solution(\"1 0 1\") == \"1\"\nassert solution(\"1 0 2\") == \"1\"\nassert solution(\"1 0 3\") == \"1\"\nassert solution(\"1 0 4\") == \"1\"\nassert solution(\"1 0 5\") == \"1\"\nassert solution(\"1 0 6\") == \"1\"\nassert solution(\"1 0 7\") == \"1\"\nassert solution(\"1 0 8\") == \"1\"\nassert solution(\"1 0 9\") == \"1\"\nassert solution(\"1 0 10\") == \"1\"\nassert solution(\"1 0 11\") == \"1\"\nassert solution(\"1 0 12\") == \"1\"\nassert solution(\"1 0 13\") == \"1\"\nassert solution(\"1 0 14\") == \"1\"\nassert solution(\"1 0 15\") == \"1\"\nassert solution(\"1 0 16\") == \"1\"\nassert solution(\"1 0 17\") == \"1\"\nassert solution(\"1 0 18\") == \"1\"\nassert solution(\"1 0 19\") == \"1\"\nassert solution(\"1 0 20\") == \"1\"\nassert solution(\"1 0 21\") == \"1\"\nassert solution(\"1 0 22\") == \"1\"\nassert solution(\"1 0 23\") == \"1\"\nassert solution(\"1 0 24\") == \"1\"\nassert solution(\"1 0 25\") == \"1\"\nassert solution(\"1 0 26\") == \"1\"\nassert solution(\"1 0 27\") == \"1\"\nassert solution(\"1 0 28\") == \"1\"\nassert solution(\"1 0 29\") == \"1\"\nassert solution(\"1 0 30\") == \"1\"\nassert solution(\"1 0 31\") == \"1\"\nassert solution(\"1 0 32\") == \"1\"\nassert solution(\"1 0 33\") == \"1\"\nassert solution(\"1 0 34\") == \"1\"\nassert solution(\"1 0 35\") == \"1\"\nassert solution(\"1 0 36\") == \"1\"\nassert solution(\"1 0 37\") == \"1\"\nassert solution(\"1 0 38\") == \"1\"\nassert solution(\"1 0 39\") == \"1\"\nassert solution(\"1 0 40\") == \"1\"\nassert solution(\"1 0 41\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\", \"Example 1\"\nassert solution(\"3 9\") == \"14\", \"Example 2\"\nassert solution(\"9 3\") == \"14\", \"Example 3\"\nassert solution(\"3 6\") == \"12\", \"Example 4\"\nassert solution(\"506 2708\") == \"3218\", \"Example 5\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\\n\"\nassert solution(\"3 9\") == \"14\\n\"\nassert solution(\"9 3\") == \"14\\n\"\nassert solution(\"3 6\") == \"12\\n\"\nassert solution(\"506 2708\") == \"3218\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n\") == \"12\\n\"\nassert solution(\"3 9\\n\") == \"14\\n\"\nassert solution(\"9 3\\n\") == \"14\\n\"\nassert solution(\"3 6\\n\") == \"12\\n\"\nassert solution(\"506 2708\\n\") == \"3218\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4,4) == 12\nassert solution(3,9) == 14\nassert solution(9,3) == 14\nassert solution(3,6) == 12\nassert solution(506,2708) == 3218\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 12\nassert solution() == 14\nassert solution() == 14\nassert solution() == 12\nassert solution() == 3218",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\\naaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000\"",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n001010101'\nassert solution() == 'YES\\n01011011'\nassert solution() == 'YES\\n00000'\nassert solution() == 'NO'",
        "num_ids_2": 37,
        "num_ids_4": 60
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"YES00000\"\nassert solution(8) == \"YES01011011\"\nassert solution(7) == \"NO\"\nassert solution(9) == \"YES001010101\"\n",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\\naaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000def solution(stdin: str) -> str:pass\"",
        "num_ids_2": 51,
        "num_ids_4": 98
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9') == 'YES\\n001010101'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO\\n'\nassert solution('5') == 'YES\\n00000\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\\naaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000\"",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n01011011\"\nassert solution() == \"YES\\n001010101\"\nassert solution() == \"YES\\n01011011\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n00000def solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == 'YES\\n001010101'\nassert solution('aaabbcbb') == 'YES\\n01011011'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES\\n00000def'",
        "num_ids_2": 46,
        "num_ids_4": 77
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"YES\\n00000\"\nassert solution(7) == \"YES\\n000110\"\nassert solution(8) == \"YES\\n010110\"\nassert solution(9) == \"YES\\n001010101\"\nassert solution(10) == \"NO\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcde\") == \"YES\\n00000\\n\"\nassert solution(\"aaabbcbb\") == \"YES\\n01011011\\n\"\nassert solution(\"abacbecfd\") == \"YES\\n001010101\\n\"\nassert solution(\"abcdedc\") == \"NO\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == 25\nprint(\"Test Passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"25\\n\"\nassert solution(\"3 3\\n\") == \"-1\\n\"\nassert solution(\"1 5\\n\") == \"10\\n\"\nassert solution(\"1 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"5 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n\") == \"7\\n\"\nassert solution(\"5 2\\n\") == \"5\\n\"\nassert solution(\"0 1\\n\") == \"0\\n\"\nassert solution(\"0 2\\n\") == \"0\\n\"\nassert solution(\"0 3\\n\") == \"0\\n\"\nassert solution(\"0 4\\n\") == \"0\\n\"\nassert solution(\"0 5\\n\") == \"0\\n\"\nassert solution(\"2 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n\") == \"2\\n\"\nassert solution(\"2 5\\n\") == \"2\\n\"\nassert solution(\"2 4\\n\") == \"2\\n\"\nassert solution(\"0 6\\n\") == \"-1\\n\"\nassert solution(\"10 6\\n\") == \"75\\n\"\nassert solution(\"5 6\\n\") == \"50\\n\"\nassert solution(\"7 6\\n\") == \"67\\n\"\nassert solution(\"8 6\\n\") == \"80\\n\"\nassert solution(\"9 6\\n\") == \"93\\n\"\nassert solution(\"10 6\\n\") == \"106\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"25\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 2) == 25\nassert solution(3, 1) == -1\nassert solution(5, 1) == -1\nassert solution(5, 5) == 25\nassert solution(4, 2) == 17.5\nassert solution(6, 3) == -1\nassert solution(8, 4) == -1\nassert solution(10, 5) == -1\nassert solution(20, 5) == -1",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '25'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 2\") == \"25\"\nassert solution(\"1 2\") == \"25\"\nassert solution(\"5 2\") == \"25\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"10 3\") == \"-1\"\nassert solution(\"2 10\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2.5 2.5\") == \"25\"\nassert solution(\"3 3\") == -1\nassert solution(\"3.5 3.5\") == -1\nassert solution(\"4 4\") == -1\nassert solution(\"5 5\") == -1",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == 25\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 4') == '30'\nassert solution('4 5') == '40'\nassert solution('5 6') == -1\nassert solution('1 1') == -1",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\nprint(\"All test cases passed\")",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4) == \"YES\\n1 2 4 5 6 8\"\nassert solution(1, 2) == \"YES\\n1\"\nassert solution(26, 6) == \"YES\\n1 2 4 5 6 8\"\nassert solution(8, 3) == \"NO\"\nassert solution(1, 1) == \"YES\\n1\"\nassert solution(9, 4) == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8, 4) == \"NO\"\nassert solution(1, 1) == \"YES\"\nassert solution(26, 6) == \"YES\\n1 2 4 5 6 8\"\nassert solution(8, 3) == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 66
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 117
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n10 -2\\n8 -1\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\\n\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 73,
        "num_ids_4": 116
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Your solution is not correct. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\", \"The expected output is 3, but instead got {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == solution(solution)  # Test cases are the same\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"YES\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"YES\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"YES\") == \"YES\\n1 2 1\\n8 4 3\\n8 3 4\"\nassert solution(\"YES\") == \"YES\\n9 8 8 1\\n1 3 4\\n2 4 3\\n1 8 8 9\"\nassert solution(\"NO\") == \"NO\"",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(input()) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(input()) == \"YES\\n9 8 8 1\\n1 3 4 1\\n2 4 3 2\\n1 8 8 9\"\nassert solution(input()) == \"YES\\n10\"",
        "num_ids_2": 77,
        "num_ids_4": 137
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('3\\n1 1 1 1 1 3 3 3 3') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1') == 'NO'\nassert solution('1\\n10') == 'YES\\n10'",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\nassert solution(\"1\\n10\\n\") == \"YES\\n10\"",
        "num_ids_2": 131,
        "num_ids_4": 196
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\n",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0') == 'NO'",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n\nfrom typing import List",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nActual output: {}\".format(output(), solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\", \"Test failed\"\nassert solution() == \"YES\", \"Test failed\"\nassert solution() == \"YES\", \"Test failed\"\nassert solution() == \"YES\", \"Test failed\"\nassert solution() == \"NO\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES\\n0 1 0 2 2 0 3\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 1 1 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0'\nassert solution() == 'YES\\n0 0 0 0 1 1 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0'\nassert solution() == 'YES\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0'",
        "num_ids_2": 186,
        "num_ids_4": 280
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 73,
        "num_ids_4": 109
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3 \"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1 \"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0 \"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\\n\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\\n\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 127
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n0 1 0 2 2 0 3\"\nassert solution() == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution() == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 73,
        "num_ids_4": 109
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n0 1 0 2 2 0 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aa\") == 0",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"tset\") == 0\nassert solution(\"se\") == 1\nassert solution(\"contest\") == 2",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('bbaba') == '3'\nassert solution('baaba') == '2'\nassert solution('abcde') == '0'\nassert solution('asdfasdf') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1 failed\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2 failed\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3 failed\"\n\nassert solution(\"1.200000\") == \"3 2\", \"Test 1 failed\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2 failed\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1.2) == \"3 2\", \"Test 1: A\"\nassert solution(2.5) == \"10 3\", \"Test 2: B\"\nassert solution(4.0) == \"9 9\", \"Test 3: C\"",
        "num_ids_2": 43,
        "num_ids_4": 64
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Input: 1.200000, Output: 3 2\"\nassert solution(\"2.572479\") == \"10 3\", \"Input: 2.572479, Output: 10 3\"\nassert solution(\"4.024922\") == \"9 9\", \"Input: 4.024922, Output: 9 9\"",
        "num_ids_2": 80,
        "num_ids_4": 119
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2', \"Your code is incorrect. Please check the solution.\"\nassert solution('2.572479') == '10 3', \"Your code is incorrect. Please check the solution.\"\nassert solution('4.024922') == '9 9', \"Your code is incorrect. Please check the solution.\"\n",
        "num_ids_2": 61,
        "num_ids_4": 91
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n\nprint(\"YES\")\nfor i in range(1, n+1):\n    print(str(i) + \" \" + str(i-1))",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3 3\\n') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n'\nassert solution('6 2 3\\n') == 'NO\\n'\nassert solution('10 4 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n'",
        "num_ids_2": 61,
        "num_ids_4": 169
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(8) == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n",
        "num_ids_2": 45,
        "num_ids_4": 125
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\nfor _ in range(5):\n    try:\n        assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\n        break\n    except:\n        pass\nelse:\n    print(\"No test case passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n', \"Test case 1\"\n\nassert solution(stdin) == 'NO\\n', \"Test case 2\"\n\nassert solution(stdin) == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n', \"Test case 3\"\n\nassert solution(stdin) == 'NO\\n', \"Test case 4\"\n\nassert solution(stdin) == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n', \"Test case 5\"",
        "num_ids_2": 71,
        "num_ids_4": 155
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nprint(\"YES\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"\"\"YES\n3 1\n4 1\n1 2\n5 2\n2 6\"\"\"\n\nassert solution(solution.__doc__) == \"\"\"NO\"\"\"\n\nassert solution(solution.__doc__) == \"\"\"YES\n2 9\n2 10\n10 3\n3 1\n6 10\n8 2\n4 3\n5 6\n6 7\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100', '1100'\nassert solution('3 3 3') == '101100', '101100'\nassert solution('5 3 6') == '01010100', '01010100'",
        "num_ids_2": 50,
        "num_ids_4": 81
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('1 1 1') == '0001'\nassert solution('2 1 1') == '1101'\nassert solution('1 1 1') == '0001'\nassert solution('1 2 1') == '1011'\nassert solution('1 3 1') == '1111'\nassert solution('1 4 1') == '1111'\nassert solution('1 5 1') == '1111'\nassert solution('1 6 1') == '1111'\nassert solution('1 7 1') == '1111'\nassert solution('1 8 1') == '1111'\nassert solution('1 9 1') == '1111'\nassert solution('1 10 1') == '1111'\nassert solution('1 11 1') == '1111'\nassert solution('1 12 1') == '1111'\nassert solution('1 13 1') == '1111'\nassert solution('1 14 1') == '1111'\nassert solution('1 15 1') == '1111'\nassert solution('1 16 1') == '1111'\nassert solution('1 17 1') == '1111'\nassert solution('1 18 1') == '1111'\nassert solution('1 19 1') == '1111'\nassert solution('1 20 1') == '1111'\nassert solution('1 21 1') == '1111'\nassert solution('1 22 1') == '1111'\nassert solution('1 23 1') == '1111'\nassert solution('1 24 1') == '1111'\nassert solution('1 25 1') == '1111'\nassert solution('1 26 1') == '1111'\nassert solution('1 27 1') == '1111'\nassert solution('1 28 1') == '1111'\nassert solution('1 29 1') == '1111'\nassert solution('1 30 1') == '1111'\nassert solution('1 31 1') == '1111'\nassert solution('1 32 1') == '1111'\nassert solution('1 33 1') == '1111'\nassert solution('1 34 1') == '1111'\nassert solution('1 35 1') == '1111'\nassert solution('1 36 1') == '1111'\nassert solution('1 37 1') == '1111'\nassert solution('1 38 1') == '1111'\nassert solution('1 39 1') == '1111'\nassert solution('1 40 1') == '1111'\nassert solution('1 41 1') == '1111'\nassert solution('1 42 1') == '1111'\nassert solution('1 43 1') == '1111'\nassert solution('1 44 1') == '1111'\nassert solution('1 45 1') == '1111'\nassert solution('1 46 1') == '1111'\nassert solution('1 47 1') == '1111'\nassert solution('1 48 1') == '1111'\nassert solution('1 49 1') == '1111'\nassert solution('1 50 1') == '1111'\nassert solution('1 51 1') == '1111'\nassert solution('1 52 1') == '1111'\nassert solution('1 53 ",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"The output of the first example is incorrect.\"\nassert solution(\"3 3 3\") == \"101100\", \"The output of the second example is incorrect.\"\nassert solution(\"5 3 6\") == \"01010100\", \"The output of the third example is incorrect.\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"Example 1\"\nassert solution(\"3 3 3\") == \"101100\", \"Example 2\"\nassert solution(\"5 3 6\") == \"01010100\", \"Example 3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nacbbac\"\nassert solution() == \"YES\\ncacbacbab\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 25,
        "num_ids_4": 33
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\ncacbacbab\\n\"\nassert solution(stdin) == \"YES\\nabc\\ndef solution(stdin: str) -> str:\n    pass\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"abac\") == \"abc\"\nassert solution(\"cbac\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"acbbac\", \"Test 1\"\nassert solution(\"bc\") == \"cacbacbab\", \"Test 2\"\nassert solution(\"ac\") == \"abc\", \"Test 3\"\n\nfrom typing import List\n",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nab\\nbc\\n\") == \"YES\\nacbbac\"\nassert solution(\"3\\naa\\nbc\\n\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\\nabc\"",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'ab'\nassert solution('acb') == 'ab'\nassert solution('abb') == 'ab'\nassert solution('abcde') == 'ab'\nassert solution('abcfedcba') == 'acbbac'\nassert solution('abcd') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abc') == 'YESabc'\nassert solution('def') == 'YESdef'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ab') == 'YES\\nacbbac'\nassert solution('bc') == 'YES\\ncacbacbab'\nassert solution('ac') == 'YES\\nabc'\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"YES\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"YES\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"YES\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(21) == \"YES\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"YES\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"YES\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"YES\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"YES\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"YES\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"YES\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"YES\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"YES\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"YES\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"YES\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"YES\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"YES\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"YES\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"YES\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"YES\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"YES\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"YES\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"YES\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"YES\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"YES\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"YES\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"YES\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"YES\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"YES\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"YES\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"YES\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"YES\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"YES\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"YES\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"YES\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"YES\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"YES\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"YES\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Expected: {}, Received: {}\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '3 1 2 '\nassert solution('5') == '1 2 3 4 5 '\nassert solution('4') == '-1'",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, -2, 1) == 3, \"3 1 2 \"\nassert solution(5, 1, 1, 1) == 1, \"1 2 3 4 5 \"\nassert solution(4, -1, 2, 2) == -1, \" -1\"",
        "num_ids_2": 53,
        "num_ids_4": 76
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3 1 2 '\nassert solution() == '1 2 3 '\nassert solution() == '-1'\nassert solution() == '1 2 3'\nassert solution() == '1 2 3'",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3 1 2 \"\nassert solution(5) == \"1 2 3 4 5 \"\nassert solution(4) == \"-1 \"\n\nfrom collections import deque\n",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n-2 1\n''') == '''\n3 1 2 \n'''\n\nassert solution('''\n5\n1 1 1 1\n''') == '''\n1 2 3 4 5 \n'''\n\nassert solution('''\n4\n-1 2 2\n''') == '''\n-1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n-2 1\n''') == '3 1 2'\n\nassert solution('''\n5\n1 1 1 1\n''') == '1 2 3 4 5'\n\nassert solution('''\n4\n-1 2 2\n''') == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed.\"\nfor i in range(1, 5):\n    assert solution(input()) == output, f\"Test {i+1} failed.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\"\nassert solution(\"5\\n2\\n2\\n3\\n3\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 1\nassert solution('5 2 2 3 3') == 2",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n(2,5) can be reached in five moves. We cannot reach a square that contains 10 in less than five moves.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n(1,1) can be reached in five moves.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\\n(2,5) can be reached in five moves.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'10') == '5\\n(2,5) can be reached in five moves.\\n'\nassert solution(b'5') == '5\\n(2,5) can be reached in five moves.\\n'\nassert solution(b'1') == '1\\n(1,1) to (2,1) takes 0 moves.\\n'\nassert solution(b'3') == '1\\n(1,1) to (2,1) takes 0 moves.\\n'\nassert solution(b'1000000000') == '1000000000\\n(1,1) to (1000000000,1000000000) takes 1000000000 moves.\\n'",
        "num_ids_2": 55,
        "num_ids_4": 117
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"Expected output is 5 but got {}\".format(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 1 1\n    1 1 0\n    \"\"\"\n) == \"0 1\"\n\nassert solution(\n    \"\"\"\n    15\n    5 5 5\n    5 5 5\n    \"\"\"\n) == \"0 15\"\n\nassert solution(\n    \"\"\"\n    3\n    0 0 3\n    3 0 0\n    \"\"\"\n) == \"3 3\"\n\nassert solution(\n    \"\"\"\n    686\n    479 178 29\n    11 145 530\n    \"\"\"\n) == \"22 334\"\n\nassert solution(\n    \"\"\"\n    319\n    10 53 256\n    182 103 34\n    \"\"\"\n) == \"119 226\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0 1\", \"The output is incorrect\"\nassert solution(input()) == \"0 15\", \"The output is incorrect\"\nassert solution(input()) == \"3 3\", \"The output is incorrect\"\nassert solution(input()) == \"22 334\", \"The output is incorrect\"\nassert solution(input()) == \"119 226\", \"The output is incorrect\"\n",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0 1\\n0 1\\n'\nassert solution(stdin) == '0 1\\n0 1\\n'\nassert solution(stdin) == '0 1\\n0 1\\n'\nassert solution(stdin) == '3 3\\n3 3\\n'\nassert solution(stdin) == '119 226\\n119 226\\n'\nassert solution(stdin) == '22 334\\n22 334\\n'\nassert solution(stdin) == '119 226\\n119 226\\n'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0 1\\n0 1\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"0 1\\n0 1\"\nassert solution(open(\"input_3.txt\", \"r\")) == \"3 3\\n3 3\"\nassert solution(open(\"input_4.txt\", \"r\")) == \"22 334\\n22 334\"\nassert solution(open(\"input_5.txt\", \"r\")) == \"119 226\\n119 226\"",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1\\n'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15\\n'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3\\n'\nassert solution('686\\n479 178 29\\n11 145 530\\n182 103 34') == '22 334\\n'\nassert solution('319\\n10 53 256\\n182 103 34\\n11 145 530') == '119 226\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 141
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1 1\\nA\\nB\\nA\\nB\\n\\n2\\n0 1 1\\nA\\nB\\nA\\nB\\n\\n15\\n5 5 5\\nA\\nB\\nA\\nB\\n\\n3\\n0 0 3\\nA\\nB\\nA\\nC\\n\\n686\\n479 178 29\\nA\\nB\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\n\\n319\\n10 53 256\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n\\n319\\n10 53 256\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n\\n') == '0 1\\n15\\n'\nassert solution('15\\n5 5 5\\nA\\nB\\nA\\nB\\n\\n3\\n0 0 3\\nA\\nB\\nA\\nC\\n\\n686\\n479 178 29\\nA\\nB\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n\\n319\\n10 53 256\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n\\n319\\n10 53 256\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n') == '0 15\\n'\nassert solution('3\\n0 0 3\\nA\\nB\\nA\\nC\\n\\n686\\n479 178 29\\nA\\nB\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n\\n319\\n10 53 256\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\nC\\n",
        "num_ids_2": 482,
        "num_ids_4": 1027
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 1\\n1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n22 334\\n119 226\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n119 226\") == \"119 226\"",
        "num_ids_2": 51,
        "num_ids_4": 135
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1\\n0 1 1\\n1 1 0\\n\\n2\\n0 1 1\\n1 1 0\\n\\n15\\n5 5 5\\n5 5 5\\n\\n3\\n0 0 3\\n3 0 0\\n\\n686\\n479 178 29\\n11 145 530\\n\\n319\\n10 53 256\\n182 103 34\\n\\n') == '0 1\\n3 3'",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 1 1\\nA 1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\nA 5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\nA 0 0 3\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\nA 479 178 29\\nB 11 145 530\\nA 11 145 530\\nB 182 103 34\\nA 182 103 34\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\nA 10 53 256\\nB 182 103 34\\nA 182 103 34\") == \"119 226\"",
        "num_ids_2": 56,
        "num_ids_4": 177
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\"",
        "num_ids_2": 85,
        "num_ids_4": 119
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 130
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\n",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"\") == \"\"\nassert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 83,
        "num_ids_4": 128
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n3\n7 7\n2 3\n4 5\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\\n3\\n7 7\\n2 3\\n4 5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4 1 1 1\") == \"4\\n4 4\\n1 1\"\n",
        "num_ids_2": 80,
        "num_ids_4": 106
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\", \"Output: 'YES', but it should be 'YES'\"\nassert solution() == \"NO\", \"Output: 'NO', but it should be 'NO'\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n3\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2\\n2\\n1') == 'NO'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'YES'\nassert solution('Input') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\nassert solution(\"3\\n4 5 6 7 8 9\\n2 3 1\") == \"NO\"\nassert solution(\"3\\n1 1 1 1 1\\n\") == \"YES\"",
        "num_ids_2": 46,
        "num_ids_4": 99
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3\\n3 1 2') == 'YES', \"Incorrect output\"\n\nassert solution('3\\n3 1 2\\n3\\n3 2 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 2 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 3 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 3 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 3 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 3 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"\n\nassert solution('3\\n3 3 1\\n3\\n3 3 1') == 'NO', \"Incorrect output\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2\\n3\\n4 1 2') == 'NO'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6\n    abcdef\n    abdfec\n    \"\"\"\n) == \"\"\"\n4\n3 5 4 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    abcd\n    accd\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nabcdef\\nabdfec\\n4\\abcd\\naccd\\n') == '-1'\nassert solution('4\\abcd\\naccd\\n') == '0\\n3\\n5\\n4'\nassert solution('6\\nabcdef\\nabdfec\\n1\\n3 5 4 5') == '4'",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"3 5 4 5\"\nassert solution(4) == \"-1\"\nassert solution(\"\") == \"0\"\nassert solution(\"abcd\") == \"3 4 5\"\nassert solution(\"accd\") == \"0\"\nassert solution(\"abcdef\") == \"3 4 5\"",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"-1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nabcdef\\nabdfec\\n') == 4\nassert solution('4\\nabcd\\naccd\\n') == -1",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == 4\nassert solution(\"4\\nabcd\\naccd\") == -1\nassert solution(\"6\\nabcdef\\nabdfec\\n2\\n3 5 4 5\") == 4\nassert solution(\"4\\nabcd\\naccd\\n0\") == 0\nassert solution(\"4\\nabcd\\naccd\\n0\\n0\\n0\") == 0",
        "num_ids_2": 31,
        "num_ids_4": 77
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nabba\\nab\\nabba\\nab\\naba\\nabba\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 61,
        "num_ids_4": 75
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"SP\"\nassert solution(solution) == \"SP\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"SSPP\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"SPSPSPS\"\nassert solution(solution) == \"PS\"\nassert solution(solution) == \"PSP",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ba\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"abab\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"a\") == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"SPPSPSPS\", \"The output is incorrect\"\nassert solution(input()) == \"PPSS\", \"The output is incorrect\"\nassert solution(input()) == \"PS\", \"The output is incorrect\"",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"SPPSPSPS\"\nassert solution(3) == \"PPSS\"\nassert solution(2) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nabba\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 52,
        "num_ids_4": 68
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na\\na\\na\") == \"PS\"\nassert solution(\"2\\na\\nc\") == \"PS\"\nassert solution(\"1\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\na\" == \"PS\")",
        "num_ids_2": 30,
        "num_ids_4": 92
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"P\"\nassert solution(\"aa\") == \"P\"\nassert solution(\"abab\") == \"P\"\nassert solution(\"aaba\") == \"P\"\nassert solution(\"baba\") == \"P\"\nassert solution(\"ab\") == \"P\"\nassert solution(\"aba\") == \"P\"\nassert solution(\"ac\") == \"P\"\nassert solution(\"ca\") == \"P\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    5\n    5\n    5\n    5\n    5\n    aba\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\", \"Test 1 failed.\"\nassert solution(\"1 2 3 4 5\") == \"2\", \"Test 2 failed.\"\nassert solution(\"1 1 1 1 1\") == \"1\", \"Test 3 failed.\"\nassert solution(\"42\") == \"42\", \"Test 4 failed.\"\nassert solution(\"0 0 0 0\") == \"0\", \"Test 5 failed.\"",
        "num_ids_2": 49,
        "num_ids_4": 91
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"The output should be 1\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\", \"Test failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\", \"Test case 1\"\n\nassert solution(\"10 20 30 40 50\") == \"50\\n\", \"Test case 2\"\n\nassert solution(\"100 200 300 400 500\") == \"500\\n\", \"Test case 3\"\n\nassert solution(\"1000 2000 3000 4000 5000\") == \"5000\\n\", \"Test case 4\"\n\nassert solution(\"10000 20000 30000 40000 50000\") == \"50000\\n\", \"Test case 5\"",
        "num_ids_2": 59,
        "num_ids_4": 141
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of elements: \")) == 1, \"Invalid input\"\nprint(1)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\", \"Test 1\"\n\nassert solution(\"1 2 3 4 5\") == \"1\\n\", \"Test 2\"\n\nassert solution(\"100\") == \"1\\n\", \"Test 3\"\n\nassert solution(\"50 25\") == \"1\\n\", \"Test 4\"\n\nassert solution(\"10 5 15 20 10\") == \"1\\n\", \"Test 5\"",
        "num_ids_2": 51,
        "num_ids_4": 91
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Solution does not match the expected output.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The function should return 2, but it returns {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\", \"Your solution is incorrect. It should return 2.\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\", \"Your solution is incorrect. It should return 0.\"\nassert solution(\"4\\n1 1 1 1\") == \"0\", \"Your solution is incorrect. It should return 0.\"",
        "num_ids_2": 77,
        "num_ids_4": 108
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(10) + \"\\n\" + \"1 1 0 1 1 0 1 0 1 0\" + \"\\n\") == \"2\\n\"\nassert solution(str(5) + \"\\n\" + \"1 1 0 0 0\" + \"\\n\") == \"0\\n\"\nassert solution(str(4) + \"\\n\" + \"1 1 1 1\" + \"\\n\") == \"0\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 111
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(4) == 3\nassert solution(10) == 3\nassert solution(100) == 4\nassert solution(1000) == 5",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\\n\"\nassert solution(\"6 90 12 18 30 18\") == \"4\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The function should return {output}, but it returned {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([2, 4, 6, 2, 10]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1, \"The correct answer is 1.\"\nassert solution([6, 90, 12, 18, 30, 18]) == 4, \"The correct answer is 4.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(['1 2 3 4 5']) == 1\nassert solution(['6 90 12 18 30 18']) == 4",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['2', '4', '6', '2', '10']) == 1\nassert solution(['6', '90', '12', '18', '30', '18']) == 4\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1, \"The function should return 1 for the given input.\"\n\nassert solution(4) == 2, \"The function should return 2 for the given input.\"\n\nassert solution(5) == 4, \"The function should return 4 for the given input.\"\n\nassert solution(10) == 2, \"The function should return 2 for the given input.\"\n\nassert solution(20) == 2, \"The function should return 2 for the given input.\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 4 3 3 2\") == 2\nassert solution(\"1 100\") == 1",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin_data, stdout_data)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"6\\n1 2 4 3 3 2\\n\"\n) == \"2\"\n\nassert solution(\n    \"1\\n100\\n\"\n) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\"\nassert solution(\"1 100\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n1\\n100') == 2\nassert solution('1\\n100') == 1",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\"\nassert solution(\"1 100\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 4 3 3 2') == '2\\n'\nassert solution('1 100') == '1\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\\n\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\\n\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\\n\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input2.txt', 'r')) == '2'\nassert solution(open('input3.txt', 'r')) == '-1'\nassert solution(open('input4.txt', 'r')) == '3'\nassert solution(open('input5.txt', 'r')) == '3'\nassert solution(open('input6.txt', 'r')) == '2'\nassert solution(open('input7.txt', 'r')) == '3'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Output should be 3\"\nassert solution(10) == 3, \"Output should be 3\"\nassert solution(1) == -1, \"Output should be -1\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", solution(stdin)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 2\n    0 1 1 0 0 1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 0 0 0 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 10\n    0 0 0 0 0\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    10 3\n    0 0 1 1 0 1 0 0 0 1\n    \"\"\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3\\n' # sample input",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"The output should be 3\\n\"\nprint(\"The output should be 3\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(5) == \"0\\n\"\nassert solution(10) == \"0\\n\"\nassert solution(11) == \"0\\n\"\nassert solution(12) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\", \"The correct answer is: 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6\n(((())\n\nOutput\n3\n\nInput\n6\n()()()\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"The output is incorrect.\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6') == '3\\n'\nassert solution('6') == '0\\n'\nassert solution('1') == '0\\n'\nassert solution('8') == '0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"((1)+(1))\"\nassert solution(\"(())(())\") == \"((1)+(1)+(1))\"\nassert solution(\"())()()\") == \"((1)+(1)+(1)+(1))\"\nassert solution(\"()()()()\") == \"((1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()()())\") == \"((1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())()\") == \"((1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(()\") == \"((1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())\") == \"((1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())()\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())()()\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())())\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())())())\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())())())())\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())())())())()\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"\nassert solution(\"()())(())(())())())())())()\") == \"((1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1)+(1))\"",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, \"(((())\") == 3\nassert solution(6, \"()()()\") == 0\nassert solution(1, \")\") == 0\nassert solution(8, \")))(((((\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(6) == 0\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n(((())\\n') == 3\nassert solution('6\\n()()()\\n') == 0\nassert solution('1\\n)\\n') == 0\nassert solution('8\\n)))(((((\\n') == 0",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()\") == 1\nassert solution(\"(())()\") == 3\nassert solution(\"()()()()\") == 2\nassert solution(\"()()()()\") == 0\nassert solution(\"()\") == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(6) == 3\nassert solution(6) == 0\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aabcccd\") == 4\nassert solution(\"abcd\") == 4",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"The answer should be 2.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1 2 1 1\\n') == '2\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 2 2\") == \"2\"\nassert solution(\"2 1 2 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"2 2 1 1\") == \"2\"\nassert solution(\"2 1 2 2\") == \"4\"\nassert solution(\"2 2 2 1\") == \"4\"\nassert solution(\"1 1 1 2\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Output should be 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"3 4 2 3\") == \"6\"\nassert solution(\"1 5 2 7\") == \"33\"\nassert solution(\"10 15 20 30\") == \"625\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"-1 2 1 1\") == \"2\"\nassert solution(\"-1 -2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"1 -2 1 2\") == \"4\"\nassert solution(\"1 2 -1 2\") == \"4\"\nassert solution(\"-1 2 -1 2\") == \"4\"\nassert solution(\"-1 -2 -1 2\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nd_1 d_2... d_N\\n\") == \"2\"\nassert solution(\"10\\nd_1 d_2... d_N\\n\") == \"1\"\nassert solution(\"10\\nd_1 d_2... d_N\\nd_10 d_11... d_19\\n\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\nd_1 d_2... d_N\\n\") == \"2\"\nassert solution(\"10\\nd_1 d_2... d_N\\nd_10 d_11... d_19\\nd_1 d_2... d_N\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 119
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"10\\n9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 91
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"1\\n10\") == \"0\"\nassert solution(\"3\\n5 6\") == \"1\"\nassert solution(\"5\\n1 2 3\") == \"2\"\nassert solution(\"4\\n2 3 4\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 69
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n\nsolution(\"6\\n9 1 4 4 6 7\") # This will raise a NameError because solution function does not exist in this file.",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '''3'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\nassert solution(\"1 2 3 4 5 6 7\") == \"4\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"4\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"5\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 126
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # pass\nassert solution(\"1000 1000 1000 1000\") == \"1000\" # pass\nassert solution(\"1000 1000 1000 1001\") == \"1000\" # pass\nassert solution(\"1000 1000 1001 1000\") == \"1000\" # pass\nassert solution(\"1000 1000 1000 1000\") == \"1000\" # pass\nassert solution(\"1000 1000 1000 1000\") == \"1000\" # pass\nprint(\"All test cases passed\")",
        "num_ids_2": 76,
        "num_ids_4": 142
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\nassert solution(\"5 10 15 20\") == \"2\\n\"\nassert solution(\"4 6 12 18\") == \"3\\n\"\nassert solution(\"10 20 30 40\") == \"3\\n\"\nassert solution(\"1 10 20 30 40\") == \"4\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 106
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\\n2 1 3\") == \"2\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"6 17 14 20 20 11 22\\n18 19 16 18 18 13 24\") == \"2\"\nassert solution(\"5 16 14 20 20 11 22\\n18 19 16 18 18 13 24\") == \"3\"\nassert solution(\"7 18 14 20 20 11 22\\n18 19 16 18 18 13 24\") == \"3\"\nassert solution(\"7 16 14 20 20 11 22\\n18 19 16 18 18 13 24\") == \"2\"\nassert solution(\"10 24 21 23\\n16 17 14 20 20 11 22\\n18 19 16 18 18 13 24\") == \"2\"\nassert solution(\"10 24 21 23\\n16 17 14 20 20 11 22\\n18 19 16 18 18 13 24\\n16 17 14 20 20 11 22\\n18 19 16 18 18 13 24\\n18 19 16 18 18 13 24\") == \"3\"\nassert solution(\"10 24 21 23\\n16 17 14 20 20 11 22\\n18 19 16 18 18 13 24\\n18 19 16 18 18 13 24\\n18 19 16 18 18 13 24\\n18 19 16 18 18 13 24\") == \"4\"",
        "num_ids_2": 91,
        "num_ids_4": 191
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"\nassert solution(6) == \"3\"\nassert solution(5) == \"1\"\nassert solution(10) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\\n\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4', \"Expected output: 4, but got: {}\".format(solution(stdin))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"The given solution {solution(stdin)} is not the expected output {expected_output}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Expected: {expected}, Actual: {solution}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4', 'Expected output: 4\\nActual output:'+ solution(stdin)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\\n\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(5)) == \"1 2\"\nassert solution(str(5)) == \"2 4\"\nassert solution(str(5)) == \"1 4\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, Actual output: {solution(input())}\"\n\ninput = \"\"\"5\n2 4 8 3 6\n\"\"\"\n\noutput = \"\"\"1 2\n\"\"\"\n\nassert solution(input) == output, f\"Test failed. Expected output: {output}, Actual output: {solution(input)}\"\n\ninput = \"\"\"5\n5 2 11 3 7\n\"\"\"\n\noutput = \"\"\"2 4\n\"\"\"\n\nassert solution(input) == output, f\"Test failed. Expected output: {output}, Actual output: {solution(input)}\"\n\ninput = \"\"\"6\n2 5 10 1 10 2\n\"\"\"\n\noutput = \"\"\"1 4\n\"\"\"\n\nassert solution(input) == output, f\"Test failed. Expected output: {output}, Actual output: {solution(input)}\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\\n\") == \"1 2\\n2 4\\n1 4\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\\n') == '1 2\\n2 4\\n'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\") == \"1 2\\n2 4\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\\n\") == \"1 2\\n2 4\\n1 4\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Invalid input\"  # Test invalid input\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"1 2\\n\"\nassert solution(5) == \"2 4\\n\"\nassert solution(6) == \"1 4\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"",
        "num_ids_2": 41,
        "num_ids_4": 67
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 2\\n2 4\\n\"\nassert solution(input()) == \"1 4\\n2 4\\n\"\nassert solution(input()) == \"1 4\\n2 4\\n\"\nassert solution(input()) == \"1 4\\n2 4\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n121\\n') == '021\\n'\nassert solution('6\\n000000\\n') == '001122\\n'\nassert solution('6\\n211200\\n') == '211200\\n'\nassert solution('6\\n120110\\n') == '120120\\n'",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}.\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n121\") == \"021\"\nassert solution(\"6\\n000000\") == \"001122\"\nassert solution(\"6\\n211200\") == \"211200\"\nassert solution(\"6\\n120110\") == \"120120\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n121\\n') == '021\\n'\nassert solution('6\\n000000\\n') == '001122\\n'\nassert solution('6\\n211200\\n') == '211200\\n'\nassert solution('6\\n120110\\n') == '120120\\n'\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, \"121\") == \"021\"\nassert solution(6, \"000000\") == \"001122\"\nassert solution(6, \"211200\") == \"211200\"\nassert solution(6, \"120110\") == \"120120\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n2\\n\") == \"4\\n\"\nassert solution(\"3 3\\n3\\n\") == \"12\\n\"\nassert solution(\"3 3\\n1\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4\\n\") == \"16\\n\"\nassert solution(\"4 4\\n2\\n\") == \"2\\n\"\nassert solution(\"5 5\\n5\\n\") == \"125\\n\"\nassert solution(\"5 5\\n3\\n\") == \"15\\n\"\nassert solution(\"5 5\\n1\\n\") == \"1\\n\"\nassert solution(\"6 6\\n6\\n\") == \"362880\\n\"\nassert solution(\"6 6\\n4\\n\") == \"1266707100924\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'6 1\\n3\\n') == b'4\\n'\nassert solution(b'6 1\\n3\\n4\\n') == b'4\\n'\nassert solution(b'6 1\\n3\\n5\\n') == b'4\\n'\nassert solution(b'6 1\\n3\\n6\\n') == b'4\\n'\nassert solution(b'6 1\\n3\\n7\\n') == b'4\\n'",
        "num_ids_2": 47,
        "num_ids_4": 97
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\", \"Output should be 4.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n3\\n') == '4\\n'\nprint('All tests passed')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\n\nsolution(\"6 1\\n3\\n\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"5 2\\n1\\n\") == \"2\\n\"\nassert solution(\"4 5\\n1\\n1\\n\") == \"4\\n\"\nassert solution(\"7 3\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"8 4\\n1\\n2\\n2\\n\") == \"6\\n\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"10 6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"4\\n\"\nassert solution(\"1 2\\n\\n\") == \"0\\n\"\nassert solution(\"100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 112
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 1\\n3\\n') == '4'\nassert solution('5 3\\n') == '2'\nassert solution('6 3\\n') == '3'\nassert solution('4 1\\n1\\n') == '4'\nassert solution('4 2\\n1\\n') == '5'\nassert solution('4 3\\n1\\n') == '6'",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"5 2 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 3 1\") == \"1\"\nassert solution(\"4 4 1\") == \"1\"\nassert solution(\"5 5 1\") == \"1\"\nassert solution(\"6 6 1\") == \"1\"\nassert solution(\"7 7 1\") == \"1\"\nassert solution(\"8 8 1\") == \"1\"\nassert solution(\"9 9 1\") == \"1\"\nassert solution(\"10 10 1\") == \"1\"\nassert solution(\"11 11 1\") == \"1\"\nassert solution(\"12 12 1\") == \"1\"\nassert solution(\"13 13 1\") == \"1\"\nassert solution(\"14 14 1\") == \"1\"\nassert solution(\"15 15 1\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"Expected output: 2\"\nassert solution(\"1 2 3\") == \"3\", \"Expected output: 3\"\nassert solution(\"1 5 3\") == \"5\", \"Expected output: 5\"\nassert solution(\"2 2 1\") == \"1\", \"Expected output: 1\"\nassert solution(\"1 1 1\") == \"0\", \"Expected output: 0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"The output should be '2', but it is '%s'.\" % solution(\"6 2 4\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 2 4') == '2\\n'\nassert solution('8 4 2') == '2\\n'\nassert solution('5 3 6') == '3\\n'\nassert solution('10 7 3') == '1\\n'\nassert solution('1 2 3') == '0\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\", \"Test failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\", \"Test case 1 incorrect\"\nassert solution(\"1 1 3\") == \"0\\n\", \"Test case 2 incorrect\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n\", \"Test case 3 incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 105
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"The minimum possible absolute value of the coordinate of the destination should be 2.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 2, \"Test case 1 failed\"\nassert solution(14) == 0, \"Test case 2 failed\"\nassert solution(61441) == 2, \"Test case 3 failed\"\nassert solution(571576) == 10, \"Test case 4 failed\"\nassert solution(2128506) == 3, \"Test case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"2\", \"Output: 2\"\nassert solution(\"14\") == \"0\", \"Output: 0\"\nassert solution(\"61441\") == \"2\", \"Output: 2\"\nassert solution(\"571576\") == \"10\", \"Output: 10\"\nassert solution(\"2128506\") == \"3\", \"Output: 3\"",
        "num_ids_2": 34,
        "num_ids_4": 77
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"2\", \"Test case 1\"\nassert solution(\"14\") == \"0\", \"Test case 2\"\nassert solution(\"61441\") == \"2\", \"Test case 3\"\nassert solution(\"571576\") == \"10\", \"Test case 4\"\nassert solution(\"2128506\") == \"3\", \"Test case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes.\"",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 27, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 27, \"Output 27\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 27, \"Incorrect output\"\nassert solution(100) == 100, \"Incorrect output\"\nassert solution(10) == 27, \"Incorrect output\"\nassert solution(0) == 0, \"Incorrect output\"\nassert solution(-10) == 27, \"Incorrect output\"",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 27, \"The output should be 27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == 27, \"The output should be 27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\", \"Test 1 failed\"\nassert solution(\"927\") == \"1\", \"Test 2 failed\"\nassert solution(\"48\") == \"0\", \"Test 3 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == 1, \"Input 13: Expected Output 1, got Output {}\".format(solution(13))\nassert solution(927) == 1, \"Input 927: Expected Output 1, got Output {}\".format(solution(927))\nassert solution(48) == 0, \"Input 48: Expected Output 0, got Output {}\".format(solution(48))\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 67,
        "num_ids_4": 99
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == 1, \"The solution for 13 is not correct.\"\nassert solution(927) == 1, \"The solution for 927 is not correct.\"\nassert solution(48) == 0, \"The solution for 48 is not correct.\"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 1, \"Solution should return 1\"\nassert solution(927) == 1, \"Solution should return 1\"\nassert solution(48) == 0, \"Solution should return 0\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == 1, \"Input 13 is incorrect\"\nassert solution(927) == 1, \"Input 927 is incorrect\"\nassert solution(48) == 0, \"Input 48 is incorrect\"",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nprint(f\"Output: {expected}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 4, \"Expected output: 4, but got: {}\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 5 3 1\") == \"4\"\n\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\n\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"20\"\n\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"100\"",
        "num_ids_2": 46,
        "num_ids_4": 144
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='4\\n2 5 3 1') == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\n\nassert solution(stdin='5\\n12 19 24 31\\n42\\n10000000000000000000') == 5, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\n\nassert solution(stdin='6\\n7 8 9 10 11\\n91') == 6, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\n\nassert solution(stdin='7\\n23 24 25 26 27\\n
        "num_ids_2": 95,
        "num_ids_4": 1024
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"def\"\nassert solution(\"hello\") == \"olleh\"\nassert solution(\"ABRACADABRA\") == \"RADABACADABRA\"\nassert solution(\"I have no array and I must scream\") == \"I have no array and I must scream\"",
        "num_ids_2": 22,
        "num_ids_4": 68
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(5) == 5, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(6) == 6, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(7) == 7, \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(8) == 8, \"SAYING 'ABRACADABRA' WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(9) == 9, \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution(10) == 10, \"I HAVE NO ARRAY AND I MUST SCREAM\"\nassert solution(11) == 11, \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"",
        "num_ids_2": 43,
        "num_ids_4": 98
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"4\", \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(5) == \"5\", \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(6) == \"6\", \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(7) == \"7\", \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(8) == \"8\", \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(9) == \"9\", \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution(10) == \"10\", \"I HAVE NO ARRAY AND I MUST SCREAM\"\nassert solution(11) == \"11\", \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"",
        "num_ids_2": 43,
        "num_ids_4": 98
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 5 3 1') == 4\n\nprint(\"DO YOU EXPECT ME TO FIND THIS OUT?\")\nprint(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\")\nprint(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\")\nprint(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\")\nprint(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\")\nprint(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\")\nprint(\"I HAVE NO ARRAY AND I MUST SCREAM\")\nprint(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 4\nassert solution(5) == 2\nassert solution(2) == 6\nassert solution(7) == 4\nassert solution(1) == 1\nassert solution(3) == 2\nassert solution(8) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(stdin_data, stdout_data)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n\") == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8 7) == 2, \"Polycarp wants to buy exactly 8 shovels. The shop sells packages with shovels.\"\nassert solution(8 1) == 2, \"Polycarp wants to buy exactly 8 shovels. The shop sells packages with shovels.\"\nassert solution(6 10) == 1, \"Polycarp wants to buy exactly 6 shovels. The shop sells packages with shovels.\"\nassert solution(999999733 999999732) == 2, \"Polycarp wants to buy exactly 8 shovels. The shop sells packages with shovels.\"\nassert solution(999999733 999999733) == 1, \"Polycarp wants to buy exactly 1 shovels. The shop sells packages with shovels.\"",
        "num_ids_2": 76,
        "num_ids_4": 169
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The solution for the problem is not correct. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case+1}: Expected Output: {expected_output}, Received Output: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 7\") == \"2\\n8\\n1\\n999999733\\n1\"\nassert solution(\"8 1\") == \"1\\n8\\n1\\n999999733\\n1\"\nassert solution(\"6 10\") == \"1\\n8\\n1\\n999999733\\n1\"\nassert solution(\"999999733 999999732\") == \"1\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 64,
        "num_ids_4": 145
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == '1\\n', 'Incorrect output'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == 1\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 0\") == 0\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\nassert solution('3 2\\n1 2 3\\n1 3\\n0 1') == '3\\n'\nassert solution('3 1\\n1 2 3\\n1 3 4\\n0 1') == '1\\n'\nassert solution('2 1\\n1 2 3\\n1 3\\n0 1') == '2\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0 1') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1 2\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1\\n1\\n0') == '1\\n'\nassert solution('2 1\\n1 2\\n1 3\\n0\\n",
        "num_ids_2": 62,
        "num_ids_4": 126
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"3 4\\n2 3 4 5\\n1 2 3 4 5\\n0 0\\n\") == \"1\\n\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"3 4\\n2 3 4 5\\n1 2 3 4 5\\n0 1\\n\") == \"0\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 140
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=open('input.txt').read()) == '1\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"3 3\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\") == \"2\"\nassert solution(\"4 4\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\") == \"4\"\nassert solution(\"5 5\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\") == \"5\"\nassert solution(\"6 6\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\\n1 6\\n6 5\\n5 6\\n6 4\\n4 6\") == \"6\"\nassert solution(\"7 7\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\\n1 6\\n6 5\\n5 6\\n6 4\\n4 6\\n1 7\\n7 6\\n6 7\\n7 5\\n5 7\") == \"7\"\nassert solution(\"8 8\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\\n1 6\\n6 5\\n5 6\\n6 4\\n4 6\\n1 7\\n7 6\\n6 7\\n7 5\\n5 7\\n1 8\\n8 7\\n7 8\\n8 6\\n6 8\") == \"8\"\nassert solution(\"9 9\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\\n1 6\\n6 5\\n5 6\\n6 4\\n4 6\\n1 7\\n7 6\\n6 7\\n7 5\\n5 7\\n1 8\\n8 7\\n7 8\\n8 6\\n6 8\\n1 9\\n9 8\\n8 9\\n9 7\\n7 9\") == \"9\"\nassert solution(\"10 10\\n2 1 2\\n1 2\\n0 1\\n1 3\\n3 2\\n2 3\\n1 4\\n4 3\\n3 4\\n4 2\\n2 4\\n1 5\\n5 4\\n4 5\\n5 3\\n3 5\\n1 6\\n6 5\\n5 6\\n6 4\\n4 6\\n1 7\\n7 6\\n6 7\\n7 5\\n5 7\\n1 8\\n8 7\\n7 ",
        "num_ids_2": 39,
        "num_ids_4": 152
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"4\\n\"\n\nfrom itertools import combinations",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1\\n' # expected output\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n1 3\") == \"0\\n\"\nassert solution(\"3 3\\n1 2\\n1 3\\n0 1\\n1 1\") == \"2\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5.00000000000000000000\\n\", \"Test case 1 failed\"\n\nA solution to this problem can be found in the given code block. The problem statement is clear and the test case is correct.",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5\"\nassert solution(\"3 4 10 0\") == \"10\"\nassert solution(\"3 4 11 0\") == \"15\"\nassert solution(\"3 4 12 0\") == \"20\"\nassert solution(\"3 4 13 0\") == \"25\"\nassert solution(\"3 4 14 0\") == \"30\"\nassert solution(\"3 4 15 0\") == \"35\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.00000000000000000000\", \"Test case failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.000000000000000000000\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000', \"Test 1\"\nassert solution('1 2 3 4') == '5.0000000000000000000', \"Test 2\"\nassert solution('5 6 7 8') == '5.0000000000000000000', \"Test 3\"\nassert solution('9 10 11 12') == '5.0000000000000000000', \"Test 4\"\nassert solution('13 14 15 16') == '5.0000000000000000000', \"Test 5\"",
        "num_ids_2": 83,
        "num_ids_4": 168
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 6 3 9\") == \"12.00000000000000000000\"\nassert solution(\"1 2 3 4\") == \"24.00000000000000000000\"\nassert solution(\"5 6 7 8\") == \"31.00000000000000000000\"\nassert solution(\"6 5 4 3\") == \"48.00000000000000000000\"",
        "num_ids_2": 75,
        "num_ids_4": 151
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r\"3 4 9 0\") == \"5.00000000000000000000\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n\nThe given input is correct. It takes two hour and minute hands as input, and it calculates the distance between the unfixed endpoints of the hands. The distance is approximately 5 centimeters.",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. The output is {output()}, but your code is {solution(input())}. Please check your code and try again.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output\\n8\\n'\nassert solution(input()) == 'Output\\n6\\n'\nassert solution(input()) == 'Output\\n97\\n'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"97\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\\n7\\n2\\n3 2\\n\\n0\\n0\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\\n2\\n3 2\\n0\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed\" for test_case, expected_output in enumerate(test_cases)",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n2\\n1 4\"\nassert solution() == \"7\\n2\\n3 2\"\nassert solution() == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n2\\n1 4\"\nassert solution(stdin) == \"7\\n2\\n3 2\"\nassert solution(stdin) == \"0\\n0\"",
        "num_ids_2": 36,
        "num_ids_4": 49
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in [(\"Input\", \"Output\\n6\\n2\\n1 4\\n7\\n2\\n3 2\\n0\\n0\"), (\"Input\", \"Output\\n0\\n0\\n0\"), (\"Input\", \"Output\\n0\\n0\\n0\"), (\"Input\", \"Output\\n0\\n0\\n0\"), (\"Input\", \"Output\\n0\\n0\\n0\")].",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, expected_output)\n\ninput_data = [\n    [5, 4],\n    [2, -2, 3, 1, 2],\n    [1, 3],\n    [4, 5],\n    [2, 5],\n    [1, 3],\n]\n\nexpected_output = [\n    [6],\n    [7],\n    [],\n    [],\n    [],\n    [],\n]\n\nsolution = \"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 4) == 6\nassert solution(5, 4) == 7\nassert solution(1, 0) == 0",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n1 4\\n\\n7\\n2\\n3 2\\n\\n0\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2\\n\\n0\\n\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\\n\"",
        "num_ids_2": 133,
        "num_ids_4": 161
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str: pass\\n\\n# Your code here\\n# Don\\'t forget to submit the code.'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"Yes\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(['fced', 'xyz', 'r', 'dabcef', 'az', 'aa', 'bad', 'babc']) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nprint(solution(input()))\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"For input '{input_str}', expected output '{expected_output}', but got '{solution(input_str)}'.\"\nfor input_str, expected_output in [\n    (\"abc\", \"Yes\"),\n    (\"abcd\", \"Yes\"),\n    (\"\", \"No\"),\n    (\"abac\", \"No\"),\n    (\"abcdab\", \"No\"),\n    (\"abcde\", \"No\"),\n    (\"abcdabxyz\", \"No\"),\n]:\n    assert solution(input_str) == expected_output, f\"For input '{input_str}', expected output '{expected_output}', but got '{solution(input_str)}'.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"\nassert solution(\"def\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('def') == 'No'\nassert solution('a') == 'Yes'\nassert solution('z') == 'No'\nassert solution('aa') == 'No'\nassert solution('aaab') == 'No'\nassert solution('yEs') == 'No'\nassert solution('no') == 'No'\nassert solution('YEs') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"az\\naa\\nbad\\nbabc\") == \"No\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed. Expected output: '{expected_output}', but got: '{solution(input())}'\"\n\ntest_case_number += 1",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n4 1 \\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n2\\n4 1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\n\nassert solution('''1 0\n1000000''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n7\\n1 3 5 6 7 4 2\\n3\\n1 2 3\\n4\\n1 2 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n3\\n1 2 3\\n4\\n1 2 4 3\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\\n4\\n1 2 4 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\\n4\\n1 2 3\\n5\\n3 4 5 6 7\") == \"4\\nLLRL\"",
        "num_ids_2": 119,
        "num_ids_4": 199
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5\n    2 1 5 4 3\n    \"\"\") == \"4\\nLRRR\"\n\nassert solution(\"\"\"\n    7\n    1 3 5 6 7 4 2\n    \"\"\") == \"7\\nLRLRLLL\"\n\nassert solution(\"\"\"\n    3\n    1 2 3\n    \"\"\") == \"3\\nLLL\"\n\nassert solution(\"\"\"\n    4\n    1 2 4 3\n    \"\"\") == \"4\\nLLRL\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"\n\nsolution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nsolution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nsolution(\"3\\n1 2 3\") == \"3\\nLLL\"\nsolution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\"",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\"\n\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\"\n\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\"\n\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\"",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"4\"\nassert solution(2) == \"2\"\nassert solution(7) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 4\nassert solution() == 4",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\\n2\\n1 2\\n\\n7\\n6 5 4 3 2 4 3\\n\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\\n7\\n6 5 4 3 2 4 3\\n\\n\") == \"2\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n2\\n1 2\\n7\\n6 5 4 3 2 4 3\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"",
        "num_ids_2": 66,
        "num_ids_4": 93
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"2\"\n\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 4 5\") == 1, \"Test failed for case 1.\"\nassert solution(\"1 2 3 4 5\") == 2, \"Test failed for case 2.\"\nassert solution(\"1 2 3 3 3\") == 0, \"Test failed for case 3.\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Solution is incorrect\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Input should be '8 3 4'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1000 0 1\") == \"262144\"\nassert solution(\"5 1 2\") == \"2\"\nassert solution(\"10 1 1\") == \"1\"\nassert solution(\"100 2 3\") == \"0\"\n\nfrom typing import List\n",
        "num_ids_2": 36,
        "num_ids_4": 65
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Incorrect output for example case\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"10000000 1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"10000000 1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"10000000 1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"10000000 1 1 1\") == \"1\\n\", \"Incorrect output for example case\"\nassert solution(\"10000000 1 1 1\") == \"1\\n\", \"Incorrect output for example case\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 1 1\") == \"2\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\"\nassert solution(\"1000000001 1000000001 1000000001\") == \"1000000001\"",
        "num_ids_2": 28,
        "num_ids_4": 92
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"6 2 6\") == \"6\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"2 5 3\") == \"1\"\nassert solution(\"5 4 1\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Test 1\"\nassert solution(\"10 1 2\") == \"0\\n\", \"Test 2\"\nassert solution(\"4 2 5 1\") == \"1\\n\", \"Test 3\"\nassert solution(\"10 1 1\") == \"0\\n\", \"Test 4\"\nassert solution(\"2 1 3 2\") == \"2\\n\", \"Test 5\"\nassert solution(\"2 1 3 1\") == \"1\\n\", \"Test 6\"\nassert solution(\"10 1 1 1\") == \"0\\n\", \"Test 7\"\nassert solution(\"2 2 2 2 2\") == \"4\\n\", \"Test 8\"\nassert solution(\"10 1 1 1 1 1 1\") == \"4\\n\", \"Test 9\"\nassert solution(\"2 1 1 1 1 1 1 1\") == \"3\\n\", \"Test 10\"\nassert solution(\"10 1 1 1 1 1 1 1 1 1\") == \"3\\n\", \"Test 11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4339966256\\n\", \"Test 12\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"5 100 1\") == \"10\\n\"\nassert solution(\"1000 1000 1000\") == \"100\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 78
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor test_case in range(t):\n    n = int(stdin.readline())\n    d = list(map(int, stdin.readline().split()))\n    if solution(n, d) == expected:\n        print(n)\n    else:\n        print(-1)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'output', 'Your solution is incorrect. Please check if the input format is correct and if the input data is correct.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test case {i} failed: expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin.split(), output.split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output\\n48\\n4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '48'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n3') == '-1'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n4') == '48'",
        "num_ids_2": 79,
        "num_ids_4": 119
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'answer', \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    x = int(input())\n    # Test your code here\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n6\\n1 5 5 1 6 1\\n\") == \"Output\\n3\\n5 6 1\\n\"\nassert solution(\"Input\\n5\\n2 4 2 4 4\\n\") == \"Output\\n2\\n2 4\\n\"\nassert solution(\"Input\\n5\\n6 6 6 6 6\\n\") == \"Output\\n1\\n6\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 110
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6 6 6 6 6\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"2\\n2 4\\n1\"\n\nassert solution(\"6\\n1 5 5 1 6 1\\n6\\n2 4 2 4 4\\n6\\n5 1 5 5 1 6\\n6\\n2 4 2 4 4\") == \"3\\n5 6 1\\n2\"\n\nassert solution(\"5\\n1 5 5 1 6\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"3\\n5 6 1\\n2\"",
        "num_ids_2": 134,
        "num_ids_4": 193
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\\n5\\n6 6 6 6 6\") == \"1\"\nassert solution(\"5\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n1 2 3 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n1 2 3 4\"",
        "num_ids_2": 75,
        "num_ids_4": 139
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(432) == '435'\nassert solution(99) == '103'\nassert solution(237) == '237'\nassert solution(42) == '44'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"\nassert solution(\"10\") == \"a\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"abba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"\nassert solution(\"def\") == \"c\"\nassert solution(\"\") == \"\"\n\nfor _ in range(int(input())):\n    s, m = input().split()\n    b = list(map(int, input().split()))\n\n    solution(s)\n    print()",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"abc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aba\"\nassert solution(\"abcde\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"abcdef\"\nassert solution(\"aaaaa\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"abba\"\nassert solution(\"acbd\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"acbd\"\nassert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"abc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aba\"\nassert solution(\"abcde\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"abcdef\"\nassert solution(\"aaaaa\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"abba\"\nassert solution(\"acbd\\n1\\n0\\nabba\\n2 3 4\\ncodeforces\\n5 6 7\\n0 1 2 3\\n\") == \"acbd\"",
        "num_ids_2": 148,
        "num_ids_4": 251
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'aac\\nb\\naba\\ncodeforces\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"aac\", \"Expected 'aac', got '{}'\".format(solution())\nassert solution() == \"b\", \"Expected 'b', got '{}'\".format(solution())\nassert solution() == \"aba\", \"Expected 'aba', got '{}'\".format(solution())\nassert solution() == \"codeforces\", \"Expected 'codeforces', got '{}'\".format(solution())",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"aaac\") == \"aa\"\nassert solution(\"abbb\") == \"bbb\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abac\") == \"aac\", \"Test case 1 failed\"\nassert solution(\"abc\") == \"aba\", \"Test case 2 failed\"\nassert solution(\"abba\") == \"aba\", \"Test case 3 failed\"\nassert solution(\"ecoosdcefr\") == \"def\", \"Test case 4 failed\"\nassert solution(\"a\" * 10 + \"b\" * 9 + \"c\" * 10 + \"d\" * 8 + \"e\" * 7 + \"f\" * 6) == \"abcf\", \"Test case 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'a'\nassert solution('abba') == 'aba'\nassert solution('ecoosdcefr') == 'a'\nassert solution('38 13 24 14 11 5 3 24 17 0') == 'aba'\n\nfor _ in range(q):\n    s, m = list(map(str, input().split()))\n    b = list(map(int, input().split()))\n    \n    t = \"\"\n    for i in range(m):\n        if i < len(s):\n            if b[i] > i:\n                for j in range(i+1, len(s)):\n                    if s[j] > s[i]:\n                        t += s[j]\n                        break\n        if i < len(s)-1:\n            if b[i] > i+1:\n                for j in range(i+1, len(s)):\n                    if s[j] > s[i+1]:\n                        t += s[j]\n                        break\n    \n    print(t)",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"abcde\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"b\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"b\" # your solution here\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n\") == \"b\"\nassert solution(stdin=\"2\\n\") == \"b\"\nassert solution(stdin=\"3\\n\") == \"a\"\nassert solution(stdin=\"4\\n\") == \"c\"\nassert solution(stdin=\"5\\n\") == \"c\"\nassert solution(stdin=\"6\\n\") == \"c\"\nassert solution(stdin=\"7\\n\") == \"d\"\nassert solution(stdin=\"8\\n\") == \"d\"\nassert solution(stdin=\"9\\n\") == \"e\"\nassert solution(stdin=\"10\\n\") == \"e\"\nassert solution(stdin=\"11\\n\") == \"f\"\nassert solution(stdin=\"12\\n\") == \"f\"\nassert solution(stdin=\"13\\n\") == \"g\"\nassert solution(stdin=\"14\\n\") == \"g\"\nassert solution(stdin=\"15\\n\") == \"h\"\nassert solution(stdin=\"16\\n\") == \"h\"\nassert solution(stdin=\"17\\n\") == \"i\"\nassert solution(stdin=\"18\\n\") == \"i\"\nassert solution(stdin=\"19\\n\") == \"j\"\nassert solution(stdin=\"20\\n\") == \"j\"\nassert solution(stdin=\"21\\n\") == \"k\"\nassert solution(stdin=\"22\\n\") == \"k\"\nassert solution(stdin=\"23\\n\") == \"l\"\nassert solution(stdin=\"24\\n\") == \"l\"\nassert solution(stdin=\"25\\n\") == \"m\"\nassert solution(stdin=\"26\\n\") == \"m\"\nassert solution(stdin=\"27\\n\") == \"n\"\nassert solution(stdin=\"28\\n\") == \"n\"\nassert solution(stdin=\"29\\n\") == \"o\"\nassert solution(stdin=\"30\\n\") == \"o\"\nassert solution(stdin=\"31\\n\") == \"p\"\nassert solution(stdin=\"32\\n\") == \"p\"\nassert solution(stdin=\"33\\n\") == \"q\"\nassert solution(stdin=\"34\\n\") == \"q\"\nassert solution(stdin=\"35\\n\") == \"r\"\nassert solution(stdin=\"36\\n\") == \"r\"\nassert solution(stdin=\"37\\n\") == \"s\"\nassert solution(stdin=\"38\\n\") == \"s\"\nassert solution(stdin=\"39\\n\") == \"t\"\nassert solution(stdin=\"40\\n\") == \"t\"\nassert solution(stdin=\"41\\n\") == \"u\"\nassert solution(stdin=\"42\\n\") == \"u\"\nassert solution(stdin=\"43\\n\") == \"v\"\nassert solution(stdin=\"44\\n\") == \"v\"\nassert solution(stdin=\"45\\n\") == \"w\"\nassert solution(stdin=\"46\\n\") == \"w\"\nassert solution(stdin=\"47\\n\") == \"x\"\nassert solution(stdin=\"48\\n\") == \"x\"\nassert solution(stdin=\"49\\n\") == \"y\"\nassert solution(stdin=\"50\\n\") == \"y\"\nassert solution(stdin=\"51\\n\") == \"z\"\nassert solution(stdin=\"52\\n\") == \"z\"\nassert solution(stdin=\"53\\n\") == \"aa\"\nassert solution(stdin=\"54\\n\") == \"aa\"\nassert solution(stdin=\"55\\n\") == \"ab\"\nassert solution(stdin=\"56\\n\") == \"ab\"\nassert solution(stdin=\"57\\n\") == \"ac\"\nassert solution(stdin=\"58\\n\") == \"ac\"\nassert solution(stdin=\"59\\n\") == \"ad\"\nassert solution(stdin=\"60\\n\") == \"ad\"\nassert solution(stdin=\"61\\n\") == \"ae\"\nassert solution(stdin=\"62\\n\") == \"ae\"\nassert solution(stdin=\"63\\n\") == \"af\"\nassert solution(stdin=\"64\\n\") == \"af\"\nassert solution(stdin=\"65\\n\") == \"ag\"\nassert solution(stdin=\"66\\n\") == \"ag\"\nassert solution(stdin=\"67\\n\") == \"ah\"\nassert solution(stdin=\"68\\n\") == \"ah\"\nassert solution(stdin=\"69\\n\") == \"ai\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"b\"\nassert solution(\"3\\n\") == \"aa\"\nassert solution(\"100000000000001\\n\") == \"b\"\nassert solution(\"100000000000002\\n\") == \"aa\"\nassert solution(\"26\\n\") == \"aa\"\nassert solution(\"702\\n\") == \"aa\"\nassert solution(\"703\\n\") == \"aaa\"\nassert solution(\"18279\\n\") == \"aaa\"\nassert solution(\"475254\\n\") == \"aaa\"\nassert solution(\"475255\\n\") == \"aaaa\"",
        "num_ids_2": 24,
        "num_ids_4": 76
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"b\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"2\") == \"b\", \"Expected output 'b', but got '{}'\".format(solution(b\"2\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a ab a a b ab a a b c\") == \"a AAAB AAAB c\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"\nassert solution(\"to be or not to be\") == \"12\"\n",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"13\"\nassert solution(input()) == \"11\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 85,
        "num_ids_4": 104
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Input: {input()}, Output: {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == 12\nassert solution(\"10\\nA ab a a b ab a a b c\\n\") == 13\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == 11",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\\n\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\nto be or not to be\\n') == '12'\nassert solution('10\\na ab a a b ab a a b c\\n') == '13'\nassert solution('6\\naa bb aa aa bb bb\\n') == '11'",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20\", \"Expected output: 20\\nReceived: {}\".format(solution(stdin))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"1\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"\nassert solution(7) == \"1\"\nassert solution(8) == \"1\"\nassert solution(9) == \"1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"1\"\nassert solution(13) == \"1\"\nassert solution(14) == \"1\"\nassert solution(15) == \"1\"\nassert solution(16) == \"1\"\nassert solution(17) == \"1\"\nassert solution(18) == \"1\"\nassert solution(19) == \"1\"\nassert solution(20) == \"1\"\nassert solution(21) == \"1\"\nassert solution(22) == \"1\"\nassert solution(23) == \"1\"\nassert solution(24) == \"1\"\nassert solution(25) == \"1\"\nassert solution(26) == \"1\"\nassert solution(27) == \"1\"\nassert solution(28) == \"1\"\nassert solution(29) == \"1\"\nassert solution(30) == \"1\"\nassert solution(31) == \"1\"\nassert solution(32) == \"1\"\nassert solution(33) == \"1\"\nassert solution(34) == \"1\"\nassert solution(35) == \"1\"\nassert solution(36) == \"1\"\nassert solution(37) == \"1\"\nassert solution(38) == \"1\"\nassert solution(39) == \"1\"\nassert solution(40) == \"1\"\nassert solution(41) == \"1\"\nassert solution(42) == \"1\"\nassert solution(43) == \"1\"\nassert solution(44) == \"1\"\nassert solution(45) == \"1\"\nassert solution(46) == \"1\"\nassert solution(47) == \"1\"\nassert solution(48) == \"1\"\nassert solution(49) == \"1\"\nassert solution(50) == \"1\"\nassert solution(51) == \"1\"\nassert solution(52) == \"1\"\nassert solution(53) == \"1\"\nassert solution(54) == \"1\"\nassert solution(55) == \"1\"\nassert solution(56) == \"1\"\nassert solution(57) == \"1\"\nassert solution(58) == \"1\"\nassert solution(59) == \"1\"\nassert solution(60) == \"1\"\nassert solution(61) == \"1\"\nassert solution(62) == \"1\"\nassert solution(63) == \"1\"\nassert solution(64) == \"1\"\nassert solution(65) == \"1\"\nassert solution(66) == \"1\"\nassert solution(67) == \"1\"\nassert solution(68) == \"1\"\nassert solution(69) == \"1\"\nassert solution(70) == \"1\"\nassert solution(71) == \"1\"\nassert solution(72) == \"1\"\nassert solution(73) == \"1\"\nassert solution(74) == \"1\"\nassert solution(75) == \"1\"\nassert solution(76) == \"1\"\nassert solution(77) == \"1\"\nassert solution(78) == \"1\"\nassert solution(79) == \"1\"\nassert solution(80) == \"1\"\nassert solution(81) == \"1\"\nassert solution(82) == \"1\"\nassert solution(83) == \"1\"\nassert solution(84) == \"1\"\nassert solution(85) == \"1\"\nassert solution(86) == \"1\"\nassert solution(87) == \"1\"\nassert solution(88) == \"1\"\nassert solution(89) == \"1\"\nassert solution(90) == \"1\"\nassert solution(91) == \"1\"\nassert solution(92) == \"1\"\nassert solution(93) == \"1\"\nassert solution(94) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\n",
        "num_ids_2": 61,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"20\\n3 2 3\\n1\\n5\"\nassert solution() == \"4000\\n2 2\"\nassert solution() == \"1\"\nassert solution() == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\\n\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\\n\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 110
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 20",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\\n20\\n3 2 3\\n\\n5 1\\n1 1 1 1 1\\n\\n4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\") == \"20\\n3 2 3\\n\\n5 1\\n1 1 1 1 1\\n\\n4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1\\n'\n\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0\\n'\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6\\n'\n\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '1\\n'\nassert solution(5) == '0\\n'\nassert solution(9) == '6\\n'\nassert solution(8) == '3\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4\\n1 -5 3 2\\n\") == \"1\\n\"\nassert solution(stdin=\"5\\n4 -2 3 -9 2\\n\") == \"0\\n\"\nassert solution(stdin=\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\\n\"\nassert solution(stdin=\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 125
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 32768",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"The solution is incorrect\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0\nassert solution() == 2\nassert solution() == 10\nassert solution() == 2000000000",
        "num_ids_2": 14,
        "num_ids_4": 38
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 0, \"The first test case should return 0, but it returns {}\".format(solution(5))\n\nassert solution(1) == 0, \"The second test case should return 0, but it returns {}\".format(solution(1))\n\nassert solution(2) == 2, \"The third test case should return 2, but it returns {}\".format(solution(2))\n\nassert solution(5) == 10, \"The fourth test case should return 10, but it returns {}\".format(solution(5))\n\nassert solution(2) == 11, \"The fifth test case should return 11, but it returns {}\".format(solution(2))",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"The expected answer is 0\"\nassert solution() == 2, \"The expected answer is 2\"\nassert solution() == 10, \"The expected answer is 10\"\nassert solution() == 2000000000, \"The expected answer is 2000000000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 84
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\nassert solution('1 1\\n10 1000000000') == '0\\n1\\n1000000000\\n'\nassert solution('1 100\\n1 100\\n1 100\\n1 100\\n1 100\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'",
        "num_ids_2": 138,
        "num_ids_4": 215
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"  # expected output: 4\nassert solution(\"\") == \"-1\"  # expected output: -1\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"201\") == \"-1\"\nassert solution(\"401\") == \"-1\"\nassert solution(\"701\") == \"4\"\nassert solution(\"100\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"999999\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"4\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4', 'Expected output: 4. Received output: {}'.format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 4, \"Output should be 4\"\nassert solution(input()) == -1, \"Output should be -1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"\n",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == 4\nassert solution('5 5\\n1 2 3 4 5') == 1\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == 48",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == 4\nassert solution('5 5\\n1 2 3 4 5') == 1\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == 48",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The output is {output()}, but the input is {input()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48\\n'\n\nfor num_of_pairs in range(1, 101):\n    for num_of_elements in range(1, 101):\n        p = list(range(1, num_of_elements+1))\n        for i in range(num_of_pairs):\n            l, r = sorted([p[i], p[i+1]])\n            if abs(median(p, l, r) - num_of_elements) <= 1:\n                print(num_of_pairs)\n                break",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\\n\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\") == \"48\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == 4\nassert solution('7 10\\n1 3 4 2 1 4 2') == 2\nassert solution('5 15\\n5 5 5 5 5') == 1\nassert solution('5 16\\n5 5 5 5 5') == 2\nassert solution('5 26\\n5 5 5 5 5') == -1",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == -1 # correct\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution() == \"2\"\nassert solution() == \"-1\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 188,
        "num_ids_4": 236
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == 4\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == 2\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == 1\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == 2\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == -1\nassert solution(\"5 24\\n5 5 5 5 5\\n\") == -1\n",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\" for input, output in [\n    (\"4\", \"3\"),\n    (\"2\", \"0\"),\n    (\"3\", \"1\"),\n    (\"5\", \"1\"),\n    (\"1\", \"3\"),\n    (\"1\", \"4\"),\n    (\"2\", \"3\"),\n    (\"2\", \"4\"),\n    (\"3\", \"2\"),\n    (\"3\", \"5\"),\n    (\"5\", \"1\"),\n    (\"5\", \"2\"),\n    (\"1\", \"5\"),\n    (\"3\", \"6\"),\n    (\"5\", \"1\"),\n    (\"5\", \"4\"),\n    (\"1\", \"6\"),\n    (\"1\", \"9\"),\n    (\"2\", \"3\"),\n    (\"2\", \"6\"),\n    (\"3\", \"2\"),\n    (\"3\", \"7\"),\n    (\"5\", \"1\"),\n    (\"5\", \"3\"),\n    (\"1\", \"11\"),\n    (\"2\", \"3\"),\n    (\"2\", \"7\"),\n    (\"3\", \"2\"),\n    (\"3\", \"8\"),\n    (\"5\", \"1\"),\n    (\"5\", \"5\"),\n    (\"1\", \"14\"),\n    (\"2\", \"3\"),\n    (\"2\", \"9\"),\n    (\"3\", \"2\"),\n    (\"3\", \"10\"),\n    (\"5\", \"1\"),\n    (\"5\", \"6\"),\n    (\"1\", \"19\"),\n    (\"2\", \"3\"),\n    (\"2\", \"11\"),\n    (\"3\", \"2\"),\n    (\"3\", \"13\"),\n    (\"5\", \"1\"),\n    (\"5\", \"7\"),\n    (\"1\", \"23\"),\n    (\"2\", \"3\"),\n    (\"2\", \"15\"),\n    (\"3\", \"2\"),\n    (\"3\", \"17\"),\n    (\"5\", \"1\"),\n    (\"5\", \"8\"),\n    (\"1\", \"27\"),\n    (\"2\", \"3\"),\n    (\"2\", \"19\"),\n    (\"3\", \"2\"),\n    (\"3\", \"20\"),\n    (\"5\", \"1\"),\n    (\"5\", \"9\"),\n    (\"1\", \"30\"),\n    (\"2\", \"3\"),\n    (\"2\", \"22\"),\n    (\"3\", \"2\"),\n    (\"3\", \"24\"),\n    (\"5\", \"1\"),\n    (\"5\", \"10\"),\n    (\"1\", \"35\"),\n    (\"2\", \"3\"),\n    (\"2\", \"26\"),\n    (\"3\", \"2\"),\n    (\"3\", \"28\"),\n    (\"5\", \"1\"),\n    (\"5\", \"11\"),\n    (\"1\", \"40\"),\n    (\"2\", \"3\"),\n    (\"2\", \"30\"),\n    (\"3\", \"2\"),\n    (\"3\", \"32\"),\n    (\"5\", \"1\"),\n    (\"5\", \"12\"),\n    (\"1\", \"45\"),\n    (\"2\", \"3\"),\n    (\"2\", \"34\"),\n    (\"3\", \"2\"),\n    (\"3\", \"36\"),\n    (\"5\", \"1\"),\n    (\"5\", \"13\"),\n    (\"1\", \"50\"),\n    (\"2\", \"3\"),\n    (\"2\", \"42\"),\n    (\"3\", \"2\"),\n    (\"3\", \"44\"),\n    (\"5\", \"1\"),\n    (\"5\", \"14\"),\n    (\"1\", \"55\"),\n    (\"2\", \"3\"),\n    (\"2\", \"57\"),\n    (\"3\", \"2\"),\n    (\"3\", \"59\"),\n    (\"5\", \"1\"),\n    (\"5\", \"15\"),\n    (\"1\", \"60\"),\n    (\"2\", \"3\"),\n    (\"2\", \"62\"),\n    (\"3\", \"2\"),\n    (\"3\", \"64\"),\n    (\"5\", \"1\"),\n    (\"5\", \"16\"),\n    (\"1\", \"65\"),\n    (\"2\", \"3\"),\n    (\"2\", \"67\"),\n    (\"3\", \"2\"),\n    (\"3\", \"69\"),\n    (\"5\", \"1\"),\n    (\"5\", \"17\"),\n    (\"1\", \"70\"),\n    (\"2\", \"3\"),\n    (\"2\", \"72\"),\n    (\"3\", \"2\"),\n    ",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n14 5 1\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '3'\nassert solution(2) == '0'\nassert solution(3) == '-1'\nassert solution(5) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n24 21 14 10\\n2\\n500 500\\n3\\n14 5 1\\n5\\n1 3 6 9 12\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n0\\n3\\n14 5 1\\n5\\n1 3 6 9 12\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n-1\\n5\\n1 3 6 9 12\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n1\") == \"1\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 179
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\"\nassert solution(\"2\\n500 500\\n\") == \"0\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n24 21 14 10\"\"\") == 3\nassert solution(\"\"\"2\n500 500\"\"\") == 0\nassert solution(\"\"\"3\n14 5 1\"\"\") == -1\nassert solution(\"\"\"5\n1 3 6 9 12\"\"\") == 1",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24 21 14 10\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3 14 5 1\") == \"-1\"\nassert solution(\"5 1 3 6 9 12\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('24 21 14 10') == '3', \"Expected result: 3, but got: {}\".format(solution('24 21 14 10'))\n\nassert solution('500 500') == '0', \"Expected result: 0, but got: {}\".format(solution('500 500'))\n\nassert solution('14 5 1') == '-1', \"Expected result: -1, but got: {}\".format(solution('14 5 1'))\n\nassert solution('1') == '1', \"Expected result: 1, but got: {}\".format(solution('1'))\n\nassert solution('1 3 6 9 12') == '1', \"Expected result: 1, but got: {}\".format(solution('1 3 6 9 12'))",
        "num_ids_2": 86,
        "num_ids_4": 150
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('4 4\\n1 10 100 1000\\n') == '4'",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\\n5\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == 5\nassert solution('6 1\\n36 4 1 25 9 16\\n') == 2\nassert solution('4 4\\n1 10 100 1000\\n') == 4",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\\n\"\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\") == 2\nassert solution(\"4 4\\n1 10 100 1000\") == 4",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('4 4\\n1 10 100 1000\\n') == '4'",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == 8\nassert solution(\"5 10 15\\n8 10 3 6\\n\") == -1\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"3 5 10\\n5 10 1\") == \"-1\"\nassert solution(\"2 4 5\\n3 6 8\") == \"3\"\n\nprint(\"All test cases pass.\")",
        "num_ids_2": 48,
        "num_ids_4": 69
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 15 7\\n8 10 3 6\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 9 3 6\") == \"8\\n\"\nassert solution(\"5 10 6\\n8 10 3 6\") == \"-1\\n\"\nassert solution(\"5 10 8\\n8 10 3 6\") == \"7\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 107
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == 8",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 12\\n8 10 10\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 5 4 2\\n\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6 ",
        "num_ids_2": 54,
        "num_ids_4": 122
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"1 1 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"2 3 4\\n5 6 7\\n\") == \"-1\"\nassert solution(\"3 1 2\\n4 1 2\\n5 1 2\\n\") == \"-1\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"-1\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n\") == \"-1\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 2 5\") == \"8\"\nassert solution(\"10 10 10\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 2 5\\n10 10 10 10\") == \"8\"",
        "num_ids_2": 60,
        "num_ids_4": 125
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 9\") == \"-1\\n\"\nassert solution(\"5 10 0\") == \"-1\\n\"\nassert solution(\"5 10 15\") == \"-1\\n\"\nassert solution(\"5 10 7 8 10 3 6\") == \"8\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 79
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"5 3 4\\n2\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\"\nassert solution(\"5 3 4\\n1\\n1\\n1\\n1\\n\") == \"Yes\"",
        "num_ids_2": 77,
        "num_ids_4": 105
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 86,
        "num_ids_4": 129
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n5\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 2 3\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"1 2 3\\n1\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"1 2 3\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"1 2 3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"",
        "num_ids_2": 89,
        "num_ids_4": 178
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES\\n00\\n10'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES\\n010\\n0000'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0') == 'NO'",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n2 2\\n1 1\\n0 1\\n\\nInput\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\nInput\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\nOutput\\nYES\\n010\\n0000\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# sample input\\nassert solution('1 1\\n0 1\\n\\n0 1\\n1 1\\n\\n0 1\\n0 1\\n1 1\\n1 1\\n1 1\\n') == 'YES\\n010\\n0000\\n'",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"YES\\n010\\n0000\"\nassert solution(str(input())) == \"YES\\n0010\\n0110\"\nassert solution(str(input())) == \"NO\"\n",
        "num_ids_2": 47,
        "num_ids_4": 59
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES\\n00'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES\\n010'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0') == 'NO'",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\n\"\n",
        "num_ids_2": 88,
        "num_ids_4": 125
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"YES\\n00\\n10\"\nassert solution(str(input())) == \"YES\\n010\\n0000\"\nassert solution(str(input())) == \"NO\"",
        "num_ids_2": 43,
        "num_ids_4": 55
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 123
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n010\\n0000\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 88,
        "num_ids_4": 133
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"\nassert solution(\"5 10\") == \"NO\"\nassert solution(\"2 2\\n1 1\\n0 1\\n2 1\\n0 1\\n1 0\\n1 0\\n0 1\\n1 0\") == \"YES\\n001001\"",
        "num_ids_2": 70,
        "num_ids_4": 116
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"121\") == \"No\", \"Test 2 failed\"\nassert solution(\"436\") == \"Yes\", \"Test 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\", \"Your solution should return Yes\"\nassert solution(\"121\") == \"No\", \"Your solution should return No\"\nassert solution(\"436\") == \"Yes\", \"Your solution should return Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\", \"Input 373 is not correct.\"\nassert solution(\"121\") == \"No\", \"Input 121 is not correct.\"\nassert solution(\"436\") == \"Yes\", \"Input 436 is not correct.\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\", \"Input 373 should be Yes\"\nassert solution(\"121\") == \"No\", \"Input 121 should be No\"\nassert solution(\"436\") == \"Yes\", \"Input 436 should be Yes\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"373\") == \"Yes\", \"Input: 373\\nOutput: Yes\"\nassert solution(\"121\") == \"No\", \"Input: 121\\nOutput: No\"\nassert solution(\"436\") == \"Yes\", \"Input: 436\\nOutput: Yes\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(\"5 2 1\\n0 1 0 1 0\\n\")) == \"5\\n\"\nassert solution(solution(\"6 2 1\\n1 0 0 1 0 1\\n\")) == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"The given solution is incorrect. Expected {expected}, got {solution}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6, 2, 1) == 3",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 5, \"The solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str=\"5 2 1\\n0 1 0 1 0\\n\") == \"5\\n\"\nassert solution(input_str=\"6 2 1\\n1 0 0 1 0 1\\n\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The solution does not produce the expected output.\"\nassert solution(\"2+2\") == -46, \"The solution does not produce the expected output.\"\nassert solution(\"112-37\") == 375, \"The solution does not produce the expected output.\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 59,
        "num_ids_4": 86
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"The output of the reference solution is incorrect.\"\n\nassert solution(\"2+2\") == \"-46\", \"The output of the reference solution is incorrect.\"\n\nassert solution(\"112-37\") == \"375\", \"The output of the reference solution is incorrect.\"",
        "num_ids_2": 59,
        "num_ids_4": 86
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Expected output: 4, but got: {0}\".format(solution(\"8-7+6-5+4-3+2-1-0\"))\nassert solution(\"2+2\") == -46, \"Expected output: -46, but got: {0}\".format(solution(\"2+2\"))\nassert solution(\"112-37\") == 375, \"Expected output: 375, but got: {0}\".format(solution(\"112-37\"))",
        "num_ids_2": 96,
        "num_ids_4": 139
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Test 1: Incorrect output\"\nassert solution(\"2+2\") == -46, \"Test 2: Incorrect output\"\nassert solution(\"112-37\") == 375, \"Test 3: Incorrect output\"",
        "num_ids_2": 57,
        "num_ids_4": 83
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"The output should be 4, but it is %s\" % solution(\"8-7+6-5+4-3+2-1-0\")\nassert solution(\"2+2\") == \"-46\", \"The output should be -46, but it is %s\" % solution(\"2+2\")\nassert solution(\"112-37\") == \"375\", \"The output should be 375, but it is %s\" % solution(\"112-37\")\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 96,
        "num_ids_4": 139
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n\") == \"NO\"",
        "num_ids_2": 99,
        "num_ids_4": 114
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n'\n                 '1 3\\n'\n                 '3 2\\n'\n                 '2 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\n\nassert solution('10 4\\n'\n                 '2 1\\n'\n                 '1 3\\n'\n                 '4 2\\n'\n                 '3 4\\n'\n                 '4 3\\n'\n                 '3 2\\n'\n                 '2 4\\n'\n                 '4 1\\n'\n                 '1 4\\n'\n                 '3 1\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\n\nassert solution('13 4\\n'\n                 '2 1\\n'\n                 '1 3\\n'\n                 '4 2\\n'\n                 '3 4\\n'\n                 '4 3\\n'\n                 '3 2\\n'\n                 '2 4\\n'\n                 '4 1\\n'\n                 '1 4\\n'\n                 '3 1\\n') == 'NO\\ndef solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case failed for {input()} and expected output: {expected}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 110
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(input()) == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution(input()) == \"YES\\n4 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\nYES\"\nassert solution(input()) == \"NO\"\nprint(\"YES\")\nprint(\"3 1\")\nprint(\"1 3\")\nprint(\"3 2\")\nprint(\"2 3\")",
        "num_ids_2": 60,
        "num_ids_4": 133
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 2\\n3 3\\n4 4') == 'YES\\n1 1\\n3 2\\n4 1'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 3\\n4 2\\n3 1\\n2 1\\n1 2') == 'YES\\n1 1\\n3 2\\n4 1'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 1\\n4 2\\n2 3\\n3 4\\n3 2\\n4 3\\n1 2\\n2 1\\n3 2\\n4 3\\n1 1\\n2 2\\n3 3\\n4 4') == 'YES\\n1 2\\n3 1\\n4 2'\nassert solution('3 3\\n1 1\\n2 2\\n2 1\\n3 2\\n3 1\\n3 4\\n4 3\\n4 2\\n4 1\\n1 2\\n1 3\\n2 4\\n2 3\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n1 2\\n2 1\\n3 2\\n4 3\\n1 3\\n2 2\\n3 1\\n4 2\\n1 4\\n2 3\\n3 2\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 2\\n2 1\\n3 2\\n4 3\\n1 1\\n2 2\\n3 3\\n4 4') == 'NO'\n",
        "num_ids_2": 119,
        "num_ids_4": 458
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 3\\n3 2\\n2 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\") == \"NO\"\n",
        "num_ids_2": 168,
        "num_ids_4": 233
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n\") == \"NO\"",
        "num_ids_2": 99,
        "num_ids_4": 114
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(stdin) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(stdin) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 90,
        "num_ids_4": 114
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 2\\n1 2\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"1 2\\n2 3\\n1 1\\n3 2\\n1 3\") == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"1 2\\n2 3\\n1 3\\n2 1\\n3 2\\n1 4\") == \"YES\\n3 1\\n1 4\\n3 2\\n2 3\\n\"\nassert solution(\"1 2\\n2 3\\n1 4\\n3 2\\n1 3\") == \"YES\\n2 1\\n1 4\\n3 2\\n2 3\\n\"\nassert solution(\"1 2\\n2 3\\n1 3\\n3 1\\n2 1\\n4 2\\n1 4\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"1 2\\n2 3\\n1 4\\n3 2\\n1 3\\n4 1\\n3 1\\n2 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 103,
        "num_ids_4": 216
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == -1\nassert solution('4 3 1\\n1 100 1 1\\n') == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1\n\nn, k, x = map(int, stdin.split())\nassert n >= 1 and n <= 200\nassert k >= 1 and k <= n and x >= 1 and x <= n\n\na = list(map(int, stdin.split()))\nassert len(a) == n\n\ns = sum(a)\ncount = [0] * n\nfor i in range(n):\n    count[i] = a[i]\n\nfor i in range(n - k + 1):\n    if count[i] == 0:\n        continue\n    j = i + 1\n    while j < n and count[j] == 0:\n        j += 1\n    if j - i > x:\n        return -1\n    max_sum = 0\n    for j in range(i, j):\n        if count[j] == 0:\n            continue\n        max_sum += count[j] - a[j]\n    if max_sum > s:\n        s = max_sum\n\nprint(s)",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 18\nassert solution(5) == 18\nassert solution(6) == -1\nassert solution(4) == 100",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\", \"Test case not passed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for solution({stdin})\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100\n\nfrom typing import List\n",
        "num_ids_2": 35,
        "num_ids_4": 97
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"\nassert solution(\"5 2\\n00100\\n10001\\n\") == \"3\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 2\n00100\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n\"\"\"\n6 1\n000000\n\"\"\"\n) == \"21\\n\"\n\nassert solution(\n\"\"\"\n4 1\n0011\n\"\"\"\n) == \"4\\n\"\n\nassert solution(\n\"\"\"\n12 6\n000010000100\n\"\"\"\n) == \"15\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n00100') == '3\\n'\nassert solution('6 1\\n000000') == '21\\n'\nassert solution('4 1\\n0011') == '4\\n'\nassert solution('12 6\\n000010000100') == '15\\n'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n00100\\n') == '3\\n'\nassert solution('6 1\\n000000\\n') == '21\\n'\nassert solution('4 1\\n0011\\n') == '4\\n'\nassert solution('12 6\\n000010000100\\n') == '15\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"azzel\\napple\\n\") == \"Yes\"\nassert solution(\"abc\\ndef\\n\") == \"No\"\nassert solution(\"aa\\nbb\\nc\") == \"No\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"azzel\") == \"Yes\\napple\\napple can be changed to apple, as follows:\\n - Choose e as c_1 and l as c_2. azzel becomes azzle.\\n - Choose z as c_1 and p as c_2. azzle becomes apple.\"\nassert solution(\"apple\") == \"Yes\\napple\\napple can be changed to apple, as follows:\\n - Choose e as c_1 and l as c_2. azzel becomes azzle.\\n - Choose z as c_1 and p as c_2. azzle becomes apple.\"\nassert solution(\"aa\") == \"No\"",
        "num_ids_2": 133,
        "num_ids_4": 143
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"xyz\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\napple\"\nassert solution(\"apple\\napple\") == \"No\\napple\"\nassert solution(\"hello\\nworld\") == \"No\\nworld\"\nassert solution(\"abcde\\nabcde\") == \"Yes\\nabcde\"",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"No\", \"No\"\nassert solution(\"zzzabc\") == \"Yes\", \"Yes\"\nassert solution(\"hello\") == \"No\", \"No\"\nassert solution(\"a\") == \"No\", \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"azzel\") == \"Yes\", \"Solution: azzel can be changed to apple, as follows: - Choose e as c_1 and l as c_2. azzel becomes azzle. - Choose z as c_1 and p as c_2. azzle becomes apple.\"\nassert solution(\"apple\") == \"No\", \"Solution: apple cannot be made equal to azzel, as it has been replaced by z, l, and e.\"\nassert solution(\"hello\") == \"No\", \"Solution: hello cannot be made equal to azzel, as it has been replaced by z, l, and e.\"",
        "num_ids_2": 102,
        "num_ids_4": 138
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\napple\\nazzle can be changed to apple, as follows:\\n - Choose e as c_1 and l as c_2. azzel becomes azzle.\\n - Choose z as c_1 and p as c_2. azzle becomes apple.\"\n\nassert solution(\"a\\nb\\nc\") == \"No\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"apple\\napple\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\nassert solution(\"abcde\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it. The minimum amount of money needed to achieve this objective is $116.00.\\n\\n\"",
        "num_ids_2": 395,
        "num_ids_4": 395
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"13\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"13\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"13\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\") == \"13\"",
        "num_ids_2": 68,
        "num_ids_4": 176
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\"\n",
        "num_ids_2": 388,
        "num_ids_4": 388
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"1000\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"2000\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"4000\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"8000\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"16000\\n\"",
        "num_ids_2": 392,
        "num_ids_4": 784
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('') == 'No solution found.'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nTakahashi, 0, 1, 2, 3, 4\\n100, 20, 30, 40, 50, 60, 70, 80, 90, 100\\n2, 2, 2, 2, 2, 2, 2, 2, 2, 2\") == \"It is achievable to increase the understanding levels of all the M algorithms to X or higher.\\nThe minimum amount of money needed is 100 yen.\"",
        "num_ids_2": 317,
        "num_ids_4": 317
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\").startswith(\"The minimum amount of money needed to achieve the objective is: \")",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. The bookstore is visiting N books. The i-th book is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\nTakahashi\\nNovice in competitive programming\\nWants to learn M algorithms.\\nInitial understanding level of each of the M algorithms is 0.\\nThe bookstore is visiting N books.\\nThe i-th book is sold for C_i yen.\\nIf he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi\\nNovice in competitive programming\\nWants to learn M algorithms.\\nInitial understanding level of each of the M algorithms is 0.\\nThe bookstore is visiting N books.\\nThe i-th book is sold for C_i yen.\\nIf he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it. 1000\\nMinimum amount of money needed to achieve the objective.\\nTakahashi\\nNovice in competitive programming\\nWants to learn M algorithms.\\nInitial understanding level of each of the M algorithms is 0.\\nThe bookstore is visiting N books.\\nThe i-th book is sold for C_i yen.\\nIf he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. The bookstore is visiting N books. The i-th book is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\nTakahashi\\nNovice in competitive programming\\nWants to learn M algorithms.\\nInitial understanding level of each of the M algorithms is 0.\\nThe bookstore is visiting N books.\\nThe i-th book is sold for C_i yen.\\nIf he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi\\nNovice in competitive programming\\nWants to learn M algorithms.\\nInitial understanding level of each of",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).There is no other way to increase the understanding levels of the algorithms.Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).There is no other way to increase the understanding levels of the algorithms.Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\",
        "num_ids_2": 470,
        "num_ids_4": 1025
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"1 10\\n2 5\\n3 7\\n4 3\\n5 9\") == \"1\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"4 100\\n5 200\\n6 300\") == \"2\\n\"\nassert solution(\"6 1500\\n7 3000\\n8 4500\") == \"1\\n\"\nassert solution(\"10 10000\\n11 20000\\n12 30000\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 132
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\nassert solution(\"3 1000\\n5 1500\\n7 2000\\n\") == \"4\"\nassert solution(\"4 5000\\n10 6000\\n15 7000\\n\") == \"5\"\nassert solution(\"6 10000\\n12 12000\\n20 15000\\n\") == \"6\"\nassert solution(\"8 20000\\n24 25000\\n30 27000\\n\") == \"7\"\nassert solution(\"10 30000\\n40 45000\\n50 55000\\n\") == \"8\"\nassert solution(\"12 40000\\n80 90000\\n100 100000\\n\") == \"9\"\nassert solution(\"15 60000\\n200 150000\\n250 200000\\n\") == \"10\"\nassert solution(\"18 100000\\n300 150000\\n350 200000\\n\") == \"11\"\nassert solution(\"21 100000\\n300 150000\\n400 200000\\n\") == \"12\"\nassert solution(\"24 150000\\n400 200000\\n500 250000\\n\") == \"13\"\nassert solution(\"27 200000\\n600 300000\\n700 350000\\n\") == \"14\"\nassert solution(\"30 250000\\n900 400000\\n1000 450000\\n\") == \"15\"\nassert solution(\"33 300000\\n1200 500000\\n1500 600000\\n\") == \"16\"\nassert solution(\"36 350000\\n1600 650000\\n2000 750000\\n\") == \"17\"\nassert solution(\"39 400000\\n2000 800000\\n2500 900000\\n\") == \"18\"\nassert solution(\"42 450000\\n2500 950000\\n3000 1050000\\n\") == \"19\"\nassert solution(\"45 500000\\n3000 1100000\\n3500 1200000\\n\") == \"20\"\nassert solution(\"48 550000\\n4000 1250000\\n5000 1450000\\n\") == \"21\"\nassert solution(\"51 600000\\n5000 1500000\\n6000 1700000\\n\") == \"22\"\nassert solution(\"54 650000\\n6000 1850000\\n7000 2050000\\n\") == \"23\"\nassert solution(\"57 700000\\n7000 2100000\\n8000 2300000\\n\") == \"24\"\nassert solution(\"60 750000\\n8000 2500000\\n9000 2800000\\n\") == \"25\"\nassert solution(\"63 800000\\n9000 ",
        "num_ids_2": 63,
        "num_ids_4": 136
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str), \"Expected correct output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"6 1000\\n1 200\\n2 150\\n3 200\\n4 150\") == \"4\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Output: {expected_output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 3",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Your solution is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output. Input: {input()}, Output: {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"7\\n5 5 4 5 5 5 6\\n\\n8\\n4 8 8 7 8 4 4 5\\n\\n9\\n2 3 4 2 2 3 2 2 4\\n\") == \"2\"\nassert solution(stdin=\"8\\n4 8 8 7 8 4 4 5\\n\\n9\\n2 3 4 2 2 3 2 2 4\\n\") == \"2\"\nassert solution(stdin=\"9\\n2 3 4 2 2 3 2 2 4\\n\") == \"3\"",
        "num_ids_2": 130,
        "num_ids_4": 163
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\nfrom typing import List",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10') == -1\nassert solution('4 3 1\\n1 100 1 1') == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected: {expected}, got: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == -1\nassert solution('4 3 1\\n1 100 1 1\\n') == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 3') == 18\nassert solution('6 1 5') == -1\nassert solution('4 3 1') == 100",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2 3\n5 1 3 10 1\n\"\"\") == 18\n\nassert solution(\"\"\"\n6 1 5\n10 30 30 70 10 10\n\"\"\") == -1\n\nassert solution(\"\"\"\n4 3 1\n1 100 1 1\n\"\"\") == 100\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"12\") == \"No\"\nassert solution(\"23\") == \"Yes\"\nassert solution(\"56\") == \"No\"\nassert solution(\"101\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"11\") == \"Yes\\n\", \"Test Case 1\"\nassert solution(stdin=\"12\") == \"No\\n\", \"Test Case 2\"\nassert solution(stdin=\"13\") == \"Yes\\n\", \"Test Case 3\"\nassert solution(stdin=\"14\") == \"No\\n\", \"Test Case 4\"\nassert solution(stdin=\"15\") == \"Yes\\n\", \"Test Case 5\"\nassert solution(stdin=\"16\") == \"No\\n\", \"Test Case 6\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"Yes\\n\", \"Solution is not correct\"\nassert solution(\"0\") == \"Yes\\n\", \"Solution is not correct\"\nassert solution(\"1\") == \"No\\n\", \"Solution is not correct\"\nassert solution(\"10\") == \"No\\n\", \"Solution is not correct\"\nassert solution(\"5\") == \"No\\n\", \"Solution is not correct\"\nassert solution(\"20\") == \"No\\n\", \"Solution is not correct\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Yes\\n', 'Test failed'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"99\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\n\") == \"Yes\\n\", \"Test 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"50\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"Yes\", \"Please write the correct input.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n\") == \"2 2 6\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 2 6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nprint(\"All test cases pass\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"\") == \"\\n\"\nassert solution(\"4\\n2 3\\n2 1\\n1 2\\n3 2\") == \"2 1 4\\n\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n2 3 4\") == \"2 2 6\\n\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n2 3 4\\n2 3 5\") == \"2 2 6\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 139
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n\") == \"2 2 6\\n\"\n\nprint(solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n\"))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"1\\n1 1 1\") == \"1\\n\"\nassert solution(\"5\\n2 2 6\\n1 1 1\") == \"2 2 6\\n\"\nassert solution(\"1\\n2 2 6\\n3 3 3\") == \"3 3 3\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 123
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"hello\") == \"0\"\nassert solution(\"racecar\") == \"3\"\nassert solution(\"hello world\") == \"2\"\nassert solution(\"hello\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"hello\") == \"0\"\nassert solution(\"racecar\") == \"3\"\nassert solution(\"a\") == \"1\"\nassert solution(\"abcd\") == \"0\"\nassert solution(\"abcd\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\nHere's the solution:\n\n```python\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"racecar\") == \"2\"\nassert solution(\"hello\") == \"1\"\nassert solution(\"leetcode\") == \"1\"\nassert solution(\"anagram\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"5\") == \"No\\n\"\nassert solution(\"1\") == \"Yes\\n\"\nassert solution(\"100\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"12\") == \"No\\n\"\nassert solution(\"15\") == \"Yes\\n\"\nassert solution(\"9\") == \"Yes\\n\"\nassert solution(\"101\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"Yes\\n\", \"Function should return Yes when N is 10.\"\nassert solution(\"5\") == \"No\\n\", \"Function should return No when N is 5.\"\nassert solution(\"20\") == \"No\\n\", \"Function should return No when N is 20.\"\nassert solution(\"10000\") == \"No\\n\", \"Function should return No when N is 10000.\"",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"10\\n\") == \"Yes\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"11\") == \"No\\n\", \"Test 2 failed\"\nassert solution(\"90\") == \"Yes\\n\", \"Test 3 failed\"\nassert solution(\"100\") == \"No\\n\", \"Test 4 failed\"\nassert solution(\"101\") == \"Yes\\n\", \"Test 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"10000\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"5\\n\"\nassert solution(\"5\\n3 4 5 6 7\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"5\\n3 3 3 3 3\") == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"5\\n4 4 9 7 6\") == \"0\\n\"\nassert solution(\"5\\n4 4 9 7 5 6\") == \"0\\n\"\nassert solution(\"5\\n4 4 9 7 5 5\") == \"5\\n\"\nassert solution(\"5\\n4 4 9 7 5 6 6\") == \"5\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 4 9 7 5\\n\") == \"5\\n\"\nassert solution(\"5\\n5 5 10\\n\") == \"10\\n\"\nassert solution(\"5\\n5 5 5\\n\") == \"5\\n\"\nassert solution(\"5\\n4 5 10\\n\") == \"0\\n\"\nassert solution(\"5\\n4 5 5\\n\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 91
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 4 9 7 5\\n\") == \"5\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"1\\n2 3 4\\n2 4 5\\n3 4 5\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10\\n\", \"The solution should return the expected output.\"\nassert solution(\"1 5\") == \"-1\\n\", \"The solution should return the expected output.\"\nassert solution(\"3 2\") == \"-1\\n\", \"The solution should return the expected output.\"\nassert solution(\"10 20\") == \"-1\\n\", \"The solution should return the expected output.\"\nassert solution(\"5 5\") == \"0\\n\", \"The solution should return the expected output.\"\nassert solution(\"0 0\") == \"0\\n\", \"The solution should return the expected output.\"",
        "num_ids_2": 58,
        "num_ids_4": 106
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\", \"Expected 10, but got {}\".format(solution(stdin))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n\") == \"10\\n\"\nassert solution(\"10 2\\n\") == \"10\\n\"\nassert solution(\"1 10\\n\") == \"10\\n\"\nassert solution(\"0 10\\n\") == \"-1\\n\"\nassert solution(\"2 0\\n\") == \"-1\\n\"\nassert solution(\"10 10\\n\") == \"-1\\n\"\nassert solution(\"10 0\\n\") == \"-1\\n\"\nassert solution(\"5 0\\n\") == \"-1\\n\"\nassert solution(\"1 1\\n\") == \"-1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5') == '10\\n2 \\times 5 = 10.\\n'\nassert solution('5 10') == '-1\\n'\nassert solution('0 5') == '-1\\n'\nassert solution('5 0') == '-1\\n'\nassert solution('10 5') == '-1\\n'\nassert solution('5 10') == '-1\\n'",
        "num_ids_2": 41,
        "num_ids_4": 69
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n\") == \"10\\n\"\nassert solution(\"10 5\\n\") == \"10\\n\"\nassert solution(\"1 0\\n\") == \"-1\\n\"\nassert solution(\"100 0\\n\") == \"-1\\n\"\nassert solution(\"0 0\\n\") == \"-1\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\nassert solution(\"7 5\") == \"-1\"\nassert solution(\"10 0\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 5\\n\") == \"10\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\", \"Input 2 5 is not valid\"\nassert solution(\"10 2\") == \"10\", \"Input 10 2 is not valid\"\nassert solution(\"9 2\") == \"10\", \"Input 9 2 is not valid\"\nassert solution(\"2 9\") == \"10\", \"Input 2 9 is not valid\"\nassert solution(\"1 1\") == \"1\", \"Input 1 1 is not valid\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect. Please check your code and input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 5\\n10 12 1 2 14\") == \"10\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 5\\n10 12 1 2 14\") == \"4\"\nassert solution(\"2 4\\n10 12 1 2 14\") == \"4\"\nassert solution(\"2 5\\n10 11 1 2 14\") == \"6\"\nassert solution(\"3 5\\n10 11 1 2 14\") == \"5\"\nassert solution(\"2 4\\n10 11 1 2 14\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 5\n    10 12 1 2 14\n    \"\"\"\n) == \"5\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 170
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 186
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n110110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 6\") == \"2\\n111100\\n110110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\") == \"1\\n111100\\n110110\"\nassert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n110110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n5 6\") == \"2\\n111100\\n110110\"",
        "num_ids_2": 126,
        "num_ids_4": 271
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 180
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\\n2 4\\n1 3\\n\\n2 4\\n1 3\\n') == '2'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '2'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '1'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '2'\nassert solution('1 1\\n1 2') == '1'\nassert solution('1 1\\n2 2') == '2'\nassert solution('1 1\\n3 3') == '3'\nassert solution('1 1\\n4 4') == '4'",
        "num_ids_2": 88,
        "num_ids_4": 149
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '2'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5\\n3 4\\n3 5\\n') == '1'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected_output, f\"Got '{solution()}', expected '{expected_output}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test cases {input()} and {expected_output} have different outputs.\\n\\nSolution: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n') == 'YES'\nassert solution('2\\n10 10\\n\\n3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'",
        "num_ids_2": 102,
        "num_ids_4": 152
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nYES\\nNO\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nNO\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nNO\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 117,
        "num_ids_4": 170
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed. Input: {input()}, Output: {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n') == 'YES'\nassert solution('2\\n10 10\\n3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'",
        "num_ids_2": 92,
        "num_ids_4": 140
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 92,
        "num_ids_4": 140
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n2 1 1 2 5\\n\\nOutput\\nYES\\n\\nInput\\n3\\n4 5 3\\n\\nOutput\\nYES\\n\\nInput\\n2\\n10 10\\n\\nOutput\\nYES\\n\\nInput\\n3\\n1 2 3\\n\\nOutput\\nNO\\n\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 100, -100, 125, -77) == 9, \"The superhero can't kill the monster and the battle will last infinitely.\"\nassert solution(1000000000000, 5, -1, 0, 0) == 4999999999996, \"The superhero can't kill the monster and the battle will last infinitely.\"\nassert solution(10, 4, -3, -6, 5, 4) == -1, \"The superhero can't kill the monster and the battle will last infinitely.\"",
        "num_ids_2": 109,
        "num_ids_4": 152
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1000 6\n-100 -200 -300 125 77 -4\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1000000000000 5\n-1 0 0 0 0\n\"\"\") == \"4999999999996\"\n\nassert solution(\"\"\"\n10 4\n-3 -6 5 4\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == -1\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1000 6\n-100 -200 -300 125 77 -4\"\"\") == \"9\"\nassert solution(\"\"\"1000000000000 5\n-1 0 0 0 0\"\"\") == \"4999999999996\"\nassert solution(\"\"\"10 4\n-3 -6 5 4\"\"\") == \"-1\"",
        "num_ids_2": 29,
        "num_ids_4": 37
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\" for input, output in [\n    (\"1000 6\", \"9\"),\n    (\"1000000000000 5\", \"4999999999996\"),\n    (\"10 4\", \"-1\"),\n]\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"\nassert solution(\"7\\nABACABA\") == \"AB\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"\nassert solution(\"7ABACABA\") == \"AB\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\n\nassert solution(\"ZZZAA\") == \"ZZ\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"\n\nassert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\n\nassert solution(\"ZZZAA\") == \"ZZ\"\n\nassert solution(\"ABCDAB\") == \"AB\"\n\nassert solution(\"AC\") == \"AC\"\n\nassert solution(\"ACBD\") == \"AC\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nZZZAA\\n\") == \"ZZ\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ABCBBA\") == \"AB\"\nassert solution(\"ABC\") == \"A\"\nassert solution(\"ACAC\") == \"A\"\nassert solution(\"A\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\" * 2) == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"est\", \"Invalid solution\"\nassert solution(\"codeforces\") == \"es\", \"Invalid solution\"\nassert solution(\"test\") == \"es\", \"Invalid solution\"\nassert solution(\"b\") == \"ab\", \"Invalid solution\"",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"\nassert solution(\"\") == \"\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"e\"\nassert solution(\"ab\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"est\", \"Expected: est, but got: {}\".format(solution(\"test\"))\nassert solution(\"west\") == \"\", \"Expected: an empty string, but got: {}\".format(solution(\"west\"))\nassert solution(\"codeforces\") == \"es\", \"Expected: es, but got: {}\".format(solution(\"codeforces\"))\nassert solution(\"yes\") == \"es\", \"Expected: es, but got: {}\".format(solution(\"yes\"))\nassert solution(\"b\") == \"ab\", \"Expected: ab, but got: {}\".format(solution(\"b\"))\nassert solution(\"ab\") == \"\", \"Expected: an empty string, but got: {}\".format(solution(\"ab\"))",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"3 5\\n1 7 11\") == \"3\\n\"\nassert solution(\"3 8\\n1 7 11\") == \"4\\n\"\nassert solution(\"3 2\\n1 7 11\") == \"2\\n\"\nassert solution(\"3 5\\n2 6 10\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"4 4\\n1 1 2 3\") == \"1\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"6 6\\n1 2 3 4 5 6\") == \"2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\n\nsolution(\"3 3\\n1 7 11\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Test failed\"\nassert solution(\"ab\") == \"No\", \"Test failed\"\nassert solution(\"racecar\") == \"No\", \"Test failed\"\nassert solution(\"hello\") == \"Yes\", \"Test failed\"\nassert solution(\"Aa\") == \"No\", \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"aaa\") == \"Yes\"\nassert solution(\"abab\") == \"No\"\nassert solution(\"A man, a plan, a canal: Panama\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('akasaka') == 'Yes'\nprint('All tests passed.')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Output should be Yes\"\nassert solution(\"racecar\") == \"No\", \"Output should be No\"\nassert solution(\"hello\") == \"No\", \"Output should be No\"\nassert solution(\"noon\") == \"No\", \"Output should be No\"\nassert solution(\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('babad') == 'No'\nassert solution('racecar') == 'No'\nassert solution('antacid') == 'Yes'\nassert solution('hello') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Expected 'Yes' but got '{}'\".format(solution(\"akasaka\"))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Input is not valid.\"\n\nA \\times B, truncate its fractional part, and print the result as an integer.",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Test failed for test case 1\"\nassert solution(\"1000 1000\") == \"1000\", \"Test failed for test case 2\"\nassert solution(\"1000 0.00001\") == \"1000\", \"Test failed for test case 3\"\nassert solution(\"1000 0.00000001\") == \"1000\", \"Test failed for test case 4\"\nassert solution(\"1000 0.000000001\") == \"1000\", \"Test failed for test case 5\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 58,
        "num_ids_4": 127
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198 1.10.01\") == \"217\"\nassert solution(\"198 1.101\") == \"217\"\nassert solution(\"198 1.10100\") == \"217\"\nassert solution(\"198 1.1010\") == \"217\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"20 3.14159\") == \"320\"\nassert solution(\"0 0.0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 66
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"198 1.10\") == b\"217\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('123 456.78') == '2468'\nassert solution('0 1.10') == '0'\nassert solution('123 123.45') == '123'\n\nassert solution('198 1.10') == 217\nassert solution('123 456.78') == 2468\nassert solution('0 1.10') == 0\nassert solution('123 123.45') == 123",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Test case 1 failed\"\nassert solution(\"199 1.10\") == \"200\", \"Test case 2 failed\"\nassert solution(\"200 2.00\") == \"200\", \"Test case 3 failed\"\nassert solution(\"200 2\") == \"200\", \"Test case 4 failed\"\nassert solution(\"200 2.10\") == \"200\", \"Test case 5 failed\"\nassert solution(\"200 2.90\") == \"200\", \"Test case 6 failed\"\nassert solution(\"200 2.99\") == \"200\", \"Test case 7 failed\"\nassert solution(\"200 3.00\") == \"200\", \"Test case 8 failed\"\nassert solution(\"200 3.01\") == \"200\", \"Test case 9 failed\"\nassert solution(\"200 3.02\") == \"200\", \"Test case 10 failed\"\nassert solution(\"200 3.03\") == \"200\", \"Test case 11 failed\"\nassert solution(\"200 3.04\") == \"200\", \"Test case 12 failed\"\nassert solution(\"200 3.05\") == \"200\", \"Test case 13 failed\"\nassert solution(\"200 3.06\") == \"200\", \"Test case 14 failed\"\nassert solution(\"200 3.07\") == \"200\", \"Test case 15 failed\"\nassert solution(\"200 3.08\") == \"200\", \"Test case 16 failed\"\nassert solution(\"200 3.09\") == \"200\", \"Test case 17 failed\"\nassert solution(\"200 3.10\") == \"200\", \"Test case 18 failed\"\nassert solution(\"200 3.11\") == \"200\", \"Test case 19 failed\"\nassert solution(\"200 3.12\") == \"200\", \"Test case 20 failed\"\nassert solution(\"200 3.13\") == \"200\", \"Test case 21 failed\"\nassert solution(\"200 3.14\") == \"200\", \"Test case 22 failed\"\nassert solution(\"200 3.15\") == \"200\", \"Test case 23 failed\"\nassert solution(\"200 3.16\") == \"200\", \"Test case 24 failed\"\nassert solution(\"200 3.17\") == \"200\", \"Test case 25 failed\"\nassert solution(\"200 3.18\") == \"200\", \"Test case 26 failed\"\nassert solution(\"200 3.19\") == \"200\", \"Test case 27 failed\"\nassert solution(\"200 3.20\") == \"200\", \"Test case 28 failed\"\nassert solution(\"200 3.21\") == \"200\", \"Test case 29 failed\"\nassert solution(\"200 3.22\") == \"200\", \"Test case 30 failed\"\nassert solution(\"200 3.23\") == \"200\", \"Test case 31 failed\"\nassert solution(\"200 3.24\") == \"200\", \"Test case 32 failed\"\nassert solution(\"200 3.25\") == \"200\", \"Test case 33 failed\"\nassert solution(\"200 3.26\") == \"200\", \"Test case 34 failed\"\nassert solution(\"200 3.27\") == \"200\", \"Test case 35 failed\"\nassert solution(\"200 3.28\") == \"200\", \"Test case 36 failed\"\nassert solution(\"200 3.29\") == \"200\", \"Test case 37 failed\"\nassert solution(\"200 3.30\") == \"200\", \"Test case 38 failed\"\nassert solution(\"200 3.31\")",
        "num_ids_2": 52,
        "num_ids_4": 101
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"217\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198.10\") == \"217\"\nassert solution(\"198.01\") == \"217\"\nassert solution(\"198.001\") == \"217\"\nassert solution(\"198.0001\") == \"217\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"The code is not correct.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n0\\n0\\n1\\n999999999\\n381621773\\n\", \"Expected output: 3\\n0\\n0\\n1\\n999999999\\n381621773\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3\\n0\\n0\\n1\\n999999999\\n381621773'\nassert solution('3') == '3\\n0\\n0\\n1\\n999999999\\n381621773'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(763243547) == 3, \"The correct answer for the given problem statement is 3.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '3'\nassert solution(2) == '0'\nassert solution(3) == '0'\nassert solution(4) == '1'\nassert solution(5) == '999999999'\nassert solution(6) == '381621773'\nassert solution(7) == '1'\nassert solution(8) == '999999999'\nassert solution(9) == '381621773'\nassert solution(10) == '1'\nassert solution(11) == '999999999'\nassert solution(12) == '381621773'\nassert solution(13) == '1'\nassert solution(14) == '999999999'\nassert solution(15) == '381621773'\nassert solution(16) == '1'\nassert solution(17) == '999999999'\nassert solution(18) == '381621773'\nassert solution(19) == '1'\nassert solution(20) == '999999999'\nassert solution(21) == '381621773'\nassert solution(22) == '1'\nassert solution(23) == '999999999'\nassert solution(24) == '381621773'\nassert solution(25) == '1'\nassert solution(26) == '999999999'\nassert solution(27) == '381621773'\nassert solution(28) == '1'\nassert solution(29) == '999999999'\nassert solution(30) == '381621773'\nassert solution(31) == '1'\nassert solution(32) == '999999999'\nassert solution(33) == '381621773'\nassert solution(34) == '1'\nassert solution(35) == '999999999'\nassert solution(36) == '381621773'\nassert solution(37) == '1'\nassert solution(38) == '999999999'\nassert solution(39) == '381621773'\nassert solution(40) == '1'\nassert solution(41) == '999999999'\nassert solution(42) == '381621773'\nassert solution(43) == '1'\nassert solution(44) == '999999999'\nassert solution(45) == '381621773'\nassert solution(46) == '1'\nassert solution(47) == '999999999'\nassert solution(48) == '381621773'\nassert solution(49) == '1'\nassert solution(50) == '999999999'\nassert solution(51) == '381621773'\nassert solution(52) == '1'\nassert solution(53) == '999999999'\nassert solution(54) == '381621773'\nassert solution(55) == '1'\nassert solution(56) == '999999999'\nassert solution(57) == '381621773'\nassert solution(58) == '1'\nassert solution(59) == '999999999'\nassert solution(60) == '381621773'\nassert solution(61) == '1'\nassert solution(62) == '999999999'\nassert solution(63) == '381621773'\nassert solution(64) == '1'\nassert solution(65) == '999",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"0\"\nassert solution(\"1000000000\") == \"999999999\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199",
        "num_ids_2": 114,
        "num_ids_4": 1027
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n1\\n3\\n2000000000\\n763243547\") == \"0\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n1\\n2000000000\\n763243547\") == \"0\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n1\\n1\\n2000000000\\n763243547\") == \"1\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n1\\n0\\n2000000000\\n763243547\") == \"999999999\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"381621773\"",
        "num_ids_2": 116,
        "num_ids_4": 215
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1, \"The output should be 1.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {i + 1} failed. Expected output: {output}, but got {solution(input())}.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"2\\n1000000000\\n1000000000\") == \"1\\n0\"\nassert solution(\"1\\n1000000000\\n1000000000\") == \"0\"\nassert solution(\"1000000000\\n1000000000\\n1000000000\") == \"999999999\"\nassert solution(\"1\\n1000000000\\n1000000000\") == \"0\"\nassert solution(\"1000000000\\n1000000000\\n1000000000\") == \"999999999\"",
        "num_ids_2": 102,
        "num_ids_4": 187
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test case 1 not passing\"\nassert solution(stdin) == \"1\\n\", \"Test case 2 not passing\"\nassert solution(stdin) == \"0\\n\", \"Test case 3 not passing\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == 3\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == 1",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\\n\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"The solution for the given input is wrong. Expected output: {output_str}, but got: {solution(input_str)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 101
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n150001\\n\") == \"5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\\n4\\n\"\nassert solution(open(\"input_example1.txt\", \"r\")) == \"Output\\n4\\n\"\nassert solution(open(\"input_example2.txt\", \"r\")) == \"Output\\n5\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 72
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected {expected_output}, but got {solution(input_string)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output\\n4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3 2 4 1') == '4\\n'\nassert solution('6\\n1 1 1 4 4 4') == '5\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"\nassert solution(\"10\\n5 5 5 10 10 10\") == \"10\\n\"\nassert solution(\"5\\n2 2 2 3 3 3\") == \"3\\n\"\nassert solution(\"2\\n1 1 1 2 2 2\") == \"2\\n\"\nassert solution(\"6\\n4 4 4 4 5 5\") == \"8\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 101
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Here's the solution:\\n\" + \\\n\"def solution(stdin: str) -> str:\\n\" + \\\n\"    pass\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12\\n') == '000001000002\\n000002000001\\n000001000001\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12\\n') == '000001000002\\n000002000001\\n000001000001\\n'\nassert solution('1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n') == '000001\\n000002\\n000003\\n000004\\n'\nassert solution('2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n') == '000002\\n000003\\n000004\\n000005\\n'\nassert solution('10 10\\n') == '000000000001\\n000000000002\\n000000000003\\n000000000004\\n000000000005\\n000000000006\\n000000000007\\n000000000008\\n000000000009\\n000000000010\\n'\nassert solution('3 4\\n1 2\\n1 3\\n1 4\\n') == '00000100\\n00000101\\n00000102\\n00000103\\n'\nassert solution('1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n'",
        "num_ids_2": 138,
        "num_ids_4": 358
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    1 32\n    2 63\n    1 12\n    \"\"\"\n) == \"000001000002\\n000002000001\\n000001000001\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 23\n    2 34\n    3 45\n    4 56\n    5 67\n    \"\"\"\n) == \"000001000004\\n000002000005\\n000003000006\\n000004000007\\n000005000008\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 10 8 40') == '2\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\", \"Test 1 Failed\"\nassert solution(\"4\\n3 10 8 40\") == \"3\\n\", \"Test 2 Failed\"\nassert solution(\"4\\n1 10 8 40\") == \"1\\n\", \"Test 3 Failed\"\nassert solution(\"4\\n1 10 8 30\") == \"1\\n\", \"Test 4 Failed\"\nassert solution(\"4\\n1 10 8 40\") == \"2\\n\", \"Test 5 Failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"4\\n5 10 8 40\") == \"15\\n\"\nassert solution(\"4\\n2 100 8 40\") == \"2\\n\"\nassert solution(\"4\\n2 10 80\") == \"1\\n\"\nassert solution(\"4\\n2 10 8 400\") == \"15\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 92
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 10 8 40') == '2\\n'\nassert solution('2\\n1') == '1\\n'\nassert solution('1\\n2') == '2\\n'\nassert solution('3\\n1 2 3') == '3\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('5\\n1 10 5 50') == '10'\nassert solution('5\\n30 30 30 30') == '30'\nassert solution('5\\n-1 10 -5 50') == '-20'\nassert solution('5\\n0 0 0 0') == '0'",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"5\\n2 10 8 40 30\") == \"30\\n\"\nassert solution(\"6\\n2 10 8 40 30 100\") == \"30\\n\"\nassert solution(\"7\\n2 10 8 40 30 100 50\") == \"50\\n\"\nassert solution(\"8\\n2 10 8 40 30 100 50 100\") == \"100\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 115
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n', \"The minimum possible final health of the last monster alive should be 2.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"5\\n3 7 12 15 25\") == \"5\"\nassert solution(\"3\\n10 5 15\") == \"15\"\nassert solution(\"4\\n1000000 1000000 1000000\") == \"1000000\"\nassert solution(\"5\\n-1000000 1000000 -1000000\") == \"-1000000\"",
        "num_ids_2": 45,
        "num_ids_4": 106
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 8 40\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\"\"\") == 3\n\nassert solution(\"\"\"\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == 5\n\nassert solution(\"\"\"\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == 0",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\", \"Expected output: 3, actual output: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, 11) == 3, \"The expected output is 3, but got {}\".format(solution(3, 3, 11))  # expected output: 3\nassert solution(3, 4, 2) == 5, \"The expected output is 5, but got {}\".format(solution(3, 4, 2))  # expected output: 5\nassert solution(3, 4, 10000000000000000000) == 0, \"The expected output is 0, but got {}\".format(solution(3, 4, 10000000000000000000))  # expected output: 0",
        "num_ids_2": 94,
        "num_ids_4": 178
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output\\n3\\n', \"Test failed\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution() == '5'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10, \"rocesfedoc\") == \"codeforces\"\nassert solution(16, \"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(1, \"z\") == \"z\"",
        "num_ids_2": 46,
        "num_ids_4": 59
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\nfor n in range(1, 101):\n    assert solution(str(n)) == n",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"codeforces\"\nassert solution(input()) == \"thisisexampletwo\"\nassert solution(input()) == \"z\"",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"codeforces\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"codeforces\"\nassert solution(16) == \"thisisexampletwo\"\nassert solution(1) == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test Failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == 19, \"Test Case 1\"\nassert solution(\"381 492\") == 873, \"Test Case 2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == \"19\", \"The solution should be 19\"\nassert solution(\"381 492\") == \"873\", \"The solution should be 873\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == 19, \"The answer should be 19\"\nassert solution(\"381 492\") == 873, \"The answer should be 873\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Your code is incorrect!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output', f\"The solution should return the sum of the given integers, but it returned {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == 19\nassert solution(\"381 492\") == 873",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == \"19\", \"Please provide the correct input.\"\nassert solution(\"381 492\") == \"873\", \"Please provide the correct input.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2+3') == '++>+++>++[<+>-]<', 'Test 1'\nassert solution('9-7') == '+++++++++>+++++++>+++<[<->-]<', 'Test 2'\nassert solution
        "num_ids_2": 53,
        "num_ids_4": 834
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2+3\n''') == '''\n++>\n+++>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n'''\n\nassert solution('''\n9-7\n''') == '''\n+++++++++>\n+++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>+++>+[<+>-]<\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+[<->-]<\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++\"\nassert solution(\"123\") == \"?\"\nassert solution(\"0\") == \"0\"\nassert solution(\"255\") == \"0\"\nassert solution(\"2+2-2+2\") == \"+.-..--.-..---\"\nassert solution(\"1000000\") == \"255\"\nassert solution(\"255\") == \"0\"\nassert solution(\"1234\") == \"?\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"+>+>+++>+++>+++>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>+>",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2+3\\n\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\\n\") == \"+++++++++>+++++++>+++<->-\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>+++>+[<+>-]<\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+++[<->-]<\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '2'\nassert solution(4) == '2'\nassert solution(5) == '5'\nassert solution(6) == '2'\nassert solution(7) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56') == '1\\n2\\n5\\n2\\n0'\nassert solution('4\\n2132\\n506\\n999999999999999999\\n1000000000000000000') == '8\\n2\\n4\\n1'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nprint(f\"Case #{case+1}: {result}\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n99999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n9999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1000000000000000000\") == \"8\"\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 38,
        "num_ids_4": 1027
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"575\") == \"4\\n\", \"Input error\"\nassert solution(\"1\") == \"1\\n\", \"Input error\"\nassert solution(\"1000000000\") == \"0\\n\", \"Input error\"",
        "num_ids_2": 34,
        "num_ids_4": 59
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"575\") == \"4\", \"Test Case 1 Failed\"\nassert solution(\"10\") == \"10\", \"Test Case 2 Failed\"\nassert solution(\"9\") == \"9\", \"Test Case 3 Failed\"\nassert solution(\"5\") == \"0\", \"Test Case 4 Failed\"\nassert solution(\"3\") == \"0\", \"Test Case 5 Failed\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(575) == 4, \"The number of Shichi-Go-San numbers between 1 and 575 should be 4.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == '4', \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"4\\n\", \"Sample Output should be 4.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000\") == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"010\") == \"0\"\nassert solution(\"001\") == \"1\"\nassert solution(\"101\") == \"1\"\nassert solution(\"110\") == \"1\"\nassert solution(\"011\") == \"1\"\nassert solution(\"0100\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"100\") == \"2\"\nassert solution(\"101\") == \"3\"\nassert solution(\"110\") == \"3\"\nassert solution(\"111\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"000\") == \"1\"\nprint(\"Test case passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('000') == '1', \"Output should be 1, but got {}\".format(solution('000'))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"000\") == 1",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1\\n1\") == \"DENIED\"\nassert solution(\"1\\n1 1\") == \"APPROVED\"\nassert solution(\"3\\n1 2 3\") == \"DENIED\"\nassert solution(\"1\\n2 3\") == \"APPROVED\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"5\\n6 8 10 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 11 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 30\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 31 12\") == \"DENIED\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"APPROVED\", \"The output should be APPROVED.\"\nassert solution(input()) == \"DENIED\", \"The output should be DENIED.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"APPROVED\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"APPROVED\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"4\\n12 18 24 30 36\") == \"DENIED\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRUDL\") == \"No\"\nassert solution(\"RRUDLUDD\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes', 'Takahashi will do a tap dance. The dance is described by a string S where each character is L, R, U, or D. These characters indicate the positions on which Takahashi should step. He will follow these instructions one by one in order, starting with the first character. S is said to be easily playable if and only if it satisfies both of the following conditions: - Every character in an odd position (1-st, 3-rd, 5-th, \\ldots) is R, U, or D. - Every character in an even position (2-nd, 4-th, 6-th, \\ldots) is L, U, or D. Your task is to print Yes if S is easily playable, and No otherwise.",
        "num_ids_2": 181,
        "num_ids_4": 181
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\", \"Test Case 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n\nassert solution('LUDLUDR') == 'No'\n\nassert solution('DDLRUDL') == 'Yes'\n\nassert solution('LUUDURD') == 'No'\n\nassert solution('RUDUUDL') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"3\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"2\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"1\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"5\\n5\\n5\") == \"10\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 74
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\\n\"\nprint(\"All tests pass!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\", \"Output should be 7\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '7\\n'\nassert solution(open('input.txt', 'r')) == '7\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"10\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"9\\n\") == \"9\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == '2'\nassert solution(10) == '101010101010101010'\nassert solution(20) == '54613'\nassert solution(21) == '61155'\nassert solution(22) == '31290'\nprint(mod(10**9 + 7, solution(int(stdin.readline()))))\n\nfrom functools import mod",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n', \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"2\\n\" # Test Case 1\nassert solution(\"10\\n\") == \"10\\n\" # Test Case 2\nassert solution(\"100\\n\") == \"100\\n\" # Test Case 3\nassert solution(\"999\\n\") == \"999\\n\" # Test Case 4\nassert solution(\"1000\\n\") == \"1000\\n\" # Test Case 5",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2') == '2\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Output does not satisfy the constraints\\n\", solution(None)\nassert solution(\"\") == \"Output does not satisfy the constraints\\n\", solution(\"\")\nassert solution(\"2\") == \"The answer can be very large, so output it modulo 10^9 + 7.\\n\", solution(\"2\")\nassert solution(\"10\") == \"The answer can be very large, so output it modulo 10^9 + 7.\\n\", solution(\"10\")\nassert solution(\"5\") == \"The answer can be very large, so output it modulo 10^9 + 7.\\n\", solution(\"5\")\nassert solution(\"6\") == \"Two sequences \\{0,9\\} and \\{9,0\\} satisfy all conditions.\\n\", solution(\"6\")",
        "num_ids_2": 38,
        "num_ids_4": 108
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('10') == '71'\nassert solution('5') == '201'\nassert solution('9') == '500'\nassert solution('11') == '1000'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"20\") == \"23\", \"The minimum prime number greater than or equal to 20 is 23.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(20) == '23', \"Solution does not work for the given input\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"20\") == \"23\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"23\", \"Solution does not work.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"23\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"23\", \"The minimum prime number greater than or equal to 20 is 23.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='20') == '23', \"The minimum prime number greater than or equal to 20 is 23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"23\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4 5\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1', \"The sequence should be /\\/\\/\\/, but the actual output is: \" + solution(input())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"5\\n5 5 5 5 5\") == \"1\\n\"\nassert solution(\"1\\n3 2 4 1\") == \"2\\n\"\nassert solution(\"2\\n2 2 1\") == \"1\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"The sequence 3,1,3,2 is not /\\/\\/\\/, but we can make it /\\/\\/\\/ by replacing one of its elements: for example, replace the fourth element to make it 3,1,3,1.\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"3\\n3 2 1\") == \"1\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 2\\n2 3 1 2\") == \"1\\n\"\nassert solution(\"3\\n3 2 1\\n1 3 1 2\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 89
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n3 1 2 1\") == \"2\"\nassert solution(\"4\\n1 1 2 1\") == \"2\"\nassert solution(\"4\\n1 1 2 2\") == \"3\"\nassert solution(\"4\\n1 2 2 1\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\nfor _ in range(10):\n    input_str = input()\n    output_str = solution(input_str)\n    assert output_str == input_str, f\"Expected {input_str}, got {output_str}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '23'\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n') == '23\\n'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n120\\n') == '23\\n'\nassert solution('10 100 90 80\\n98\\n40\\n30\\n21\\n80\\n120\\n') == '175\\n'\nassert solution('5 100 90 80\\n120\\n40\\n30\\n21\\n80\\n120\\n') == '23\\n'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n120\\n80\\n') == '190\\n'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n120\\n80\\n') == '190\\n'\n\nprint(\"All test cases passed\")",
        "num_ids_2": 95,
        "num_ids_4": 198
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n50') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n50\\n') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n50\\n100\\n90\\n80\\n') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n50\\n100\\n90\\n80\\n90\\n') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n50\\n100\\n90\\n80\\n100\\n80\\n') == '23'",
        "num_ids_2": 88,
        "num_ids_4": 195
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\", \"Solution is incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"23\", \"The correct output is not obtained.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n') == '23'\nassert solution('5 100 90 80\\n100\\n90\\n80\\n') == '23'\nassert solution('5 100 90 80\\n100\\n90\\n80\\n') == '23'\nassert solution('5 100 90 80\\n100\\n90\\n80\\n') == '23'\nassert solution('5 100 90 80\\n100\\n90\\n80\\n') == '23'\n",
        "num_ids_2": 79,
        "num_ids_4": 151
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"CDEZAB\", \"Test failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"CDEZAB\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nABC\") == \"BCAB\"\nassert solution(\"1\\n\") == \"A\"\nassert solution(\"0\\nABC\") == \"ABC\"",
        "num_ids_2": 31,
        "num_ids_4": 56
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nXYZ\") == \"ZX\"\nassert solution(\"0\\n\") == \"\"\"\nassert solution(\"10\\n1234567890\") == \"12345678901234567890\"\nassert solution(\"5\\nA\") == \"A\"",
        "num_ids_2": 30,
        "num_ids_4": 82
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nXYZ\") == \"YZX\"\nassert solution(\"3\\nABC\") == \"BCDFG\"\nassert solution(\"4\\nXYZ\") == \"YZXW\"\nassert solution(\"5\\n\") == \"Z\"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"N\\nS\\n\")) == \"CDEZAB\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nABCXYZ\") == \"BDCAB\"\nassert solution(\"4\\nABCXYZ\") == \"ADBC\"\nassert solution(\"5\\nABCXYZ\") == \"ZBCX\"\nassert solution(\"6\\nABCXYZ\") == \"XBAZ\"\nassert solution(\"7\\nABCXYZ\") == \"XBZ\"\nassert solution(\"8\\nABCXYZ\") == \"ZBX\"\nassert solution(\"9\\nABCXYZ\") == \"X\"\nassert solution(\"10\\nABCXYZ\") == \"\"\n\nassert solution(\"2\\nxyz\") == \"\"\nassert solution(\"3\\nxyz\") == \"\"\nassert solution(\"4\\nxyz\") == \"\"\nassert solution(\"5\\nxyz\") == \"\"\nassert solution(\"6\\nxyz\") == \"\"\nassert solution(\"7\\nxyz\") == \"\"\nassert solution(\"8\\nxyz\") == \"\"\nassert solution(\"9\\nxyz\") == \"\"\nassert solution(\"10\\nxyz\") == \"\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(input().strip()))) == [199999, 6]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999 \"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '3 4 2 '\nassert solution(1) == '199999 199999'\nassert solution(1) == '3 6'",
        "num_ids_2": 36,
        "num_ids_4": 48
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['3', '4', '2']\nassert solution(1) == ['199999']\nassert solution(1) == ['3', '6']",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3 4 2\"\nassert solution(1) == \"199999 199999\"\nassert solution(1) == \"6\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999  \"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 59,
        "num_ids_4": 74
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [3, 4, 2]\nassert solution(1) == [199999, 199999]\nassert solution(1) == [3, 6]",
        "num_ids_2": 39,
        "num_ids_4": 52
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999 \nassert solution(\"1\\n3 6\") == \"6",
        "num_ids_2": 58,
        "num_ids_4": 72
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\nassert solution('3 1\\n2 3 5 4 6 5\\n') == '1121122'",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == solution_1\nassert solution == solution_2\nassert solution == solution_3\nassert solution == solution_4\nassert solution == solution_5\nassert solution == solution_6\nassert solution == solution_7\nassert solution == solution_8\nassert solution == solution_9\nassert solution == solution_10\nassert solution == solution_11\nassert solution == solution_12\nassert solution == solution_13\nassert solution == solution_14\nassert solution == solution_15\nassert solution == solution_16\nassert solution == solution_17\nassert solution == solution_18\nassert solution == solution_19\nassert solution == solution_20\nassert solution == solution_21\nassert solution == solution_22\nassert solution == solution_23\nassert solution == solution_24\nassert solution == solution_25\nassert solution == solution_26\nassert solution == solution_27\nassert solution == solution_28\nassert solution == solution_29\nassert solution == solution_30\nassert solution == solution_31\nassert solution == solution_32\nassert solution == solution_33\nassert solution == solution_34\nassert solution == solution_35\nassert solution == solution_36\nassert solution == solution_37\nassert solution == solution_38\nassert solution == solution_39\nassert solution == solution_40\nassert solution == solution_41\nassert solution == solution_42\nassert solution == solution_43\nassert solution == solution_44\nassert solution == solution_45\nassert solution == solution_46\nassert solution == solution_47\nassert solution == solution_48\nassert solution == solution_49\nassert solution == solution_50\nassert solution == solution_51\nassert solution == solution_52\nassert solution == solution_53\nassert solution == solution_54\nassert solution == solution_55\nassert solution == solution_56\nassert solution == solution_57\nassert solution == solution_58\nassert solution == solution_59\nassert solution == solution_60\nassert solution == solution_61\nassert solution == solution_62\nassert solution == solution_63\nassert solution == solution_64\nassert solution == solution_65\nassert solution == solution_66\nassert solution == solution_67\nassert solution == solution_68\nassert solution == solution_69\nassert solution == solution_70\nassert solution == solution_71\nassert solution == solution_72\nassert solution == solution_73\nassert solution == solution_74\nassert solution == solution_75\nassert solution == solution_76\nassert solution == solution_77\nassert solution == solution_78\nassert solution == solution_79\nassert solution == solution_80\nassert solution == solution_81\nassert solution == solution_82\nassert solution == solution_83\nassert solution == solution_84\nassert solution == solution_85\nassert solution == solution_86\nassert solution == solution_87\nassert solution == solution_88\nassert solution == solution_89\nassert solution == solution_90\nassert solution == solution_91\nassert solution == solution_92\nassert solution == solution_93\nassert solution == solution_94\nassert solution == solution_95\nassert solution == solution_96\nassert solution == solution_97\nassert solution == solution_98\nassert solution == solution_99\nassert solution == solution_100\nassert solution == solution_101\nassert solution == solution_102\nassert solution == solution_103\nassert solution == solution_104\nassert solution == solution_105\nassert solution == solution_106\nassert solution == solution_107\nassert solution == solution_108\nassert solution == solution_109\nassert solution == solution_110\nassert solution == solution_111\nassert solution == solution_112\nassert solution == solution_113\nassert solution == solution_114\nassert solution == solution_115\nassert solution == solution_116\nassert solution == solution_117\nassert solution == solution_118\nassert solution == solution_119\nassert solution == solution_120\nassert solution == solution_121\nassert solution == solution_122\nassert solution == solution_123\nassert solution == solution_124\nassert solution == solution_125\nassert solution == solution_126\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ninput = list(map(int, input().split()))\noutput = [1] * n\n\ncoach1 = 0\ncoach2 = 0\ncount = 0",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\") == 2\nassert solution(\"2\\n100 1\\n\") == 2\nassert solution(\"4\\n1 3 3 7\\n\") == 4",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(2) == 2\nassert solution(4) == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, \"1 3 3 7\") == \"4\"\nassert solution(2, \"100 1\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"[1, 2, 1, 2, 3]\") == 2\nassert solution(\"[100, 1]\") == 2\nassert solution(\"[1, 3, 3, 7]\") == 4",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2\nassert solution(2) == 2\nassert solution(5) == 2\nassert solution(50) == 4077655702101117777158104018439397471252724694722367425080438146549378551407805511075055873219027443824311917609859697356498071376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361376495258031338791122371649473613764952580313387911223716494736137649525803133879112237164947361",
        "num_ids_2": 18,
        "num_ids_4": 1027
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2', \"Expected 2, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 1 2 3\\n') == '2\\n'\nassert solution('2\\n100 1\\n') == '2\\n'\nassert solution('4\\n1 3 3 7\\n') == '4\\n'",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2, \"Your solution is incorrect.\"\nassert solution([100, 1]) == 2, \"Your solution is incorrect.\"\nassert solution([1, 3, 3, 7]) == 4, \"Your solution is incorrect.\"\n",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Test failed\"\nassert solution() == 2, \"Test failed\"\nassert solution() == 4, \"Test failed\"\nassert solution() == 4, \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 4\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n4 7 1 5 4 9') == '1'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('1\\n16') == '1'\nassert solution('4\\n1 1 1 1023') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"The minimum number of elements needed to be removed from the given sequence in order to make it good should be 1.\"\nassert solution() == \"2\\n\", \"The minimum number of elements needed to be removed from the given sequence in order to make it good should be 2.\"\nassert solution() == \"1\\n\", \"The minimum number of elements needed to be removed from the given sequence in order to make it good should be 1.\"\nassert solution() == \"0\\n\", \"The minimum number of elements needed to be removed from the given sequence in order to make it good should be 0.\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 7 1 5 4 9') == '1'\nassert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('16') == '1'\nassert solution('4 1 1 1023') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 51
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\\n\\n5\\n1 2 3 4 5\\n\\n1\\n16\\n\\n4\\n1 1 1 1023\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n\\n1\\n16\\n\\n4\\n1 1 1 1023\\n\") == \"2\"\nassert solution(\"1\\n16\\n\\n4\\n1 1 1 1023\\n\") == \"1\"",
        "num_ids_2": 116,
        "num_ids_4": 149
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1100\") == \"0\"\nassert solution(\"0110\") == \"2\"\nassert solution(\"001111\") == \"5\"\nassert solution(\"0001\") == \"1\"\nassert solution(\"1010\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\", \"Incorrect output\"\nassert solution(\"1101\") == \"1\", \"Incorrect output\"\nassert solution(\"1111\") == \"0\", \"Incorrect output\"\nassert solution(\"1110\") == \"0\", \"Incorrect output\"\nassert solution(\"1100\") == \"3\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0101\") == \"4\"\nassert solution(\"1111\") == \"0\"\nassert solution(\"001111\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='0011') == '4'\nprint(\"All four cubes can be removed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0011') == '4', 'The solution should output \"4\"'\nassert solution('1111') == '0', 'The solution should output \"0\"'\nassert solution('0001') == '3', 'The solution should output \"3\"'\nassert solution('1010') == '1', 'The solution should output \"1\"'\nassert solution('1111') == '0', 'The solution should output \"0\"'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0011') == '4'\nassert solution('1001') == '2'\nassert solution('1010') == '3'\nassert solution('0111') == '2'\nassert solution('1000') == '0'\nassert solution('0000') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0011') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 5\\n2 5\\n3 5\\n4 5\\n\") == \"5\\n\"\nassert solution(\"6 6\\n1 6\\n2 6\\n3 6\\n4 6\\n5 6\\n\") == \"6\\n\"\nassert solution(\"7 7\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n\") == \"7\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 149
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 2\\n1 3\\n2 4\\n\") == \"0\"\nassert solution(\"4 1\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 1\\n1 3\\n2 4\\n\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 2\\n1 4\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"6 2\\n1 5\\n2 4\\n3 5\\n4 4\\n\") == \"2\"\nassert solution(\"7 2\\n1 6\\n2 5\\n3 6\\n4 5\\n5 4\\n\") == \"2\"\nassert solution(\"8 2\\n1 7\\n2 6\\n3 7\\n4 6\\n5 5\\n6 4\\n7 3\\n8 2\\n\") == \"2\"\nassert solution(\"9 2\\n1 8\\n2 7\\n3 8\\n4 7\\n5 6\\n6 5\\n7 4\\n8 3\\n9 2\\n\") == \"2\"\nassert solution(\"10 2\\n1 9\\n2 8\\n3 9\\n4 8\\n5 7\\n6 6\\n7 5\\n8 4\\n9 3\\n10 2\\n\") == \"2\"",
        "num_ids_2": 53,
        "num_ids_4": 126
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\\n7 8\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\\n7 8\\n9 10\\n\") == \"0\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 153
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"5 1\\n1 2\\n1 3\\n3 4\") == \"0\"\nassert solution(\"4 3\\n1 2\\n2 3\\n4 5\") == \"1\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\") == \"0\"\nassert solution(\"4 2\\n1 2\\n1 3\\n3 4\") == \"0\"\nassert solution(\"3 4\\n2 3\\n3 4\") == \"0\"",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for solution({input_data}) -> {output_data}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"3 3\\n2 2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"4 2\\n1 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"4 2\\n1 1\\n2 3\\n\") == \"1\\n\"\nassert solution(\"4 2\\n2 3\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4 2\\n1 1\\n3 3\\n\") == \"2\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"10\\n3 4 1 5 2\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4\\n\") == \"0\"\nassert solution(\"10\\n10 2 3 4\\n\") == \"2\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 2 1') == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='4\\n1 2 2 1') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"\nassert solution(\"4\\n1 3 3 1\") == \"1\\n\"\nassert solution(\"4\\n1 2 2 3\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} does not match expected output {expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\n2 1 -3') == '3\\n'\nassert solution('2 4\\n-1 1') == '4\\n'\nassert solution('4 10\\n2 4 1 2') == '2\\n'",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\\n\"\nassert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the problem statement and the given input/output examples.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8 \"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28 \"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['9', '3', '6', '12', '4', '8']",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(\"6\\n4 8 6 3 12 9\")) == \"9 3 6 12 4 8\"\nassert solution(solution(\"4\\n42 28 84 126\")) == \"126 42 84 28\"\nassert solution(solution(\"2\\n1000000000000000000 3000000000000000000\")) == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n4\\n7\\n10\\n12\\n\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1\\n2\\n5\\n8\\n11\\n\") == \"1\\n8\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, but got: {solution()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n6\\n3 5 4 7 10 12\\n\\nOutput\\n3\\n7 3 5\\n\\nInput\\n5\\n-1 2 5 8 11\\n\\nOutput\\n1\\n8') == 'Output\\n3\\n7 3 5\\n\\nInput\\n5\\n-1 2 5 8 11\\n\\nOutput\\n1\\n8'\n\nimport math",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n3\n7 3 5\n1\n8\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n4\\n7\\n10\\n12\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1\\n2\\n5\\n8\\n11\") == \"1\\n8\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n7 3 5\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The solution for the given input is '{solution(input())}' but should be '{expected}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '0 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\") == \"0 2\", \"The output should be 0 2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"5000\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"1000000000000\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"1000000000001\") == \"4\\n\", \"Test case 4 failed\"\nassert solution(\"10000000000000000000\") == \"4\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 43,
        "num_ids_4": 105
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103\") == \"3\\n\"\nassert solution(\"314\") == \"2\\n\"\nassert solution(\"100\") == \"1\\n\"\nassert solution(\"10\") == \"1\\n\"\nassert solution(\"1\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\nprint(\"Correct!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(103) == \"3\\n\", \"The balance after one year is 101 yen.\\nThe balance after two years is 102 yen.\\nThe balance after three years is 103 yen.\\nThus, it takes three years for the balance to reach 103 yen or above.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"3\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103\") == \"3\\n\", \"The balance after one year is 101 yen.\\n\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000000\") == \"0\\n\", \"The balance after two years is 1000000000000000000000000000000000000000000000000000000000000000000\\n\"\nassert solution
        "num_ids_2": 185,
        "num_ids_4": 1027
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(103) == \"3\\n\", \"Test failed.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\", \"The answer is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\", \"The correct output should be printed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\\n\", \"The output should be '9'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '9', \"The output should be 9.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '9\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"The function should return 9.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\", \"The maximum value of f is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\\n\", \"Incorrect solution\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\nassert solution(\"2\\n1 2 3\") == \"3\\n\"\nassert solution(\"4\\n5 6 7 8\") == \"8\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"\") == \"1\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nassert solution(\"1\\n1 2 3\") == \"3\"\nassert solution(\"5\\n5 5 5\") == \"5\"\nassert solution(\"1\\n1 2 3 4 5\") == \"10\"\nassert solution(\"2\\n2 2 2\") == \"4\"\nassert solution(\"1\\n1\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\", \"Test case 1 failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\\n\", \"Output must be 10\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"No\\n\"\nassert solution(\"3\\n1 1\\n2 2\") == \"No\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"No\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 129
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == 4\nassert solution('2') == 4\nassert solution('3') == 16\nassert solution('4') == 16\nassert solution('5') == 16",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Test failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nassert solution(\"3\\n\") == \"12\\n\"\nassert solution(\"4\\n\") == \"16\\n\"\nassert solution(\"5\\n\") == \"20\\n\"\nassert solution(\"6\\n\") == \"24\\n\"\nassert solution(\"7\\n\") == \"28\\n\"\nassert solution(\"8\\n\") == \"32\\n\"\nassert solution(\"9\\n\") == \"36\\n\"\nassert solution(\"10\\n\") == \"40\\n\"\nassert solution(\"11\\n\") == \"44\\n\"\nassert solution(\"12\\n\") == \"48\\n\"\nassert solution(\"13\\n\") == \"52\\n\"\nassert solution(\"14\\n\") == \"56\\n\"\nassert solution(\"15\\n\") == \"60\\n\"\nassert solution(\"16\\n\") == \"64\\n\"\nassert solution(\"17\\n\") == \"68\\n\"\nassert solution(\"18\\n\") == \"72\\n\"\nassert solution(\"19\\n\") == \"76\\n\"\nassert solution(\"20\\n\") == \"80\\n\"\nassert solution(\"21\\n\") == \"84\\n\"\nassert solution(\"22\\n\") == \"88\\n\"\nassert solution(\"23\\n\") == \"92\\n\"\nassert solution(\"24\\n\") == \"96\\n\"\nassert solution(\"25\\n\") == \"100\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"100\\n\") == \"50\\n\", \"Test case 3 failed\"\nassert solution(\"-5\\n\") == \"1\\n\", \"Test case 4 failed\"\nassert solution(\"0\\n\") == \"0\\n\", \"Test case 5 failed\"\nassert solution(\"11\\n\") == \"0\\n\", \"Test case 6 failed\"\nassert solution(\"0\\n\") == \"0\\n\", \"Test case 7 failed\"\nassert solution(\"4\\n\") == \"16\\n\", \"Test case 8 failed\"\nassert solution(\"0\\n\") == \"0\\n\", \"Test case 9 failed\"\nassert solution(\"0\\n\") == \"0\\n\", \"Test case 10 failed\"\nassert solution(\"1\\n\") == \"1\\n\", \"Test case 11 failed\"\nassert solution
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\", \"The area of a circle of radius 2 is 4 times larger than the area of a circle of radius 1.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\", \"Solution should return 4\"\nassert solution(\"10\") == \"0\", \"Solution should return 0\"\nassert solution(\"1\") == \"1\", \"Solution should return 1\"\nassert solution(\"0\") == \"1\", \"Solution should return 1\"\nassert solution(\"5\") == \"2\", \"Solution should return 2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '0'\nassert solution('3') == '9'\nassert solution('0') == '0'\nassert solution('100') == '0'\nassert solution('abc') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\\n\"\nassert solution(\"4\\n1 3 8 5\\n\") == \"No\\n\"\nassert solution(\"4\\n3 1 8 5\\n\") == \"No\\n\"\nassert solution(\"4\\n3 8 1 5\\n\") == \"No\\n\"\nassert solution(\"4\\n3 8 5 10\\n\") == \"No\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"No\", \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"\nassert solution(\"5\\n4 6 7 8\") == \"No\\n\"\nassert solution(\"6\\n5 7 9 10\") == \"Yes\\n\"\nassert solution(\"7\\n6 8 10 12\") == \"No\\n\"\nassert solution(\"8\\n7 9 11 13\") == \"Yes\\n\"\nassert solution(\"9\\n8 10 12 14\") == \"No\\n\"\nassert solution(\"10\\n9 11 13 15\") == \"Yes\\n\"\nassert solution(\"11\\n10 12 14 16\") == \"No\\n\"\nassert solution(\"12\\n11 13 15 17\") == \"Yes\\n\"\nassert solution(\"13\\n12 14 16 18\") == \"No\\n\"\nassert solution(\"14\\n13 15 17 19\") == \"Yes\\n\"\nassert solution(\"15\\n14 16 18 20\") == \"No\\n\"\nassert solution(\"16\\n15 17 19 21\") == \"Yes\\n\"\nassert solution(\"17\\n16 18 20 22\") == \"No\\n\"\nassert solution(\"18\\n17 19 21 23\") == \"Yes\\n\"\nassert solution(\"19\\n18 20 22 24\") == \"No\\n\"\nassert solution(\"20\\n19 21 23 25\") == \"Yes\\n\"\nassert solution(\"21\\n20 22 24 26\") == \"No\\n\"\nassert solution(\"22\\n21 23 25 27\") == \"Yes\\n\"\nassert solution(\"23\\n22 24 26 28\") == \"No\\n\"\nassert solution(\"24\\n23 25 27 29\") == \"Yes\\n\"\nassert solution(\"25\\n24 26 28 30\") == \"No\\n\"\nassert solution(\"26\\n25 27 29 31\") == \"Yes\\n\"\nassert solution(\"27\\n26 28 30 32\") == \"No\\n\"\nassert solution(\"28\\n27 29 31 33\") == \"Yes\\n\"\nassert solution(\"29\\n28 30 32 34\") == \"No\\n\"\nassert solution(\"30\\n29 31 33 35\") == \"Yes\\n\"\nassert solution(\"31\\n30 32 34 36\") == \"No\\n\"\nassert solution(\"32\\n31 33 35 37\") == \"Yes\\n\"\nassert solution(\"33\\n32 34 36 38\") == \"No\\n\"\nassert solution(\"34\\n33 35 37 39\") == \"Yes\\n\"\nassert solution(\"35\\n34 36 38 40\") == \"No\\n\"\nassert solution(\"36\\n35 37 39 41\") == \"Yes\\n\"\nassert solution(\"37\\n36 38 40 42\") == \"No\\n\"\nassert solution(\"38\\n37 39 41 43\") == \"Yes\\n\"\nassert solution(\"39\\n38 40 42 44\") == \"No\\n\"\nassert solution(\"40\\n39 41 43 45\") == \"Yes\\n\"\nassert solution(\"41\\n40 42 44 46\") == \"No\\n\"\nassert solution(\"42\\n41 43 45 47\") == \"Yes\\n\"\nassert solution(\"43\\n42 44 46 48\") == \"No\\n\"\nassert solution(\"44\\n43",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\\n\", \"The solution is incorrect.\"\nassert solution(\"5\\n3 8 5 1\\n\") == \"No\\n\", \"The solution is incorrect.\"\nassert solution(\"6\\n3 8 5 1\\n\") == \"No\\n\", \"The solution is incorrect.\"\nassert solution(\"7\\n3 8 5 1\\n\") == \"Yes\\n\", \"The solution is incorrect.\"\nassert solution(\"8\\n3 8 5 1\\n\") == \"No\\n\", \"The solution is incorrect.\"\nassert solution(\"9\\n3 8 5 1\\n\") == \"Yes\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"Yes\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed for solution:\\n{input()}\\nExpected output: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n8 5 1\\n\") == \"Yes\\n\"\nassert solution(\"4\\n3 8 5 1\\n\") == \"No\\n\"\nassert solution(\"1\\n1 1\\n\") == \"Yes\\n\"\nassert solution(\"2\\n1 1 1\\n\") == \"No\\n\"\nassert solution(\"3\\n3 3 3\\n\") == \"Yes\\n\"\nassert solution(\"4\\n4 4 4\\n\") == \"No\\n\"\nassert solution(\"5\\n5 5 5\\n\") == \"No\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\nassert solution('3 3\\n1 7\\n3 2\\n1 8\\n') == '-1'\nassert solution('3 3\\n1 7\\n3 2\\n1 6\\n') == '-1'\nassert solution('3 3\\n1 7\\n3 2\\n1 5\\n') == '702'\nassert solution('3 3\\n1 7\\n3 2\\n1 4\\n') == '-1'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n1 9\\n3 2\\n1 8\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 9\") == \"800\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 8\") == \"-1\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7\\n') == '702'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 7\n3 2\n1 7\n''') == '''\n702\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"5 4\\n1 1\\n2 3\\n4 1\\n3 2\") == \"-1\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n2 5\") == \"256\\n\"\nassert solution(\"5 3\\n1 1\\n2 2\\n3 3\\n4 4\") == \"128\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 137
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702\\n'\n\nassert solution('3 1\\n1 8\\n3 2\\n1 7') == '-1\\n'\n\nassert solution('3 1\\n1 9\\n3 2\\n1 7') == '-1\\n'\n\nassert solution('3 3\\n1 0\\n3 2\\n1 7') == '-1\\n'\n\nassert solution('3 3\\n1 0\\n3 2\\n1 0') == '-1\\n'",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == '9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"9\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == \"9\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"10 5\") == \"25\"\nassert solution(\"3 5\") == \"11\"\nassert solution(\"8 1\") == \"4\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"5 3\") == \"11\"\nassert solution(\"6 4\") == \"8\"\nassert solution(\"1000000 1000000\") == \"10\"\nassert solution(\"1000000 500000\") == \"0\"\nassert solution(\"10000000 1\") == \"0\"\nassert solution(\"10000000 0\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 62
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"\nassert solution(\"5 10\") == \"4\\n(5,5,5),(5,6,6),(6,5,5),(6,6,6),(7,7,7),(8,8,8),(9,9,9) satisfy the condition.\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"1 4\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1011\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"01\"\nassert solution(2) == \"00\"\nassert solution(4) == \"010\"\nassert solution(1) == \"1\"\nassert solution(0) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"-9\") == \"1011\", \"Invalid input for the given constraints\"\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Output does not match the expected output.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9') == '1011'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == \"1011\"  # input: -9\n\nSolution:\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\", \"Test case 1 failed\"\nassert solution(\"12\") == \"1110\", \"Test case 2 failed\"\nassert solution(\"99999999999999999999\") == \"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 41,
        "num_ids_4": 1027
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1011\", \"Test case failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1011\"\nprint(\"Test passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"\nassert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of stores: \")) == \"12\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, f\"Incorrect output. Please check your code and try again.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\nassert solution(\"3 3\\n1 2\\n1 3\\n1 4\") == \"15\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nprint('All test cases passed!')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\nassert solution(\"10\\n10 5 10 15 10\\n20 20 20 20 20\\n30 30 30 30 30\") == \"3\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4 8 7 3\\n\") == \"2\\n\"\nassert solution(\"10\\n10 10 10 10 10\\n\") == \"3\\n\"\nassert solution(\"1000\\n1000 1000 1000 1000\\n\") == \"10\\n\"\nassert solution(\"1000\\n2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"1000\\n1000 1000 1000 1000\\n\") == \"10\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 124
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\nassert solution(\"5\\n10 5 8 7 3\") == \"1\\n\"\nassert solution(\"5\\n10 4 8 6 3\") == \"3\\n\"\nassert solution(\"5\\n10 4 8 7 4\") == \"1\\n\"\nassert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('1\\n2\\n3') == '0'\nassert solution('4\\n4') == '1'\nassert solution('3\\n3') == '2'\nassert solution('1\\n1\\n1') == '2'",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n10 5 8 7 3\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"5\\n10 5 8 7 4\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n10 5 8 7 5\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(\"5\\n10 5 8 7 6\") == \"3\\n\", \"Test case 5 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2\\n', 'Test case failed.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"Test case 1 failed\"\nassert solution() == \"2\", \"Test case 2 failed\"\nassert solution() == \"0\", \"Test case 3 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == 1\nassert solution(\"5 3\\n1 2 3 4 5\") == 2\nassert solution(\"5 3\\n1 2 3 3 3\") == 0\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"This function has not been implemented\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Expected output: 3, but got: {}\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == 'Output\\n3\\n'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3\\n\\n7 5\\n3 3 2 1 1 1 3\\n\\n\\n') == '3\\n'\nassert solution('7 5\\n3 3 2 1 1 1 3\\n\\n\\n\\n') == '4\\n'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abba\") == \"abba\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaa\") == \"aaa\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"Output: 3\\n\"\nassert solution(stdin=\"6 5\\n1 2 2 4 2 3\\n\") == \"Output: 3\\n\"\nassert solution(stdin=\"7 5\\n3 3 2 1 1 1 3\\n\") == \"Output: 4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output', 'Incorrect solution!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"The output is {solution(stdin)}, but the expected output is {expected_output}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"\n\nfrom typing import List",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000\\n') == '10\\n9\\n1000\\n42000000000000\\n'\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = int(input())\n    b = int(input())\n    q = int(input())\n\n    for i in range(q):\n        n_i = int(input())\n        a_i = int(input())\n        b_i = int(input())\n        \n        cost_first_type = a_i\n        cost_second_type = b_i\n        \n        min_cost = float('inf')\n        min_cost_first_type = -1\n        min_cost_second_type = -1\n\n        for cost in [cost_first_type, cost_second_type]:\n            cost_to_buy = min(n_i, cost)\n            if cost_to_buy > 0:\n                min_cost = min(min_cost, cost_to_buy)\n                if cost_first_type == cost:\n                    min_cost_first_type = min(min_cost_first_type, cost_to_buy)\n                if cost_second_type == cost:\n                    min_cost_second_type = min(min_cost_second_type, cost_to_buy)\n\n        min_cost = min(min_cost, min(n_i - min(min_cost_first_type, min_cost_second_type), n_i))\n        \n        print(min_cost)",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == ''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\\n9\\n1000\\n42000000000000\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Wrong output! Received: {solution(stdin)}, Expected: {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''10\n9\n1000\n42000000000000'''\n\nassert solution() == '''10\n9\n1000\n42000000000000'''\n\nassert solution() == '''10\n9\n1000\n42000000000000'''\n\nassert solution() == '''10\n9\n1000\n42000000000000'''\n\nassert solution() == '''10\n9\n1000\n42000000000000'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2'\nassert solution('3 6\\n3 7 8\\n') == '1'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"5 6\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"10 5\\n1 1 1 1 1\") == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"Input 1 failed\"\nassert solution(\"1000 5\") == \"0\\n\", \"Input 2 failed\"\nassert solution(\"3 5\\n1 2 3\") == \"1\\n\", \"Input 3 failed\"\nassert solution(\"3 1\\n2 3 4\") == \"0\\n\", \"Input 4 failed\"\nassert solution(\"1000 1000\") == \"1\\n\", \"Input 5 failed\"\n\nprint(\"All Inputs are Passed!\")",
        "num_ids_2": 50,
        "num_ids_4": 104
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 6, 3, 4, 5) == 2, \"The ball will make a bounce at the coordinates 0, 3, 7 and 12, among which two are less than or equal to 6.\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"10 2\\n3 4 5\") == \"3\"\nassert solution(\"10 2\\n3 4 5\") == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2\\n'\nassert solution('1000000000 0\\n') == '1\\n'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"6 8\\n9 2 6 7 11\") == \"1\\n\"\nassert solution(\"9 9\\n100 100\") == \"1\\n\"\nassert solution(\"1000 1000\") == \"1\\n\"\nassert solution(\"1000000 1000000\") == \"1\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 90
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"4 6\\n5 4 3\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"5 6\\n5 3 4\") == \"0\\n\"\nassert solution(\"4 7\\n4 4 5 6\") == \"4\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes', \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nprint('All tests passed.')",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\nhoge\nenglish\nhoge\nenigma\n\"\"\") == \"Yes\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"4\\nhoge\\nEnglish\\nhoge\\nenigma\\n\") == \"Yes\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input: {input_data}, expected output: {expected_output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"No\\n\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhog\\nenigma\\n') == 'No'\nassert solution('4\\nhoge\\nenglish\\nhog\\nenigma\\n') == 'Yes'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"3\\nhappy\\nworld\\ngood\\n\") == \"Yes\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nhoge\\nenigma\\nhoge\\n\") == \"No\"\nassert solution(\"4\\nhoge\\nenglish\\nhoge\\n\") == \"Yes\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hoge\\nenigma\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\", \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"4 6\") == \"8\"\nassert solution(\"6 7\") == \"10\"\nassert solution(\"8 10\") == \"12\"\nassert solution(\"12 14\") == \"14\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\\n\"\nassert solution(\"1 2\") == \"6\\n\"\nassert solution(\"3 1\") == \"6\\n\"\nassert solution(\"5 6\") == \"10\\n\"\nassert solution(\"7 8\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6\\n'  # expected output\nassert solution('2 5') == '24\\n'  # expected output\nassert solution('1 2') == '2\\n'  # expected output\nassert solution('2 1') == '2\\n'  # expected output\nassert solution('3 4') == '12\\n'  # expected output",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test 1 failed\"\nassert solution(\"hello\") == \"hllllll\", \"Test 2 failed\"\nassert solution(\"abc\") == \"abcabc\", \"Test 3 failed\"\nassert solution(\"abbc\") == \"bbcba\", \"Test 4 failed\"\nassert solution(\"abcd\") == \"dcbabcd\", \"Test 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Correct!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"hello\") == \"xhelo\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test failed: expected output to be 'xxxxxxx', but got '{}' instead\".format(solution(\"sardine\"))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test case 1 failed: replace every character in S with x and print the result.\"\n\nassert solution(\"\") == \"\", \"Test case 2 failed: replace every character in S with x and print the result.\"\n\nassert solution(\"apple\") == \"aaplle\", \"Test case 3 failed: replace every character in S with x and print the result.\"\n\nassert solution(\"hello\") == \"hllllllo\", \"Test case 4 failed: replace every character in S with x and print the result.\"\n\nassert solution(\"abc\") == \"abc\", \"Test case 5 failed: replace every character in S with x and print the result.\"",
        "num_ids_2": 57,
        "num_ids_4": 121
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"banana\") == \"bbana\"\nassert solution(\"hello\") == \"helo\"\nassert solution(\"goodbye\") == \"goodbye\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"sardine\\n\") == \"xxxxxxx\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\", \"Test 1 Failed\"\nassert solution(\"5\\n1 2 3 1 3\") == \"No\\n\", \"Test 2 Failed\"\nassert solution(\"5\\n1 1 1 1 1\") == \"Yes\\n\", \"Test 3 Failed\"\nassert solution(\"5\\n1 3 2 2 2\") == \"No\\n\", \"Test 4 Failed\"\nassert solution(\"5\\n1 1 1 1 3\") == \"Yes\\n\", \"Test 5 Failed\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"\nassert solution(\"5\\n2 1 2 1 1\") == \"No\\n\"\nassert solution(\"5\\n3 2 1 2 1\") == \"No\\n\"\nassert solution(\"5\\n4 3 2 1 2\") == \"No\\n\"\nassert solution(\"5\\n5 4 3 2 1\") == \"Yes\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 1 1 3\\n') == 'Yes\\n'\nassert solution('5\\n2 3 1 1 3\\n') == 'No\\n'\nassert solution('5\\n3 2 1 1 3\\n') == 'No\\n'\nassert solution('5\\n1 2 2 1 3\\n') == 'No\\n'\nassert solution('5\\n2 1 1 2 3\\n') == 'Yes\\n'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(\"5\\n1 2 1 1 3\") == 'Yes'\nassert solution(\"1\\n2\\n1\\n1\\n1\") == 'No'\nassert solution(\"10\\n10 10 10 10 10\") == 'Yes'",
        "num_ids_2": 31,
        "num_ids_4": 80
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 1\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 2\") == \"No\"\nassert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 1\") == \"No\"\nassert solution(\"5\\n1 2 1 1 2\") == \"Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 1\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 1 1\\n2 1 1 1 1\\n3 1 1 1 1\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 1\\n2 1 1 1 1\\n3 1 1 1 1\\n4 1 1 1 1\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 1\\n2 1 1 1 1\\n3 1 1 1 1\\n4 1 1 1 1\\n5 1 1 1 1\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 141
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1900) == 100, \"Test failed for solution 1.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '100', \"The correct output is 100, but it's not.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1900\") == \"100\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1900\") == \"100\", \"Correct output for sample input 1900\"\nassert solution(\"2000\") == \"200\", \"Correct output for sample input 2000\"\nassert solution(\"3000\") == \"100\", \"Correct output for sample input 3000\"\nassert solution(\"4000\") == \"200\", \"Correct output for sample input 4000\"\nassert solution(\"5000\") == \"100\", \"Correct output for sample input 5000\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1900) == 100, \"Test failed: solution(1900) should return 100\"\nassert solution(1000) == 0, \"Test failed: solution(1000) should return 0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"tests/sample_input.txt\").read()) == \"9\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"5\\n10 10\\n10\") == \"90\\n\"\nassert solution(\"5\\n3 2\\n3\") == \"4\\n\"\nassert solution(\"5\\n10 5\\n10\") == \"180\\n\"\nassert solution(\"5\\n10 10\\n10\") == \"900\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"5\\n3 2\\n1 1\") == \"4\"\nassert solution(\"1\\n5 3\\n2 2\") == \"10\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"5\\n2 1\\n4 3\") == \"6\\n\"\nassert solution(\"10\\n10\") == \"10\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 64
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'3 2 10 20\\n8 15 13\\n16 22\\n') == 'No War'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"War\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"War\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"No War\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 18\") == \"War\"\n\nfrom typing import List",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"No War\", \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"No War\\n\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"War\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"4\\n4\\n10\\n\") == \"10\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"5\\n5\\n5\\n\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\", \"The correct answer is: 6\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\", \"Expected output: 6, but got: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"3\\n5\\n10\\n\") == \"7\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2\\n2\\n3\\n\\n') == '6\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 105
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\", \"Please implement the solution.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 2 3 4') == '1'\nassert solution('3\\n1 2 3 2') == '2'\nassert solution('3\\n1 2 3 2 4') == '3'\nassert solution('3\\n1 2 3 2 4 5') == '4'\nassert solution('3\\n1 2 3 2 4 5 6') == '5'\nassert solution('3\\n1 2 3 2 4 5 6 7') == '6'\nassert solution('3\\n1 2 3 2 4 5 6 7 8') == '7'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9') == '8'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10') == '9'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11') == '10'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12') == '11'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13') == '12'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14') == '13'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15') == '14'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16') == '15'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '16'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '17'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '18'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '19'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == '20'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == '21'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23') == '22'\nassert solution('3\\n1 2 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\n\nN = int(stdin.readline().strip())\nweights = list(map(int, stdin.readline().strip().split()))\n\nT = 2\nsum_weights_1 = sum(weights[:T])\nsum_weights_2 = sum(weights[T:])\n\ndiff = abs(sum_weights_1 - sum_weights_2)\nprint(diff)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'\\n3\\n1 2 3\\n') == b'0\\n'\nassert solution(b'\\n4\\n1 2 3 4\\n') == b'2\\n'\nassert solution(b'\\n5\\n1 2 3 4 5\\n') == b'2\\n'\nassert solution(b'\\n10\\n1 2 3 4 5 6 7 8 9 10\\n') == b'15\\n'\nassert solution(b'\\n100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == b'159\\n'",
        "num_ids_2": 52,
        "num_ids_4": 123
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '0\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('2\\n1 2 3\\n') == '3\\n'\nassert solution('3\\n2 1 3\\n') == '3\\n'\nassert solution('2\\n1 2 3\\n') == '3\\n'\nassert solution('3\\n2 1 3\\n') == '3\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 130
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\\n4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '6'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'",
        "num_ids_2": 187,
        "num_ids_4": 266
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 6\nassert solution == 0\nassert solution == 2",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3 3\n3 2 1\n1 2 3\n4 5 6) == 6\nassert solution(4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12) == 0\nassert solution(3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12) == 2",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\"\n",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\"\nassert solution(\"2\\n1 100\\n\") == \"99\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"99\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5\\n'\nassert solution('2\\n1 100') == '99\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"5\\n\"\nassert solution(2) == \"99\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n2\\n1 100\\n') == '5\\n'\nassert solution('2\\n1 100\\n') == '99\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\") == \"0\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"2\"\nassert solution(6) == \"2\"\nassert solution(7) == \"3\"\nassert solution(3) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1'\nassert solution(7) == '3'\nassert solution(6) == '2'\nassert solution(5) == '2'\nassert solution(1) == '0'\nassert solution(2) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1 0 1\") == \"2\"\nassert solution(\"6 0 1 1 1 0\") == \"2\"\nassert solution(\"7 1 1 1 1 0 1\") == \"3\"\nassert solution(\"3 0 0 0\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1, \"Test failed\"\nassert solution(7) == 0, \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1, \"Test failed for input 1\"\nassert solution(7) == 0, \"Test failed for input 7\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1, \"The function should return 1\"\nassert solution(7) == 0, \"The function should return 0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1, \"Test failed for solution(1)\"\nassert solution(7) == 0, \"Test failed for solution(7)\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"Test failed for solution 1.\"\nassert solution(7) == 0, \"Test failed for solution 7.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(['brie','soft', 'camembert','soft', 'goat','soft','muenster', 'asiago', 'hard', 'cheddar', 'hard', 'gouda', 'hard','swiss', 'hard']) == 3\nassert solution(['parmesan', 'hard', 'emmental', 'hard', 'edam', 'hard', 'colby', 'hard', 'gruyere', 'hard', 'asiago', 'hard']) == 4",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([b'9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\\n6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\\n']) == 3\nassert solution([b'6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\\n']) == 4",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output a single number.\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(9) == 3\nassert solution(6) == 4",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\", \"Incorrect output\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\", \"Incorrect output\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 3, \"The output of the solution should be 3.\"\n\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4, \"The output of the solution should be 4.\"\n\nassert solution(\"10\\nchocolate bar soft\\nketchup soft\\npancakes soft\\nstrawberries soft\\n\") == 0, \"The output of the solution should be 0.\"",
        "num_ids_2": 122,
        "num_ids_4": 169
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == 3\nassert solution(6) == 4",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\nswiss hard') == 3\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == 4",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution does not return the expected output. Input: {stdin}, Expected: {expected}, Output: {solution(stdin)}.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['brie','soft', 'camembert','soft', 'goat','soft','muenster', 'asiago', 'hard', 'cheddar', 'hard', 'gouda', 'hard','swiss', 'hard']) == 3, \"Incorrect output\"\nassert solution(['parmesan', 'hard', 'emmental', 'hard', 'edam', 'hard', 'colby', 'hard', 'gruyere', 'hard', 'asiago', 'hard']) == 4, \"Incorrect output\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 0 0 2\", \"Your function is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 0 0 2\"\nassert solution(10) == \"0 0 0 0 0 0 0 0 0 0\"\nassert solution(12) == \"0 0 0 0 1 0 1 0 0 0\"\nassert solution(15) == \"0 0 0 0 1 0 1 0 1 0\"\nassert solution(20) == \"0 0 0 0 1 0 1 0 1 0 1\"",
        "num_ids_2": 45,
        "num_ids_4": 103
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4 \\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test failed for {input}.\" for input, expected in [\n    (\n        \"\"\"4\n0 1 2 1\n3 2 1 1\"\"\",\n        \"\"\"1 0 0 2\"\"\",\n    ),\n    (\n        \"\"\"7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\"\"\",\n        \"\"\"0 0 0 1 0 2 4\"\"\",\n    ),\n]\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected output: '{expected}', got: '{solution(stdin)}'.\"\nfor stdin, expected in [\n    (\"4\\n0 1 2 1\\n3 2 1 1\\n\", \"1 0 0 2\\n\"),\n    (\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\", \"0 0 0 1 0 2 4\"),\n] as (input, expected):\n    assert solution(input) == expected, f\"Expected output: '{expected}', got: '{solution(input)}'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0 0 0 1 0 2 4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"Test 1\"\nassert solution(\"1\") == \"0\", \"Test 2\"\nassert solution(\"1\") == \"1\", \"Test 3\"\nassert solution(\"0\") == \"0\", \"Test 4\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == 0, \"Input should be 0\"\nassert solution(\"1\") == 1, \"Input should be 1\"\nassert solution(\"01\") == 0, \"Input should be 0\"\nassert solution(\"10\") == 1, \"Input should be 1\"\nassert solution(\"11\") == 1, \"Input should be 1\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == 0, \"Expected 0, got {} instead.\".format(solution(\"0\"))\nassert solution(\"1\") == 1, \"Expected 1, got {} instead.\".format(solution(\"1\"))\nassert solution(\"1\") == 1, \"Expected 1, got {} instead.\".format(solution(\"1\"))\nassert solution(\"0\") == 0, \"Expected 0, got {} instead.\".format(solution(\"0\"))",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\", \"The code is not correct\"\nassert solution(\"1\") == \"0\", \"The code is not correct\"\nassert solution(\"1\") == \"1\", \"The code is not correct\"\nassert solution(\"0\") == \"0\", \"The code is not correct\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\", \"Test Case 1 failed\"\nassert solution(\"1\") == \"1\", \"Test Case 2 failed\"\nassert solution(\"1\") == \"1\", \"Test Case 3 failed\"\nassert solution(\"0\") == \"0\", \"Test Case 4 failed\"\nassert solution(\"1\") == \"1\", \"Test Case 5 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\", \"The solution should return 0 for input '0'.\"\nassert solution(\"1\") == \"1\", \"The solution should return 1 for input '1'.\"\nassert solution(\"1\") == \"1\", \"The solution should return 1 for input '1'.\"\nassert solution(\"0\") == \"0\", \"The solution should return 0 for input '0'.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\\n\", \"Expected Yes, but got {}\".format(solution(\"1000 15 80\"))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 5 80\") == \"No\"\nassert solution(\"1000 100 80\") == \"No\"\nassert solution(\"1000 150 80\") == \"Yes\"\nassert solution(\"1000 200 80\") == \"Yes\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1001 15 80\") == \"No\"\nassert solution(\"1000 15 79\") == \"Yes\"\nassert solution(\"1000 16 80\") == \"No\"\nassert solution(\"1000 100 80\") == \"No\"\nassert solution(\"1000 101 80\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 20 120\") == \"No\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 10 10\") == \"No\"\nassert solution(\"1000 15 20\") == \"No\"\nassert solution(\"1000 15 50\") == \"Yes\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"27 38 19\\n12 28 21\\n13 11 10\") == \"No\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\") == \"No\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n84 97 66\\n7",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"5\") == \"No\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"",
        "num_ids_2": 132,
        "num_ids_4": 266
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n38\") == \"No\"\n",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"41 2\\n5 6\") == \"30\"\nassert solution(stdin=\"100 1\") == \"-1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('41 2\\n5 6\\n') == '30\\n'\nassert solution('41 2\\n6 6\\n') == '-1\\n'\nassert solution('42 2\\n5 6\\n') == '30\\n'\nassert solution('41 2\\n3 6\\n') == '-1\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n7 8\\n\") == \"-1\"\n\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\\n\") == \"29\"\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 117
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\\n\"\nassert solution(\"40 3\\n5 6\\n\") == \"-1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"1 0\") == \"-1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 55
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\\n\"\nassert solution(\"41 2\\n5 5\\n\") == \"30\\n\"\nassert solution(\"41 2\\n5 6\\n\") == \"-1\\n\"\nassert solution(\"41 2\\n5 6\\n\") == \"-1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '30\\n'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"10 2\\n3 4\") == \"-1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"1 1\\n2 1\\n\") == \"2\"\nassert solution(\"2 1\\n\") == \"-1\"\nassert solution(\"3 3\\n2 1\\n3 1\\n\") == \"3\"\nassert solution(\"4 2\\n2 3\\n\") == \"3\"\nassert solution(\"5 4\\n3 2\\n2 2\\n\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution(input())}.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"2 2\") == \"4\\n\"\nassert solution(\"2 3\") == \"6\\n\"\nassert solution(\"2 4\") == \"8\\n\"\nassert solution(\"2 5\") == \"10\\n\"\n\nassert solution(\"0 1\") == \"1\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"2 2\") == \"4\\n\"\nassert solution(\"3 3\") == \"9\\n\"\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"5 5\") == \"25\\n\"\n\nassert solution(\"0 2\") == \"2\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"2 2\") == \"4\\n\"\nassert solution(\"3 3\") == \"9\\n\"\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"5 5\") == \"25\\n\"\n\nassert solution(\"1 3\") == \"3\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"2 0\") == \"0\\n\"\nassert solution(\"3 3\") == \"9\\n\"\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"5 5\") == \"25\\n\"\n\nassert solution(\"2 3\") == \"6\\n\"\nassert solution(\"2 0\") == \"0\\n\"\nassert solution(\"3 1\") == \"3\\n\"\nassert solution(\"3 0\") == \"0\\n\"\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"5 5\") == \"25\\n\"\n\nassert solution(\"3 3\") == \"9\\n\"\nassert solution(\"3 0\") == \"0\\n\"\nassert solution(\"4 2\") == \"4\\n\"\nassert solution(\"4 0\") == \"0\\n\"\nassert solution(\"5 5\") == \"25\\n\"\n\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"4 0\") == \"0\\n\"\nassert solution(\"5 3\") == \"5\\n\"\nassert solution(\"5 0\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"2 10\") == \"10\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"2 2\") == \"2\\n\"\nassert solution(\"0 1\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"1 5\\n\") == \"15\\n\"\nassert solution(\"2 5\\n\") == \"100\\n\"\nassert solution(\"3 5\\n\") == \"200\\n\"\nassert solution(\"4 5\\n\") == \"300\\n\"\nassert solution(\"5 5\\n\") == \"300\\n\"\nassert solution(\"6 5\\n\") == \"400\\n\"\nassert solution(\"7 5\\n\") == \"500\\n\"\nassert solution(\"8 5\\n\") == \"600\\n\"\nassert solution(\"9 5\\n\") == \"700\\n\"\nassert solution(\"10 5\\n\") == \"800\\n\"\nassert solution(\"11 5\\n\") == \"900\\n\"\nassert solution(\"12 5\\n\") == \"1000\\n\"\nassert solution(\"13 5\\n\") == \"1100\\n\"\nassert solution(\"14 5\\n\") == \"1200\\n\"\nassert solution(\"15 5\\n\") == \"1300\\n\"\nassert solution(\"16 5\\n\") == \"1400\\n\"\nassert solution(\"17 5\\n\") == \"1500\\n\"\nassert solution(\"18 5\\n\") == \"1600\\n\"\nassert solution(\"19 5\\n\") == \"1700\\n\"\nassert solution(\"20 5\\n\") == \"1800\\n\"\nassert solution(\"21 5\\n\") == \"1900\\n\"\nassert solution(\"22 5\\n\") == \"2000\\n\"\nassert solution(\"23 5\\n\") == \"2100\\n\"\nassert solution(\"24 5\\n\") == \"2200\\n\"\nassert solution(\"25 5\\n\") == \"2300\\n\"\nassert solution(\"26 5\\n\") == \"2400\\n\"\nassert solution(\"27 5\\n\") == \"2500\\n\"\nassert solution(\"28 5\\n\") == \"2600\\n\"\nassert solution(\"29 5\\n\") == \"2700\\n\"\nassert solution(\"30 5\\n\") == \"2800\\n\"\nassert solution(\"31 5\\n\") == \"2900\\n\"\nassert solution(\"32 5\\n\") == \"3000\\n\"\nassert solution(\"33 5\\n\") == \"3100\\n\"\nassert solution(\"34 5\\n\") == \"3200\\n\"\nassert solution(\"35 5\\n\") == \"3300\\n\"\nassert solution(\"36 5\\n\") == \"3400\\n\"\nassert solution(\"37 5\\n\") == \"3500\\n\"\nassert solution(\"38 5\\n\") == \"3600\\n\"\nassert solution(\"39 5\\n\") == \"3700\\n\"\nassert solution(\"40 5\\n\") == \"3800\\n\"\nassert solution(\"41 5\\n\") == \"3900\\n\"\nassert solution(\"42 5\\n\") == \"4000\\n\"\nassert solution(\"43 5\\n\") == \"4100\\n\"\nassert solution(\"44 5\\n\") == \"4200\\n\"\nassert solution(\"45 5\\n\") == \"4300\\n\"\nassert solution(\"46 5\\n\") == \"4400\\n\"\nassert solution(\"47 5\\n\") == \"4500\\n\"\nassert solution(\"48 5\\n\") == \"4600\\n\"\nassert solution(\"49 5\\n\") == \"4700\\n\"\nassert solution(\"50 5\\n\") == \"4800\\n\"\nassert solution(\"51 5\\n\") == \"4900\\n\"\nassert solution(\"52 5\\n\") ==",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"The 5-th smallest integer that would make Ringo happy is 5.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '10'\nassert solution('2 5') == '20'\nassert solution('0 10') == '10'\nassert solution('1 10') == '20'\nassert solution('2 10') == '30'",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 2\") == \"3\\n\"\nassert solution(\"2 0\") == \"5\\n\"\nassert solution(\"1 0\") == \"3\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"3 2\") == \"5\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"4 2\") == \"2\\n\"\nassert solution(\"1 1\") == \"2\\n\"\nassert solution(\"1 3\") == \"1\\n\"\nassert solution(\"0 3\") == \"3\\n\"\nassert solution(\"1 1\") == \"2\\n\"\nassert solution(\"2 3\") == \"5\\n\"\nassert solution(\"1 2\") == \"3\\n\"\nassert solution(\"2 3\") == \"5\\n\"\nassert solution(\"1 4\") == \"2\\n\"\nassert solution(\"2 4\") == \"4\\n\"\nassert solution(\"1 4\") == \"2\\n\"\nassert solution(\"3 3\") == \"3\\n\"\nassert solution(\"4 3\") == \"7\\n\"\nassert solution(\"5 3\") == \"11\\n\"\nassert solution(\"6 3\") == \"15\\n\"\nassert solution(\"7 3\") == \"19\\n\"\nassert solution(\"8 3\") == \"23\\n\"\nassert solution(\"9 3\") == \"27\\n\"\nassert solution(\"10 3\") == \"31\\n\"\nassert solution(\"11 3\") == \"35\\n\"\nassert solution(\"12 3\") == \"39\\n\"\nassert solution(\"13 3\") == \"43\\n\"\nassert solution(\"14 3\") == \"47\\n\"\nassert solution(\"15 3\") == \"51\\n\"\nassert solution(\"16 3\") == \"55\\n\"\nassert solution(\"17 3\") == \"59\\n\"\nassert solution(\"18 3\") == \"63\\n\"\nassert solution(\"19 3\") == \"67\\n\"\nassert solution(\"20 3\") == \"71\\n\"\nassert solution(\"21 3\") == \"75\\n\"\nassert solution(\"22 3\") == \"79\\n\"\nassert solution(\"23 3\") == \"83\\n\"\nassert solution(\"24 3\") == \"87\\n\"\nassert solution(\"25 3\") == \"91\\n\"\nassert solution(\"26 3\") == \"95\\n\"\nassert solution(\"27 3\") == \"99\\n\"\nassert solution(\"28 3\") == \"103\\n\"\nassert solution(\"29 3\") == \"107\\n\"\nassert solution(\"30 3\") == \"111\\n\"\nassert solution(\"31 3\") == \"115\\n\"\nassert solution(\"32 3\") == \"119\\n\"\nassert solution(\"33 3\") == \"123\\n\"\nassert solution(\"34 3\") == \"127\\n\"\nassert solution(\"35 3\") == \"131\\n\"\nassert solution(\"36 3\") == \"135\\n\"\nassert solution(\"37 3\") == \"139\\n\"\nassert solution(\"38 3\") == \"143\\n\"\nassert solution(\"39 3\") == \"147\\n\"\nassert solution(\"40 3\") == \"151\\n\"\nassert solution(\"41 3\") == \"155\\n\"\nassert solution(\"42 3\") == \"159\\n\"\nassert solution(\"43 3\") == \"163\\n\"\nassert solution(\"44 3\") == \"167\\n\"\nassert solution(\"45 3\") == \"171\\n\"\nassert solution(\"46 3\") == \"175\\n\"\nassert solution(\"47 3\") == \"179\\n\"\nassert solution(\"48 3\") == \"183\\n\"\nassert solution(\"49 3\") == \"187\\n\"\nassert solution(\"50 3\") ==",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"0 1\") == \"2\"\nassert solution(\"0 2\") == \"5\"\nassert solution(\"0 3\") == \"8\"\nassert solution(\"0 4\") == \"13\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 3\") == \"7\"\nassert solution(\"1 4\") == \"10\"\nassert solution(\"1 5\") == \"15\"\nassert solution(\"1 6\") == \"20\"\nassert solution(\"1 7\") == \"25\"\nassert solution(\"1 8\") == \"30\"\nassert solution(\"1 9\") == \"35\"\nassert solution(\"1 10\") == \"40\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"2 5\") == \"13\"\nassert solution(\"2 6\") == \"20\"\nassert solution(\"2 7\") == \"30\"\nassert solution(\"2 8\") == \"45\"\nassert solution(\"2 9\") == \"60\"\nassert solution(\"2 10\") == \"75\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"3 5\") == \"9\"\nassert solution(\"3 6\") == \"15\"\nassert solution(\"3 7\") == \"25\"\nassert solution(\"3 8\") == \"40\"\nassert solution(\"3 9\") == \"60\"\nassert solution(\"3 10\") == \"85\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"4 6\") == \"18\"\nassert solution(\"4 7\") == \"35\"\nassert solution(\"4 8\") == \"55\"\nassert solution(\"4 9\") == \"75\"\nassert solution(\"4 10\") == \"100\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"5 6\") == \"12\"\nassert solution(\"5 7\") == \"25\"\nassert solution(\"5 8\") == \"45\"\nassert solution(\"5 9\") == \"70\"\nassert solution(\"5 10\") == \"100\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"3\\n5 6 8\") == \"1\\n\"\nassert solution(\"3\\n7 4 8\") == \"2\\n\"\nassert solution(\"3\\n9 6 8\") == \"1\\n\"\nassert solution(\"3\\n7 6 1000000000\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\", \"Your code should return the maximum possible greatest common divisor of the N integers on the blackboard after your move.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('4\\n7 6 8') == '2'\nassert solution('5\\n7 6 8') == '3'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '2', \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3 1 2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\\n\") == \"3 1 2\"\n\nsolution(\"1\\n1\\n\") == \"1\"\n\nsolution(\"3\\nA_1 A_2 \\nA_3\\n\") == \"3 1 2\"\n\nsolution(\"1\\n1\\n\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nA_1 A_2 \\ldots A_N\") == \"3 1 2\"\nassert solution(\"4\\nA_1 A_2 \\ldots A_N\") == \"3 1 2\"\nassert solution(\"5\\nA_1 A_2 \\ldots A_N\") == \"2 1 3 4\"\nassert solution(\"6\\nA_1 A_2 \\ldots A_N\") == \"3 2 1 4\"\nassert solution(\"7\\nA_1 A_2 \\ldots A_N\") == \"4 1 2 3\"\nassert solution(\"8\\nA_1 A_2 \\ldots A_N\") == \"4 1 3 2\"\nassert solution(\"9\\nA_1 A_2 \\ldots A_N\") == \"5 1 2 3 4\"\nassert solution(\"10\\nA_1 A_2 \\ldots A_N\") == \"5 1 4 3 2\"",
        "num_ids_2": 52,
        "num_ids_4": 108
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nA_1 A_2 A_3') == '3 1 2'\nassert solution('5\\nA_1 A_2 A_3 A_4 A_5') == '5 4 3 2 1'\nassert solution('1\\nA_1') == '1'\nassert solution('3\\nA_1 A_2 A_3\\nA_4 A_5 A_6\\nA_7 A_8 A_9') == '3 1 2 4 5 6 7 8 9'\nassert solution('1\\nA_1\\nA_2 A_3\\nA_4 A_5\\nA_6 A_7 A_8\\nA_9\\nA_10\\nA_11') == '1 2 3 4 5 6 7 8 9 10 11'",
        "num_ids_2": 58,
        "num_ids_4": 128
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3 1 2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 4 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 5 4 3\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1 2 5 6 4 3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1 2 3 7 6 5 4\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"1 2 3 5 8 7 6 4\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3 1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\\n\") == \"3 1 2\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"Test 1 failed\"\nassert solution(\"1 2 3\") == \"0\\n\", \"Test 2 failed\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Test 3 failed\"\nassert solution
        "num_ids_2": 47,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\\n\", \"Test failed for sample input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"5 2 200\") == \"1\"\nassert solution(\"10 5 100\") == \"1\"\nassert solution(\"5 5 100\") == \"0\"\nassert solution(\"0 5 100\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9\\n'\nassert solution('1 2 3') == '0\\n'\nassert solution('4 5 6') == '0\\n'\nassert solution('1 2 4') == '0\\n'\nassert solution('1 2 3 4') == '0\\n'\nassert solution('10 1 10') == '10\\n'\nassert solution('1 2 3 4 5') == '0\\n'\nassert solution('1 2 3 4 5 6') == '0\\n'\nassert solution('1 2 3 4 5 6 7') == '0\\n'",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 5 10\") == \"11\"\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 107
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"100 1 1000\") == \"100\\n\"\nassert solution(\"5 1 5000\") == \"1000\\n\"\nassert solution(\"0 1 1000\") == \"0\\n\"\nassert solution(\"100 0 1000\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nprint(\"All tests passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"10 7 2\") == \"12\\n\"\nassert solution(\"100 7 3\") == \"100\\n\"\nassert solution(\"100000000 7 3\") == \"100000000\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"Solution should return the correct output.\"\nassert solution(\"9 7 100\") == \"9\\n\", \"Solution should return the correct output.\"\nassert solution(\"8 7 100\") == \"0\\n\", \"Solution should return the correct output.\"\nassert solution(\"10 6 100\") == \"0\\n\", \"Solution should return the correct output.\"\nassert solution(\"10 1 100\") == \"10\\n\", \"Solution should return the correct output.\"",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\\n\"\nassert solution(\"5 100\\n200 150 250 180 300\") == \"3\\n\"\nassert solution(\"6 300\\n250 200 300 350 280\") == \"2\\n\"\nassert solution(\"7 500\\n200 160 120 100 110\") == \"1\\n\"\nassert solution(\"8 500\\n200 160 120 100 110\") == \"1\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 144
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"4 50\\n100 150 150 150\") == \"2\"\nassert solution(\"4 30\\n100 150 150 100\") == \"1\"\nassert solution(\"5 150\\n150 140 100 200\") == \"0\"\nassert solution(\"1 100\\n100 100 100 100\") == \"0\"\nassert solution(\"1 100\\n100 100 100 100\") == \"0\"\n",
        "num_ids_2": 61,
        "num_ids_4": 122
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\nThe two of them can ride the roller coaster: the first and fourth friends.\\n\", \"Solution is not correct.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"3 100\\n150 140 100 200\") == \"1\"\nassert solution(\"4 500\\n150 140 100 200\") == \"0\"\nassert solution(\"3 500\\n150 140 100 200\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"\nassert solution(\"5 3\\n2 1\\n\") == \"No\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"4 3\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"3 1\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"3 1\\n5 5 2 1\\n\") == \"No\"\nassert solution(\"5 1\\n5 5 2 1\\n\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"4 5\\n10 15 20 30 40\\n\") == \"No\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 1\\n5 3 2 1\") == \"No\"\nassert solution(\"4 1\\n5 3 2 0\") == \"No\"\nassert solution(\"4 1\\n5 3 2 5\") == \"No\"\nassert solution(\"4 1\\n5 3 2 4\") == \"Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\nassert solution(\"4 2\\n5 4 2 1\") == \"No\\n\"\nassert solution(\"4 3\\n5 4 2 1\") == \"No\\n\"\nassert solution(\"4 4\\n5 4 2 1\") == \"No\\n\"\nassert solution(\"4 5\\n5 4 2 1\") == \"No\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 5\\n5 4 2 1\") == \"No\"\nassert solution(\"4 3\\n5 4 2 1\") == \"No\"\nassert solution(\"4 100\\n5 4 2 1\") == \"No\"\nassert solution(\"4 2\\n5 4 2 1\") == \"Yes\"\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\nassert solution(\"6 2\\n1 2 1 1 1\") == \"No\\n\"\nassert solution(\"4 1\\n1 1 1\") == \"No\\n\"\nassert solution(\"4 1\\n1 1 1 1 1\") == \"Yes\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 3 2\n..#\"\"\"), 5\nassert solution(\"\"\"2 1 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"3 2 3\n..#\n###\n2 2 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"5 3 2\n..#\n###\n1 1 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 4 1\n..#\n###\n2 2 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"2 2 3\n..#\n###\n1 1 2\n..#\n###\"\"\"), 5\nassert solution(\"\"\"2 1 2\n..#\n###\n1 1 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"2 3 2\n..#\n###\n1 1 1\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 1 1\n..#\n###\n2 2 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"3 2 3\n..#\n###\n2 2 1\n..#\n###\"\"\"), 5\nassert solution(\"\"\"2 1 1\n..#\n###\n2 2 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"2 2 1\n..#\n###\n2 2 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 1 1\n..#\n###\n1 1 3\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 1 1\n..#\n###\n2 2 1\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 1 1\n..#\n###\n2 2 2\n..#\n###\"\"\"), 5\nassert solution(\"\"\"1 1 1\n..#\n###\n2 2 2\n..#\n###\"\"\"), 5\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"  # expected output: \"5\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\\n\") == 5\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\nassert solution(\"3 3 3\\n.###\\n##..\\n\") == \"5\\n\"\nassert solution(\"3 3 1\\n..#\\n###\\n\") == \"1\\n\"\nassert solution(\"5 5 1\\n..#\\n###\\n\") == \"1\\n\"\nassert solution(\"4 4 1\\n..#\\n###\\n\") == \"1\\n\"\nassert solution(\"3 5 1\\n..#\\n###\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\\n\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\\n\\nFive choices below satisfy the condition.\\n - The 1-st row and 1-st column\\n - The 1-st row and 2-nd column\\n - The 1-st row and 3-rd column\\n - The 1-st and 2-nd column\\n - The 3-rd column\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2020 2040') == '2'\nassert solution(stdin='3 5') == '5'\nassert solution(stdin='1 3') == '5'\nassert solution(stdin='100 500') == '200'\nassert solution(stdin='1000000000 9999999999') == '9999999984'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"100 300\") == \"2\"\nassert solution(\"10 100\") == \"2\"\nassert solution(\"10 200\") == \"4\"\nassert solution(\"300 500\") == \"2\"\nassert solution(\"1 20\") == \"2\"",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"Your implementation of solution is incorrect. Please check if the conditions in the problem statement are satisfied.\"\nprint(\"AC\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"AbCdef\") == \"WA\"\nassert solution(\"aBcdef\") == \"WA\"\nassert solution(\"abcABC\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"AC\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"WA\"\nassert solution(\"Hello\") == \"WA\"\nassert solution(\"\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 55
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Hello\") == \"WA\"\nassert solution(\"abc\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AbCdEfG\") == \"WA\"\nassert solution(\"aBcDeFg\") == \"WA\"\nassert solution(\"z\") == \"WA\"\nassert solution(\"\") == \"WA\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1214\\n4\") == \"2\", \"The string S changes as follows: - Now: 1214 - After one day: 12214444 - After two days: 122221444444444444444 - After three days: 12222222214444444444444444444444444444444444444444444444444444444444444444\"\nassert solution(\"1214\\n100\") == \"1\", \"The string S changes as follows: - Now: 1214 - After one day: 12214444 - After two days: 122221444444444444444 - After three days: 1222222221444444444444444444444444444444444444444444444444444444444444444444\"\nassert solution(\"1214\\n500\") == \"12222\", \"The string S changes as follows: - Now: 1214 - After one day: 12214444 - After two days: 122221444444444444444 - After three days: 12222222214444444444444444444444444444444444444444444444444444444444444444\"\nassert solution(\"1214\\n1000\") == \"12222144444444444444444444444444444444444444444444444444444444444444444444\", \"The string S changes as follows: - Now: 1214 - After one day: 12214444 - After two days: 122221444444444444444 - After three days: 12222222214444444444444444444444444444444444444444444444444444444444444444\"\nassert solution(\"1214\\n1500\") == \"1222222221444444444444444444444444444444444444444444444444444444444444444444444444\", \"The string S changes as follows: - Now: 1214 - After one day: 12214444 - After two days: 122221444444444444444 - After three days: 12222222214444444444444444444444444444444444444444444444444444444444444444444\"\nassert solution(\"1214\\n2000\") == \"1222222221444444444444444444444444444444444444444444444444444444444",
        "num_ids_2": 312,
        "num_ids_4": 702
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1214\" == \"12214444\")\nassert solution(\"1214\" == \"122221444444444444444\")\nassert solution(\"1214\" == \"122222222144444444444444444444444444444444444444444444444444444444444444\")",
        "num_ids_2": 53,
        "num_ids_4": 137
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1214\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution
        "num_ids_2": 23,
        "num_ids_4": 1027
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1214\\n4\") == \"2\"\nassert solution(\"1111111111\\n1\") == \"1\"\nassert solution(\"1111111111\\n2\") == \"22\"\nassert solution(\"1111111111\\n3\") == \"333\"\nassert solution(\"1111111111\\n4\") == \"4444\"\nassert solution(\"1111111111\\n5\") == \"55555\"\nassert solution(\"1111111111\\n6\") == \"666666\"\nassert solution(\"1111111111\\n7\") == \"7777777\"\nassert solution(\"1111111111\\n8\") == \"88888888\"\nassert solution(\"1111111111\\n9\") == \"999999999\"\nassert solution(\"1111111111\\n10\") == \"10000000000\"\nassert solution(\"1111111111\\n11\") == \"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 38,
        "num_ids_4": 85
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1214\", \"4\") == \"2\"\nassert solution(\"1214\", \"5\") == \"12222\"\nassert solution
        "num_ids_2": 36,
        "num_ids_4": 1027
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
        "num_ids_2": 23,
        "num_ids_4": 1027
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"1214\", 100) == \"2\"\nassert solution(\"1214\", 10000000000000) == \"2\"",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1214\", 4) == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n6 1 2 3 4\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"5\\n1 4 5 2 3\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 1 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5 1\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5 2\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5 3\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"10\\n2 1 5 3 4 6 7 8 9\") == \"NO\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2 3 4 1\\n\") == \"YES\\n\", \"Test failed\"\nassert solution(\"5\\n5 3 4 1 2\\n\") == \"NO\\n\", \"Test failed\"\nassert solution(\"5\\n5 1 3 4 2\\n\") == \"YES\\n\", \"Test failed\"\nassert solution(\"5\\n5 2 3 4 2\\n\") == \"NO\\n\", \"Test failed\"\nassert solution(\"5\\n5 3 1 2 4\\n\") == \"YES\\n\", \"Test failed\"\nassert solution(\"5\\n5 4 1 2 3\\n\") == \"NO\\n\", \"Test failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\", \"The correct answer for the first example is 2.\"\nassert solution(\"6\") == \"1\", \"The correct answer for the second example is 1.\"\nassert solution(\"10000000000000000000000000000000000\") == \"33\", \"The correct answer for the third example is 33.\"\nassert solution(\"201920181\") == \"4\", \"The correct answer for the fourth example is 4.\"\n",
        "num_ids_2": 47,
        "num_ids_4": 135
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3121) == \"2\", \"The correct number of numbers divisible by 3 is 2.\"\nassert solution(6) == \"1\", \"The correct number of numbers divisible by 3 is 1.\"\nassert solution(1000000000000000000000000000000000000) == \"33\", \"The correct number of numbers divisible by 3 is 33.\"\nassert solution(201920181) == \"4\", \"The correct number of numbers divisible by 3 is 4.\"",
        "num_ids_2": 53,
        "num_ids_4": 149
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3121) == \"2\", \"The expected output is not found. Please check the problem statement.\"\nassert solution(6) == \"1\", \"The expected output is not found. Please check the problem statement.\"\nassert solution(10000000000000000000000000000000000) == \"33\", \"The expected output is not found. Please check the problem statement.\"\nassert solution(201920181) == \"4\", \"The expected output is not found. Please check the problem statement.\"",
        "num_ids_2": 51,
        "num_ids_4": 142
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3121\") == \"2\", \"Test 1\"\nassert solution(\"6\") == \"1\", \"Test 2\"\nassert solution(\"100000000000000000000000000000000\") == \"33\", \"Test 3\"\nassert solution(\"201920181\") == \"4\", \"Test 4\"",
        "num_ids_2": 33,
        "num_ids_4": 104
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 86
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"3\"\nassert solution() == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n2') == '2\\n'\nassert solution('3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n1') == '2\\n'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n1') == '0\\n'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n\\n3') == '3\\n'\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n1') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n1') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n1') == '2\\n'",
        "num_ids_2": 184,
        "num_ids_4": 273
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n3 13 37 39\\n4 0 0 0\\n1 2 3 4\\n3\\n1 2 -1 -6 -12 6\\n3\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n2\\n3\") == \"2\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n2\") == \"0\"\nassert solution(\"3\\n1 2 -1 -6 -12 6\\n3\") == \"3\"",
        "num_ids_2": 116,
        "num_ids_4": 174
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n2\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == 2\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n2\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == 2\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == 0\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == 3\n",
        "num_ids_2": 380,
        "num_ids_4": 821
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == \"Output\\n2\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\"",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Expected output: 2\"\nassert solution() == 2, \"Expected output: 2\"\nassert solution() == 0, \"Expected output: 0\"\nassert solution() == 3, \"Expected output: 3\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\\n\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 130
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"0\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 182
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == \"Output\\n2\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\"",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0', 'Testcase 1'\nassert solution() == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n', 'Testcase 2'\nassert solution() == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n', 'Testcase 3'\nassert solution() == '0\\n', 'Testcase 4'\nassert solution() == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n', 'Testcase 5'\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='Input') == 'Output'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('codefor?ces') == 5, \"Expected '5', got '{}'\".format(solution('codefor?ces'))\nassert solution('dodivthree') == 4, \"Expected '4', got '{}'\".format(solution('dodivthree'))\nassert solution('bambarbia') == 0, \"Expected '0', got '{}'\".format(solution('bambarbia'))\nassert solution('code??????') == 10, \"Expected '10', got '{}'\".format(solution('code??????'))",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '7 8\\n4 9\\n2 2\\n9 10\\n3 1'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution failed: {solution(input())}, expected {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\ncodeforces\\ndodivthree\\n\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\"\nassert solution(\"9\\nbambarbia\\nhellocode\\n\") == \"0\"\nassert solution(\"10\\ncode??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\ndef solution(stdin: str) -> str:pass\"",
        "num_ids_2": 97,
        "num_ids_4": 207
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('codeforces') == 5\nassert solution('dodivthree') == 5\nassert solution('bambarbia') == 0\nassert solution('hellocode') == 10\nassert solution('code??????') == 10",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"5\n7 8\n4 9\n2 2\n9 10\n3 1\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"You have successfully completed this problem. Here's the solution: \\n\" + \\\n\"The answer is: \\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\n4\\n1 1 1 1\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\n4\\n1 1 1 1\\n') == '2\\n3 4\\n1 1\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'",
        "num_ids_2": 151,
        "num_ids_4": 194
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check your code and try again.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\n",
        "num_ids_2": 89,
        "num_ids_4": 130
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"\n",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\"",
        "num_ids_2": 85,
        "num_ids_4": 114
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n7 7\\n2 3\\n4 5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n7\\n4 1 2 2 1 5 3\\n\\nInput\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nInput\\n4\\n1 1 1 1\\n\") == \"Output\\n3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"Input\\n7\\n4 1 2 2 1 5 3\\n\\nInput\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nInput\\n4\\n1 1 1 1\\n\") == \"Output\\n3\\n7 7\\n2 3\\n4 5\\n\"",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 88,
        "num_ids_4": 127
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"\n",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('6 11\\n45 1 10 12 11 7') == '7'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('4 2\\n2 78 4 10') == '12'",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed. Expected {output}, but got {solution(input)} instead.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == 7\nassert solution(\"4 2\\n2 78 4 10\") == 12\nassert solution(\"5 2\\n3 7 19 3 3\") == 0",
        "num_ids_2": 52,
        "num_ids_4": 75
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"",
        "num_ids_2": 25,
        "num_ids_4": 62
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Received: {solution(stdin=input())}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\\n\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\\n\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\\n\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n6 11\\n45 1 10 12 11 7\\n\\nInput\\n4 2\\n2 78 4 10\\n\\nInput\\n5 2\\n3 7 19 3 3\\n\\nOutput\\n7\\n\\nOutput\\n12\\n\\nOutput\\n0\") == \"7\\n12\\n0\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5\") == \"9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\"\nassert solution(\"4\\n1 2\\n-2 3\") == \"15\\n\"\nassert solution(\"4\\n1 2 3\\n-2 -3 4\") == \"19\\n\"\nassert solution(\"5\\n-5\\n10\") == \"30\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 90
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"Test failed: Expected {output_string}, but got {solution(input_string)}.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\nassert solution(\"2\\n3 5\\n\") == \"8\\n\"\nassert solution(\"3\\n2 6\\n\") == \"12\\n\"\nassert solution(\"3\\n1 5\\n\") == \"5\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"2\\n2 2\\n\") == \"4\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9'\nprint(\"All test cases passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 5\\n') == '9\\n'\nassert solution('3\\n1 2\\n') == '2\\n'\nassert solution('3\\n5 4\\n') == '7\\n'\nassert solution('3\\n-1 2\\n') == '2\\n'\nassert solution('3\\n4 5\\n') == '7\\n'",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\"\nprint(\"All tests passed!\")",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nprint(\"Correct\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\"\nassert solution(\"5 7 10 9 8\\n1 1 1 10\\n3 3 3 10\\n1 2 3 4\\n2 4 4 5\\n\") == \"180\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"24\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\"\nassert solution(\"5 7 10 9 8\\n1 1 1 10\\n3 3 3 10\\n1 2 3 4\\n2 4 4 5\\n\") == \"180\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"24\"",
        "num_ids_2": 110,
        "num_ids_4": 190
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"110\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"110\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n') == '110'\nassert solution('5 10 5\\n1 5 5 50\\n2 7 3 75\\n3 8 1 80\\n4 9 4 90\\n') == '1090'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\\n\"\nassert solution(\"5 7 0\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"0\\n\"\nassert solution(\"7 10 3\\n1 1 2 100\\n1 1 3 100\\n1 1 5 100\\n1 1 6 100\\n1 1 8 100\\n1 1 9 100\\n1 1 10 100\\n\") == \"1200\\n\"\nassert solution(\"5 6 0\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"0\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 259
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\"\nassert solution(\"5\\n1 4 6 3\\n2 1 2 3\\n\") == \"5\\n\"\nassert solution(\"6\\n1 4 6 3\\n2 1 2 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"4\\n1 4 6 3\\n2 1 2 3\\n3 1 2 3\\n4 1 2 3\\n\") == \"6\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 146
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4 6 3\") == \"5\\n\", \"Test failed\"\nassert solution(\"1 2 3 4\") == \"4\\n\", \"Test failed\"\nassert solution(\"1 4 6 7\") == \"0\\n\", \"Test failed\"\nassert solution(\"1 0 0 0\") == \"0\\n\", \"Test failed\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 4 6 3') == '5\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 1 failed.\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\", \"Test case 2 failed.\"\nassert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\", \"Test case 3 failed.\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"10\\n\", \"Test case 4 failed.\"\nassert solution(\"2\\n1 4\\n\") == \"0\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\", \"Test Case 1 failed\"\nassert solution(input()) == \"1\\n\", \"Test Case 2 failed\"\nassert solution(input()) == \"10\\n\", \"Test Case 3 failed\"\nassert solution(input()) == \"0\\n\", \"Test Case 4 failed\"\nassert solution(input()) == \"1000000000\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5', 'The maximum absolute difference of two elements is A_3-A_1=6-1=5'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\"\nassert solution(\"3\\n1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"6\\n1 1 1 1 1\\n\") == \"0\\n\"\nassert solution(\"1\\n1 1\\n\") == \"0\\n\"\nassert solution(\"5\\n10 -3 2 3 4\\n\") == \"5\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Input/Output not matched\"\nassert solution(\"4\\n\") == \"4\\n\", \"Test case 1\"\nassert solution(\"4\\n2 3 5 6\") == \"5\\n\", \"Test case 2\"\nassert solution(\"4\\n100 100 100 100\") == \"100\\n\", \"Test case 3\"\nassert solution(\"4\\n-1 -2 -3 -4\") == \"100\\n\", \"Test case 4\"\nassert solution(\"4\\n0 0 0 0\") == \"0\\n\", \"Test case 5\"",
        "num_ids_2": 48,
        "num_ids_4": 112
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4\\n1 4 6 3\") == \"5\\n\"\nassert solution(stdin=\"5\\n1 4 6 3 7\") == \"5\\n\"\nassert solution(stdin=\"6\\n1 4 6 3 7 2\") == \"5\\n\"\nassert solution(stdin=\"7\\n1 4 6 3 7 2 9\") == \"5\\n\"\nassert solution(stdin=\"8\\n1 4 6 3 7 2 9 8\") == \"5\\n\"\nassert solution(stdin=\"9\\n1 4 6 3 7 2 9 8 5\") == \"5\\n\"\nassert solution(stdin=\"10\\n1 4 6 3 7 2 9 8 5 4\") == \"5\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2.2761423749', 'Incorrect output'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.2761423749', 'Your solution is incorrect.'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\n\nassert solution(\"4\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\") == \"6.5841610446\"\n\nassert solution(\"6\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\") == \"12.9820346391\"\n\nassert solution(\"8\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\") == \"24.4438327154\"\n\nassert solution(\"10\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\\n101 0\\n102 0\\n103 0\\n104 0\\n105 0\\n106 0\\n107 0\\n108 0\\n109 0\\n110 0\\n111 0\\n112 0\\n113 0\\n114 0\\n115 0\\",
        "num_ids_2": 92,
        "num_ids_4": 314
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"1\\n1 0\\n1 1\\n1 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"4\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"10\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n0 1\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\"))\nassert solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\") == \"2.2761423749\\n\"\nprint(solution(\"3\\n0 0\\n1 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\"))",
        "num_ids_2": 76,
        "num_ids_4": 167
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"4\\n1 1\\n2 2\\n0 0\\n0 1\\n0 2\\n\") == \"3.7238576251\\n\"\nassert solution(\"5\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n\") == \"5.2761423749\\n\"\nassert solution(\"6\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n\") == \"6.8238576251\\n\"\nassert solution(\"7\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n\") == \"8.3761423749\\n\"\nassert solution(\"8\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n\") == \"9.9238576251\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 195
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n0 0\\n1 1\\n0 1\\n\") == \"1.1848985245\\n\"\nassert solution(\"1\\n0 0\\n1 1\\n0 1\\n\") == \"1.1848985245\\n\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"5\\n0 0\\n1 0\\n0 1\\n\") == \"1.1848985245\\n\"\nassert solution(\"4\\n0 0\\n1 0\\n0 1\\n\") == \"1.1848985245\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.2761423749', 'Incorrect output'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"20 3\") == \"6\"\nassert solution(\"100 200\") == \"120\"\nassert solution(\"200 100\") == \"120\"\nassert solution(\"1000 1000\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"5 3\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Invalid output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"12 4\") == \"4\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12 4') == '4', \"The expected output is 4, but the actual output is {}\".format(solution('12 4'))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"13 5\") == \"9\"\nassert solution(\"14 6\") == \"12\"\nassert solution(\"15 7\") == \"15\"\nassert solution(\"16 8\") == \"18\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output: 3\\n, but got: {}\".format(solution(stdin))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\", \"Test case not passing\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\", \"Test case 1 failed.\"\n\nassert solution(\"50000000\") == \"17\\nF(A,B) has a minimum value of 3 at (A,B)=(5000000,5000000).\\n\", \"Test case 2 failed.\"\n\nassert solution(\"1000000000\") == \"47\\nF(A,B) has a minimum value of 3 at (A,B)=(1000000000,1000000000).\\n\", \"Test case 3 failed.\"\n\nassert solution
        "num_ids_2": 116,
        "num_ids_4": 1024
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"3\", \"Error: Solution does not work as expected.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"3\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n\") == \"1\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1\\n3 2\") == \"2\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 2\") == \"3\\n\"\nassert solution(\"3 4\\n2 1\\n3\") == \"4\\n\"\nassert solution(\"3 4\\n2 1\\n3 2\") == \"5\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"1 2 3 4\") == \"0\\n\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 75
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\", \"The output should be 1, but it is {}\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2\\n2 3 2\") == \"1\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 142
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"0.5000000000\"  # Correct",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 0.5, \"There are four positive integers not greater than 4: 1, 2, 3, and 4. Among them, we have two odd numbers: 1 and 3. Thus, the answer is \\frac{2}{4} = 0.5.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == '0.5000000000\\n'\nassert abs(float(solution(4)) - 0.5) <= 1e-6",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == 0.5\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0.5000000000\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == '0.5000000000'\nassert solution(5) == '0.2500000000'\nassert solution(6) == '0.2500000000'\nassert solution(7) == '0.2500000000'\nassert solution(8) == '0.2500000000'\nassert solution(9) == '0.2500000000'\nassert solution(10) == '0.2500000000'\nassert solution(11) == '0.2500000000'\nassert solution(12) == '0.2500000000'\nassert solution(13) == '0.2500000000'\nassert solution(14) == '0.2500000000'\nassert solution(15) == '0.2500000000'\nassert solution(16) == '0.2500000000'\nassert solution(17) == '0.2500000000'\nassert solution(18) == '0.2500000000'\nassert solution(19) == '0.2500000000'\nassert solution(20) == '0.2500000000'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"0.5000000000\"  # your solution\nassert abs(abs(float(solution(4)) - 0.5) / 0.5) <= 1e-6  # check the absolute error",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.5000000000\\n', \"The correct output is '0.5000000000'\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"0.5000000000\\n\"\nassert solution(10) == \"0.0000000000\\n\"\nassert solution(1) == \"1.0000000000\\n\"\nassert solution(0) == \"0.0000000000\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n2\\n0\") == \"2\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2\\n'\n\nassert solution('''\n2\n1\n1\n2\n1 1\n1\n1 1\n1\n1 1\n''') == '1\\n'\n\nassert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n2\n1 1\n1\n1 1\n''') == '2\\n'\n\nassert solution('''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n2\n1 1\n1\n1 1\n1\n2 0\n''') == '3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2 1\\n1\\n1 1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2 0\\n1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Solution: {solution(input)}\\nOutput: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('2\\n1\\n1 1\\n1\\n2 1\\n1\\n2 0\\n') == '1'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 1\\n1\\n2 0\\n') == '1'",
        "num_ids_2": 72,
        "num_ids_4": 160
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\nassert solution(\"4\\n1\\n2 0\\n1\\n1 1\\n1\\n1 0\") == \"1\\n\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 0\") == \"2\\n\"\nassert solution(\"6\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0\\n",
        "num_ids_2": 72,
        "num_ids_4": 1027
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"\nassert solution(stdin=\"7\\nabc\") == \"abc\"\nassert solution(stdin=\"10\\nabc\") == \"abc\"\nassert solution(stdin=\"1\\nabc\") == \"abc\"\nassert solution(stdin=\"101\\nabc\") == \"abc\"",
        "num_ids_2": 43,
        "num_ids_4": 74
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...nikoandsolstice'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".format(\"nikoandsolstice\")\nprint(\"All tests passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice has a length of 15, which exceeds K=7.\"\nprint(\"Test passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...iksolstice\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoandsolstice has a length of 15, which exceeds K=7.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoandsolstice\"\nassert solution(\"8\\nhello\") == \"hello\"\nassert solution(\"9\\nhello\") == \"hello\"\nassert solution(\"10\\nhello\") == \"hello\"\nassert solution(\"11\\nhello\") == \"hello\"\nassert solution(\"12\\nhello\") == \"hello\"\nassert solution(\"13\\nhello\") == \"hello\"\nassert solution(\"14\\nhello\") == \"hello\"\nassert solution(\"15\\nhello\") == \"hello\"\nassert solution(\"16\\nhello\") == \"hello\"\nassert solution(\"17\\nhello\") == \"hello\"\nassert solution(\"18\\nhello\") == \"hello\"\nassert solution(\"19\\nhello\") == \"hello\"\nassert solution(\"20\\nhello\") == \"hello\"\nassert solution(\"21\\nhello\") == \"hello\"\nassert solution(\"22\\nhello\") == \"hello\"\nassert solution(\"23\\nhello\") == \"hello\"\nassert solution(\"24\\nhello\") == \"hello\"\nassert solution(\"25\\nhello\") == \"hello\"\nassert solution(\"26\\nhello\") == \"hello\"\nassert solution(\"27\\nhello\") == \"hello\"\nassert solution(\"28\\nhello\") == \"hello\"\nassert solution(\"29\\nhello\") == \"hello\"\nassert solution(\"30\\nhello\") == \"hello\"\nassert solution(\"31\\nhello\") == \"hello\"\nassert solution(\"32\\nhello\") == \"hello\"\nassert solution(\"33\\nhello\") == \"hello\"\nassert solution(\"34\\nhello\") == \"hello\"\nassert solution(\"35\\nhello\") == \"hello\"\nassert solution(\"36\\nhello\") == \"hello\"\nassert solution(\"37\\nhello\") == \"hello\"\nassert solution(\"38\\nhello\") == \"hello\"\nassert solution(\"39\\nhello\") == \"hello\"\nassert solution(\"40\\nhello\") == \"hello\"\nassert solution(\"41\\nhello\") == \"hello\"\nassert solution(\"42\\nhello\") == \"hello\"\nassert solution(\"43\\nhello\") == \"hello\"\nassert solution(\"44\\nhello\") == \"hello\"\nassert solution(\"45\\nhello\") == \"hello\"\nassert solution(\"46\\nhello\") == \"hello\"\nassert solution(\"47\\nhello\") == \"hello\"\nassert solution(\"48\\nhello\") == \"hello\"\nassert solution(\"49\\nhello\") == \"hello\"\nassert solution(\"50\\nhello\") == \"hello\"\nassert solution(\"51\\nhello\") == \"hello\"\nassert solution(\"52\\nhello\") == \"hello\"\nassert solution(\"53\\nhello\") == \"hello\"\nassert solution(\"54\\nhello\") == \"hello\"\nassert solution(\"55\\nhello\") == \"hello\"\nassert solution(\"56\\nhello\") == \"hello\"\nassert solution(\"57\\nhello\") == \"hello\"\nassert solution(\"58\\nhello\") == \"hello\"\nassert solution(\"59\\nhello\") == \"hello\"\nassert solution(\"60\\nhello\") == \"hello\"\nassert solution(\"61\\nhello\") == \"hello\"\nassert solution(\"62\\nhello\") == \"hello\"\nassert solution(\"63\\nhello\") == \"hello\"\nassert solution(\"64\\nhello\") == \"hello\"\nassert solution(\"65\\nhello\") == \"hello\"\nassert solution(\"66\\nhello\") == \"hello\"\nassert solution(\"67\\nhello\") == \"hello\"\nassert solution(\"68\\nhello\") == \"hello\"\nassert solution(\"69\\nhello\") == \"hello\"\nassert solution(\"70\\nhello\") == \"hello\"\nassert solution(\"71\\nhello\") == \"hello\"\nassert solution(\"72\\nhello\") == \"hello\"\nassert solution(\"73\\nhello\") == \"hello\"\nassert solution(\"74\\nhello\") == \"hello\"\nassert solution(\"75\\nhello\") == \"hello\"\nassert solution(\"76\\nhello\") == \"hello\"\nassert solution(\"77\\nhello\") == \"hello\"\nassert solution(\"78\\nhello\") == \"hello\"\nassert solution(\"79\\nhello\") == \"",
        "num_ids_2": 35,
        "num_ids_4": 62
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".encode()\nassert solution(\"10\\nhello\\n\") == \"hell...\".encode()\nassert solution(\"2\\nhello\\n\") == \"hel...\".encode()\nassert solution(\"10\\nnikoandsolstice\\n\") == \"nikoand...\".encode()\nassert solution(\"5\\n\".join(['a'] * 100).encode()) == \"\".encode()",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nk\"\nassert solution(\"2\\nabc\") == \"abc\"\nassert solution(\"3\\nabcd\") == \"abcd\"\nassert solution(\"4\\nabcd\") == \"abcd\"\nassert solution(\"5\\nabcd\") == \"abcd\"\nassert solution(\"6\\nabcd\") == \"abcd\"\nassert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"nikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand....\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution is incorrect.\"\nassert solution(\"banana\") == \"bananas\", \"The solution is incorrect.\"\nassert solution(\"cherry\") == \"cherries\", \"The solution is incorrect.\"\nassert solution(\"elephant\") == \"elephants\", \"The solution is incorrect.\"\nassert solution(\"grape\") == \"grapes\", \"The solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples', \"Expected 'apples', but got '{0}'\".format(solution('apple'))\nassert solution('banana') == 'bananas', \"Expected 'bananas', but got '{0}'\".format(solution('banana'))\nassert solution('cat') == 'cats', \"Expected 'cats', but got '{0}'\".format(solution('cat'))\nassert solution('dog') == 'dogs', \"Expected 'dogs', but got '{0}'\".format(solution('dog'))\nassert solution('elephant') == 'elephants', \"Expected 'elephants', but got '{0}'\".format(solution('elephant'))\nassert solution('fox') == 'foxes', \"Expected 'foxes', but got '{0}'\".format(solution('fox'))\nassert solution('giraffe') == 'giraffes', \"Expected 'giraffes', but got '{0}'\".format(solution('giraffe'))\nassert solution('hippopotamus') == 'hippopotamuses', \"Expected 'hippopotamuses', but got '{0}'\".format(solution('hippopotamus'))\nassert solution('lion') == 'lions', \"Expected 'lions', but got '{0}'\".format(solution('lion'))\nassert solution('man') =='men', \"Expected'men', but got '{0}'\".format(solution('man'))\nassert solution('mouse') =='mice', \"Expected'mice', but got '{0}'\".format(solution('mouse'))\nassert solution('rabbit') == 'rabbits', \"Expected 'rabbits', but got '{0}'\".format(solution('rabbit'))\nassert solution('rat') == 'rats', \"Expected 'rats', but got '{0}'\".format(solution('rat'))\nassert solution('snake') =='snakes', \"Expected'snakes', but got '{0}'\".format(solution('snake'))\nassert solution('tiger') == 'tigers', \"Expected 'tigers', but got '{0}'\".format(solution('tiger'))\nassert solution('truck') == 'trucks', \"Expected 'trucks', but got '{0}'\".format(solution('truck'))\nassert solution('wolf') == 'wolves', \"Expected 'wolves', but got '{0}'\".format(solution('wolf'))\nassert solution('zebra') == 'zebras', \"Expected 'zebras', but got '{0}'\".format(solution('zebra'))",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bannanas\"\nassert solution(\"kiwi\") == \"kiwiis\"\nassert solution(\"zebra\") == \"zebras\"\nassert solution(\"cherry\") == \"cherreries\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"orange\") == \"oranges\"\nassert solution(\"mango\") == \"mangos\"\nassert solution(\"pear\") == \"pears\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"apples\", \"Test failed. Expected: 'apples', got: '{}'.\".format(solution(\"apple\"))\nprint(\"Test passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\", \"The given Taknese word does not end with e, so its plural form is apples.\"\nassert solution(\"banana\") == \"bananas\", \"The given Taknese word ends with s, so its plural form is bananas.\"\nassert solution(\"bananas\") == \"bananas\", \"The given Taknese word ends with s, so its plural form is bananas.\"\nassert solution(\"carrot\") == \"carrots\", \"The given Taknese word does not end with s, so its plural form is carrots.\"\nassert solution(\"cucumber\") == \"cucumber\", \"The given Taknese word does not end with s, so its plural form is cucumber.\"",
        "num_ids_2": 67,
        "num_ids_4": 138
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bannans'\nassert solution('orange') == 'oranges'\nassert solution('banana_apple') == 'bannanas_apples'\nassert solution('a') == 'a'",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples', \"Test failed: Expected 'apples' but got '{}'\".format(solution('apple'))\nassert solution('banana') == 'bananas', \"Test failed: Expected 'bananas' but got '{}'\".format(solution('banana'))\nassert solution('orange') == 'oranges', \"Test failed: Expected 'oranges' but got '{}'\".format(solution('orange'))\nassert solution('grape') == 'grapes', \"Test failed: Expected 'grapes' but got '{}'\".format(solution('grape'))\nassert solution('pineapple') == 'pineapples', \"Test failed: Expected 'pineapples' but got '{}'\".format(solution('pineapple'))",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"5 2\\n2\\n1 3\\n2\\n3 1\\n3\") == \"1\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"5 2\\n1\\n1 2\\n2\\n2 3\\n3\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1 2\\n2\\n2 3\\n3\\n1\") == \"1\\n\"\nassert solution(\"4 2\\n2\\n1 2\\n2\\n1 3\\n3\\n2\") == \"2\\n\"\nassert solution(\"4 2\\n2\\n1 2\\n2\\n1 3\\n3\") == \"1\\n\"\nassert solution(\"5 2\\n2\\n1 2\\n2\\n1 3\\n3\\n1 4\\n4\") == \"2\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 133
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n', \"Please fill in the solution.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Invalid Input\"\nassert solution(\"\") == \"Invalid Input\"\nassert solution(\"3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\") == \"Invalid Input\"\nassert solution(\"3 2 3 3 3\") == \"Invalid Input\"\nassert solution(\"3 2\") == \"Invalid Input\"\nassert solution(\"3 2 1 3\") == \"Invalid Input\"\nassert solution(\"3 2 2 3 1\")",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3') == '1\\n'\nassert solution('5 5\\n1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution('3 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1\\n'",
        "num_ids_2": 57,
        "num_ids_4": 463
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1\\n'\nassert solution('1\\n') == '0\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\\n\", \"The solution is incorrect. Please check the code and sample input.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"The final number of slimes is 5.\"\nassert solution('') == \"The final number of slimes is 0.\"\nassert solution('1') == \"The final number of slimes is 0.\"\nassert solution('10\\n\\n') == \"The final number of slimes is 5.\"\nassert solution('10\\n\\n10') == \"The final number of slimes is 10.\"\nassert solution('10\\n\\n1010') == \"The final number of slimes is 15.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\\n\", \"The correct output should be '5\\n'.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5', \"The output is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nabbbbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\naabbbbaaca\\n\") == \"5\", \"Test case 1 failed\"\nassert solution(\"10\\nabababbaca\\n\") == \"4\", \"Test case 2 failed\"\nassert solution(\"10\\nbbbbbbaaca\\n\") == \"5\", \"Test case 3 failed\"\nassert solution(\"10\\ncababbaca\\n\") == \"4\", \"Test case 4 failed\"\nassert solution(\"10\\ndabbaaca\\n\") == \"4\", \"Test case 5 failed\"\nassert solution(\"10\\neeeeeaaaca\\n\") == \"5\", \"Test case 6 failed\"\nassert solution(\"10\\nfghhhhhhhh\\n\") == \"2\", \"Test case 7 failed\"\nassert solution(\"10\\nghijjhhhhh\\n\") == \"2\", \"Test case 8 failed\"\nassert solution(\"10\\nhiiiiiigh\\n\") == \"2\", \"Test case 9 failed\"\nassert solution(\"10\\nijkkkkkkkk\\n\") == \"3\", \"Test case 10 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"10\\nbbbbabab\") == \"5\"\nassert solution(\"10\\nccccccc\") == \"6\"\nassert solution(\"10\\ndddddddd\") == \"6\"\nassert solution(\"10\\neeeeeeee\") == \"7\"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"The expected output is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"2\\n5 10 7\\n3\") == \"3\"\nassert solution(\"4\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n100 200 300 400 500\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 90
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n5 2 4\\n') == '3\\n'\nassert solution(stdin='5\\n7 11 13\\n') == '3\\n'\nassert solution(stdin='3\\n10 10 10\\n') == '3\\n'\nassert solution(stdin='5\\n1 2 3\\n') == '2\\n'\nassert solution(stdin='3\\n5 2 4\\n') == '3\\n'",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 2 4\\n\") == \"3\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n5 2 4\\n') == '3\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n5 2 4') == '3'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"6\\n2 4 8\") == \"3\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9\") == \"4\\n\"\nassert solution(\"1000000000\\n0\") == \"0\\n\"\nassert solution(\"1000000000\\n2\") == \"0\\n\"\nassert solution(\"1000000000\\n1000000000\") == \"3\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 94
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"5 0 2 4\") == \"4\"\nassert solution(\"10 3 -1 5\") == \"10\"\nassert solution(\"10 3 -1 5 7\") == \"21\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\nassert solution(\"1 1 1 1\") == \"2\\n\"\nassert solution(\"3 3 3 3\") == \"3\\n\"\nassert solution(\"3 3 3 1\") == \"4\\n\"\nassert solution(\"1 0 0 1\") == \"1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 2 3\") == \"1\"\nassert solution(\"3 1 1 3\") == \"1\"\nassert solution(\"5 1 1 3\") == \"3\"\nassert solution(\"3 1 1 2\") == \"2\"\nassert solution(\"3 1 1 1\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2 1 1 3\\n') == '2\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nprint(\"All test cases pass\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('5 4') == 'No'\nassert solution('1 2') == 'No'\nassert solution('0 0') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\nassert solution(\"5 1\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"3 6\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 5\") == \"No\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 5') == 'Yes'\nassert solution('3 7') == 'No'\nassert solution('5 6') == 'Yes'\nassert solution('7 8') == 'Yes'\nassert solution('2 3') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 7\") == \"No\"\nassert solution(\"1 2\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\" # Test case 1\nassert solution(\"5 4\") == \"No\" # Test case 2\nassert solution(\"10 1\") == \"No\" # Test case 3\nassert solution(\"0 0\") == \"No\" # Test case 4\nassert solution(\"6 10\") == \"No\" # Test case 5\nassert solution(\"100 100\") == \"No\" # Test case 6\nassert solution(\"0 0\") == \"No\" # Test case 7\nassert solution(\"10 5\") == \"Yes\" # Test case 8\nassert solution(\"50 50\") == \"Yes\" # Test case 9\nassert solution(\"1000000000 1000000000\") == \"Yes\" # Test case 10",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n', \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == 2\nassert solution(\"3 3\\n1 2\\n2 3\\n\") == 0\nassert solution(\"2 2\\n1 2\\n1 3\\n2 3\\n\") == 0\nassert solution(\"5 5\\n1 2\\n1 3\\n2 3\\n2 4\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n3 4\\n3 5\\n4 5\\n\") == 0",
        "num_ids_2": 51,
        "num_ids_4": 193
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\na_1 b_1\\na_2 b_2\\n\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,3) == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Your code is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"18\", \"Your code is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"18\", \"The flavors of Apple 1, 2, 3, 4, and 5 are 2, 3, 4, 5, and 6, respectively. The optimal choice is to eat Apple 1, so the answer is 3+4+5+6=18.\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5 2\") == \"18\"\nassert solution(stdin=\"3 1\") == \"1\"\nassert solution(stdin=\"4 0\") == \"0\"\nassert solution(stdin=\"3 2\") == \"2\"\nassert solution(stdin=\"2 2\") == \"2\"\nassert solution(stdin=\"2 1\") == \"3\"\nassert solution(stdin=\"1 0\") == \"0\"\nassert solution(stdin=\"2 2\") == \"2\"\nassert solution(stdin=\"2 1\") == \"3\"\nassert solution(stdin=\"1 0\") == \"0\"\nassert solution(stdin=\"1 0\") == \"0\"\nassert solution(stdin=\"1 0\") == \"0\"\nassert solution(stdin=\"1 0\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 3\") == \"34\"\nassert solution(\"15 3\") == \"37\"\nassert solution(\"20 2\") == \"10\"\nassert solution(\"25 4\") == \"30\"\nassert solution(\"30 4\") == \"30\"\nassert solution(\"35 5\") == \"45\"\nassert solution(\"40 4\") == \"40\"\nassert solution(\"45 6\") == \"60\"\nassert solution(\"50 6\") == \"60\"\nassert solution(\"55 7\") == \"75\"\nassert solution(\"60 7\") == \"75\"\nassert solution(\"65 8\") == \"90\"\nassert solution(\"70 8\") == \"90\"\nassert solution(\"75 9\") == \"105\"\nassert solution(\"80 9\") == \"105\"\nassert solution(\"85 10\") == \"120\"\nassert solution(\"90 10\") == \"120\"\nassert solution(\"95 11\") == \"135\"\nassert solution(\"100 11\") == \"135\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5 2\") == \"18\"\nassert solution(stdin=\"10 3\") == \"40\"\nassert solution(stdin=\"15 4\") == \"75\"\nassert solution(stdin=\"17 5\") == \"100\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"15 4\") == \"18\"\nassert solution(\"20 5\") == \"21\"\nassert solution(\"25 6\") == \"24\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '18'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15\\n\") == \"60\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(15) == \"60\"\nprint(solution(15))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15) == \"60\", \"The sum of all numbers among the first 15 terms of the FizzBuzz sequence is 60.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(15) == \"60\", \"The first 15 terms of the FizzBuzz sequence are:\\n1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz\\nAmong them, numbers are 1,2,4,7,8,11,13,14, and the sum of them is 60.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(15) == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15) == 60, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15) == '60', \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"10 5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"5 3\\n1 2 3\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"6 5\\n4 -7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 -6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 -5\") == \"8\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\"\nassert solution(\"6 5\\n3 8 10 6 5\\n\") == \"7\"\nassert solution(\"6 5\\n4 9 10 6 5\\n\") == \"9\"\nassert solution(\"6 5\\n1 2 3 6 5\\n\") == \"1\"\nassert solution(\"6 5\\n4 6 5 6 5\\n\") == \"4\"\nassert solution(\"6 5\\n4 6 7 6 5\\n\") == \"4\"\n",
        "num_ids_2": 52,
        "num_ids_4": 103
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"1 2\\n3 4 5 6\") == \"1\"\nassert solution(\"5 7\\n4 2 1 3 5\") == \"4\"\nassert solution(\"3 4\\n1 2 3\") == \"1\"\nassert solution(\"100 100\\n1 2 3 4 5\") == \"1\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 76
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '8\\n'\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"3 2\\n1 1\\n\") == \"0\"\nassert solution(\"3 2\\n3 2\\n\") == \"1\"\nassert solution(\"3 2\\n3 1\\n\") == \"2\"\nassert solution(\"3 2\\n1 2\\n\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"3 2\\n1 2\") == \"2\"\nassert solution(\"3 2\\n2 3\") == \"3\"\nassert solution(\"3 2\\n3 4\") == \"4\"\nassert solution(\"3 2\\n1 1\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Incorrect output for sample input.\"\nprint(\"All test cases pass.\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Solution should return 1 for the given constraints and input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"3 1\\n1 1\\n\") == \"0\\n\"\nassert solution(\"3 2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n2 2\\n\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"  # expected output: 1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\"\nassert solution(\"7 4\\n3 7 5 1 10 3 20\\n1 2 3 4 5 6\\n\") == \"-1\"",
        "num_ids_2": 62,
        "num_ids_4": 106
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6\\n'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\n\nfrom typing import List",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\nassert solution(\"5 5\\n3 7 5 1 10 3 20\") == \"5\"\nassert solution(\"5 5\\n3 7 5 1 10 3 20\") == \"5\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"\nassert solution(\"5\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"5\\n3 7 5 1 10 3 20 10 5\") == \"-1\\n\"\nassert solution(\"5\\n3 7 5 1 10 3 20 10 10\") == \"6\\n\"\nassert solution(\"5\\n3 7 5 1 10 3 20 10 5 5 10 7 10\") == \"7\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 125
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1\\n'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1\\n'\n\nassert solution('''\n5 5\n*...\n*....\n..*...\n*...\n.....\n''') == '-1\\n'\n\nassert solution('''\n5 5\n*...\n*....\n..*...\n*...\n*...\n''') == '-1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****. \\n.**** \\n..**. \\n.....\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\") == \"-1\"\nassert solution(\"3 3\\n*.* \\n.*. \\n*.* \\n*.*\") == \"-1\"",
        "num_ids_2": 97,
        "num_ids_4": 156
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == 3\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == 3\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == -1\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == -1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"3\n3 4 1\n3 5 2\n3 5 1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"-1\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n') == '-1\\n'\nassert solution('3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n') == '-1\\n'",
        "num_ids_2": 296,
        "num_ids_4": 362
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n3 3\\n*.*\\n.*.\\n*.*\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '3\\n3 4 1\\n3 5 2\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*.\\n*.*\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1'",
        "num_ids_2": 187,
        "num_ids_4": 234
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n3 4 1\\n3 5 2\"\nassert solution() == \"-1\"\nassert solution() == \"2\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution() == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"",
        "num_ids_2": 30,
        "num_ids_4": 88
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\\n5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(stdin=\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(stdin=\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\"\nassert solution(stdin=\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\"",
        "num_ids_2": 201,
        "num_ids_4": 283
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 27
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\"\n",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aabc\") == 2\nassert solution(\"aaa\") == 3\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('good') == 0, \"Good string\"\nassert solution('aabc') == 2, \"Good string\"\nassert solution('aaa') == 3, \"Good string\"\nassert solution('') == 0, \"Empty string\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabc') == 'ab'\nassert solution('aaa') == 'def'\nassert solution('good') == 0\nassert solution('') == ''",
        "num_ids_2": 21,
        "num_ids_4": 36
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 2\\n3 4\\n5 3\\n\") == \"NO\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\n10100'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n2 3\") == \"YES\\n00010\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\\n10100\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 2\") == \"YES\\n101\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 2\\n1 3\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 2\\n1 3\\n1 4\") == \"YES\\n1010\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 5\") == \"YES\\n10100\"",
        "num_ids_2": 86,
        "num_ids_4": 190
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n10100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n\") == \"YES\\n01010\"\nassert solution(\"5 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"YES\\n01001\"\nassert solution(\"6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"NO\"\nassert solution(\"6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 2\\n\") == \"NO\"",
        "num_ids_2": 97,
        "num_ids_4": 182
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n1\\n1\\n4\\n3\\n1\\n6\\n1\\n') == 'YES\\n10100'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test cases failed. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 3\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4 \\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\\n10 7\\n11 7\\n12 7\\n13 7\\n14 7\\n15 7\\n16 7\\n17 7\\n18 7\\n19 7\\n20 7\\n21 7\\n22 7\\n23 7\\n24 7\\n25 7\\n26 7\\n27 7\\n28 7\\n29 7\\n30 7\\n31 7\\n32 7\\n33 7\\n34 7\\n35 7\\n36 7\\n37 7\\n38 7\\n39 7\\n40 7\\n41 7\\n42 7\\n43 7\\n44 7\\n45 7\\n46 7\\n47 7\\n48 7\\n49 7\\n50 7\\n51 7\\n52 7\\n53 7\\n54 7\\n55 7\\n56 7\\n57 7\\n58 7\\n59 7\\n60 7\\n61 7\\n62 7\\n63 7\\n64 7\\n65 7\\n66 7\\n67 7\\n68 7\\n69 7\\n70 7\\n71 7\\n72 7\\n73 7\\n74 7\\n75 7\\n76 7\\n77 7\\n78 7\\n79 7\\n80 7\\n81 7\\n82 7\\n83 7\\n84 7\\n85 7\\n86 7\\n87 7\\n88 7\\n89 7\\n90 7\\n91 7\\n92 7\\n93 7\\n94 7\\n95 7\\n96 7\\n97 7\\n98 7\\n99 7\\n100 7\\n\"\nassert solution(\"1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\\n10 7\\n11 7\\n12 7\\n13 7\\n14 7\\n15 7\\n16 7\\n17 7\\n18 7\\n19 7\\n20 7\\n21 7\\n22 7\\n23 7\\n24 7\\n25 7\\n26 7\\n27 7\\n28 7\\n29 7\\n30 7\\n31 7\\n32 7\\n33 7\\n34 7\\n35 7\\n36 7\\n37 7\\n38 7\\n39 7\\n40 7\\n41 7\\n42 7\\n43 7\\n44 7\\n45 7\\n46 7\\n47 7\\n48 7\\n49 7\\n50 7\\n51 7\\n52 7\\n53 7\\n54 7\\n55 7\\n56 7\\n57 7\\n58 7\\n59 7\\n60 7\\n61 7\\n62 7\\n63 7\\n",
        "num_ids_2": 57,
        "num_ids_4": 1027
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The function should return '{output}' but it returns '{solution(input())}'\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7') == '0\\n'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for the given input: {input}, expected output: {output}\" for input, output in [\n    (\n        \"\"\"\n        3 5\n        2 2\n        1 2\n        5 5\n        \"\"\",\n        \"\"\"\n        2\n        3 4\n        \"\"\"\n    ),\n    (\n        \"\"\"\n        1 7\n        1 7\n        \"\"\",\n        \"\"\"\n        0\n        \"\"\"\n    ),\n]",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed: expected output {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n1 1\\n1 5\\n5 5\\n1 1\\n\") == \"2\\n3 4\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 2\\n1 2\\n3 5\\n5 5\\n2 2\\n1 5\\n\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 142
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\"\nassert solution(\"1 7\\n1 7\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution({input()}) should return {expected}, but it returns {solution(input())}\"\nfor input_ in [4, 9, 2, 3, 1, 2, 4, 6, 5, 7, 8, 9]:\n    print(f\"Solution({input_}) = {solution(str(input_))}\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\", \"Solution should return the expected output.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"  # Expected Output: 2\nassert solution(\"5 10 3 2\") == \"5\\n\"  # Expected Output: 5\nassert solution(\"3 5 7 4\") == \"7\\n\"  # Expected Output: 7\nassert solution(\"6 8 9 1\") == \"9\\n\"  # Expected Output: 9",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 100 5 7\") == \"2\"\nassert solution(\"5 7 3 9\") == \"3\"\nassert solution(\"1 100000 100000 100000 100000\") == \"100000\"\nassert solution(\"2 -10 0 0\") == \"2\"\nassert solution(\"1 2 0 4\") == \"3\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 1 3 7\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 93
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"4 7 2 3\") == \"0\\n\"\nassert solution(\"5 7 2 3\") == \"2\\n\"\nassert solution(\"7 7 2 3\") == \"2\\n\"\nassert solution(\"8 7 2 3\") == \"2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 5 2 3\") == \"0\"\nassert solution(\"6 9 2 3\") == \"1\"\nassert solution(\"1 10 2 3\") == \"0\"\nassert solution(\"7 7 3 3\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"1 100 100000 1000000\") == \"5\\n7\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n5 and 7 satisfy the condition.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\" for i, (A, B, C, D) in enumerate(test_cases)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"987654321\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-123456789\") == \"No\"\nassert solution(\"12345678a\") == \"No\"\nassert solution(\"98765432a\") == \"No\"\nassert solution(\"1234567890\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456780\") == \"No\"\nassert solution(\"123456789012345678901234567890\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(123456789) == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Test failed.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\\n\", \"The sum of these digits is not a multiple of 9.\"\nassert solution(\"1000000000\") == \"Yes\\n\", \"The sum of these digits is not a multiple of 9.\"\nassert solution(\"1000000001\") == \"No\\n\", \"The sum of these digits is not a multiple of 9.\"\nassert solution(\"9999999999\") == \"No\\n\", \"The sum of these digits is not a multiple of 9.\"\nassert solution(\"0\") == \"No\\n\", \"The sum of these digits is not a multiple of 9.\"\nassert solution(\"1\") == \"Yes\\n\", \"The sum of these digits is not a multiple of 9.\"",
        "num_ids_2": 69,
        "num_ids_4": 139
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(123456789) == 'Yes', \"Solution does not work correctly\"\nassert solution(12) == 'No', \"Solution does not work correctly\"\nassert solution(12345678) == 'No', \"Solution does not work correctly\"\nassert solution(1234567890) == 'Yes', \"Solution does not work correctly\"\nassert solution(12345678901) == 'Yes', \"Solution does not work correctly\"",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"100001\") == \"0\"\nassert solution(\"5000\") == \"4\"\nassert solution(\"9999\") == \"1\"\nassert solution(\"1000000\") == \"1\"\nassert solution(\"1000001\") == \"1\"\nassert solution(\"1000002\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"127\\n\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('127') == '4', 'Test Case 1 failed'\nprint('Test Case 1 passed')\n\nassert solution('1000') == '0', 'Test Case 2 failed'\nprint('Test Case 2 passed')\n\nassert solution('50000') == '1', 'Test Case 3 failed'\nprint('Test Case 3 passed')\n\nassert solution('10000000') == '0', 'Test Case 4 failed'\nprint('Test Case 4 passed')\n\nassert solution('50000000') == '1', 'Test Case 5 failed'\nprint('Test Case 5 passed')",
        "num_ids_2": 39,
        "num_ids_4": 84
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"127\\n\") == \"4\\n\"\n\nThis is the correct solution. We need to find a number x that satisfies the given constraints. In the given constraints, x should be an integer.\n\nWe can use the following formula to find the number of operations:\n\nx = int(log_2(N))\n\nwhere N is the amount to be withdrawn.\n\nTo make it difficult for a bank to withdraw the same currency, we need to find a number x that satisfies the given constraints.\n\nIn our case, x should be an integer. We can simply start with 1, since we don't need to withdraw more than 1 currency.\n\nTo find x, we can use the following formula:\n\nx = int(log_2(N))\n\nwhere N is the amount to be withdrawn.\n\nTherefore, the answer to the problem is 4.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"127\") == \"4\", \"Incorrect output. Please fix the code.\"\nprint(\"All good!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\\ntokyo\\n\") == \"Yes\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('kyoto\\ntokyo') == 'Yes', \"Invalid Input\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\\ntoko\\n\") == \"Yes\"\n\nassert solution(\"hola\\nbla\\n\") == \"No\"\n\nassert solution(\"hello\\nworld\\n\") == \"No\"\n\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 33,
        "num_ids_4": 1025
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"kyoto\\ntokyo\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\"\nassert solution(\"hello\\nworld\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"abc\") == \"1\\n\", \"Test case 2 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"abc\") == \"1\\n\", \"Test case 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cabacc\") == \"1\\n\"\nassert solution(\"abc\") == \"0\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cabaccabc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abac\") == \"2\"\nassert solution(\"x\") == \"0\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\\n\", \"Solution should return 1\"\nassert solution(\"abc\") == \"1\\n\", \"Solution should return 1\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\\nabc\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1', 'Testcase 1'\nassert solution('abc') == '2', 'Testcase 2'\nassert solution('abca') == '3', 'Testcase 3'\nassert solution('abcc') == '3', 'Testcase 4'\nassert solution('xyx') == '2', 'Testcase 5'\nassert solution('abcde') == '2', 'Testcase 6'\nassert solution('abcdefg') == '5', 'Testcase 7'\nassert solution('a') == '0', 'Testcase 8'\nassert solution('') == '0', 'Testcase 9'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('cabaccabcabcabcabc') == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"Test failed\"\n\nHere's the code to solve the problem:\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"The K-th largest positive integer that divides both A and B should be 2.\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 12 2') == '2\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"The output should be 2.\"\nassert solution(\"8 12 3\") == \"3\", \"The output should be 3.\"\nassert solution(\"8 12 4\") == \"4\", \"The output should be 4.\"\nassert solution(\"8 12 5\") == \"5\", \"The output should be 5.\"\nassert solution(\"8 12 6\") == \"6\", \"The output should be 6.\"\nassert solution(\"8 12 7\") == \"7\", \"The output should be 7.\"\nassert solution(\"8 12 8\") == \"8\", \"The output should be 8.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Input 1 not correct\"\nassert solution(\"8 12 4\") == \"2\\n\", \"Input 2 not correct\"\nassert solution(\"8 12 1\") == \"2\\n\", \"Input 3 not correct\"\nassert solution(\"1 10 1\") == \"1\\n\", \"Input 4 not correct\"\nassert solution(\"1000000000 1000000000 5\") == \"2\\n\", \"Input 5 not correct\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 20 3\") == \"10\"\nassert solution(\"5 7 10\") == \"7\"\nassert solution(\"100 999 9999\") == \"9999\"\nassert solution(\"1 1 1\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1024') == '2020', \"The output is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1024) == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\", \"The correctness of the solution has not been verified.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"721\") == \"3544\"\nassert solution(\"100000000000\") == \"133160120\"\nassert solution(\"1000000000000000000000\") == \"133160120000\"\nassert solution(\"10000000000000000000000000\") == \"133160120000000000000000000\"",
        "num_ids_2": 31,
        "num_ids_4": 102
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1024\") == \"2020\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1024') == '2020'\nassert solution('4') == '4'\nassert solution('10') == '5'\nassert solution('50') == '10'\nassert solution('100') == '15'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1024\") == \"2020\", \"The correct answer is: 2020\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\", \"Invalid input\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 2\\n2 3\\n1 3\") == \"6\"\nassert solution(\"4\\n2 3\\n3 4\\n4 5\") == \"6\"",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 2 3\") == \"8\"\nassert solution(\"4\\n1 2 3 4\") == \"14\"\nassert solution(\"5\\n1 2 3 4 5\") == \"20\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"28\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"36\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"44\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"52\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"60\"",
        "num_ids_2": 32,
        "num_ids_4": 74
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 4') == '5\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 3\\n2 3\\n4 3\") == \"12\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\\n\"\nassert solution(\"3\\n1 2 3 4 5\\n\") == \"18\\n\"\nassert solution(\"2\\n1 3\\n\") == \"10\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"75\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"325\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\", \"The expected output is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\\n\"\nassert solution(\"3\\n5 7 9\\n\") == \"25\\n\"\nassert solution(\"5\\n1 2 3 4\\n\") == \"12\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n6\\n\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 92
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"\nassert solution(\"3 10\") == \"2 power strips, each with 3 sockets, extend the socket into 10 empty sockets.\\n\"\nassert solution(\"2 10\") == \"1 power strip, each with 2 sockets, extend the socket into 10 empty sockets.\\n\"\nassert solution(\"1 10\") == \"0 power strips.\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 119
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()}) should return {expected_output}, but got {solution(input())}.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\", \"Testcase failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"2\\n\"\nassert solution(stdin=\"SSRRCSS\") == \"2\\n\"\nassert solution(stdin=\"SSRRCSSR\") == \"2\\n\"\nassert solution(stdin=\"SSRRCSSRR\") == \"2\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == 2\nassert solution(\"CSR\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CSS\\nCSR\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SOS\") == \"1\"\nassert solution(\"CCSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CSS\\nCSR\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CSS\\nCSR\") == \"2\\n\"\nassert solution(\"CEH\\nCHI\") == \"1\\n\"\nassert solution(\"CLI\\nCMR\") == \"3\\n\"\nassert solution(\"CIS\\nCMN\") == \"0\\n\"\nassert solution(\"CIS\\nCMY\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CSS') == 2\nassert solution('CSR') == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test failed: the output is incorrect.\"\n\nprint(\"Test passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Invalid input\"\nassert solution(\"5\\n1 3 5 4 2 3\\n\") == \"2\\n\", \"Invalid input\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Invalid input\"\nassert solution(\"5\\n1 3 5 4 2 3 4\\n\") == \"2\\n\", \"Invalid input\"",
        "num_ids_2": 58,
        "num_ids_4": 118
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"The number of elements p_2 (1 < i < n) that satisfy the condition is not equal to 2.\"\nassert solution(input()) == \"1\", \"The number of elements p_1 (1 < i < n) that satisfy the condition is not equal to 1.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\\n\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5 4 2\\n\") == \"2\"\nassert solution(\"5\\n\") == \"0\"\nassert solution(\"4\\n\") == \"0\"\nassert solution(\"3 5 1\\n\") == \"2\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4 2\\n\") == \"0\"\nassert solution(\"5 1\\n\") == \"1\"\nassert solution(\"3 1\\n\") == \"1\"\nassert solution(\"2 1\\n\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n3 1 2 5 4\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 6\") == \"3\"\nassert solution(\"5\\n1 3 5 4 1\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 6\") == \"3\"\nassert solution(\"5\\n1 3 5 4 1\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test Case 1 Failed\"\nassert solution(\"5\\n1 3 5 4 6\") == \"0\\n\", \"Test Case 2 Failed\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test Case 3 Failed\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test Case 4 Failed\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\\nOutput\\n5.410\\n\\nInput\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nOutput\\n5.620\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nOutput\\n5.480\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nOutput\\n6.040\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nOutput\\n6.040\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '5.410\\n\\n5.620\\n\\n6.040\\n\\n6.720'",
        "num_ids_2": 625,
        "num_ids_4": 625
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410\\n'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620\\n'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480\\n'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n') == '6.040\\n'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.040\\n'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '6.720\\n'",
        "num_ids_2": 187,
        "num_ids_4": 359
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\\n\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\"",
        "num_ids_2": 185,
        "num_ids_4": 357
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5.410\"\nassert solution(input()) == \"5.620\"\nassert solution(input()) == \"5.480\"\nassert solution(input()) == \"6.040\"\nassert solution(input()) == \"6.720\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}\".format(input())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nInput\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\nOutput\n5.410\n\nInput\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\nOutput\n5.620\n\nInput\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\nOutput\n5.480\n\nInput\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\nOutput\n6.040\n\nInput\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\nOutput\n6.040\n\nInput\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\nOutput\n6.720\n\"\"\") == \"5.410\"\n\nassert solution(\"\"\"\nInput\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\nOutput\n5.620\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"\nInput\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\nOutput\n5.480\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"\nInput\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\nOutput\n6.040\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\nInput\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\nOutput\n6.040\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\nInput\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\nOutput\n6.720\n\"\"\") == \"6.720\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5.410'\nassert solution(input()) == '5.620'\nassert solution(input()) == '5.480'\nassert solution(input()) == '6.040'\nassert solution(input()) == '6.720'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == 5.410\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == 5.620\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == 5.480\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\") == 6.040\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\") == 6.040\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\") == 6.720\n",
        "num_ids_2": 177,
        "num_ids_4": 351
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == 4\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == 2\nassert solution('5 15\\n5 5 5 5 5\\n') == 1\nassert solution('5 16\\n5 5 5 5 5\\n') == 2\nassert solution('5 26\\n5 5 5 5 5\\n') == -1",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 8) == 4\nassert solution(7, 10) == 2\nassert solution(5, 15) == 1\nassert solution(5, 16) == 2\nassert solution(5, 26) == -1",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, \"The solution is incorrect. Please check the examples and hints provided.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == '4', 'Test 1'\nassert solution(str(input())) == '2', 'Test 2'\nassert solution(str(input())) == '1', 'Test 3'\nassert solution(str(input())) == '-1', 'Test 4'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([7, 3, 1, 3]) == \"1 2 3\\n\"\nassert solution([10, 4]) == \"7 3 1 3\\n\"\nassert solution([15, 2]) == \"1 1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == \"1 1\"",
        "num_ids_2": 73,
        "num_ids_4": 119
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([7, 3, 1, 3]) == \"1 2 3\"\nassert solution([10, 4]) == \"7 3 1 3\"\nassert solution([15, 2]) == \"1 1\"",
        "num_ids_2": 43,
        "num_ids_4": 59
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\\n\") == \"1 2 3\\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3\\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1\\n\"\n",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1') == '1 1\\n'",
        "num_ids_2": 77,
        "num_ids_4": 125
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 2 4 3 1\\n\") == \"1 2 3 \\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3 \\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1 \\n\"",
        "num_ids_2": 76,
        "num_ids_4": 126
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\\n\") == \"1 2 3\\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3\\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed.\"\nfor i in range(len(output())):\n    assert str(output()[i]) == str(i+1), \"Test failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n') == '1 1\\n'",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"7 3\\n1 2 3 2 4 3 1\\n10 4\\n1 3 1 3 10 3 7 7 12 3\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\nOutput\\n1 2 3\\n1 1\\n\") == \"1 2 3\\n1 1\\n\"\nassert solution(stdin=\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\nOutput\\n7 3 1 3\\n\") == \"7 3 1 3\\n\"\nassert solution(stdin=\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\nOutput\\n1 1\\n\") == \"1 1\\n\"\nassert solution(stdin=\"1 2 3\\n1 1\\n\") == \"1 2 3\\n1 1\\n\"\nassert solution(stdin=\"7 3\\n1 2 3 2 4 3 1\\n10 4\\n1 3 1 3 10 3 7 7 12 3\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\nOutput\\n\") == \"1 2 3\\n1 1\\n\"",
        "num_ids_2": 220,
        "num_ids_4": 314
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '0'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5\\n'\nassert solution('Input\\n2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0\\n'\nassert solution('Input\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3\\n'",
        "num_ids_2": 76,
        "num_ids_4": 113
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 106
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"5\"\nassert solution(2) == \"0\"\nassert solution(6) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == '0'\nassert solution(solution) == '0'\nassert solution(solution) == '0'\nassert solution(solution) == '0'\nassert solution(solution) == '0'\nassert solution(solution) == '8'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nxxxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nxiii\") == \"1\\n\"\nassert solution(\"5\\nxxoxx\") == \"0\\n\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"1\", \"The minimum number of characters to remove from the file name so after that the name does not contain \\\"xxx\\\" as a substring should be 1.\"\nassert solution(\"5\") == \"0\", \"The minimum number of characters to remove from the file name so after that the name does not contain \\\"xxx\\\" as a substring should be 0.\"\nassert solution(\"10\") == \"8\", \"The minimum number of characters to remove from the file name so after that the name does not contain \\\"xxx\\\" as a substring should be 8.\"",
        "num_ids_2": 82,
        "num_ids_4": 124
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"48\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 48, \"The area of the regular dodecagon inscribed in a circle of radius 4 is 48.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"48\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 48, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 48, \"The area of the regular dodecagon is 3 \\times 4^2 = 48.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"48\", \"The area of the regular dodecagon inscribed in a circle of radius 4 is 3 \\times 4^2 = 48.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"5\") == \"90\"\nassert solution(\"6\") == \"120\"\nassert solution(\"7\") == \"150\"\nassert solution(\"8\") == \"180\"\nassert solution(\"9\") == \"210\"\nassert solution(\"10\") == \"240\"\nassert solution(\"11\") == \"270\"\nassert solution(\"12\") == \"300\"\nassert solution(\"13\") == \"330\"\nassert solution(\"14\") == \"360\"\nassert solution(\"15\") == \"390\"\nassert solution(\"16\") == \"420\"\nassert solution(\"17\") == \"450\"\nassert solution(\"18\") == \"480\"\nassert solution(\"19\") == \"510\"\nassert solution(\"20\") == \"540\"\nassert solution(\"21\") == \"570\"\nassert solution(\"22\") == \"600\"\nassert solution(\"23\") == \"630\"\nassert solution(\"24\") == \"660\"\nassert solution(\"25\") == \"690\"\nassert solution(\"26\") == \"720\"\nassert solution(\"27\") == \"750\"\nassert solution(\"28\") == \"780\"\nassert solution(\"29\") == \"810\"\nassert solution(\"30\") == \"840\"\nassert solution(\"31\") == \"870\"\nassert solution(\"32\") == \"900\"\nassert solution(\"33\") == \"930\"\nassert solution(\"34\") == \"960\"\nassert solution(\"35\") == \"990\"\nassert solution(\"36\") == \"1020\"\nassert solution(\"37\") == \"1050\"\nassert solution(\"38\") == \"1080\"\nassert solution(\"39\") == \"1110\"\nassert solution(\"40\") == \"1140\"\nassert solution(\"41\") == \"1170\"\nassert solution(\"42\") == \"1200\"\nassert solution(\"43\") == \"1230\"\nassert solution(\"44\") == \"1260\"\nassert solution(\"45\") == \"1290\"\nassert solution(\"46\") == \"1320\"\nassert solution(\"47\") == \"1350\"\nassert solution(\"48\") == \"1380\"\nassert solution(\"49\") == \"1410\"\nassert solution(\"50\") == \"1440\"\nassert solution(\"51\") == \"1470\"\nassert solution(\"52\") == \"1500\"\nassert solution(\"53\") == \"1530\"\nassert solution(\"54\") == \"1560\"\nassert solution(\"55\") == \"1590\"\nassert solution(\"56\") == \"1620\"\nassert solution(\"57\") == \"1650\"\nassert solution(\"58\") == \"1680\"\nassert solution(\"59\") == \"1710\"\nassert solution(\"60\") == \"1740\"\nassert solution(\"61\") == \"1770\"\nassert solution(\"62\") == \"1800\"\nassert solution(\"63\") == \"1830\"\nassert solution(\"64\") == \"1860\"\nassert solution(\"65\") == \"1890\"\nassert solution(\"66\") == \"1920\"\nassert solution(\"67\") == \"1950\"\nassert solution(\"68\") == \"1980\"\nassert solution(\"69\") == \"2010\"\nassert solution(\"70\") == \"2040\"\nassert solution(\"71\") == \"2070\"\nassert solution(\"72\") == \"2100\"\nassert solution(\"73\") == \"2130\"\nassert solution(\"74\") == \"2160\"\nassert solution(\"75\") == \"2190\"\nassert solution(\"76\") == \"2220\"\nassert solution(\"77\") == \"2250\"\nassert solution(\"78\") == \"2280\"\nassert solution(\"79\") == \"2310\"\nassert solution",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\nassert solution(\"6 5\") == \"safe\\n\"\nassert solution(\"1 10\") == \"safe\\n\"\nassert solution(\"1 1\") == \"safe\\n\"\nassert solution(\"100 100\") == \"safe\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\", \"Sample Input does not pass the test.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 5\\n\") == \"unsafe\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"3 10\") == \"safe\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"unsafe\"\nassert solution(\"4 5\") == \"safe\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"6 1\") == \"safe\"\nassert solution(\"5 6\") == \"safe\"\nassert solution(\"1 1\") == \"safe\"\nassert solution(\"7 8\") == \"safe\"\nassert solution(\"100 20\") == \"unsafe\"\nassert solution(\"1 100\") == \"safe\"\nassert solution(\"100 1\") == \"safe\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"Solution is not correct\"\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('2 2 2') == '4'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '100'\nassert solution('2 3 4') == '6'\nassert solution('2 1 1') == '2'\nassert solution('1 1 2') == '2'\nassert solution('2 10 10') == '200'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"Test case failed!\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\", \"The area of the right triangle ABC with \u2220ABC=90\u00b0 is not 6.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6\\n', \"Incorrect solution\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 11 4\") == \"4\", \"Test Failed\" # should print \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 11 4\") == \"4\", \"The output of the function should be '4', but it is: {}\".format(solution(\"2 11 4\"))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 11 4\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('10 20 30') == '1'\nassert solution('0 0 0') == '0'\nassert solution('100 50 100') == '4'\nassert solution('1000 1000 1000') == '1'\nassert solution('1000 10000 10000') == '4'",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 5\") == \"3\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"5 5 5\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 10\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\", \"The solution should return 10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\", \"The code is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10\\n'\nassert solution('0 0') == '0\\n'\nassert solution('10 10') == '500\\n'\nassert solution('100 100') == '3628800\\n'\nassert solution('1000 1000') == '1774608000\\n'\n\nSolution:We have created a function called `solution` which takes a string as input. The function takes the input from the standard input and prints the value of A x B as an integer. We have used the assert statements to test the correctness of the solution.",
        "num_ids_2": 29,
        "num_ids_4": 71
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\\n\", \"Test case failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '10', \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Test 1 failed\"\nassert solution(\"4 5 7\") == \"12\\n\", \"Test 2 failed\"\nassert solution(\"5 5 7\") == \"15\\n\", \"Test 3 failed\"\nassert solution(\"6 5 7\") == \"18\\n\", \"Test 4 failed\"\nassert solution(\"7 5 7\") == \"21\\n\", \"Test 5 failed\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '10', 'Sample Output does not match the expected output.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"The output should be: 10\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\\n\", \"Expected output: 10\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\", \"Test Case Failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"500 600\") == \"OK\\n\"\nassert solution(\"7 500 600\") == \"OK\\n\"\nassert solution(\"500 601\") == \"NG\\n\"\nassert solution(\"7 501 600\") == \"NG\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"\n\nprint(\"Hello, World!\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1\\n1 1000\") == \"OK\"\nassert solution(\"4\\n500 500\") == \"NG\"\nassert solution(\"5\\n500 600\") == \"NG\"\nassert solution(\"6\\n500 600\") == \"OK\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'OK'\n\nprint('NG')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\"\nassert solution(\"10\\n3 10\\n\") == \"NG\"\nassert solution(\"10\\n500 600\\n\") == \"OK\"\nassert solution(\"100\\n3 100\\n\") == \"NG\"\nassert solution(\"100\\n500 600\\n\") == \"NG\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"10\\n100 200\") == \"OK\\n\"\nassert solution(\"2\\n100 300\") == \"NG\\n\"\nassert solution(\"5\\n100 300\") == \"OK\\n\"\nassert solution(\"3\\n500 600\") == \"NG\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"\nassert solution(\"5\\n100 200\\n\") == \"NG\\nThere are no multiples of 5 between 100 and 200.\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n500 600') == 'OK\\n'\nassert solution('5\\n500 600') == 'NG\\n'\nassert solution('6\\n500 600') == 'NG\\n'\nassert solution('7\\n500 600') == 'NG\\n'\nassert solution('7\\n500 599') == 'NG\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6666666667\\n', \"The output should be '2.6666666667', but got '{}'.\".format(solution('8 3'))\nprint(\"The solution passed the test.\")",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.6666666667\\n\", \"Test Case 1 failed\"\n\nassert solution() == \"2.6666666667\\n\", \"Test Case 2 failed\"\n\nassert solution() == \"2.6666666667\\n\", \"Test Case 3 failed\"\n\nassert solution() == \"2.6666666667\\n\", \"Test Case 4 failed\"\n\nassert solution() == \"2.6666666667\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"The output is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.6666666667\", \"The output should be equal to 2.6666666667\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8, 3) == \"2.6666666667\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is {solution(input())} but expected {output}.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2.6666666667'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"The output should be 2.6666666667.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nprint(\"All tests passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 3 2\") == \"0\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"5 10 5\") == \"10\"\nassert solution(\"10 10 10\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"5 2 1\") == \"2\"\nassert solution(\"10 20 20\") == \"0\"\nassert solution(\"9 1 5\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\", \"Test 1 failed\"\nassert solution(\"10 20 15\") == \"20\", \"Test 2 failed\"\nassert solution(\"1000000 2000000 1000000\") == \"1000000\", \"Test 3 failed\"\nassert solution(\"1000000 2000000 1000000\") == \"1000000\", \"Test 4 failed\"\nassert solution(\"6 4 3\") == \"1\", \"Test 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 132
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\"\nassert solution(\"9 10 5\") == \"4\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 2 3\") == \"3\\n\"\nassert solution(\"10 20 10\") == \"30\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('3 10 20') == '1'\nassert solution('100 0 100') == '100'\nassert solution('5 0 100') == '1'\nassert solution('5 100 0') == '1'\nassert solution('100 100 0') == '100'\nassert solution('10 10 10') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\\n2 1 3\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\") == \"2\\n\"\nassert solution(\"2\\n3 1 2\\n2 3 1\") == \"1\\n\"\nassert solution(\"3\\n2 1 3\\n1 2 3\") == \"3\\n\"\nassert solution(\"4\\n3 2 1 4\\n2 1 3 4\") == \"1\\n\"\nassert solution(\"5\\n3 1 2 4 5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"2\\n5 1 3 4 2\\n1 5 3 4 2\") == \"4\\n\"\nassert solution(\"5\\n2 3 1 4 5\\n3 1 2 4 5\") == \"4\\n\"\nassert solution(\"5\\n2 1 3 5 4\\n1 2 3 5 4\") == \"5\\n\"\nassert solution(\"5\\n4 1 3 5 2\\n1 4 3 5 2\") == \"5\\n\"\nassert solution(\"5\\n4 2 5 1 3\\n2 4 5 1 3\") == \"5\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 112
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n4 1 2 3\") == \"3\"\nassert solution(\"5\\n1 3 4 5 6\\n5 1 3 4 6\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8 9\\n6 1 2 3 4 5 7 8 9\") == \"3\"\nassert solution(\"7\\n1 3 5 7 9 11\\n7 1 3 5 9 11\") == \"3\"\nassert solution(\"8\\n1 3 6 8 10 12 14\\n8 1 3 6 10 12 14\") == \"3\"\nassert solution(\"9\\n1 2 4 6 8 10 12 14 16 18\\n9 1 2 4 6 8 10 12 14 18\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 132
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'\nassert solution('3\\n1 3 2\\n3 1 2') == '3\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 3 4 2\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 4 5\\n1 4 5 2 3\") == \"6\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 3 4 2\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 4 5\\n1 4 5 2 3\") == \"6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 116
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 4\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6\\n2 1 3 4 5 6\") == \"4\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n2 1 3 4 5 6 7\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n2 1 3 4 5 6 7 8\") == \"4\"",
        "num_ids_2": 56,
        "num_ids_4": 120
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\\n4 3 2\\n3 4 1\") == \"3\\n\"\nassert solution(\"2\\n1 2\\n2 1\\n3 2\\n2 3\") == \"3\\n\"\nassert solution(\"2\\n1 2\\n2 1\\n3 2\\n2 3\\n2 1\\n3 2\\n1 3\\n2 3\\n2 1\\n3 1\\n2 3\\n1 2\\n3 1\\n2 1\\n3 1\\n1 3\\n3 2\\n2 3\\n1 2\\n3 1\\n2 1\\n3 1\\n1 3\\n3 2\\n2 3\\n1 2\\n3 1\\n2 1\\n3 1\") == \"3\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 138
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == 3\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"ABCDGH\") == \"5\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == 3, \"Expected 3, but got {}\".format(solution(\"ATCODER\"))\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == \"9\", \"The output is incorrect. Expected '9', got '{}'\".format(solution(11))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\", \"Expected output '9', got '{}' instead.\".format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == \"9\", \"The number of positive integers less than or equal to 11 that have an odd number of digits is incorrect.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"1\") == \"0\"\nassert solution(\"9999999999\") == \"125\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 52
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\\n\", \"Your solution is incorrect. Please check the sample input and output.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 9, \"Expected 9, got {}\".format(solution(11))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\", \"Expected hottea, got {}\".format(solution(\"cupofcoffee\"))\nassert solution(\"cupofhottea\") == \"hottea\", \"Expected hottea, got {}\".format(solution(\"cupofhottea\"))\nprint(\"Test Passed\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\\ncupofhottea\") == \"4\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'hotofhotcoffee', \"Expected 'hotofhotcoffee', got '{}'.\".format(solution('cupofcoffee'))\nassert solution('cupofhottea') == 'hotofhottea', \"Expected 'hotofhottea', got '{}'.\".format(solution('cupofhottea'))",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('cupofcoffee') == 'hofcfop', \"The correct answer is: 'hofcfop', but the function returned: '{}'\".format(solution('cupofcoffee'))\n\nassert solution('cupofhottea') == 'huofothtea', \"The correct answer is: 'huofothtea', but the function returned: '{}'\".format(solution('cupofhottea'))\n\nprint(\"All tests passed!\")",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"cupofcoffee\\ncupofhottea\") == \"4\\n\", \"The correct output should be: 4\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"upofhottea\", \"The solution should be 'upofhottea'.\"\nassert solution(\"cupofhottea\") == \"upofhottea\", \"The solution should be 'upofhottea'.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('cupofcoffee') == 'hotteae', \"The given test case is incorrect\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"hufcfot\", \"Test failed\"\nassert solution(\"cupofhottea\") == \"tfotah\", \"Test failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'hottea'\nassert solution('cupofhottea') == 'hottea'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"hotcuptea\", \"Test case failed\"\nassert solution(\"cupofhottea\") == \"hottafe\", \"Test case failed\"\nassert solution(\"cuponut\") == \"pount\", \"Test case failed\"\nassert solution(\"catgirl\") == \"elrigr\", \"Test case failed\"\nassert solution(\"hello\") == \"olleh\", \"Test case failed\"",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\\n\", \"Invalid solution\"\nassert solution(\"2 7\") == \"6 7 8 9\\n\", \"Invalid solution\"\nassert solution(\"10 7\") == \"9\\n\", \"Invalid solution\"\nassert solution(\"5 1000000\") == \"1000000\\n\", \"Invalid solution\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5 6 7 8 9\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\", \"Input not correct\"\nassert solution(\"1 1\") == \"1\", \"Input not correct\"\nassert solution(\"2 1\") == \"1\", \"Input not correct\"\nassert solution(\"3 2\") == \"3 2\", \"Input not correct\"\nassert solution(\"4 3\") == \"3 2\", \"Input not correct\"\nassert solution(\"5 4\") == \"5 4\", \"Input not correct\"",
        "num_ids_2": 42,
        "num_ids_4": 78
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"\"\n\nX = int(input())\nK = int(input())\n\nstones = [int(stdin.readline().strip()) for _ in range(K)]\n\nfor stone in stones:\n    if stone == X:\n        black_stones = [x for x in range(X - 1000, X + 1000 + 1) if x not in stones and x % 2 == 1]\n        print(\" \".join(map(str, black_stones)))\n    else:\n        black_stones = [x for x in range(X - 1000, X + 1000 + 1) if x not in stones and x % 2 == 0]\n        print(\" \".join(map(str, black_stones)))",
        "num_ids_2": 22,
        "num_ids_4": 63
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 6 7 8 9 10\") == \"5 6 7 8 9\"\nassert solution(\"3 6 9 10 13\") == \"5 6 7 8 9\"",
        "num_ids_2": 26,
        "num_ids_4": 66
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"  # Test case 1: No input\nassert solution(\"1 2\\n\") == \"\"  # Test case 2: No input, only two lines\nassert solution(\"2 2\\n\") == \"\"  # Test case 3: No input, only two lines\nassert solution(\"1 5\\n\") == \"5\"  # Test case 4: Stone at coordinate 5\nassert solution(\"2 5\\n\") == \"5\"  # Test case 5: Stone at coordinate 5\nassert solution(\"100 5\\n\") == \"5\"  # Test case 6: Stone at coordinate 5\nassert solution(\"100 20\\n\") == \"2 4 6 8\"  # Test case 7: Three stones painted black, two coordinates that contain stones\nassert solution(\"5 5\\n\") == \"5 6\"  # Test case 8: Three stones painted black, one coordinate that contains stones\nassert solution(\"3 3\\n\") == \"1 2 3\"  # Test case 9: Three stones painted black, three coordinates that contain stones\nassert solution(\"3 5\\n\") == \"5 6 7\"  # Test case 10: Three stones painted black, all coordinates that contain stones\nassert solution(\"2 7\\n\") == \"7 8\"  # Test case 11: Three stones painted black, two coordinates that contain stones\nassert solution(\"4 6\\n\") == \"6 7\"  # Test case 12: Three stones painted black, two coordinates that contain stones\nassert solution(\"1 1\\n\") == \"1 2 3 4 5 6 7 8 9\"  # Test case 13: All coordinates that contain stones\nassert solution(\"10 100\\n\") == \"10 101 102 103 104 105 106 107 108 109\"  # Test case 14: Stone at coordinate 100\nassert solution(\"100 100\\n\") == \"100 101 102 103 104 105 106 107 108 109\"  # Test case 15: Stone at coordinate 100\nassert solution(\"1 1000001\\n\") == \"1000001\"  # Test case 16: Stone at coordinate 1000001\nassert solution(\"1000001 1000001\\n\") == \"1000001\"  # Test case 17: Stone at coordinate 1000001\nassert solution(\"1 1000001\\n\") == \"1000001\"  # Test case 18: Stone at coordinate 1000001\nassert solution(\"1000000 1000000\\n\") == \"1000001\"  # Test case 19: Stone at coordinate 1000000",
        "num_ids_2": 40,
        "num_ids_4": 92
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"5 6 7 8 9\\n\", \"Your solution is incorrect. Please check the constraints and format of the input.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 7') == '5 6 7 8 9', \"Test case 1: Solution should return '5 6 7 8 9'.\"\n\nassert solution('4 7') == '5 6 7 8 9', \"Test case 2: Solution should return '5 6 7 8 9'.\"\n\nassert solution('5 7') == '5 6 7 8 9', \"Test case 3: Solution should return '5 6 7 8 9'.\"\n\nassert solution('6 7') == '5 6 7 8 9', \"Test case 4: Solution should return '5 6 7 8 9'.\"\n\nassert solution('7 7') == '5 6 7 8 9', \"Test case 5: Solution should return '5 6 7 8 9'.\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"No\\n\"\nassert solution(\"30\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"50\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"60\") == \"Yes\"\nassert solution(\"40\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"No\", \"Expected output: No\"\nprint(\"All tests passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('25') == 'No', \"Expected 'No', got '{}'\".format(solution('25'))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(25) == 'No', \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(25) == \"Yes\\n\", \"Test 1 Failed\"\nassert solution(30) == \"No\\n\", \"Test 2 Failed\"\nassert solution(40) == \"No\\n\", \"Test 3 Failed\"\nassert solution(45) == \"Yes\\n\", \"Test 4 Failed\"\nassert solution(60) == \"No\\n\", \"Test 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='25') == 'Yes', 'Test failed'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"No\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(25) == 'No'\nassert solution(30) == 'Yes'\nassert solution(40) == 'Yes'\nassert solution(50) == 'Yes'\nassert solution(60) == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"4 3\\n-1 2\\n-3 4\\n-5 6\") == \"2\\n\"\nassert solution(\"5 4\\n3 2\\n1 4\\n2 5\") == \"3\\n\"\nassert solution(\"6 5\\n-1 3\\n0 5\\n4 7\") == \"4\\n\"\nassert solution(\"7 6\\n1 4\\n3 5\\n5 7\") == \"5\\n\"\nassert solution(\"8 7\\n-2 5\\n-4 6\\n-6 8\") == \"6\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 121
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n'\nassert solution() == '2\\n'\nassert solution() == '0\\n'\nassert solution() == '3\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2\n5 5\n1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2\n5 5\n1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2\n5 5\n1 1\n\"\"\") == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '1'\nassert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '0'\nassert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '0'\nassert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '0'\nassert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n10 10\") == \"1\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"377\") == \"Bad\"\nassert solution(\"37\") == \"Bad\"\nassert solution(\"3\") == \"Good\"\nassert solution(\"12345\") == \"Good\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3776') == 'Good', 'The solution is incorrect'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Bad\", \"Test failed\"\nassert solution(\"1234\") == \"Good\", \"Test failed\"\nassert solution(\"12345\") == \"Good\", \"Test failed\"\nassert solution(\"123456\") == \"Good\", \"Test failed\"\nassert solution(\"1234567\") == \"Good\", \"Test failed\"\nassert solution(\"12345678\") == \"Good\", \"Test failed\"\nassert solution(\"123456789\") == \"Good\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"2222\") == \"Good\"\nassert solution(\"1111\") == \"Good\"\nassert solution(\"5555\") == \"Good\"\nassert solution(\"1234\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Good\", \"Test failed for '3776'.\"\nassert solution(\"3777\") == \"Good\", \"Test failed for '3777'.\"\nassert solution(\"3778\") == \"Good\", \"Test failed for '3778'.\"\nassert solution(\"3779\") == \"Good\", \"Test failed for '3779'.\"\nassert solution(\"3780\") == \"Good\", \"Test failed for '3780'.\"\nassert solution(\"3781\") == \"Good\", \"Test failed for '3781'.\"\nassert solution(\"3782\") == \"Good\", \"Test failed for '3782'.\"\nassert solution(\"3783\") == \"Good\", \"Test failed for '3783'.\"\nassert solution(\"3784\") == \"Good\", \"Test failed for '3784'.\"\nassert solution(\"3785\") == \"Good\", \"Test failed for '3785'.\"\nassert solution(\"3786\") == \"Good\", \"Test failed for '3786'.\"\nassert solution(\"3787\") == \"Good\", \"Test failed for '3787'.\"\nassert solution(\"3788\") == \"Good\", \"Test failed for '3788'.\"\nassert solution(\"3789\") == \"Good\", \"Test failed for '3789'.\"\nassert solution(\"3790\") == \"Good\", \"Test failed for '3790'.\"\nassert solution(\"3791\") == \"Good\", \"Test failed for '3791'.\"\nassert solution(\"3792\") == \"Good\", \"Test failed for '3792'.\"\nassert solution(\"3793\") == \"Good\", \"Test failed for '3793'.\"\nassert solution(\"3794\") == \"Good\", \"Test failed for '3794'.\"\nassert solution(\"3795\") == \"Good\", \"Test failed for '3795'.\"\nassert solution(\"3796\") == \"Good\", \"Test failed for '3796'.\"\nassert solution(\"3797\") == \"Good\", \"Test failed for '3797'.\"\nassert solution(\"3798\") == \"Good\", \"Test failed for '3798'.\"\nassert solution(\"3799\") == \"Good\", \"Test failed for '3799'.\"\nassert solution(\"3800\") == \"Good\", \"Test failed for '3800'.\"\nassert solution(\"3801\") == \"Good\", \"Test failed for '3801'.\"\nassert solution(\"3802\") == \"Good\", \"Test failed for '3802'.\"\nassert solution(\"3803\") == \"Good\", \"Test failed for '3803'.\"\nassert solution(\"3804\") == \"Good\", \"Test failed for '3804'.\"\nassert solution(\"3805\") == \"Good\", \"Test failed for '3805'.\"\nassert solution(\"3806\") == \"Good\", \"Test failed for '3806'.\"\nassert solution(\"3807\") == \"Good\", \"Test failed for '3807'.\"\nassert solution(\"3808\") == \"Good\", \"Test failed for '3808'.\"\nassert solution(\"3809\") == \"Good\", \"Test failed for '3809'.\"\nassert solution(\"3810\") == \"Good\", \"Test failed for '3810'.\"\nassert solution(\"3811\") == \"Good\", \"Test failed for '3811'.\"\nassert solution(\"3812\") == \"Good\", \"Test failed for '3812'.\"\nassert solution(\"3813\") == \"Good\", \"Test failed for '3813'.\"\nassert solution(\"3814\") == \"Good\", \"Test failed for '3814'.\"\nassert solution(\"3815\") == \"Good\", \"Test failed for '3815'.\"\nassert solution(\"3816\") == \"Good\", \"Test failed for '3816'.\"\nassert solution(\"3817\") == \"Good\", \"Test failed for '3817'.\"\nassert solution(\"3818\") == \"Good\", \"Test failed for '3",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"5432\") == \"Good\"\nassert solution(\"9876\") == \"Good\"\nassert solution(\"7654\") == \"Bad\"\nassert solution(\"0123\") == \"Bad\"\nassert solution(\"4567\") == \"Bad\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Good\", \"Test 1\"\nassert solution(\"3777\") == \"Good\", \"Test 2\"\nassert solution(\"3778\") == \"Good\", \"Test 3\"\nassert solution(\"3779\") == \"Good\", \"Test 4\"\nassert solution(\"3780\") == \"Good\", \"Test 5\"\nassert solution(\"3781\") == \"Good\", \"Test 6\"\nassert solution(\"3782\") == \"Good\", \"Test 7\"\nassert solution(\"3783\") == \"Good\", \"Test 8\"\nassert solution(\"3784\") == \"Good\", \"Test 9\"\nassert solution(\"3785\") == \"Good\", \"Test 10\"\nassert solution(\"3786\") == \"Good\", \"Test 11\"\nassert solution(\"3787\") == \"Good\", \"Test 12\"\nassert solution(\"3788\") == \"Good\", \"Test 13\"\nassert solution(\"3789\") == \"Good\", \"Test 14\"\nassert solution(\"3790\") == \"Good\", \"Test 15\"\nassert solution(\"3791\") == \"Good\", \"Test 16\"\nassert solution(\"3792\") == \"Good\", \"Test 17\"\nassert solution(\"3793\") == \"Good\", \"Test 18\"\nassert solution(\"3794\") == \"Good\", \"Test 19\"\nassert solution(\"3795\") == \"Good\", \"Test 20\"\nassert solution(\"3796\") == \"Good\", \"Test 21\"\nassert solution(\"3797\") == \"Good\", \"Test 22\"\nassert solution(\"3798\") == \"Good\", \"Test 23\"\nassert solution(\"3799\") == \"Good\", \"Test 24\"\nassert solution(\"3800\") == \"Good\", \"Test 25\"\nassert solution(\"3801\") == \"Good\", \"Test 26\"\nassert solution(\"3802\") == \"Good\", \"Test 27\"\nassert solution(\"3803\") == \"Good\", \"Test 28\"\nassert solution(\"3804\") == \"Good\", \"Test 29\"\nassert solution(\"3805\") == \"Good\", \"Test 30\"\nassert solution(\"3806\") == \"Good\", \"Test 31\"\nassert solution(\"3807\") == \"Good\", \"Test 32\"\nassert solution(\"3808\") == \"Good\", \"Test 33\"\nassert solution(\"3809\") == \"Good\", \"Test 34\"\nassert solution(\"3810\") == \"Good\", \"Test 35\"\nassert solution(\"3811\") == \"Good\", \"Test 36\"\nassert solution(\"3812\") == \"Good\", \"Test 37\"\nassert solution(\"3813\") == \"Good\", \"Test 38\"\nassert solution(\"3814\") == \"Good\", \"Test 39\"\nassert solution(\"3815\") == \"Good\", \"Test 40\"\nassert solution(\"3816\") == \"Good\", \"Test 41\"\nassert solution(\"3817\") == \"Good\", \"Test 42\"\nassert solution(\"3818\") == \"Good\", \"Test 43\"\nassert solution(\"3819\") == \"Good\", \"Test 44\"\nassert solution(\"3820\") == \"Good\", \"Test 45\"\nassert solution(\"3821\") == \"Good\", \"Test 46\"\nassert solution(\"3822\") == \"Good\", \"Test 47\"\nassert solution(\"3823\") == \"Good\", \"Test 48\"\nassert solution(\"3824\") == \"Good\", \"Test 49\"\nassert solution(\"3825\") == \"Good\", \"Test 50\"\nassert solution(\"3826\") == \"Good\", \"Test 51\"\nassert solution(\"3827\") == \"Good\", \"Test 52\"\nassert solution(\"3828\") == \"Good\", \"Test 53\"\nassert solution(\"3829\") == \"Good\", \"Test 54\"\nassert solution(\"3830\") ==",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\\n3.49999\\n3.49998\\n3.49997\\n3.49996\\n3.49995\\n3.49994\\n3.49993\\n3.49992\\n3.49991\\n3.49990\\n3.49989\\n3.49988\\n3.49987\\n3.49986\\n3.49985\\n3.49984\\n3.49983\\n3.49982\\n3.49981\\n3.49980\\n3.49979\\n3.49978\\n3.49977\\n3.49976\\n3.49975\\n3.49974\\n3.49973\\n3.49972\\n3.49971\\n3.49970\\n3.49969\\n3.49968\\n3.49967\\n3.49966\\n3.49965\\n3.49964\\n3.49963\\n3.49962\\n3.49961\\n3.49960\\n3.49959\\n3.49958\\n3.49957\\n3.49956\\n3.49955\\n3.49954\\n3.49953\\n3.49952\\n3.49951\\n3.49950\\n3.49949\\n3.49948\\n3.49947\\n3.49946\\n3.49945\\n3.49944\\n3.49943\\n3.49942\\n3.49941\\n3.49940\\n3.49939\\n3.49938\\n3.49937\\n3.49936\\n3.49935\\n3.49934\\n3.49933\\n3.49932\\n3.49931\\n3.49930\\n3.49929\\n3.49928\\n3.49927\\n3.49926\\n3.49925\\n3.49924\\n3.49923\\n3.49922\\n3.49921\\n3.49920\\n3.49919\\n3.49918\\n3.49917\\n3.49916\\n3.49915\\n3.49914\\n3.49913\\n3.49912\\n3.49911\\n3.49910\\n3.49909\\n3.49908\\n3.49907\\n3.49906\\n3.49905\\n3.49904\\n3.49903\\n3.49902\\n3.49901\\n3.49900\\n3.49899\\n3.49898\\n3.49897\\n3.49896\\n3.49895\\n3.49894\\n3.49893\\n3.49892\\n3.49891\\n3.49890\\n3.49889\\n3.49888\\n3",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\\n\"\nassert solution(\"3\\n4 5\\n\") == \"3.5\\n\"\nassert solution(\"3\\n6 7\\n\") == \"4.5\\n\"\nassert solution(\"3\\n8 9\\n\") == \"4.5\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1.0\\n\"\nassert solution(\"4\\n2 3 4 5\\n\") == \"6.0\\n\"\nassert solution(\"5\\n6 7 8 9\\n\") == \"6.0\\n\"\nassert solution(\"5\\n10 11 12 13\\n\") == \"12.0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.50001\\n3.49999\\n3.49998\\n3.49997\\n3.49996\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3 4\\n') == '3.5\\n'\nassert solution('4\\n1 2\\n3\\n') == '1.5\\n'\nassert solution('4\\n1 2\\n3\\n5\\n') == '5.0\\n'\nassert solution('10\\n2 3\\n1 4\\n') == '1.5\\n'",
        "num_ids_2": 45,
        "num_ids_4": 99
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 4') == '3.5\\n3.49999\\n3.49998\\n3.49997\\n3.49996\\n3.49995\\n3.49994\\n3.49993\\n3.49992\\n3.49991\\n3.49990\\n3.49989\\n3.49988\\n3.49987\\n3.49986\\n3.49985\\n3.49984\\n3.49983\\n3.49982\\n3.49981\\n3.49980\\n3.49979\\n3.49978\\n3.49977\\n3.49976\\n3.49975\\n3.49974\\n3.49973\\n3.49972\\n3.49971\\n3.49970\\n3.49969\\n3.49968\\n3.49967\\n3.49966\\n3.49965\\n3.49964\\n3.49963\\n3.49962\\n3.49961\\n3.49960\\n3.49959\\n3.49958\\n3.49957\\n3.49956\\n3.49955\\n3.49954\\n3.49953\\n3.49952\\n3.49951\\n3.49950\\n3.49949\\n3.49948\\n3.49947\\n3.49946\\n3.49945\\n3.49944\\n3.49943\\n3.49942\\n3.49941\\n3.49940\\n3.49939\\n3.49938\\n3.49937\\n3.49936\\n3.49935\\n3.49934\\n3.49933\\n3.49932\\n3.49931\\n3.49930\\n3.49929\\n3.49928\\n3.49927\\n3.49926\\n3.49925\\n3.49924\\n3.49923\\n3.49922\\n3.49921\\n3.49920\\n3.49919\\n3.49918\\n3.49917\\n3.49916\\n3.49915\\n3.49914\\n3.49913\\n3.49912\\n3.49911\\n3.49910\\n3.49909\\n3.49908\\n3.49907\\n3.49906\\n3.49905\\n3.49904\\n3.49903\\n3.49902\\n3.49901\\n3.49900\\n3.49899\\n3.49898\\n3.49897\\n3.49896\\n3.49895\\n3.49894\\n3.49893\\n3.49892\\n3.49891\\n3.49890\\n3.49889\\n3.49888\\n3",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3.5', \"Test case 1 failed\"\nassert solution(input()) == '3.49999', \"Test case 2 failed\"\nassert solution(input()) == '3.50001', \"Test case 3 failed\"\nassert solution(input()) == '3.49999', \"Test case 4 failed\"\nassert solution(input()) == '3.49999', \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 4\") == \"3.50001\"\nassert solution(\"3\\n4 5\") == \"3.49999\"\nassert solution(\"4\\n5 6\") == \"3.50001\"\nassert solution(\"5\\n6 7\") == \"3.49999\"\nassert solution(\"6\\n7 8\") == \"3.49999\"\nassert solution(\"7\\n8 9\") == \"3.49999\"\nassert solution(\"8\\n9 10\") == \"3.49999\"\nassert solution(\"9\\n10 11\") == \"3.49999\"\nassert solution(\"10\\n11 12\") == \"3.49999\"\nassert solution(\"11\\n12 13\") == \"3.49999\"\nassert solution(\"12\\n13 14\") == \"3.49999\"\nassert solution(\"13\\n14 15\") == \"3.49999\"\nassert solution(\"14\\n15 16\") == \"3.49999\"\nassert solution(\"15\\n16 17\") == \"3.49999\"\nassert solution(\"16\\n17 18\") == \"3.49999\"\nassert solution(\"17\\n18 19\") == \"3.49999\"\nassert solution(\"18\\n19 20\") == \"3.49999\"\nassert solution(\"19\\n20 21\") == \"3.49999\"\nassert solution(\"20\\n21 22\") == \"3.49999\"\nassert solution(\"21\\n22 23\") == \"3.49999\"\nassert solution(\"22\\n23 24\") == \"3.49999\"\nassert solution(\"23\\n24 25\") == \"3.49999\"\nassert solution(\"24\\n25 26\") == \"3.49999\"\nassert solution(\"25\\n26 27\") == \"3.49999\"\nassert solution(\"26\\n27 28\") == \"3.49999\"\nassert solution(\"27\\n28 29\") == \"3.49999\"\nassert solution(\"28\\n29 30\") == \"3.49999\"\nassert solution(\"29\\n30 31\") == \"3.49999\"\nassert solution(\"30\\n31 32\") == \"3.49999\"\nassert solution(\"31\\n32 33\") == \"3.49999\"\nassert solution(\"32\\n33 34\") == \"3.49999\"\nassert solution(\"33\\n34 35\") == \"3.49999\"\nassert solution(\"34\\n35 36\") == \"3.49999\"\nassert solution(\"35\\n36 37\") == \"3.49999\"\nassert solution(\"36\\n37 38\") == \"3.49999\"\nassert solution(\"37\\n38 39\") == \"3.49999\"\nassert solution(\"38\\n39 40\") == \"3.49999\"\nassert solution(\"39\\n40 41\") == \"3.49999\"\nassert solution(\"40\\n41 42\") == \"3.49999\"\nassert solution(\"41\\n42 43\") == \"3.49999\"\nassert solution(\"42\\n43 44\") == \"3.49999\"\nassert solution(\"43\\n44 45\") == \"3.49999\"\nassert solution(\"44\\n45 46\") == \"3.49999\"\nassert solution(\"45\\n46 47\") == \"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"14\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"14\", \"The output should be 14, but it is: \" + solution(input())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"14\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nprint(\"All tests passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\\n\") == \"14\"\nassert solution(\"3\\n3 1 2\\n3 2 3\\n1 3\\n\") == \"9\"\nassert solution(\"3\\n3 1 2\\n3 2 3\\n1 4\\n\") == \"10\"\nassert solution(\"3\\n3 1 2\\n3 2 3\\n1 5\\n\") == \"12\"\nassert solution(\"3\\n3 1 2\\n3 2 3\\n1 6\\n\") == \"15\"",
        "num_ids_2": 63,
        "num_ids_4": 127
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter N: \")) == \"Enter N: 10\\nEnter S: ZABCDBABCQ\\n2\"\nassert solution(input(\"Enter N: \")) == \"Enter N: 10\\nEnter S: ZABCDBABCQ\\n2\"\nassert solution(input(\"Enter N: \")) == \"Enter N: 10\\nEnter S: ZABCDBABCQ\\n2\"\nassert solution(input(\"Enter N: \")) == \"Enter N: 10\\nEnter S: ZABCDBABCQ\\n2\"\nassert solution(input(\"Enter N: \")) == \"Enter N: 10\\nEnter S: ZABCDBABCQ\\n2\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Incorrect output for the given constraints\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"2\\n\"\nassert solution(\"10\\nZABCDBABCQ\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"11\\nABCABC\") == \"0\"\nassert solution(\"12\\nABCDAB\") == \"2\"\nassert solution(\"13\\nAAAB\") == \"0\"\nassert solution(\"14\\n\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"11\\nQCAKLTQ\") == \"0\"\nassert solution(\"20\\nABCABCDAB\") == \"2\"\nassert solution(\"100\\nXYZ\") == \"0\"\nassert solution(\"50\\nZABCDAB\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2', \"Incorrect solution.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\", \"The solution should return 2, but it returned {}\".format(solution(\"10\\nZABCDBABCQ\"))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"10\\nABCDABCD\") == \"0\"\nassert solution(\"10\\nABCD\") == \"1\"\nassert solution(\"10\\n\") == \"0\"\nassert solution(\"10\\nABCDABCDABCDABCD\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 63
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\\n\"\nassert solution(\"5\\nABCDGH\\n\") == \"1\\n\"\nassert solution(\"8\\nABCDGHI\\n\") == \"2\\n\"\nassert solution(\"10\\nABCDGHIJKLMNOPQRSTUVWXYZ\\n\") == \"2\\n\"\nassert solution(\"1000\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\n\") == \"1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 90
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nprint(\"Success!\")\n\nHere's the solution:\n\n```python\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution() == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nassert solution(\"1\\nH\\n\") == \"1\"\nassert solution(\"1\\nA\\n\") == \"0\"\nassert solution(\"1\\nR\\n\") == \"0\"\nassert solution(\"1\\nC\\n\") == \"0\"\nassert solution(\"1\\nM\\n\") == \"0\"\nassert solution(\"1\\nW\\n\") == \"0\"\nassert solution(\"1\\nO\\n\") == \"0\"\nassert solution(\"1\\nI\\n\") == \"0\"\nassert solution(\"1\\nT\\n\") == \"0\"\nassert solution(\"1\\nS\\n\") == \"0\"\nassert solution(\"1\\nU\\n\") == \"0\"\nassert solution(\"1\\nP\\n\") == \"0\"\nassert solution(\"1\\nE\\n\") == \"0\"\nassert solution(\"1\\nL\\n\") == \"0\"\nassert solution(\"1\\nD\\n\") == \"0\"\nassert solution(\"1\\nJ\\n\") == \"0\"\nassert solution(\"1\\nK\\n\") == \"0\"\nassert solution(\"1\\nG\\n\") == \"0\"\nassert solution(\"1\\nH\\n\") == \"1\"\nassert solution(\"1\\nA\\n\") == \"0\"\nassert solution(\"1\\nR\\n\") == \"0\"\nassert solution(\"1\\nC\\n\") == \"0\"\nassert solution(\"1\\nM\\n\") == \"0\"\nassert solution(\"1\\nW\\n\") == \"0\"\nassert solution(\"1\\nO\\n\") == \"0\"\nassert solution(\"1\\nI\\n\") == \"0\"\nassert solution(\"1\\nT\\n\") == \"0\"\nassert solution(\"1\\nS\\n\") == \"0\"\nassert solution(\"1\\nU\\n\") == \"0\"\nassert solution(\"1\\nP\\n\") == \"0\"\nassert solution(\"1\\nE\\n\") == \"0\"\nassert solution(\"1\\nL\\n\") == \"0\"\nassert solution(\"1\\nD\\n\") == \"0\"\nassert solution(\"1\\nJ\\n\") == \"0\"\nassert solution(\"1\\nK\\n\") == \"0\"\nassert solution(\"1\\nG\\n\") == \"0\"\nassert solution(\"1\\nH\\n\") == \"1\"\nassert solution(\"1\\nA\\n\") == \"0\"\nassert solution(\"1\\nR\\n\") == \"0\"\nassert solution(\"1\\nC\\n\") == \"0\"\nassert solution(\"1\\nM\\n\") == \"0\"\nassert solution(\"1\\nW\\n\") == \"0\"\nassert solution(\"1\\nO\\n\") == \"0\"\nassert solution(\"1\\nI\\n\") == \"0\"\nassert solution(\"1\\nT\\n\") == \"0\"\nassert solution(\"1\\nS\\n\") == \"0\"\nassert solution(\"1\\nU\\n\") == \"0\"\nassert solution(\"1\\nP\\n\") == \"0\"\nassert solution(\"1\\nE\\n\") == \"0\"\nassert solution(\"1\\nL\\n\") == \"0\"\nassert solution(\"1\\nD\\n\") == \"0\"\nassert solution(\"1\\nJ\\n\") == \"0\"\nassert solution(\"1\\nK\\n\") == \"0\"\nassert solution(\"1\\nG\\n\") == \"0\"\nassert solution(\"1\\nH\\n\") == \"1\"\nassert solution(\"1\\nA\\n\") == \"0\"\nassert solution(\"1\\nR\\n\") == \"0\"\nassert solution(\"1\\nC\\n\") == \"0\"\nassert solution(\"1\\nM\\n\") == \"0\"\nassert solution(\"1\\nW\\n\") == \"0\"\nassert solution(\"1\\nO\\n\") == \"0\"\nassert solution(\"1\\nI\\n\") == \"0\"\nassert solution(\"1\\nT\\n\") == \"0\"\nassert solution(\"1\\nS\\n\") == \"0\"\nassert solution(\"1\\nU\\n\") == \"0\"\nassert solution(\"1\\nP\\n\") == \"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"3 2\") == \"No\\n\"\nassert solution(\"1 1\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"5 5\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"2 2\\n\") == \"No\\n\"\nassert solution(\"3 2\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"4 4\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'No'\n\nassert solution() == 'Yes'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"6 2\") == \"No\\n\"\nassert solution(\"1 1\") == \"No\\n\"\nassert solution(\"1 2\") == \"Yes\\n\"\nassert solution(\"3 2\") == \"No\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\nassert solution(\"aaaaaa\") == \"No\"\nassert solution(\"asdffg\") == \"No\"\nassert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes', \"The solution should return 'Yes' for the given input'sippuu'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"The given string is not coffee-like.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"ccoooo\") == \"No\", \"Test case 2 failed\"\nassert solution(\"ccaaaa\") == \"Yes\", \"Test case 3 failed\"\nassert solution(\"ccc\") == \"No\", \"Test case 4 failed\"\nassert solution(\"ddd\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu123\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"AAA\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('aabbc') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"sippy\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cafewe\") == \"No\"\nassert solution(\"aaabbbccc\") == \"No\"\nassert solution(\"aaabbb\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n70\n60\n80\n50\n\"\"\") == \"4\\n\"\n\nassert solution(\n\"\"\"\n3\n70\n60\n80\n50\n\"\"\") == \"TLE\\n\"\n\nassert solution(\n\"\"\"\n2\n70\n60\n80\n50\n\"\"\") == \"TLE\\n\"\n\nassert solution(\n\"\"\"\n2\n70\n60\n80\n50\n\"\"\") == \"TLE\\n\"\n\nassert solution(\n\"\"\"\n3\n70\n60\n80\n50\n\"\"\") == \"4\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\\n\"\nassert solution(\"3 150\\n7 120\\n1 180\\n4 110\\n\") == \"TLE\\n\"\nassert solution(\"3 20\\n7 15\\n1 10\\n4 5\\n\") == \"20\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"5 10\") == \"TLE\"\nassert solution(\"10 1\") == \"TLE\"\nassert solution(\"100 1000000000\") == \"TLE\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 55\\n10 60\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 55\\n10 60\\n20 65\") == \"65\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 55\\n10 60\\n20 65\\n30 70\") == \"TLE\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 193
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 70\n    7 60\n    1 80\n    4 50\n    \"\"\"\n) == \"4\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n1 85\\n6 75\\n') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50') == 'TLE'",
        "num_ids_2": 76,
        "num_ids_4": 107
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"3 2 6\") == \"5\"\nassert solution(\"5 3 7\") == \"12\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 2 3\") == \"0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 9') == '8'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 9\") == \"8\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"2 3 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 1 1\") == \"0\"\nassert solution(\"10 1000 100\") == \"10000\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 3 4\") == \"12\"\nassert solution(\"10 5 6\") == \"12\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 10 10\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 9\") == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"8\\n\", \"The train will cost us 4 * 2 = 8 yen, and the taxi will cost us 9 yen, so the minimum total travel expense is 8 yen.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\", \"Test failed\"\nassert solution(\"5 2 10\") == \"14\\n\", \"Test failed\"\nassert solution(\"10 10 10\") == \"20\\n\", \"Test failed\"\nassert solution(\"1 2 3\") == \"3\\n\", \"Test failed\"\nassert solution(\"4 5 6\") == \"12\\n\", \"Test failed\"\nassert solution(\"1 5 10\") == \"16\\n\", \"Test failed\"\nassert solution(\"1 2 10\") == \"20\\n\", \"Test failed\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Test failed\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"\nassert solution(\"5 3 4\") == \"14\\n\"\nassert solution(\"6 5 7\") == \"15\\n\"\nassert solution(\"3 1 2\") == \"1\\n\"\nassert solution(\"8 10 100\") == \"50\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\") == \"1\\n\"\nassert solution(\"4\\nhello\\tworld\\n\") == \"2\\n\"\nassert solution(\"5\\nabc\\nxyz\\ndcba\\nefg\\n\") == \"2\\n\"\nassert solution(\"6\\nfghij\\klmnopqrstuvwxyz\\nuvwxyz\\nxyz\\n\") == \"0\\n\"\nassert solution(\"7\\na\\nb\\nc\\nd\\ne\\n\") == \"0\\n\"\nassert solution(\"8\\nabcdefghij\\nmnopqrstuvwxyz\\nuvwxyz\\nxyz\\n\") == \"0\\n\"\nassert solution(\"9\\n12345678901234567890\\n98765432109876543210\\n\") == \"2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 101
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\nassert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\"\nassert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\"",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\"\nassert solution(\"1\\na\\nb\\nc\\n\") == \"1\\n\"\nassert solution(\"3\\nabc\\nxyz\\ndef\\n\") == \"1\\n\"\nassert solution(\"4\\nabc\\ndef\\nhij\\nklm\\n\") == \"1\\n\"\nassert solution(\"1\\na\\nb\\nc\\n\") == \"1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nacornistnt\\peanutbomb\\constraint') == '1\\ns_1 = acornistnt is an anagram of s_3 = constraint. There are no other pairs i, j such that s_i is an anagram of s_j, so the answer is 1.\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nacornistnt\\npeautbomb\\nconstraint\") == \"1\\n\\nconstraint is an anagram of s_3 = constraint.\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\") == \"1\\n\\nconstraint is an anagram of s_3 = acornistnt.\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\\n8\\n2\\n9\\n8\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"\n\nq = int(input())\nfor _ in range(q):\n    k = int(input())\n    print(solution(f\"{k}\\n\"))",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56\\n') == '1\\n2\\n5\\n2\\n0\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\\n\") == \"8\\n2\\n9\\n8\\n\"\nassert solution(\"2\") == \"2\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 113
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"12345\"\nassert solution(4) == \"2132\"\nassert solution(4) == \"2132\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n",
        "num_ids_2": 84,
        "num_ids_4": 162
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n1 2 1 1 2 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '2\\n1 2 1 1 2 1'\nassert solution('4 2\\n3 1\\n1 4\\n1 2\\n') == '1\\n1 1 1 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3\\n1 1 2 3 2 3 1 3 1'\n\nfrom typing import List",
        "num_ids_2": 85,
        "num_ids_4": 165
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2\n1 2 1 1 2\n1 2 1 1 2\n1 2 1 1 2\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 3\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 81,
        "num_ids_4": 159
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2\\n1 2 1 1 2 1 1\\n'\nassert solution('4 2\\n3 1\\n1 4\\n1 2') == '1\\n1 1 1 1 1\\n'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '3\\n1 1 2 3 2 3 1 3 1\\n'",
        "num_ids_2": 94,
        "num_ids_4": 174
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 1 1 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 174
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1 2 1 1 2 1\\n1\\n1 1 1 1\\n1 1 1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2\n1 2 1 1 2 \n\"\"\"\nassert solution() == \"\"\"1\n1 1 1 \n\"\"\"\nassert solution() == \"\"\"3\n1 1 2 3 2 3 1 3 1\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()} and output {output()}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2 4\", \"Test 1 failed\"\nassert solution(input()) == \"3 8\", \"Test 2 failed\"\nassert solution(input()) == \"3 6\", \"Test 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"The output is incorrect.\" for input, output in [\n    (\n        '''\n        4\n        1 2 4 4\n        4\n        1 3 4 4\n        4\n        1 2 5 5\n        4\n        1 1 8 8 8 4 4 4 4\n        4\n        4 3 7 1 4 3 3\n        4\n        3 6\n        ''',\n        '''\n        2\n        4\n        3 8\n        ''',\n        '''\n        3\n        8\n        ''',\n    ),\n]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\n\nassert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr'''\n4\n1 2 4 4\n'''\n) == r'''\n2 4\n'''\n\nassert solution(\nr'''\n9\n1 1 8 8 8 4 4 4 4\n'''\n) == r'''\n3 8\n'''\n\nassert solution(\nr'''\n7\n4 3 7 1 4 3 3\n'''\n) == r'''\n3 6\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'\n\nprint('All tests passed')",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 4\\n3 8\\n3 6\", \"Test failed.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3 2 4 1 5\", \"Incorrect output. Please check the provided code.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3 2 4 1 5 '",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5 \\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3 2 4 1 5\\n3 1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution, \"No solution provided\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3 2 4 1 5'\n\nfrom itertools import permutations\n\nn = int(input())\na = list(map(int, input().split()))\n\nkids = list(range(1, n + 1))\np = permutations(kids)\n\nwhile True:\n    p = next(p)\n    for i in range(n):\n        if p[i] == p[(i + 1) % n]:\n            p[(i + 1) % n] = p[i]\n            break\n    else:\n        break\n\nprint(p)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5 \\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2 \\n\"\n\nimport random",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5\\n\"\nassert solution(\"Input\\n3\\n2 3\\n3 1\\n1 2\\n\") == \"3 1 2\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3 2 4 1 5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 3\nassert solution(10) == 10\nassert solution(6) == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6, 1, 10, 17, 12, 15) == 3\nassert solution(10, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337) == 10\nassert solution(6, 1, 1000, 10000, 10, 100, 1000000000) == 1",
        "num_ids_2": 93,
        "num_ids_4": 139
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == \"3\"\nassert solution(10) == \"10\"\nassert solution(6) == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\n\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\n\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == '-1'\nassert solution(\"5 5 3 2\") == '4'\nassert solution(\"15 5 4 3\") == '5'\nassert solution(\"15 5 2 1\") == '2'\nassert solution(\"15 5 5 1\") == '0'\nassert solution(\"16 7 5 2\") == '5'\nassert solution(\"20 5 7 3\") == '2'\nassert solution(\"10 1 3 2\") == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == '-1'\nassert solution(\"\") == '-1'\nassert solution(\"1\") == '-1'\nassert solution(\"1\\n\") == '-1'\nassert solution(\"1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '-1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Incorrect solution\"\nassert solution() == -1, \"Incorrect solution\"\nassert solution() == 5, \"Incorrect solution\"\nassert solution() == 2, \"Incorrect solution\"\nassert solution() == 0, \"Incorrect solution\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"\nassert solution(\"16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"\nassert solution(\"16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 130,
        "num_ids_4": 175
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"4\n-1\n5\n2\n0\n1\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == expected_output, f\"Expected output {expected_output}, got {solution(solution_input)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2') == '-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution('15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2') == '-1\\n5\\n2\\n0\\n1\\n'",
        "num_ids_2": 170,
        "num_ids_4": 306
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"24\"\nassert solution == \"2835\"\nassert solution == \"0\"\nassert solution == \"46\"",
        "num_ids_2": 18,
        "num_ids_4": 33
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nac?b?c\") == \"24\"\nassert solution(\"7\\n??????\") == \"2835\"\nassert solution(\"9\\ncccbbbaaa\") == \"0\"\nassert solution(\"5\\na???c\") == \"46\"",
        "num_ids_2": 34,
        "num_ids_4": 65
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6\nac?b?c\"\"\") == \"24\"\nassert solution(\"\"\"7\n???????\"\"\") == \"2835\"\nassert solution(\"\"\"9\ncccbbbaaa\"\"\") == \"0\"\nassert solution(\"\"\"5\na???c\"\"\") == \"46\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == \"24\", \"ac?b?c\"\nassert solution(\"????\") == \"2835\", \"????\"\nassert solution(\"cccbbbaaa\") == \"0\", \"cccbbbaaa\"\nassert solution(\"a???c\") == \"46\", \"a???c\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, but got: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ac?b?c') == '24'\nassert solution('?????') == '2835'\nassert solution('cccbbbaaa') == '0'\nassert solution('a???c') == '46'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\") == \"5\\n\"\n\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\\n\"\n\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 121
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == 5\nassert solution(\"4 0\\n1 3 3 7\\n\") == 16\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == 18",
        "num_ids_2": 55,
        "num_ids_4": 108
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == 5\nassert solution(\"4 0\\n1 3 3 7\\n\") == 16\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == 18\n",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nassert solution() == \"16\"\nassert solution() == \"18\"",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO: Write the solution\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr\"10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\"\n) == \"14\"\n\nassert solution(\nr\"10 1 1\n0 9\n0 5\"\n) == \"45\"\n\nassert solution(\nr\"10 1 1\n0 9\n1 5\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5') == '45'\nassert solution('10 1 1\\n0 9\\n1 5') == '-1'\nassert solution('10 1 1\\n0 9\\n0 10') == '14'\nassert solution('10 1 1\\n0 9\\n1 0') == '45'",
        "num_ids_2": 74,
        "num_ids_4": 126
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14\\n'\nassert solution('10 1 1\\n0 9\\n0 5') == '45\\n'\nassert solution('10 1 1\\n0 9\\n1 5') == '-1\\n'",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"14\\n\" # Test case 1\nassert solution() == \"45\\n\" # Test case 2\nassert solution() == \"-1\\n\" # Test case 3",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"\nprint(\"All test cases pass\")",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"10 6 9\") == \"No\"\nassert solution(\"4 4 1\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5 7 5) == 'Yes', \"Test failed\"\nassert solution(2 7 5) == 'No', \"Test failed\"\nassert solution(1 7 5) == 'No', \"Test failed\"\nassert solution(1 6 5) == 'No', \"Test failed\"\nassert solution(3 7 5) == 'No', \"Test failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Solution should return Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"The solution should be Yes.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Expected 'Yes\\n', but got '{}'.\".format(solution(\"5 7 5\"))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Incorrect output. Solution should return 'Yes' but returns '{}' instead.\"\n\nassert solution(\"4 6 2\") == \"No\", \"Incorrect output. Solution should return 'No' but returns '{}' instead.\"\n\nassert solution(\"3 1 9\") == \"No\", \"Incorrect output. Solution should return 'No' but returns '{}' instead.\"\n\nassert solution(\"2 2 2\") == \"No\", \"Incorrect output. Solution should return 'No' but returns '{}' instead.\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"2 2 2\") == \"Yes\"\nassert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 7 4\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Expected output: Yes, but got: \" + solution(\"5 7 5\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"5 7 1\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"1 1 1\") == \"No\\n\", \"Test case 3 failed\"\nassert solution(\"5 9 5\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"3 6 5\") == \"Yes\\n\", \"Test case 5 failed\"\n\nassert solution(\"1 1 1\") == \"No\\n\", \"Test case 6 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 4\\n1000 2000\") == \"2\"\nassert solution(\"2\\n12 3\\n1000 2000\") == \"0\"\nassert solution(\"3\\n12 5\\n1000 2000\") == \"0\"\nassert solution(\"3\\n12 4\\n1000 2000\") == \"2\"\nassert solution(\"3\\n12 3\\n1000 2000\") == \"0\"\nassert solution(\"4\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"4\\n12 4\\n1000 2000\") == \"2\"\nassert solution(\"4\\n12 3\\n1000 2000\") == \"1\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1\\n', \"Output should be '1\\n'\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"The solution is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n20 10 30 40\\n50 60 70 80 90\") == \"2\\n\"\nassert solution(\"4\\n50 60 70 80\\n300 200 100 0\") == \"3\\n\"\nassert solution(\"5\\n100 200 300 400\\n-10 20 30 40\\n350 450 550 650\") == \"4\\n\"\nassert solution(\"6\\n100 200 300 400 500\\n500 600 700 800 900\") == \"5\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 170
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('palace.txt', 'r')) == '1\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\", \"Test case 1 failed\"\nassert solution(\"3 1\") == \"1\", \"Test case 2 failed\"\nassert solution(\"4 1\") == \"1\", \"Test case 3 failed\"\nassert solution(\"5 1\") == \"2\", \"Test case 4 failed\"\nassert solution(\"5 2\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 1\") == \"2\\n\"\nassert solution(\"5 1\") == \"1\\n\"\nassert solution(\"10 1\") == \"1\\n\"\nassert solution(\"5 3\") == \"2\\n\"\nassert solution(\"6 2\") == \"2\\n\"\nassert solution(\"8 2\") == \"3\\n\"\nassert solution(\"7 4\") == \"2\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 1\") == \"1\", \"Test case failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 2\") == \"1\\n\"\nassert solution(\"5 5\") == \"0\\n\"\nassert solution(\"6 3\") == \"1\\n\"\nassert solution(\"7 5\") == \"3\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"2\"\n\nsolution(\"2 1\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"4 3\\n\") == \"1\\n\"\nassert solution(\"5 4\\n\") == \"1\\n\"\nassert solution(\"6 5\\n\") == \"1\\n\"\nassert solution(\"7 6\\n\") == \"1\\n\"\nassert solution(\"8 7\\n\") == \"1\\n\"\nassert solution(\"9 8\\n\") == \"1\\n\"\nassert solution(\"10 9\\n\") == \"1\\n\"\nassert solution(\"11 10\\n\") == \"1\\n\"\nassert solution(\"12 11\\n\") == \"1\\n\"\nassert solution(\"13 12\\n\") == \"1\\n\"\nassert solution(\"14 13\\n\") == \"1\\n\"\nassert solution(\"15 14\\n\") == \"1\\n\"\nassert solution(\"16 15\\n\") == \"1\\n\"\nassert solution(\"17 16\\n\") == \"1\\n\"\nassert solution(\"18 17\\n\") == \"1\\n\"\nassert solution(\"19 18\\n\") == \"1\\n\"\nassert solution(\"20 19\\n\") == \"1\\n\"\nassert solution(\"21 20\\n\") == \"1\\n\"\nassert solution(\"22 21\\n\") == \"1\\n\"\nassert solution(\"23 22\\n\") == \"1\\n\"\nassert solution(\"24 23\\n\") == \"1\\n\"\nassert solution(\"25 24\\n\") == \"1\\n\"\nassert solution(\"26 25\\n\") == \"1\\n\"\nassert solution(\"27 26\\n\") == \"1\\n\"\nassert solution(\"28 27\\n\") == \"1\\n\"\nassert solution(\"29 28\\n\") == \"1\\n\"\nassert solution(\"30 29\\n\") == \"1\\n\"\nassert solution(\"31 30\\n\") == \"1\\n\"\nassert solution(\"32 31\\n\") == \"1\\n\"\nassert solution(\"33 32\\n\") == \"1\\n\"\nassert solution(\"34 33\\n\") == \"1\\n\"\nassert solution(\"35 34\\n\") == \"1\\n\"\nassert solution(\"36 35\\n\") == \"1\\n\"\nassert solution(\"37 36\\n\") == \"1\\n\"\nassert solution(\"38 37\\n\") == \"1\\n\"\nassert solution(\"39 38\\n\") == \"1\\n\"\nassert solution(\"40 39\\n\") == \"1\\n\"\nassert solution(\"41 40\\n\") == \"1\\n\"\nassert solution(\"42 41\\n\") == \"1\\n\"\nassert solution(\"43 42\\n\") == \"1\\n\"\nassert solution(\"44 43\\n\") == \"1\\n\"\nassert solution(\"45 44\\n\") == \"1\\n\"\nassert solution(\"46 45\\n\") == \"1\\n\"\nassert solution(\"47 46\\n\") == \"1\\n\"\nassert solution(\"48 47\\n\") == \"1\\n\"\nassert solution(\"49 48\\n\") == \"1\\n\"\nassert solution(\"50 49\\n\") == \"1\\n\"\nassert solution(\"51 50\\n\") == \"1\\n\"\nassert solution(\"52 51\\n\") == \"1\\n\"\nassert solution(\"53 52\\n\") == \"1\\n\"\nassert solution(\"54 53\\n\") == \"1\\n\"\nassert solution(\"55 54\\n\") == \"1\\n\"\nassert solution(\"56 55\\n\") == \"1\\n\"\nassert solution(\"57 56\\n\") == \"1\\n\"\nassert solution(\"58 57\\n\") == \"1\\n\"\nassert solution(\"59 58\\n\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\\n\"  # Test 1\nassert solution(\"3 1\") == \"2\\n\"  # Test 2\nassert solution(\"3 2\") == \"2\\n\"  # Test 3\nassert solution(\"4 2\") == \"2\\n\"  # Test 4\nassert solution(\"5 1\") == \"1\\n\"  # Test 5\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"\n2\n0\n3\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == [\"2\", \"0\", \"3\"]",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == '2\\n0\\n3'\nassert solution(\"5 3\\nAGCTACG\\n4 7\\n1 4\") == '0\\n0\\n3'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == [\"2\", \"0\", \"3\"]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n    5 3\n    50 100 80 120 80\n\"\"\") == \"210\\n\"\n\nassert solution(r\"\"\"\n    10 3\n    100 200 500 600 700\n\"\"\") == \"11200\\n\"\n\nassert solution(r\"\"\"\n    5 4\n    50 100 80 120 80\n\"\"\") == \"180\\n\"\n\nassert solution(r\"\"\"\n    10 2\n    100 200 500 600 700\n\"\"\") == \"1600\\n\"\n\nassert solution(r\"\"\"\n    10 5\n    100 200 500 600 700\n\"\"\") == \"13300\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"10 1\\n50 100 80 120 80\") == \"500\"\nassert solution(\"2 1\\n50 100 80 120 80\") == \"150\"\nassert solution(\"3 1\\n50 100 80 120 80\") == \"500\"\nassert solution(\"2 2\\n50 100 80 120 80\") == \"1000\"\n\nfrom typing import List",
        "num_ids_2": 65,
        "num_ids_4": 129
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"210\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"210\" # expected output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"210\"  # Correct Answer",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"Sample Input should return '4'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('5 3 4') == '9'\nassert solution('1 5 4') == '13'\nassert solution('2 4 1') == '7'\nassert solution('6 4 1') == '10'\nassert solution('1 4 1') == '10'\nassert solution('4 3 1') == '7'\nprint('All tests passed!')",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"Test case 1 failed\"\nassert solution(\"2 1 1\") == \"2\", \"Test case 2 failed\"\nassert solution(\"1 1 3\") == \"4\", \"Test case 3 failed\"\nassert solution(\"4 2 2\") == \"6\", \"Test case 4 failed\"\nassert solution(\"3 2 1\") == \"5\", \"Test case 5 failed\"\nassert solution(\"4 3 4\") == \"10\", \"Test case 6 failed\"\nassert solution(\"5 4 5\") == \"15\", \"Test case 7 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"Test Case 1\"\n\nassert solution(\"2 4 3\") == \"7\\n\", \"Test Case 2\"\n\nassert solution(\"3 5 4\") == \"5\\n\", \"Test Case 3\"\n\nassert solution(\"4 3 2\") == \"4\\n\", \"Test Case 4\"\n\nassert solution(\"5 4 3\") == \"7\\n\", \"Test Case 5\"\n\nassert solution(\"6 5 4\") == \"6\\n\", \"Test Case 6\"\n\nassert solution(\"7 6 5\") == \"8\\n\", \"Test Case 7\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 4') == '5'\nassert solution('1 2 5') == '7'\nassert solution('2 1 4') == '5'\nassert solution('2 1 5') == '7'\nassert solution('1 3 1') == '4'\nassert solution('1 2 3') == '7'\nassert solution('3 2 1') == '4'\nassert solution('3 2 3') == '7'\nassert solution('1 4 3') == '4'\nassert solution('1 5 3') == '7'\nassert solution('4 5 1') == '4'\nassert solution('4 5 3') == '7'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1 3 4') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\\n3 is less than 5, so we should print 0.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"5 3\") == \"0\\n\"\nassert solution(\"0 2\") == \"10\\n\"\nassert solution(\"10 0\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"5 3\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0\\n'\nassert solution(input()) == '10\\n'\nassert solution(input()) == '10\\n'\nassert solution(input()) == '0\\n'\nassert solution(input()) == '10\\n'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 5\") == \"10\\n\"\nassert solution(\"0 5\") == \"10\\n\"\nassert solution(\"3 0\") == \"0\\n\"\nassert solution(\"1 0\") == \"10\\n\"\nassert solution(\"2 0\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"9 5\") == \"10\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"9 0\") == \"10\"\nassert solution(\"3 10\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter X and A: \")) == 0, \"If X is less than A, print 0.\"\nassert solution(input(\"Enter X and A: \")) == 10, \"If X is not less than A, print 10.\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\"\nassert solution(\"3 5\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"3 7\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"3 5\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"10 10\") == \"10\\n\", \"Test case 3 failed.\"\nassert solution
        "num_ids_2": 42,
        "num_ids_4": 1027
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 4) == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '1\\n'\nassert solution('4\\n') == '1\\n'\nassert solution('5\\n') == '1\\n'\nassert solution('6\\n') == '1\\n'\nassert solution('7\\n') == '1\\n'\nassert solution('8\\n') == '1\\n'\nassert solution('9\\n') == '1\\n'\nassert solution('10\\n') == '1\\n'\nassert solution('11\\n') == '1\\n'\nassert solution('12\\n') == '1\\n'\nassert solution('13\\n') == '1\\n'\nassert solution('14\\n') == '1\\n'\nassert solution('15\\n') == '1\\n'\nassert solution('16\\n') == '1\\n'\nassert solution('17\\n') == '1\\n'\nassert solution('18\\n') == '1\\n'\nassert solution('19\\n') == '1\\n'\nassert solution('20\\n') == '1\\n'\nassert solution('21\\n') == '1\\n'\nassert solution('22\\n') == '1\\n'\nassert solution('23\\n') == '1\\n'\nassert solution('24\\n') == '1\\n'\nassert solution('25\\n') == '1\\n'\nassert solution('26\\n') == '1\\n'\nassert solution('27\\n') == '1\\n'\nassert solution('28\\n') == '1\\n'\nassert solution('29\\n') == '1\\n'\nassert solution('30\\n') == '1\\n'\nassert solution('31\\n') == '1\\n'\nassert solution('32\\n') == '1\\n'\nassert solution('33\\n') == '1\\n'\nassert solution('34\\n') == '1\\n'\nassert solution('35\\n') == '1\\n'\nassert solution('36\\n') == '1\\n'\nassert solution('37\\n') == '1\\n'\nassert solution('38\\n') == '1\\n'\nassert solution('39\\n') == '1\\n'\nassert solution('40\\n') == '1\\n'\nassert solution('41\\n') == '1\\n'\nassert solution('42\\n') == '1\\n'\nassert solution('43\\n') == '1\\n'\nassert solution('44\\n') == '1\\n'\nassert solution('45\\n') == '1\\n'\nassert solution('46\\n') == '1\\n'\nassert solution('47\\n') == '1\\n'\nassert solution('48\\n') == '1\\n'\nassert solution('49\\n') == '1\\n'\nassert solution('50\\n') == '1\\n'\nassert solution('51\\n') == '1\\n'\nassert solution('52\\n') == '1\\n'\nassert solution('53\\n') == '1\\n'\nassert solution('54\\n') == '1\\n'\nassert solution('55\\n') == '1\\n'\nassert solution('56\\n') == '1\\n'\nassert solution('57\\n') == '1\\n'\nassert solution('58\\n') == '1\\n'\nassert solution('59\\n') == '1\\n'\nassert solution('60\\n') == '1\\n'\nassert solution('61\\n') == '1\\n'\nassert solution('62\\n') == '1\\n'\nassert solution('63\\n') == '1\\n'\nassert solution('64\\n') == '1\\n'\nassert solution('65\\n') == '1\\n'\nassert solution('66\\n') == '1\\n'\nassert solution('67\\n') == '1\\n'\nassert solution('68\\n') == '1\\n'\nassert solution('69\\n') == '1\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test 1\"\nassert solution(\"10 10\") == \"1\\n\", \"Test 2\"\nassert solution(\"7 7\") == \"1\\n\", \"Test 3\"\nassert solution(\"10 10\") == \"1\\n\", \"Test 4\"\nassert solution(\"10 10\") == \"1\\n\", \"Test 5\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3), \"Test failed for example case\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\", \"Test Case 1\"\n\nassert solution() == \"1\\n\", \"Test Case 2\"\n\nassert solution() == \"1\\n\", \"Test Case 3\"\n\nassert solution() == \"1\\n\", \"Test Case 4\"\n\nassert solution() == \"1\\n\", \"Test Case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n\") == \"1\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"5 7\\n\") == \"5\\n\"\nassert solution(\"10 5\\n\") == \"5\\n\"\nassert solution(\"10 10\\n\") == \"10\\n\"\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test case 1 failed\"\nassert solution(\"1 2 3\") == \"bust\", \"Test case 2 failed\"\nassert solution(\"10 12 13\") == \"bust\", \"Test case 3 failed\"\nassert solution(\"2 10 22\") == \"win\", \"Test case 4 failed\"\nassert solution(\"11 8 7\") == \"win\", \"Test case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"4 10 12\") == \"bust\"\nassert solution(\"3 13 15\") == \"bust\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"2 2 2\") == \"win\"\nassert solution(\"3 3 3\") == \"bust\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"The code is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 8 9\") == \"bust\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"22 22 22\") == \"bust\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Test case 1 failed\"\nassert solution(\"1 1 1\") == \"bust\\n\", \"Test case 2 failed\"\nassert solution(\"22 22 22\") == \"win\\n\", \"Test case 3 failed\"\nassert solution(\"100 100 100\") == \"bust\\n\", \"Test case 4 failed\"\nassert solution(\"11 11 11\") == \"win\\n\", \"Test case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 103
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"10 20 30\") == \"bust\"\nassert solution(\"25 50 75\") == \"win\"\nassert solution(\"100 300 500\") == \"bust\"",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('10 11 12') == 'bust'\nassert solution('3 4 5') == 'bust'\nassert solution('1 2 3') == 'win'\nassert solution('1 1 1') == 'win'\nassert solution('1 2 3 4 5') == 'bust'",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"12 20 15\") == \"win\"\nassert solution(\"22 18 16\") == \"bust\"\nassert solution(\"5 13 15\") == \"bust\"\nassert solution(\"12 22 15\") == \"bust\"\nassert solution(\"22 16 13\") == \"bust\"",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\", \"Test Case 1 Failed\"\nassert solution() == \"6\", \"Test Case 2 Failed\"\nassert solution() == \"6\", \"Test Case 3 Failed\"\nassert solution() == \"6\", \"Test Case 4 Failed\"\nassert solution() == \"6\", \"Test Case 5 Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\\n6 is divisible by both 2 and 3.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\\n\", \"The output is not correct.\"\nassert solution(\"4 1\") == \"1\\n\", \"The output is not correct.\"\nassert solution(\"1 1\") == \"1\\n\", \"The output is not correct.\"\nassert solution(\"1 5\") == \"3\\n\", \"The output is not correct.\"\nassert solution(\"10 5\") == \"3\\n\", \"The output is not correct.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n\") == \"2\\n\"\nassert solution(\"6 4\\n\") == \"2\\n\"\nassert solution(\"10 5\\n\") == \"1\\n\"\nassert solution(\"6 1\\n\") == \"1\\n\"\nassert solution(\"7 1\\n\") == \"1\\n\"\nassert solution(\"8 1\\n\") == \"1\\n\"\nassert solution(\"9 1\\n\") == \"1\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"2\\n\"\nassert solution(\"3 1\") == \"2\\n\"\nassert solution(\"2 2\") == \"2\\n\"\nassert solution(\"4 1\") == \"1\\n\"\nassert solution(\"2 4\") == \"2\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"10 2\") == \"1\"\nprint(\"All tests passed\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed.\"\nassert solution(input()) == \"3\", \"Test case 2 failed.\"\nassert solution(input()) == \"4\", \"Test case 3 failed.\"\nassert solution(input()) == \"5\", \"Test case 4 failed.\"\nassert solution(input()) == \"6\", \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"pon\", \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese. When counting pencils in Japanese, the counter word '\u672c' follows the number. The pronunciation of this word varies depending on the number. Specifically, the pronunciation of '\u672c' in the phrase 'N \u672c' for a positive integer N not exceeding 999 is as follows: - hon when the digit in the one's place of N is 2, 4, 5, 7, or 9; - pon when the digit in the one's place of N is 0, 1, 6 or 8; - bon when the digit in the one's place of N is 3. Given N, print the pronunciation of '\u672c' in the phrase 'N \u672c'.\"",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"1000\") == \"pon\"\nassert solution(\"2345\") == \"bon\"\nassert solution(\"334\") == \"hon\"\nassert solution(\"0126\") == \"pon\"\nassert solution(\"479012\") == \"pon\"\nassert solution(\"999999\") == \"pon\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"pon\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"pon\", \"The pronunciation of '\u672c' in the phrase 'N \u672c' for a positive integer N not exceeding 999 is as follows: - hon when the digit in the one's place of N is 2, 4, 5, 7, or 9; - pon when the digit in the one's place of N is 0, 1, 6 or 8; - bon when the digit in the one's place of N is 3.\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(16) == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\", \"The digit in the one's place of 16 is 6, so the \\\"\u672c\\\" in \\\"16 \u672c\\\" is pronounced pon.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"pon\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 11, \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\", \"The solution should be '11'.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\nassert solution(\"5\\n5 1 2 3 4\") == \"70\\n\"\nassert solution(\"2\\n3 1 1\") == \"6\\n\"\n\nassert solution(\"5\\n5 2 3 4 5\") == \"125\\n\"\nassert solution(\"3\\n1 2 3\") == \"18\\n\"\nassert solution(\"4\\n1 1 2 3\") == \"26\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"1\\n1 2 3\") == \"6\"\nassert solution(\"2\\n1 2 3\") == \"4\"\nassert solution(\"3\\n2 1 3\") == \"2\"\nassert solution(\"5\\n1 2 3\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '11'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11\", \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"11\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"11\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"2\\n3\\n5\\n6\\n\") == \"6\\n5\\n6\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"3\\n2\\n3\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"4\\n3\\n4\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n\") == \"4\\n3\\n2\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n2\") == \"2\"\nassert solution(\"3\\n1\\n3\\n4\") == \"4\"\nassert solution(\"5\\n1\\n1\\n1\\n1\") == \"1\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n\") == \"3\\n3\\n4\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 131
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n2\\n\") == \"2\\n1\\n2\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n\") == \"4\\n3\\n2\\n1\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 127
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nassert solution(\"2\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n4\\n2\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n3\\n4\") == \"3\\n1\\n4\\n\"\nassert solution(\"3\\n1\\n2\\n3\") == \"3\\n1\\n4\\n\"\nassert solution(\"3\\n1\\n3\\n2\") == \"3\\n1\\n4\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nassert solution(\"5 5\") == \"50\\n\"\nassert solution(\"10 5\") == \"50\\n\"\nassert solution(\"5 10\") == \"0\\n\"\nassert solution(\"10 0\") == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"9\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'5 3') == '9\\n'\nassert solution(b'3 5') == '9\\n'\nassert solution(b'5 5') == '12\\n'\nassert solution(b'10 5') == '15\\n'\nassert solution(b'100 5') == '20\\n'",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the value of A: \")) == 9, \"Incorrect output. Please check the constraints.\"\nassert solution(input(\"Enter the value of B: \")) == 9, \"Incorrect output. Please check the constraints.\"\n\nprint(\"Correct!\")",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Test 1\"\nassert solution(\"5 3\") == \"9\\n\", \"Test 2\"\nassert solution(\"5 3\") == \"9\\n\", \"Test 3\"\nassert solution(\"5 3\") == \"9\\n\", \"Test 4\"\nassert solution(\"5 3\") == \"9\\n\", \"Test 5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n\") == \"9\\n\"\nassert solution(\"10 2\\n\") == \"14\\n\"\nassert solution(\"10 3\\n\") == \"19\\n\"\nassert solution(\"5 5\\n\") == \"10\\n\"\nassert solution(\"10 10\\n\") == \"40\\n\"\nassert solution(\"5 2\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Test case 1\"\nassert solution(\"2 4\") == \"2\\n\", \"Test case 2\"\nassert solution(\"1 2\") == \"2\\n\", \"Test case 3\"\nassert solution(\"1 1\") == \"0\\n\", \"Test case 4\"\nassert solution(\"5 5\") == \"10\\n\", \"Test case 5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"40\"\nprint(\"Test Passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"\nassert solution(\"5 4\") == \"Error: K must be less than or equal to N.\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-100 100\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 100 200\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 100 -200\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 -100 200\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 4\\n5\") == \"Error: K must be less than or equal to N.\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-100 100\\n6 7 8 9 10\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 100 200\\n6 7 8 9 10\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 100 -200\\n6 7 8 9 10\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 3\\n-30 -100 200\\n6 7 8 9 10\") == \"Error: x_i values are out of range.\"\nassert solution(\"5 4\\n5\\n6 7 8 9 10\") == \"Error: K must be less than or equal to N.\"\n",
        "num_ids_2": 54,
        "num_ids_4": 117
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"40\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"40\\nMove from coordinate 0 to -10.\\nLight the second candle from the left.\\nMove from coordinate -10 to 10.\\nLight the third candle from the left.\\nMove from coordinate 10 to 20.\\nLight the fourth candle from the left.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\\n\"\n",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"10 15\") == \"2\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 13\") == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4000 1\") == \"5\"\nassert solution(\"20 1\") == \"2\"\nassert solution(\"9 10\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\", \"The input should be '8 13' and output should be '2'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n\") == \"3\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\", \"Test case 1 failed\"\nassert solution(\"5 2\") == \"2\", \"Test case 2 failed\"\nassert solution(\"1 10\") == \"2\", \"Test case 3 failed\"\nassert solution(\"10 10\") == \"1\", \"Test case 4 failed\"\nassert solution(\"10 0\") == \"0\", \"Test case 5 failed\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3\\n', 'The solution is incorrect.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"10 4\") == \"3\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Your code is incorrect. Please provide the number of attacks Serval needs to make before winning.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Input is invalid.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Incorrect output\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'\nprint('All tests passed successfully!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 75 25 100') == '50\\n', \"Test failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50\\n', \"Test Case 1 Failed\"\n\nassert solution('1 2 3 4') == '0\\n', \"Test Case 2 Failed\"\n\nassert solution('50 25 100 75') == '50\\n', \"Test Case 3 Failed\"\n\nassert solution('100 0 25 100') == '50\\n', \"Test Case 4 Failed\"\n\nassert solution('0 100 25 100') == '50\\n', \"Test Case 5 Failed\"",
        "num_ids_2": 55,
        "num_ids_4": 117
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\", \"The length of the duration (in seconds) in which both Alice and Bob were holding down their buttons should be 50.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"90 50 75 100\") == \"50\"\nassert solution(\"100 50 25 75\") == \"50\"\nassert solution(\"0 100 100 50\") == \"50\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(105) == 1, \"The given number 105 is not special\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(105) == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the value of N: \")) == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(105) == 1, \"The number 105 is not special\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(105) == 1, \"The number 105 is not odd, has no eight positive divisors, or is not an odd number.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"\n\nThis is the correct code to test the correctness of solution. We have used the assert statement to check if the output matches the expected output.",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(105) == 1",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(105) == 1, \"The correct answer is 1, but it is: \" + solution(105)\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(105) == 1, \"Incorrect output. The number 105 is quite special - it is odd but still it has eight divisors.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input().strip())) == '1\\n'\nprint('1')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"9 5\") == \"2\\n\"\nassert solution(\"10 10\") == \"0\\n\"\nassert solution(\"5 5\") == \"0\\n\"\nassert solution(\"7 6\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"4 3\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"5 3\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"6 3\") == \"1\\n\", \"Test case 4 failed\"\nassert solution(\"1000 50\") == \"117\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', \"The given input is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"The correct output is not given.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n\") == \"1\\n\"\nassert solution(\"10 10\\n\") == \"1\\n\"\nassert solution(\"10 5\\n\") == \"0\\n\"\nassert solution(\"0 0\\n\") == \"0\\n\"\nassert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"10 0\\n\") == \"1\\n\"\nassert solution(\"0 10\\n\") == \"1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"111\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"111\"\nprint(\"111\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\", \"Your solution is incorrect.\"\nassert solution(\"100\") == \"100\", \"Your solution is incorrect.\"\nassert solution(\"999\") == \"999\", \"Your solution is incorrect.\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\", \"Expected '111', but got '{}'\".format(solution(\"111\"))\nprint(\"Test Passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"111\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('111') == '111', \"The expected output is 111, but it is actually '{}'\".format(solution('111'))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 5 3\") == \"6\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"1 4 3\") == \"8\"\nassert solution(\"3 3 2\") == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Expected: 5\\nActual: \" + solution(\"1 6 3\") + \"\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 7 1\") == \"11\"\nassert solution(\"3 8 2\") == \"14\"\nassert solution(\"4 9 3\") == \"17\"\nassert solution(\"5 10 4\") == \"20\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\", \"Expected output: 5\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Test 1 failed\"\nassert solution(\"2 6 3\") == \"5\", \"Test 2 failed\"\nassert solution(\"3 6 3\") == \"5\", \"Test 3 failed\"\nassert solution(\"1 4 3\") == \"6\", \"Test 4 failed\"\nassert solution(\"2 4 3\") == \"6\", \"Test 5 failed\"\nassert solution(\"3 4 3\") == \"6\", \"Test 6 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\"\nassert solution(\"2 5 3\") == \"6\\n\"\nassert solution(\"4 2 6\") == \"10\\n\"\nassert solution(\"5 4 7\") == \"15\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Expected output is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"5\", \"Incorrect output. Expected: 5, Actual: \" + solution(\"8\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5\\n\"\nassert solution(\"7\") == \"4\\n\"\nassert solution(\"6\") == \"3\\n\"\nassert solution(\"5\") == \"5\\n\"\nassert solution(\"4\") == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the value of s: \")) == 5, \"The minimum integer m that satisfies the condition is 5.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"No\", \"Test case 1\"\nassert solution(\"7 8 9 10\") == \"Yes\", \"Test case 2\"\nassert solution(\"3 6 10 10\") == \"No\", \"Test case 3\"\nassert solution(\"100 100 100 100\") == \"No\", \"Test case 4\"\nassert solution(\"5 6 8 7\") == \"Yes\", \"Test case 5\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"5 4 7 6\") == \"No\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"20 10 20 10\") == \"Yes\"\nassert solution(\"5 5 5 5\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"No\"",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\", \"Test Failed\" # Test case 1\nassert solution(\"10 9 10 1\") == \"No\", \"Test Failed\" # Test case 2\nassert solution(\"1 2 3 4\") == \"No\", \"Test Failed\" # Test case 3\nassert solution(\"5 6 7 8\") == \"Yes\", \"Test Failed\" # Test case 4\nassert solution(\"100 100 100 100\") == \"No\", \"Test Failed\" # Test case 5",
        "num_ids_2": 55,
        "num_ids_4": 105
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 5 7\") == \"No\"\nassert solution(\"10 10 10 10\") == \"Yes\"\nassert solution(\"10 10 5 7\") == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\", \"Solution should return 'Yes' if Takahashi will win, else 'No'.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"8 7 6 5\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4\\n') == '5'\nassert solution('4\\n6\\n1\\n') == '6'\nassert solution('5\\n20 30 40\\n') == '20'\nassert solution('6\\n100 100 100\\n') == '100'\nassert solution('7\\n10 20 30\\n8 9 10\\n') == '100'\nassert solution('8\\n10 20 30 40\\n9 10 11 12\\n10 11 12 13\\n') == '100'",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"3\\n5 10 20\") == \"100\\n\"\nassert solution(\"4\\n5 6 7 8\") == \"12\\n\"\nassert solution(\"4\\n10 20 30 40\") == \"30\\n\"\nassert solution(\"5\\n\") == \"0\\n\"\nassert solution(\"6\\n\") == \"0\\n\"\nassert solution(\"7\\n\") == \"0\\n\"\nassert solution(\"8\\n\") == \"0\\n\"\nassert solution(\"9\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"0\\n\"\nassert solution(\"11\\n\") == \"0\\n\"\nassert solution(\"12\\n\") == \"0\\n\"\nassert solution(\"13\\n\") == \"0\\n\"\nassert solution(\"14\\n\") == \"0\\n\"\nassert solution(\"15\\n\") == \"0\\n\"\nassert solution(\"16\\n\") == \"0\\n\"\nassert solution(\"17\\n\") == \"0\\n\"\nassert solution(\"18\\n\") == \"0\\n\"\nassert solution(\"19\\n\") == \"0\\n\"\nassert solution(\"20\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"1\\n5\") == \"0\"\nassert solution(\"5\\n3\") == \"0\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"5\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nprint(\"All test cases passed successfully!\")\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"5\\n2 3\\n1 4\") == \"3\"\nassert solution(\"5\\n1 2\\n3 4\") == \"0\"\nassert solution(\"5\\n2 1\\n3 4\") == \"1\"\nassert solution(\"5\\n3 2\\n1 4\") == \"2\"\nassert solution(\"5\\n3 2\\n2 1\") == \"3\"\n",
        "num_ids_2": 45,
        "num_ids_4": 85
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\", \"Test case failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '###\\n###\\n.##\\n'\nprint(\"All tests pass.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"#\\n###\\n.##\\n\\n\"\nassert solution(\"1 1\\n#.#\\n...\\n#.#\\n.##.\\n\") == \"#\\n###\\n.##\\n\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n.#.#\\n....\\n.###\\n...#\") == \"###\\n.###\\n.##\\n\"\nassert solution(\"4 4\\n.###\\n....\\n...#\\n.#.#\") == \".###\\n.#.#\\n...##\\n\"\nassert solution(\"4 4\\n.###\\n....\\n...#\\n.##.#\") == \".###\\n.#.#\\n...##\\n\"\nassert solution(\"4 4\\n.#.#\\n....\\n...##\\n.###.\\n\") == \"###\\n.###\\n...##\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 146
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\\n\"\nassert solution(\"5 5\\n####\\n.....\\n####\\n#....\") == \"####\\n####\\n....\\n##.#\\n\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"\n###\n###\n.##\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n\\n'\nprint('All test cases passed!')",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.\\n.#\\n#.\\n#.\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.\\n#.\\n#.\\n#.\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.\\n#.\\n#.\\n#.\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.\\n#.\\n#.\\n#.\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.\\n#.\\n#.\\n#.\\n\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 141
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '###\\n###\\n.##\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Test failed: print the circumference of a circle of radius 1\"\nassert solution(\"1.2\") == \"6.28318530717958623200\", \"Test failed: print the circumference of a circle of radius 1.2\"\nassert solution(\"1.1\") == \"6.28318530717958623200\", \"Test failed: print the circumference of a circle of radius 1.1\"\nassert solution(\"1.0000000000000000001\") == \"6.28318530717958623200\", \"Test failed: print the circumference of a circle of radius 1.0000000000000000001\"\nassert solution(\"100\") == \"6.28318530717958623200\", \"Test failed: print the circumference of a circle of radius 100\"\n\nfor i in range(2, 101):\n    assert abs(solution(str(i)) - round(6.28318530717958623200)) <= 1e-2, f\"Test failed: print the circumference of a circle of radius {i}\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 98,
        "num_ids_4": 236
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 6.28318530717958623200, \"Output is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '6.28318530717958623200\\n', \"The output should be 6.28318530717958623200.\"\nprint(\"All test cases passed.\")\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200', \"The circumference of a circle of radius 1 should be approximately 6.28318530717958623200\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\", \"Test case 1 failed.\"\n\nassert solution(\"2\\n\") == \"6.28318530717958623200\\n\", \"Test case 2 failed.\"\n\nassert solution(\"3\\n\") == \"6.28318530717958623200\\n\", \"Test case 3 failed.\"\n\nassert solution(\"4\\n\") == \"6.28318530717958623200\\n\", \"Test case 4 failed.\"\n\nassert solution(\"5\\n\") == \"6.28318530717958623200\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'1\\n') == '6.28318530717958623200\\n'\nassert solution(b'2\\n') == '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482733906585412275886668017621875343008137266179531321255121160463783187534300813726617953132125512116046378318753430081372661795313212551211604637831875343008137266179531321255121160463783187534300813726617953132125512116046378318753430081372661795313212551211604637831875343008137266179531321255121160463783187534300813726617953132125512116046378318753430081372661795313212551211604637831875343008137266179531321255121160463783187534300813726617953132125512116046378318753430081372661795313212551211604637831875343008137266179531321255121160463783187534300813726617953132125512116046378318753430081372661795313212551211604637831875343008137266179531321255121160463783187534300813726617953132125512",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"0.26726217359636924428\"\nassert solution(\"3\") == \"3.14159265358979323846\"\nassert solution(\"4\") == \"2.71828182845904523536\"\nassert solution(\"5\") == \"6.28318530717958647692\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\", \"Test case 1: Circumference of a circle of radius 1\"\nassert solution(\"2\\n\") == \"10.740938640742253705388\\n\", \"Test case 2: Circumference of a circle of radius 2\"\nassert solution(\"3\\n\") == \"14.16410785371811103685\\n\", \"Test case 3: Circumference of a circle of radius 3\"\nassert solution(\"4\\n\") == \"17.587269326489436256592\\n\", \"Test case 4: Circumference of a circle of radius 4\"\nassert solution(\"5\\n\") == \"20.981976674364875127883\\n\", \"Test case 5: Circumference of a circle of radius 5\"",
        "num_ids_2": 106,
        "num_ids_4": 213
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert abs(solution(\"1\") - 6.28318530717958623200) <= 1e-2",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\"\nassert solution(\"2\\n\") == \"1.414213562373095048801688724209769366569\\n\"\nassert solution(\"3\\n\") == \"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442876034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024914127372450280944909552241022604692346034861045432664821339360726024",
        "num_ids_2": 89,
        "num_ids_4": 1027
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AASS\") == \"Yes\"\nassert solution(\"AAAS\") == \"Yes\"\nassert solution(\"AAAAAA\") == \"No\"\nassert solution(\"ABCD\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\\n\", \"Testcase 1 failed\"\nassert solution(\"ABCDGH\") == \"No\\n\", \"Testcase 2 failed\"\nassert solution(\"ABCDGH\") == \"No\\n\", \"Testcase 3 failed\"\nassert solution(\"ABCDGH\") == \"No\\n\", \"Testcase 4 failed\"\nassert solution(\"ABCDGH\") == \"No\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAS\") == \"No\"\nassert solution(\"ZRRRR\") == \"No\"\nassert solution(\"AAABB\") == \"No\"\nassert solution(\"ABCDE\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Expected output: Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\\nS consists of A and S which both appear twice in S.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Solution should return Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"ACDF\") == \"No\"\nassert solution(\"ADBC\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\\n\"\nassert solution(\"AAA\") == \"No\\n\"\nassert solution(\"ABA\") == \"No\\n\"\nassert solution(\"AAB\") == \"Yes\\n\"\nassert solution(\"AABBC\") == \"Yes\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"Test\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-13 3\") == \"-10\\n\", \"Output should be -10\"\nassert solution(\"-10 5\") == \"-10\\n\", \"Output should be -10\"\nassert solution(\"5 5\") == \"5\\n\", \"Output should be 5\"\nassert solution(\"10 10\") == \"10\\n\", \"Output should be 10\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B is -10.\"\nassert solution(\"10 -5\") == \"15\", \"The largest number among A + B, A - B, and A \\times B is 15.\"\nassert solution(\"3 3\") == \"9\", \"The largest number among A + B, A - B, and A \\times B is 9.\"\nassert solution(\"-3 -2\") == \"-5\", \"The largest number among A + B, A - B, and A \\times B is -5.\"\nassert solution(\"-100 100\") == \"-100\", \"The largest number among A + B, A - B, and A \\times B is -100.\"",
        "num_ids_2": 73,
        "num_ids_4": 141
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"-13 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"1 2\") == \"Error: Both values cannot be equal.\"\nassert solution(\"-1 2\") == \"Error: Both values cannot be equal.\"\nassert solution(\"1 0\") == \"Error: Both values cannot be equal.\"\nassert solution(\"-1 0\") == \"Error: Both values cannot be equal.\"",
        "num_ids_2": 76,
        "num_ids_4": 112
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3\") == \"-10\"\nassert solution(\"-13 3\") == \"-10\"\nassert solution(\"1 2\") == \"-4\"\nassert solution(\"-1 2\") == \"-4\"\nassert solution(\"0 5\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 3\") == \"-10\"\nassert solution(\"-13 3\") == \"-10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"-5 6\") == \"60\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"-100 -100\") == \"-100\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-13 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B is -10.\"\nassert solution(\"10 -2\") == \"3\", \"The largest number among A + B, A - B, and A \\times B is -10.\"\nassert solution(\"-4 6\") == \"32\", \"The largest number among A + B, A - B, and A \\times B is -10.\"\nassert solution(\"1 2\") == \"5\", \"The largest number among A + B, A - B, and A \\times B is -10.\"\nassert solution(\"-5 8\") == \"-32\", \"The largest number among A + B, A - B, and A \\times B is -10.\"",
        "num_ids_2": 73,
        "num_ids_4": 144
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\", \"Your solution is incorrect.\"\nassert solution(\"-15 4\") == \"40\", \"Your solution is incorrect.\"\nassert solution(\"1 1\") == \"2\", \"Your solution is incorrect.\"\nassert solution(\"5 10\") == \"-45\", \"Your solution is incorrect.\"\nassert solution(\"3 4\") == \"-12\", \"Your solution is incorrect.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\") == \"-10\\n\"\nassert solution(\"-5 -3\") == \"-12\\n\"\nassert solution(\"0 10\") == \"-10\\n\"\nassert solution(\"10 0\") == \"-10\\n\"\nassert solution(\"-5 10\") == \"-12\\n\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\") == \"-10\\n\", \"Input should be a pair of integers\"\nassert solution(\"-10 5\") == \"5\\n\", \"Input should be a pair of integers\"\nassert solution(\"10 -5\") == \"-35\\n\", \"Input should be a pair of integers\"\nassert solution(\"-5 0\") == \"0\\n\", \"Input should be a pair of integers\"\nassert solution(\"-5 10\") == \"55\\n\", \"Input should be a pair of integers\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"2 3\") == \"-13\", \"The largest number among A + B, A - B, and A \\times B should be -13.\"\nassert solution(\"5 3\") == \"-24\", \"The largest number among A + B, A - B, and A \\times B should be -24.\"\nassert solution(\"2 10\") == \"100\", \"The largest number among A + B, A - B, and A \\times B should be 100.\"\nassert solution(\"1 10\") == \"100\", \"The largest number among A + B, A - B, and A \\times B should be 100.\"",
        "num_ids_2": 74,
        "num_ids_4": 151
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n6 5 6 8') == '3\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"6\\n10 5 10 10\\n10 5 10 10\\n10 5 10 10\\n10 5 10 10\") == \"3\"\nassert solution(\"8\\n10 10 10 10 10 10\") == \"4\"\nassert solution(\"6\\n5 5 5\\n10 10 10\") == \"2\"\nassert solution(\"10\\n5 5 5 5 5 5 5 5 5 5\") == \"4\"",
        "num_ids_2": 77,
        "num_ids_4": 133
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5 6 8\\n\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3', 'Test case 1 failed'\nassert solution(input()) == '2', 'Test case 2 failed'\nassert solution(input()) == '3', 'Test case 3 failed'\nassert solution(input()) == '1', 'Test case 4 failed'\nassert solution(input()) == '3', 'Test case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed. Expected: {output_str}, got: {solution(input_str)}\"\nfor i, (input_str, output_str) in enumerate(tests):\n    assert solution(input_str) == output_str, f\"Test case {i+1} failed. Expected: {output_str}, got: {solution(input_str)}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"N\\n6 5 6 8\\n\") == \"3\\n\"\nassert solution(stdin=\"N\\n5 4 3 2\\n\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n5 10 20\") == \"2\"\nassert solution(\"6\\n7 10 15 16 18\") == \"2\"\nassert solution(\"7\\n5 7 8 11\") == \"1\"\nassert solution(\"8\\n3 8 10\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, \"Test failed\"\n\nN = int(stdin.readline().strip())\nH = list(map(int, stdin.readline().strip().split()))",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4 '\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1 '\nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1 '",
        "num_ids_2": 62,
        "num_ids_4": 92
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 1 2 3 4\") == \"2\", \"Test 1\"\nassert solution(\"1 1 1 1\") == \"4\", \"Test 2\"\nassert solution(\"1 2 1 2 1\") == \"3\", \"Test 3\"\nassert solution(\"1 2 3 4 5\") == \"1\", \"Test 4\"\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n7\n1 2 3 1 2 3 4\n''') == '''\n2\n3 4\n'''\n\nassert solution('''\n4\n1 1 1 1\n''') == '''\n4\n1 1 1 1 \n'''\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '''\n1\n5 \n'''\n\nassert solution('''\n5\n1 2 1 2 1\n''') == '''\n3\n2 2 1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n1\\n2\\n3\\n4\\n\") == \"2\\n3 4\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Invalid input\"\n\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Input Error\"\nassert solution(\"7\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1 \"",
        "num_ids_2": 62,
        "num_ids_4": 92
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nprint('All tests passed!')",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(output - output[0])}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\", \"Solution should be 1\"\nassert solution() == \"2\", \"Solution should be 2\"\nassert solution() == \"1\", \"Solution should be 1\"\nassert solution() == \"7\", \"Solution should be 7\"\nassert solution() == \"4\", \"Solution should be 4\"\nassert solution() == \"333333333\", \"Solution should be 333333333\"\nassert solution() == \"333333328\", \"Solution should be 333333328\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '1'\nassert solution(6) == '2'\nassert solution(7) == '1'\nassert solution(21) == '7'\nassert solution(28) == '4'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test Case {t+1} Failed: {solution(input())}!= {output()}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 166,
        "num_ids_4": 332
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"50\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\", \"Solution is incorrect\"\nassert solution(\"1000000000 9\") == \"1\", \"Solution is incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(512, 4) == 50, \"The output should be 50.\"\nassert solution(1000000000, 9) == 1, \"The output should be 1.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(int(input()))) == 50, \"Expected: 50, Received: {}\".format(solution(str(int(input()))))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Testcase Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\") == \"5\\n2 1 1 2 3\\n\\n2\\n5 5\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n7\\n1 2 2 2 2 3 2\") == \"5\\n2 1 1 2 3\\n2\\n5 5 \"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\\n5\\n3 7 5 1 5\\n\\n3\\n5 1 4\\n\\n7\\n2 2 3 2 1 2 2\\n\") == \"5\\n2 1 1 2 3\\n\\n2\\n5 5\\n\\n2\\n4 5\\n\\n7\\n1 2 2 2 2 3 2\"\nassert solution(\"5\\n3 7 5 1 5\\n\\n3\\n5 1 4\\n\\n7\\n2 2 3 2 1 2 2\\n\") == \"2\\n5 5\\n\\n2\\n4 5\\n\\n7\\n1 2 2 2 2 3 2\"\nassert solution(\"3\\n5 1 4\\n\\n7\\n2 2 3 2 1 2 2\\n\") == \"2\\n4 5\\n\\n2\\n5 5\\n\\n7\\n1 2 2 2 2 3 2\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\\n7\\n1 2 2 2 2 3 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 216,
        "num_ids_4": 369
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5 \"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5 \"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n4 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == 5\nassert solution('5\\n3 7 5 1 5') == 2\nassert solution('3\\n5 1 4') == 2\nassert solution('7\\n2 2 3 2 1 2 2') == 7\nassert solution('7\\n1 2 2 2 2 3 2') == 7",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n1\\n') == '3'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n1\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n2\\n1 2\\n') == '3'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n2\\n1 2\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n1\\n1\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n1\\n1\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n2\\n1\\n1\\n') == '3'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n2\\n1\\n1\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n1\\n2\\n1\\n1\\n') == '3'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n1\\n2\\n1\\n1\\n') == '-1'\n\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n2\\n1\\n2\\n1\\n1\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n1 2\\n2\\n1\\n2\\n1\\n1\\n') == '-1'",
        "num_ids_2": 72,
        "num_ids_4": 150
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}, \\nActual output: {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == '''\n2\n'''\n\nassert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '''\n-1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"tleelte\" or solution(input()) == \"qwerty\" or solution(input()) == \"vvvvvv\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'tleelte\\nqwerty\\nvvvvvv\\nabcde'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'tleelte', \"Test case 1\"\nassert solution() == 'qwerty', \"Test case 2\"\nassert solution() == 'vvvvvv', \"Test case 3\"\nassert solution() == 'abcde', \"Test case 4\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\\nwerty\\nvvvvvv\\nbcde\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\\nqwerty\\nvvvvv\\nbcde\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"tleelte\", \"The correct answer is 'tleelte', but it is: \" + solution(input())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"tleelte\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '12', 'Your code is incorrect.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Expected output 12 but got {}\".format(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"5 7 3\") == \"15\"\nassert solution(\"3 10 60\") == \"60\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"999999999999999999999999999999999\"\n",
        "num_ids_2": 32,
        "num_ids_4": 122
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 12 6\") == \"12\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 12 6\") == \"12\", \"Expected output 12\"\nassert solution(\"10 8 5\") == \"10\", \"Expected output 10\"\nassert solution(\"10 10 10\") == \"0\", \"Expected output 0\"",
        "num_ids_2": 47,
        "num_ids_4": 70
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12\\n\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 5 5\") == \"1\"\nassert solution(\"7 6 5\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Test 1\"\nassert solution(\"100 200 300\") == \"30\\n\", \"Test 2\"\nassert solution(\"1000 1000 1000\") == \"100\\n\", \"Test 3\"\nassert solution(\"10000 10000 10000\") == \"1000\\n\", \"Test 4\"\nassert solution(\"200 1000 100\") == \"130\\n\", \"Test 5\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 52,
        "num_ids_4": 120
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"8\\n\") == \"2\\n\"\nassert solution(stdin=\"10\\n\") == \"1\\n\"\nassert solution(stdin=\"12\\n\") == \"0\\n\"\nassert solution(stdin=\"15\\n\") == \"0\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"2\"\nassert solution(\"9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n22",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"2\" #pass\nassert solution(\"5\") == \"2\" #pass\nassert solution(\"10\") == \"1\" #pass\nassert solution(\"20\") == \"2\" #pass\nassert solution(\"30\") == \"1\" #pass",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n\") == \"2\\n\"  # No group with more than three students\nassert solution(\"6\\n\") == \"1\\n\"  # Two groups with three and four students\nassert solution(\"5\\n\") == \"2\\n\"  # One group with three and four students\nassert solution(\"7\\n\") == \"3\\n\"  # One group with three and four students\nassert solution(\"3\\n\") == \"1\\n\"  # No group with more than three students\nassert solution(\"1\\n\") == \"1\\n\"  # One group with three and four students\nassert solution(\"1001\\n\") == \"1\\n\"  # Two groups with three and four students",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\", \"Your code is incorrect. Please check the constraints and try again.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('4 2') == '2'\nassert solution('5 3') == '3'\nassert solution('6 4') == '4'\nassert solution('7 6') == '6'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3'\nprint('All tests passed successfully!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 5\") == \"3\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2 5\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 5\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"1 3\\n\") == \"3\\n\"\nassert solution(b\"2 4\\n\") == \"6\\n\"\nassert solution(b\"5 6\\n\") == \"10\\n\"\nassert solution(b\"7 8\\n\") == \"16\\n\"\nassert solution(b\"9 10\\n\") == \"20\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"The output is incorrect.\"\nprint(\"The output is correct.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n\") == \"3\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"10 4\\n\") == \"1\\n\"\nassert solution(\"5 12\\n\") == \"1\\n\"\nassert solution(\"2 1\\n\") == \"2\\n\"\nassert solution(\"1 10\\n\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\nassert solution(\"2 4\") == \"5\\n\"\nassert solution(\"10 5\") == \"15\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Test Case 1 failed\"\n\nassert solution() == \"3\", \"Test Case 2 failed\"\n\nassert solution() == \"3\", \"Test Case 3 failed\"\n\nassert solution() == \"3\", \"Test Case 4 failed\"\n\nassert solution() == \"4\", \"Test Case 5 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"2 1\") == \"2\\n\", \"Test 2 failed\"\nassert solution(\"3 2\") == \"5\\n\", \"Test 3 failed\"\nassert solution(\"4 3\") == \"8\\n\", \"Test 4 failed\"\nassert solution(\"5 4\") == \"13\\n\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 12\") == \"16\", \"Solution is not correct!\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\", \"The output of the code is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"Incorrect solution\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"5 20\") == \"10\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"7 14\") == \"15\"\nassert solution(\"0 5\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"16\", \"Test case 1 should pass\"\nassert solution(\"2 4\") == \"2\", \"Test case 2 should pass\"\nassert solution(\"3 7\") == \"4\", \"Test case 3 should pass\"\nassert solution(\"12 24\") == \"12\", \"Test case 4 should pass\"\nassert solution(\"1 1\") == \"1\", \"Test case 5 should pass\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\\nchokudaiz\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudai\\nchokudai\") == \"No\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('chokudai\\nchokudaiz') == 'Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"chokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\\nchokudaiz\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\\n\"\nassert solution(\"3 6\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 3\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 5\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 6\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16') == '9\\n'\nassert solution('0 0') == 'IMPOSSIBLE\\n'\nassert solution('2 1') == 'IMPOSSIBLE\\n'\nassert solution('2 12') == 'IMPOSSIBLE\\n'\nassert solution('1 12') == 'IMPOSSIBLE\\n'",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9\\n'\nassert solution('0 3') == 'IMPOSSIBLE\\n'\nassert solution('2 2') == 'IMPOSSIBLE\\n'\nassert solution('10 10') == 'IMPOSSIBLE\\n'\nassert solution('10 5') == '9\\n'\n",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\nprint(solution(\"2 16\"))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"9\\n7\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"3 24\") == \"IMPOSSIBLE\"\nassert solution(\"1 3\") == \"IMPOSSIBLE\"\nassert solution(\"10 15\") == \"IMPOSSIBLE\"\nassert solution(\"0 0\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\") == \"9\\n\"\nassert solution(\"3 25\") == \"IMPOSSIBLE\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"3 8\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes', \"Solution should return 'Yes' for '117'.\"\nassert solution('118') == 'No', \"Solution should return 'No' for '118'.\"\nassert solution('119') == 'Yes', \"Solution should return 'Yes' for '119'.\"\nassert solution('120') == 'No', \"Solution should return 'No' for '120'.\"\nassert solution('121') == 'Yes', \"Solution should return 'Yes' for '121'.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(117) == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(23) == \"No\"\nassert solution(123) == \"Yes\"\nassert solution(9) == \"No\"\nassert solution(1) == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"117\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"123\") == \"No\", \"Test case 2 failed\"\nassert solution(\"111\") == \"Yes\", \"Test case 3 failed\"\nassert solution(\"1111\") == \"Yes\", \"Test case 4 failed\"\nassert solution(\"1112\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(117) == 'Yes', 'Solution not correct'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\", \"Output is incorrect\"\nassert solution(\"001\") == \"No\", \"Output is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes', \"117 should contain 7 as its last digit\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"123456\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"456\") == \"Yes\"\nassert solution(\"789\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\" or solution(input()) == \"No\", \"Input and output should be either 'Yes' or 'No'\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"12\") == \"Yes\", \"Solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"15\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(12) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(12) == 'Yes'\nassert solution(42) == 'Yes'\nassert solution(1000) == 'No'\nassert solution(101) == 'Yes'\nassert solution(123456789) == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"No\"  # Example Output: \"No\"\nassert solution(12) == \"Yes\"  # Example Output: \"Yes\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes', 'Please provide the correct input'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"Yes\", \"The output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 0 0\") == \"0 0 0 1\"\nassert solution(\"-1 1 0 0\") == \"0 0 0 1\"\nassert solution(\"1 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 1 1 1\") == \"1 0 1 1\"\nassert solution(\"0 1 0 1\") == \"1 0 1 1\"\nassert solution(\"1 0 0 0\") == \"0 0 0 1\"\nassert solution(\"1 1 1 0\") == \"0 0 0 1\"\nassert solution(\"0 1 1 1\") == \"1 0 1 1\"\nassert solution(\"1 0 0 1\") == \"1 0 1 1\"\nassert solution(\"1 1 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 0 1 1\"\nassert solution(\"1 1 1 1\") == \"1 0 1 1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Test Case 1\"\nassert solution(\"0 1 1 0\") == \"-1 0 0 1\", \"Test Case 2\"\nassert solution(\"1 0 1 0\") == \"0 1 1 0\", \"Test Case 3\"\nassert solution(\"0 0 1 0\") == \"0 0 0 1\", \"Test Case 4\"\nassert solution(\"1 1 0 0\") == \"1 0 0 1\", \"Test Case 5\"\nassert solution(\"1 0 1 1\") == \"0 1 1 1\", \"Test Case 6\"\nassert solution(\"1 1 0 1\") == \"1 1 1 0\", \"Test Case 7\"\nassert solution(\"1 0 1 0\") == \"0 0 1 1\", \"Test Case 8\"\nassert solution(\"1 1 1 0\") == \"1 1 1 0\", \"Test Case 9\"\nassert solution(\"1 1 1 1\") == \"1 1 0 0\", \"Test Case 10\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"0 0 0 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '-1 1 -1 0\\n', \"The function should return '-1 1 -1 0'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"yellow red\\n2 3\\nblue\\n\") == \"3 2\\n\"\nassert solution(\"green yellow\\n3 4\\ngreen\\n\") == \"4 3\\n\"\nassert solution(\"blue orange\\n4 2\\nblue\\n\") == \"1 1\\n\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"brown cow\\n4 6\\nred\\n\") == \"2 4\\n\"\nassert solution(\"apple orange\\n5 7\\nred\\n\") == \"2 4\\n\"\nassert solution(\"apple orange\\n6 8\\ngreen\\n\") == \"4 6\\n\"\nassert solution(\"apple orange\\n7 9\\ngreen\\n\") == \"4 6\\n\"\nassert solution(\"apple orange\\n8 10\\ngreen\\n\") == \"4 6\\n\"\nassert solution(\"apple orange\\n9 11\\ngreen\\n\") == \"4 6\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"yellow green\\n3 4\\nred\\n\") == \"0 0\\n\"\nassert solution(\"blue yellow\\n3 4\\nred\\n\") == \"4 4\\n\"\nassert solution(\"red green\\n3 4\\nred\\n\") == \"0 0\\n\"\nassert solution(\"green red\\n3 4\\nred\\n\") == \"4 0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\", \"Test Case 1\"\n\nassert solution(\"green yellow\\n5 6\\ngreen\") == \"1 6\\nTakahashi chose a ball with green written on it and threw it away. Now we have one ball with the string S and six balls with the string T.\\n\", \"Test Case 2\"\n\nassert solution(\"orange blue\\n7 8\\nother\") == \"2 4\\nTakahashi chose a ball with orange written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\", \"Test Case 3\"\n\nassert solution(\"purple red\\n9 10\\npurple\") == \"3 6\\nTakahashi chose a ball with purple written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\", \"Test Case 4\"\n\nassert solution(\"brown yellow\\n11 12\\nbrown\") == \"4 8\\nTakahashi chose a ball with brown written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\", \"Test Case 5\"",
        "num_ids_2": 131,
        "num_ids_4": 266
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"apple orange\\n2 3\\nbanana\\n\") == \"4 3\\n\"\nassert solution(\"hello world\\n5 6\\n\") == \"0 6\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 73
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"1\\nhello\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"1\\nhello\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\n\nassert solution(\"1\\nabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nbcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\ndefabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"\nassert solution(\"5\\nabc\\n\") == \"No\"\nassert solution(\"4\\nabc\\n\") == \"No\"\nassert solution(\"7\\nabcabc\\n\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\ndefabc\") == \"No\"\nassert solution(\"5\\nabcabc\") == \"Yes\"\nassert solution(\"5\\ndefabc\") == \"No\"\nassert solution(\"4\\nabcabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"\nassert solution(\"5\\nabc\\n\") == \"No\"\nassert solution(\"10\\nabc\\n\") == \"No\"\nassert solution(\"1\\nabc\\n\") == \"No\"\nassert solution(\"10\\nxyz\\n\") == \"Yes\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\ndefabc\") == \"No\"\nassert solution(\"7\\nabcabc\") == \"No\"\nassert solution(\"8\\nabcabc\") == \"No\"\nassert solution(\"9\\nabcabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.000000 0\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"5 5 1 2\") == \"3.000000 0\"\nassert solution(\"6 6 1 2\") == \"4.000000 0\"\nassert solution(\"4 4 1 2\") == \"3.000000 0\"\nassert solution(\"0 0 1 2\") == \"3.000000 0\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3.000000 0\\n', \"Test case 1 failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 2\\n\") == \"3.000000 0\\n\"\n\nassert solution(\"1 3 2 2\\n\") == \"3.000000 1\\n\"\n\nassert solution(\"1 3 3 1\\n\") == \"1.000000 0\\n\"\n\nassert solution(\"2 3 3 1\\n\") == \"1.000000 1\\n\"\n\nassert solution(\"2 3 4 2\\n\") == \"5.000000 0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.000000 0\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3.000000 0\\n\", \"Test failed: expected output not found\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\", \"The solution should be Four.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"7\\nP W P W W\") == \"Three\"\nassert solution(\"8\\nP Y Y Y Y\") == \"Four\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\nG W Y P Y W\\n') == 'Four'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Four\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 6\nassert solution(10) == 6\nassert solution(5) == 2\nassert solution(100) == 6\nassert solution(1000) == 6",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3 2\\n2 3 1 3 4 2') == '6'\nassert solution('5 3 3\\n1 2 4 2 3') == '2'\nassert solution('5 5 6\\n1 2 6 10 3') == '2'",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Solution to the problem can be found here\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Expected output: 6, got: \" + solution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1, f\"Error 1: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Error 2: {solution(input_2)}!= {output_2}\"\nassert solution(input_3) == output_3, f\"Error 3: {solution(input_3)}!= {output_3}\"\nassert solution(input_4) == output_4, f\"Error 4: {solution(input_4)}!= {output_4}\"\nassert solution(input_5) == output_5, f\"Error 5: {solution(input_5)}!= {output_5}\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num} failed: got '{solution(input())}', expected '{expected_output}'\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 8 2 6 2\\n4 5 4 1 3\\n') == '7\\n'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0\\n'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3\\n4\\n1 3 2 4\\n1 3 2 4\\n') == '7\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"Output\\n7\\n\\nInput\\n4\\n1 3 2 4\\n1 3 2 4\\n\\nOutput\\n0\\n\"\nassert solution(\"Input\\n4\\n1 3 2 4\\n1 3 2 4\\n\") == \"Output\\n0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3\\n\\n4\\n1 3 2 4\\n1 3 2 4\\n') == 7\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n\\n\\n\\n') == 0",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Incorrect output: '{solution(input())}'!= '{output}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '7\\n'\nassert solution(open('input2.txt', 'r')) == '0\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"5\n   4 8 2 6 2\n   4 5 4 1 3\n   4 5 3 4 2\n   4 5 3 5 2\n   4 4 5 4 3\"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"4\n   1 3 2 4\n   1 3 2 4\"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == [1, 1, 3, 5, 9]",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Solution should be {expected}, but got {solution}\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"The output is not correct. The expected output is {solution_output}, but it is {solution(solution_input)}.\" for solution_input, solution_output in zip(solution_inputs, solution_outputs)",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n1 1 3 5 9\n\"\"\"\nassert solution == \"\"\"\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"The output does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == solution_expected, f\"The provided solution {solution} does not match the expected solution {solution_expected}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5') == '1\\n'\n\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6') == '2\\n'",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\\n\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\\n\"\nassert solution(\"Input\\n5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\nOutput\\n1\\n\\nInput\\n17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\\nOutput\\n2\\n\") == \"1\\n2\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 298
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1\\n'\n\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4\\n'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"The output should be 1, but it is {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\", \"Incorrect output for the first example.\"\nassert solution(stdin) == \"4\", \"Incorrect output for the second example.\"\nassert solution(stdin) == \"0\", \"Incorrect output for the third example.\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"Output\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\\nOutput\\n0\\n\"\n",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5''') == '4'\n\nassert solution('''3\n1 1 2\n2 3\n1 3''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {input_data}, {output_data}\" for input_data, output_data in [\n    ('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n', '1\\n'),\n    ('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n', '4\\n'),\n    ('3\\n1 1 2\\n2 3\\n1 3\\n', '0\\n'),\n]",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"bc\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=sys.stdin.readline().strip()) == expected_output\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"azbf\") == \"bc\"\nassert solution(\"azbfg\") == \"bc\"\nassert solution(\"azb\") == \"bc\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"azbc\") == \"bc\"\nassert solution(\"azbcde\") == \"bcde\"\nassert solution(\"azbcdef\") == \"bcdef\"\nassert solution(\"azbcdefgh\") == \"bcdefgh\"\nassert solution(\"azbcdefghij\") == \"bcdefg\"\nassert solution(\"azbcdefghijkl\") == \"bcdefghij\"\nassert solution(\"azbcdefghijklm\") == \"bcdefg\"\nassert solution(\"azbcdefghijklmno\") == \"bcdefghij\"\nassert solution(\"azbcdefghijklmnoq\") == \"bcdefg\"\nassert solution(\"azbcdefghijklmnoqrst\") == \"bcdefghij\"\nassert solution(\"azbcdefghijklmnoqrstu\") == \"bcdefg\"\nassert solution(\"azbcdefghijklmnoqrstuv\") == \"bcdefghij\"\nassert solution(\"azbcdefghijklmnoqrstuvw\") == \"bcdefg\"\nassert solution(\"azbcdefghijklmnoqrstuvwxyz\") == \"bcdefghij\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2\\naz\\nbf\\n\") == \"bc\"\nassert solution(stdin=\"5\\nafogk\\nasdji\\n\") == \"alvuw\"\nassert solution(stdin=\"6\\nnijfvj\\ntvqhwp\\n\") == \"qoztvz\"",
        "num_ids_2": 44,
        "num_ids_4": 71
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 'az', 'bf']) == 'bc'\nassert solution([5, 'afogk', 'asdji']) == 'alvuw'\nassert solution([6, 'nijfvj', 'tvqhwp']) == 'qoztvz'\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 61
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"alvuw\") == \"alvuw\"\nassert solution(\"qoztvz\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"afogk\", \"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\", \"tvqhwp\") == \"qoztvz\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 62
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('az') == 'bc'\nassert solution('bf') == 'bc'\nassert solution('asfogk') == 'alvuw'\nassert solution('tvqhwp') == 'qoztvz'",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\\n1 2 5 \\n1 2 5 \"\nassert solution == \"NO\\n\"\nassert solution == \"YES\\n1 2 5 \\n1 2 5 \"",
        "num_ids_2": 30,
        "num_ids_4": 51
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5 \\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 \\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\na1 a2 a3 a4\") == \"YES\\n1 2 5\\nYES\\n1 2 5\\nYES\"\nassert solution(\"5 4\\na1 a2 a3 a4\") == \"NO\"\nassert solution(\"4 4\\na1 a2 a3 a4\\na1 a2 a3 a4\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 62,
        "num_ids_4": 101
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n5 3\\n15 13 15 15 12\\n\\nOutput\\nYES\\n1 2 5 \\n\\nInput\\n5 4\\n15 13 15 15 12\\n\\nOutput\\nNO\\n\\nInput\\n4 4\\n20 10 40 30\\n\\nOutput\\nYES\\n1 2 3 4 ') == 'YES\\n1 2 3 4 '",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\\n\", \"First example\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\\n\", \"Second example\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\\n\", \"Third example\"",
        "num_ids_2": 75,
        "num_ids_4": 115
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The provided input ({input()}) is incorrect. The expected output is: {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 4 0 2\") == \"YES\\n1 0 0 0 1\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"1\\n0\") == \"YES\"\nassert solution(\"9\\n0 0 0 0 0 0 0 0 0\") == \"NO\"\nassert solution(\"10\\n5 2 1 7 3 9 6 8 4 0\") == \"NO\"",
        "num_ids_2": 81,
        "num_ids_4": 123
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The expected output is '{expected}', but got '{solution(input())}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected: {output()}, got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES\\n1 0 0 0 0 1 0 1 0', \"Test case 1 failed\"\nassert solution(input()) == 'YES\\n1 0 0 0 0 1 0 1 0', \"Test case 2 failed\"\nassert solution(input()) == 'YES\\n1 0 0 0 0 1 0 1 0', \"Test case 3 failed\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(9) == 'YES\\n1 0 0 0 0 1 0 1 0'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\n1 0 0 0 0 1 0 1 0\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"\nassert solution(stdin) == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"0\n1134\n0\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"3\n0\n1134\n0\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\n",
        "num_ids_2": 172,
        "num_ids_4": 344
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution:\\n{solution(input())}\\n\\nInput:\\n{input()}\\n\\nOutput:\\n{output}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output\\n3\\n0\\n1134\\n0\\n\\n\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n0\\n1134\\n0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1, \"Expected 1, got {}\".format(solution(2))\nassert solution(4) == 3, \"Expected 3, got {}\".format(solution(4))\nassert solution(8) == 1260, \"Expected 1260, got {}\".format(solution(8))\nassert solution(20) == 12164510040883200, \"Expected 12164510040883200, got {}\".format(solution(20))",
        "num_ids_2": 46,
        "num_ids_4": 132
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == 1\nassert solution('4') == 3\nassert solution('8') == 1260\nassert solution('20') == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 46,
        "num_ids_4": 74
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\npass'",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def\"",
        "num_ids_2": 46,
        "num_ids_4": 60
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def solution(stdin: str) -> str:pass\"",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('15 3\\ncccaabababaccbc\\n') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc\\n') == 'cccccc'\nassert solution('1 1\\n\\n') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def\"\n",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == 20",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Test case {index + 1} failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output', 'The output is not correct.'\nprint(\"Correct!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test {test_num} failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\nprint(\"ok\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == '-1'\nassert solution('5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n') == '3'\nassert solution('5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n..... \\n') == '3'\nassert solution('3 3\\n*.* \\n.*. \\n*.* \\n') == '-1'",
        "num_ids_2": 69,
        "num_ids_4": 128
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1\\n'\nassert solution('3 3\\n*.*\\n.*. \\n*.*\\n') == '-1\\n'",
        "num_ids_2": 114,
        "num_ids_4": 173
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n3 4 1\\n3 5 2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 177
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"3\n3 4 1\n3 5 2\n3 5 1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"2\n3 4 1\n3 5 2\"\"\"\n\nassert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"3\n3 4 1\n3 5 2\"\"\"\n\nassert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"-1\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '''3\n3 4 1\n3 5 2\n3 5 1\n'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '''3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '''-1\n'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == \"Yes\\n\", \"Solution should return Yes for 575.\"\nassert solution(256) == \"No\\n\", \"Solution should return No for 256.\"\nassert solution(97) == \"No\\n\", \"Solution should return No for 97.\"\nassert solution(100) == \"Yes\\n\", \"Solution should return Yes for 100.\"\nassert solution(0) == \"No\\n\", \"Solution should return No for 0.\"\nassert solution(-1) == \"No\\n\", \"Solution should return No for -1.\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\\n\"\nassert solution(\"2345\") == \"No\\n\"\nassert solution(\"123456789\") == \"No\\n\"\nassert solution(\"0\") == \"No\\n\"\nassert solution(\"11\") == \"Yes\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(12345) == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"Yes\", \"N=575 is also 575 when read backward, so it is a palindromic number. You should print Yes.\"\nassert solution(\"777\") == \"No\", \"N=777 is not a palindromic number.\"\nassert solution(\"121\") == \"Yes\", \"N=121 is a palindromic number.\"\nassert solution(\"123\") == \"No\", \"N=123 is not a palindromic number.\"\nassert solution(\"12345\") == \"Yes\", \"N=12345 is a palindromic number.\"",
        "num_ids_2": 70,
        "num_ids_4": 123
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\", \"Your code is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"1 1\") == \"Alice\"\nassert solution(\"13 12\") == \"Alice\"\nassert solution(\"7 7\") == \"Alice\"\nassert solution(\"2 2\") == \"Alice\"\nassert solution(\"12 11\") == \"Alice\"\nassert solution(\"1 12\") == \"Alice\"\nassert solution(\"3 2\") == \"Alice\"\nassert solution(\"10 9\") == \"Alice\"\nassert solution(\"5 3\") == \"Alice\"\nassert solution(\"9 8\") == \"Alice\"\nassert solution(\"6 4\") == \"Alice\"\nassert solution(\"4 5\") == \"Alice\"\nassert solution(\"8 12\") == \"Alice\"\nassert solution(\"5 11\") == \"Alice\"\nassert solution(\"11 10\") == \"Alice\"\nassert solution(\"3 9\") == \"Alice\"\nassert solution(\"9 13\") == \"Alice\"\nassert solution(\"11 7\") == \"Alice\"\nassert solution(\"1 9\") == \"Alice\"\nassert solution(\"10 8\") == \"Alice\"\nassert solution(\"11 6\") == \"Alice\"\nassert solution(\"9 5\") == \"Alice\"\nassert solution(\"7 6\") == \"Alice\"\nassert solution(\"12 4\") == \"Alice\"\nassert solution(\"2 1\") == \"Alice\"\nassert solution(\"8 10\") == \"Alice\"\nassert solution(\"6 7\") == \"Alice\"\nassert solution(\"10 6\") == \"Alice\"\nassert solution(\"9 3\") == \"Alice\"\nassert solution(\"6 2\") == \"Alice\"\nassert solution(\"13 1\") == \"Alice\"\nassert solution(\"11 8\") == \"Alice\"\nassert solution(\"13 10\") == \"Alice\"\nassert solution(\"12 8\") == \"Alice\"\nassert solution(\"6 12\") == \"Alice\"\nassert solution(\"4 11\") == \"Alice\"\nassert solution(\"5 10\") == \"Alice\"\nassert solution(\"7 4\") == \"Alice\"\nassert solution(\"11 13\") == \"Alice\"\nassert solution(\"12 5\") == \"Alice\"\nassert solution(\"3 12\") == \"Alice\"\nassert solution(\"9 7\") == \"Alice\"\nassert solution(\"10 4\") == \"Alice\"\nassert solution(\"5 9\") == \"Alice\"\nassert solution(\"12 7\") == \"Alice\"\nassert solution(\"13 9\") == \"Alice\"\nassert solution(\"3 10\") == \"Alice\"\nassert solution(\"5 8\") == \"Alice\"\nassert solution(\"12 3\") == \"Alice\"\nassert solution(\"11 2\") == \"Alice\"\nassert solution(\"7 8\") == \"Alice\"\nassert solution(\"8 6\") == \"Alice\"\nassert solution(\"4 9\") == \"Alice\"\nassert solution(\"1 8\") == \"Alice\"\nassert solution(\"7 12\") == \"Alice\"\nassert solution(\"1 11\") == \"Alice\"\nassert solution(\"6 5\") == \"Alice\"\nassert solution(\"13 4\") == \"Alice\"\nassert solution(\"2 10\") == \"Alice\"\nassert solution(\"6 13\") == \"Alice\"\nassert solution(\"11 9\") == \"Alice\"\nassert solution(\"3 7\") == \"Alice\"\nassert solution(\"10 2\") == \"Alice\"\nassert solution(\"12 10\") == \"Alice\"\nassert solution(\"2 4\") == \"Alice\"\nassert solution(\"9 6\") == \"Alice\"\nassert solution(\"13 7\") == \"Alice\"\nassert solution(\"12 6\") == \"Alice\"\nassert solution(\"11 5\") == \"Alice\"\nassert solution(\"10 1\") == \"Alice\"\nassert solution(\"13 8\") == \"Alice\"\nassert solution(\"10 7\") == \"Alice\"\nassert solution(\"6 8\") == \"Alice\"\nassert solution(\"11 3\") == \"Alice\"\nassert solution(\"10 9\") == \"Alice\"\nassert solution(\"5 1\") == \"Alice\"\nassert solution(\"12 2\") == \"Alice\"\nassert solution(\"9 4\") == \"Alice\"\nassert solution(\"12 11\") == \"Alice\"\nassert solution(\"13 6\") == \"Alice",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"11 9\") == \"Alice\"\nassert solution(\"7 5\") == \"Alice\"\nassert solution(\"8 7\") == \"Bob\"\nassert solution(\"13 8\") == \"Bob\"\nassert solution(\"1 9\") == \"Draw\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice', 'Testcase 1 failed'\n\nassert solution('13 1') == 'Bob', 'Testcase 2 failed'\n\nassert solution('1 2') == 'Draw', 'Testcase 3 failed'\n\nassert solution('1 2') == 'Alice', 'Testcase 4 failed'\n\nassert solution('13 13') == 'Draw', 'Testcase 5 failed'",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8 6') == 'Alice'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"9 10\") == \"Draw\"\n\nfrom collections import Counter",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6\") == \"Alice\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"8 6\\n\") == \"Alice\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6\") == \"Alice\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"A B\\n\")) == \"Alice\", \"Solution does not return Alice\"\nassert solution(input(\"9 10\\n\")) == \"Alice\", \"Solution does not return Alice\"\nassert solution(input(\"3 6\\n\")) == \"Bob\", \"Solution does not return Bob\"\nassert solution(input(\"5 5\\n\")) == \"Draw\", \"Solution does not return Draw\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\", \"Test failed\"\nassert solution(\"the quick brown fox jumps over the lazy dog, and the dog is alligator, alligator is good.\") == \"the quick brown fox jumps over the lazy dog the dog is alligator alligator is good\", \"Test failed\"\nassert solution(\"123,456,789\") == \"123 456 789\", \"Test failed\"\nassert solution(\"   \") == \" \", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 80,
        "num_ids_4": 127
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"apple,banana,cherry\") == \"apple banana cherry\"\nassert solution(\"one,two,three\") == \"one two three\"\nassert solution(\"0123456789\") == \"0123456789\"\nassert solution(\"abc,def,ghi\") == \"abc def ghi\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 3\\n3 1\\n1 1\\n3 0\\n1 0\") == \"3\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\") == \"2\\n1\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 118
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\n\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n1\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('3 3\\n1 2\\n3 1\\n4 0\\n') == '3\\n1\\n'\nassert solution('2 1\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('3 1\\n1 2\\n3 1\\n4 0\\n') == '2\\n1\\n'\nassert solution('3 3\\n1 2\\n3 1\\n4 0\\n') == '3\\n1\\n'\nassert solution('3 2\\n2 3\\n3 1\\n4 0\\n') == '3\\n1\\n'",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"5 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"1\\n2\\n3\\n4\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 1\\n2 2\\n0 0\\n1 1\") == \"1\\n2\\n1\\n\"\nassert solution(\"4 3\\n3 0\\n0 1\\n0 0\") == \"1\\n2\\n2\\n\"\nassert solution(\"5 5\\n4 0\\n0 3\\n3 2\\n1 1\\n1 1\\n0 0\") == \"2\\n3\\n4\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"6 3\\n2 1\\n0 2\\n1 0\\n1 1\\n1 2\") == \"1\\n3\\n2\\n3\\n3\\n2\\n2\\n\"\nassert solution(\"7 3\\n5 2\\n1 0\\n3 1\\n2 1\\n1 2\\n1 0\") == \"1\\n3\\n2\\n2\\n3\\n2\\n3\\n2\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 170
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 3\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"3\\n1\\n\"\nassert solution(\"5 1\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 1\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 3\\n2 1\\n3 2\\n1 2\\n3 1\") == \"1\\n1\\n\"\nassert solution(\"4 4\\n2 3\\n3 4\\n3 2\\n1 1\") == \"2\\n1\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 112
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2\\n\") == \"14\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"14\", \"The given input is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"14\"\n\nThe output is correct and the solution is correct.",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 14\nassert solution(2) == 14\nassert solution(3) == 14\nassert solution(4) == 14\nassert solution(5) == 14\nassert solution(6) == 14\nassert solution(7) == 14\nassert solution(8) == 14\nassert solution(9) == 14\nassert solution(10) == 14\n\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14.0\"\nassert solution(\"5\") == \"225\"\nassert solution(\"10\") == \"54025\"\nassert solution(\"20\") == \"233168\"\nassert solution(\"100\") == \"2017712105131769700\"",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"14\\n\", \"The output of solution() should be 14.0, but it's actually: \" + solution(\"2\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 14, \"The output should be 14, but it is {}\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No\", \"No test case\"\nassert solution(\"2 3\\n#.\\n#\\n. \\n\\n\\n\") == \"No\", \"No test case\"\nassert solution(\"3 3\\n#.#\\n.#.#\\n#.#.#\\n#.#\\n#.#\") == \"Yes\", \"Test case 1\"\nassert solution(\"5 5\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\",
        "num_ids_2": 44,
        "num_ids_4": 1027
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n#. \\n.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#. \\n#. \\n.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#.#\\n#. \\n#. \\n.#\") == \"No\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#.#\\n#. \\n#.#\\n#.#\") == \"No\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"#.#\") == \"Yes\"\nassert solution(\"..\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'#.#\\n.#.#\\n#.#') == 'Yes'\nassert solution(r'#.#\\n#.##\\n#.#') == 'No'\nassert solution(r'#.#\\n..##\\n#.#') == 'Yes'\nassert solution(r'#.#\\n..##\\n..#') == 'Yes'\nassert solution(r'#.#\\n..##\\n#..') == 'No'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3 2\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#') == 'Yes'\nprint('All tests passed!')",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.#\\n#.#\\n#.#\\n.#\") == \"Yes\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n#.#\\n.#.#\\n#.#\\n.##\\n.#') == 'Yes\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"1 5 2\\n\") == \"53\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('3 7 6') == '40'\nassert solution('2 8 4') == '50'\nassert solution('5 6 1') == '11'\nassert solution('4 2 6') == '45'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('0 0 0') == '0'\nassert solution('1 9 9') == '100'\nassert solution('0 0 0') == '0'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"53\\n\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\", \"Please check the sample input and output.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"Expected output: 15950, but got: {}\".format(solution(\"3\\n4980\\n7980\\n6980\"))\nprint(\"All test cases passed!\")",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4980\\n7980\\n6980\\n') == '15950'\nassert solution('2\\n4980\\n') == '4980'\nassert solution('2\\n4980\\n6980\\n') == '13980'\nassert solution('5\\n4980\\n7980\\n6980\\n') == '22750'\nassert solution('10\\n4980\\n7980\\n6980\\n4980\\n7980\\n6980\\n') == '21060'\nassert solution('1\\n4980\\n7980\\n') == '4980'\n",
        "num_ids_2": 55,
        "num_ids_4": 117
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    4980\n    7980\n    6980\n    \"\"\"\n) == \"15950\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n100\\n200\\n300\\n400\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n100\\n200\\n300\\n400\\n1000\\n2000\\n3000\\n4000\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n100\\n200\\n300\\n400\\n1000\\n2000\\n3000\\n4000\\n10000\\n20000\\n30000\\n40000\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n100\\n200\\n300\\n400\\n1000\\n2000\\n3000\\n4000\\n10000\\n20000\\n30000\\n40000\\n100000\\n200000\\n300000\\n400000\\n1000000\\n2000000\\n3000000\\n4000000\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n100\\n200\\n300\\n400\\n1000\\n2000\\n3000\\n4000\\n10000\\n20000\\n30000\\n40000\\n100000\\n200000\\n300000\\n400000\\n1000000\\n2000000\\n3000000\\n4000000\\n10000000\\n20000000\\n30000000\\n40000000\\n100000000\\n200000000\\n300000000\\n400000000\\n1000000000\\n2000000000\\n3000000000\\n4000000000\\n10000000000\\n20000000000\\n30000000000\\n40000000000\\n100000000000\\n200000000000\\n300000000000\\n400000000000\\n1000000000000\\n2000000000000\\n3000000000000\\n4000000000000\\n10000000000000\\n20000000000000\\n30000000000000\\n40000000000000\\n100000000000000\\n200000000000000\\n300000000000000\\n4",
        "num_ids_2": 88,
        "num_ids_4": 272
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\nassert solution(\"4\\n4980\\n7980\\n6980\") == \"14950\"\nassert solution(\"5\\n4980\\n7980\\n6980\") == \"13950\"\nassert solution(\"6\\n4980\\n7980\\n6980\") == \"12950\"\nassert solution(\"7\\n4980\\n7980\\n6980\") == \"11950\"\nassert solution(\"8\\n4980\\n7980\\n6980\") == \"10950\"\nassert solution(\"9\\n4980\\n7980\\n6980\") == \"9950\"\nassert solution(\"10\\n4980\\n7980\\n6980\") == \"8950\"\nassert solution(\"11\\n4980\\n7980\\n6980\") == \"7950\"\nassert solution(\"12\\n4980\\n7980\\n6980\") == \"6950\"\nassert solution(\"13\\n4980\\n7980\\n6980\") == \"5950\"\nassert solution(\"14\\n4980\\n7980\\n6980\") == \"4950\"\nassert solution(\"15\\n4980\\n7980\\n6980\") == \"3950\"\nassert solution(\"16\\n4980\\n7980\\n6980\") == \"2950\"\nassert solution(\"17\\n4980\\n7980\\n6980\") == \"1950\"\nassert solution(\"18\\n4980\\n7980\\n6980\") == \"9950\"\nassert solution(\"19\\n4980\\n7980\\n6980\") == \"8950\"\nassert solution(\"20\\n4980\\n7980\\n6980\") == \"7950\"\nassert solution(\"21\\n4980\\n7980\\n6980\") == \"6950\"\nassert solution(\"22\\n4980\\n7980\\n6980\") == \"5950\"\nassert solution(\"23\\n4980\\n7980\\n6980\") == \"4950\"\nassert solution(\"24\\n4980\\n7980\\n6980\") == \"3950\"\nassert solution(\"25\\n4980\\n7980\\n6980\") == \"2950\"\nassert solution(\"26\\n4980\\n7980\\n6980\") == \"1950\"\nassert solution(\"27\\n4980\\n7980\\n6980\") == \"9950\"\nassert solution(\"28\\n4980\\n7980\\n6980\") == \"8950\"\nassert solution(\"29\\n4980\\n7980\\n6980\") == \"7950\"\nassert solution(\"30\\n4980\\n7980\\n6980\") == \"6950\"\nassert solution(\"31\\n4980\\n7980\\n6980\") == \"5950\"\nassert solution(\"32\\n4980\\n7980\\n6980\") == \"4950\"\nassert solution(\"33\\n4980\\n7980\\n6980\") == \"3950\"\nassert solution(\"34\\n4980\\n7980\\n6980\") == \"2950\"\nassert solution(\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"15\\n40\\n10\\n20\\n100\\n\") == \"105\"\nassert solution(\"15\\n40\\n10\\n20\\n100\\n20\\n\") == \"210\"",
        "num_ids_2": 63,
        "num_ids_4": 99
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"10\\n3\\n5\") == \"15\"\nassert solution(\"20\\n25\\n30\") == \"215\"",
        "num_ids_2": 47,
        "num_ids_4": 68
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10\\n\") == \"200\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10\\n20\\n7\\n35\\n120\\n10\") == \"200\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n20\\n7\\n35\\n120\\n10\\n20\\n7\\n35\\n120\\n10\\n\") == \"215\"",
        "num_ids_2": 60,
        "num_ids_4": 140
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n0\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n100\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n100000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n100000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n100000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1000000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n10000000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n100000000000000\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n1000000000000000\") == \"215\"",
        "num_ids_2": 60,
        "num_ids_4": 124
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\", \"Test Case 1\"\nassert solution(\"3\\n2\\n1\\n\") == \"0\\n\", \"Test Case 2\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n\") == \"215\\n\", \"Test Case 3\"\nassert solution(\"15\\n10\\n5\\n15\\n\") == \"230\\n\", \"Test Case 4\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\\n\", \"Test Case 5\"",
        "num_ids_2": 65,
        "num_ids_4": 133
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\\n\", \"The output should be 215.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(29) == \"215\"\nassert solution(20) == \"215\"\nassert solution(7) == \"29\"\nassert solution(35) == \"215\"\nassert solution(120) == \"215\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(29)) == 215\nassert solution(str(20)) == 20\nassert solution(str(7)) == 29\nassert solution(str(35)) == 35\nassert solution(str(120)) == 120",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7.5\\n\", \"Test Failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nassert solution(\"3\\n1 10 20\") == \"1.75\\n\"\nassert solution(\"1\\n1\") == \"1.0\\n\"\nassert solution(\"2\\n10\") == \"NaN\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 78
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\", \"Test failed\"\nassert solution(\"2\\n10\\n30\") == \"7.5\\n\", \"Test failed\"\nassert solution(\"2\\n\") == \"7.5\\n\", \"Test failed\"\nassert solution(\"2\\n30\") == \"7.5\\n\", \"Test failed\"\nassert solution(\"2\\n10 30 40\") == \"7.5\\n\", \"Test failed\"",
        "num_ids_2": 51,
        "num_ids_4": 93
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 30\") == \"7.50001\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7.5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\", \"Incorrect output. Expected 7.5, but got %s.\" % solution(\"2\\n10 30\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '7.5'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.50001'\nassert solution(input()) == '0.0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"5\\n1 2 3\\n\") == \"0.0\\n\"\nassert solution(\"3\\n1 2 3\\n4 5\\n\") == \"1.0\\n\"\nassert solution(\"1\\n1\\n\") == \"0.0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n5 10 15\") == \"7.5\"\nassert solution(\"2\\n1000 1000\") == \"7.5\"\nassert solution(\"2\\n10000 10000\") == \"7.5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"4 2\\n9\\n12\\n15\\n10\\n\") == \"1\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\") == \"0\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\") == \"2\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"4\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"6\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"8\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\") == \"10\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\") == \"12\"",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"An uppercase or lowercase English letter \\alpha will be given as input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Input is incorrect.\"\nassert solution(\"B\") == \"A\", \"Input is incorrect.\"\nassert solution(\"a\") == \"a\", \"Input is incorrect.\"\nassert solution(\"b\") == \"a\", \"Input is incorrect.\"\nassert solution(\"c\") == \"c\", \"Input is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"A\") == \"A\"\nassert solution(\"B\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"c\") == \"c\"\nassert solution(\"\u0393\") == \"\u0393\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('\u03b1') == 'A'\nassert solution('b') == 'A'\nassert solution('B') == 'A'\nassert solution('c') == 'a'\nassert solution('\u03b1bc') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"A\"\nassert solution(\"A\") == \"A\"\nassert solution(\"aB\") == \"aA\"\nassert solution(\"Abc\") == \"aA\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u03b3\") == \"a\"\nassert solution(\"\u03b4\") == \"A\"\nassert solution(\"\u03b5\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"A\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u0393\") == \"A\"\nassert solution(\"\u03b4\") == \"a\"\nassert solution(\"\u0395\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"6\\n\"\nassert solution(stdin=\"4 6\\n\") == \"24\\n\"\nassert solution(stdin=\"2 8\\n\") == \"24\\n\"\nassert solution(stdin=\"2 12\\n\") == \"6\\n\"\nassert solution(stdin=\"2 18\\n\") == \"100\\n\"\nassert solution(stdin=\"3 5\\n\") == \"5\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\", \"The number of the triples of X, Y and Z that satisfy the condition is incorrect\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"3 4\") == \"6\\n\", \"Test 2 failed\"\nassert solution(\"0 2\") == \"1\\n\", \"Test 3 failed\"\nassert solution(\"0 1\") == \"1\\n\", \"Test 4 failed\"\nassert solution(\"1 1\") == \"1\\n\", \"Test 5 failed\"\nassert solution(\"1 0\") == \"1\\n\", \"Test 6 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 5\") == \"13\"\nassert solution(\"10 7\") == \"16\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"10 5\") == \"2\"\nassert solution(\"5 10\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"3 25\") == \"4\"\nassert solution(\"6 5\") == \"6\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"4 15\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"6\"\nassert solution(\"3 5\\n\") == \"3\"\nassert solution(\"1 5\\n\") == \"2\"\nassert solution(\"1 1\\n\") == \"0\"\nassert solution(\"5 2\\n\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"01\") == \"NA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1910\") == \"MMYY\"\nassert solution(\"190501\") == \"AMBIGUOUS\"\nassert solution(\"190510\") == \"AMBIGUOUS\"\nassert solution(\"190519\") == \"AMBIGUOUS\"\nassert solution(\"190505\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"012345\") == \"NA\"\nassert solution(\"123456\") == \"NA\"\nassert solution(\"12345\") == \"AMBIGUOUS\"\nassert solution(\"000000\") == \"NA\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1234\") == \"NA\"\nassert solution(\"201905\") == \"YYMM\"\nassert solution(\"210119\") == \"MMYY\"\nassert solution(\"201811\") == \"AMBIGUOUS\"",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0501\") == \"MMYY\"\nassert solution(\"0102\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0101') == 'MMYY'\nassert solution('1234') == 'AMBIGUOUS'\nassert solution('010123') == 'NA'\nassert solution('0123') == 'NA'",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1905') == 'YYMM', 'Invalid input'\nassert solution('1201') == 'MMYY', 'Invalid input'\nassert solution('190519') == 'AMBIGUOUS', 'Invalid input'\nassert solution('120119') == 'NA', 'Invalid input'",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0529\") == \"MMYY\"\nassert solution(\"0123\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0105\") == \"MMYY\"\nassert solution(\"1005\") == \"AMBIGUOUS\"\nassert solution(\"1901\") == \"NA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0101') == 'MMYY'\nassert solution('1001') == 'AMBIGUOUS'\nassert solution('190519') == 'AMBIGUOUS'\nassert solution('0001') == 'NA'",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2\"\nprint(\"Two pairs can be chosen:\", (2, 1), (2, 3))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Solution should return 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2, \"Test Case 1 failed\"\nassert solution(4) == 1, \"Test Case 2 failed\"\nassert solution(5) == 0, \"Test Case 3 failed\"\nassert solution(10) == 2, \"Test Case 4 failed\"\nassert solution(12) == 6, \"Test Case 5 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '2\\n'\nassert solution(10) == '40'\nassert solution(20) == '11040'\nassert solution(30) == '209010'\nassert solution(40) == '3143010'",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"15\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\"\nprint(\"Test passed\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2', \"Test Case 1\"\nassert solution(1) == '1', \"Test Case 2\"\nassert solution(5) == '2', \"Test Case 3\"\nassert solution(10) == '3', \"Test Case 4\"\nassert solution(15) == '4', \"Test Case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 12\") == \"21\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"21\", \"The output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 12\") == \"21\", \"Expected '21' but got '{}'.\".format(solution(\"9 12\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 12\") == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 12\") == \"21\"\n\nassert solution(\"0 5\") == \"1\"\n\nassert solution(\"10 20\") == \"20\"\n\nassert solution(\"23 10\") == \"10\"\n\nassert solution(\"23 12\") == \"12\"",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 12\") == \"21\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21\\n', \"The solution should be 21.\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 1000') == '1000'\nassert solution('2 3000') == '3000'\nassert solution('4 4000') == '4000'\nassert solution('1 10000') == '10000'\nassert solution('2 10000') == '10000'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == \"3719\", \"Test Case 1 Failed\"\nassert solution(\"4 4111\") == \"4111\", \"Test Case 2 Failed\"\nassert solution(\"5 4000\") == \"4000\", \"Test Case 3 Failed\"\nassert solution(\"6 4111\") == \"4111\", \"Test Case 4 Failed\"\nassert solution(\"7 4111\") == \"4111\", \"Test Case 5 Failed\"\nassert solution(\"8 4111\") == \"4111\", \"Test Case 6 Failed\"\nassert solution(\"9 4111\") == \"4111\", \"Test Case 7 Failed\"\nassert solution(\"10 4111\") == \"4111\", \"Test Case 8 Failed\"\nassert solution(\"11 4111\") == \"4111\", \"Test Case 9 Failed\"\nassert solution(\"12 4111\") == \"4111\", \"Test Case 10 Failed\"\nassert solution(\"13 4111\") == \"4111\", \"Test Case 11 Failed\"\nassert solution(\"14 4111\") == \"4111\", \"Test Case 12 Failed\"\nassert solution(\"15 4111\") == \"4111\", \"Test Case 13 Failed\"\nassert solution(\"16 4111\") == \"4111\", \"Test Case 14 Failed\"\nassert solution(\"17 4111\") == \"4111\", \"Test Case 15 Failed\"\nassert solution(\"18 4111\") == \"4111\", \"Test Case 16 Failed\"\nassert solution(\"19 4111\") == \"4111\", \"Test Case 17 Failed\"\nassert solution(\"20 4111\") == \"4111\", \"Test Case 18 Failed\"\nassert solution(\"21 4111\") == \"4111\", \"Test Case 19 Failed\"\nassert solution(\"22 4111\") == \"4111\", \"Test Case 20 Failed\"\nassert solution(\"23 4111\") == \"4111\", \"Test Case 21 Failed\"\nassert solution(\"24 4111\") == \"4111\", \"Test Case 22 Failed\"\nassert solution(\"25 4111\") == \"4111\", \"Test Case 23 Failed\"\nassert solution(\"26 4111\") == \"4111\", \"Test Case 24 Failed\"\nassert solution(\"27 4111\") == \"4111\", \"Test Case 25 Failed\"\nassert solution(\"28 4111\") == \"4111\", \"Test Case 26 Failed\"\nassert solution(\"29 4111\") == \"4111\", \"Test Case 27 Failed\"\nassert solution(\"30 4111\") == \"4111\", \"Test Case 28 Failed\"\nassert solution(\"31 4111\") == \"4111\", \"Test Case 29 Failed\"\nassert solution(\"32 4111\") == \"4111\", \"Test Case 30 Failed\"\nassert solution(\"33 4111\") == \"4111\", \"Test Case 31 Failed\"\nassert solution(\"34 4111\") == \"4111\", \"Test Case 32 Failed\"\nassert solution(\"35 4111\") == \"4111\", \"Test Case 33 Failed\"\nassert solution(\"36 4111\") == \"4111\", \"Test Case 34 Failed\"\nassert solution(\"37 4111\") == \"4111\", \"Test Case 35 Failed\"\nassert solution(\"38 4111\") == \"4111\", \"Test Case 36 Failed\"\nassert solution(\"39 4111\") == \"4111\", \"Test Case 37 Failed\"\nassert solution(\"40 4111\") == \"4111\", \"Test Case 38 Failed\"\nassert solution(\"41 4111\") == \"411",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\", \"Test Case 1 Failed\"\nassert solution(\"3 4111\") == \"4111\", \"Test Case 2 Failed\"\nassert solution(\"5 1000\") == \"5000\", \"Test Case 3 Failed\"\nassert solution(\"5 5000\") == \"5000\", \"Test Case 4 Failed\"\nassert solution(\"5 3000\") == \"4000\", \"Test Case 5 Failed\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 20\") == \"0\"\nassert solution(\"3 50\") == \"60\"\nassert solution(\"5 900\") == \"0\"\nassert solution(\"5 1000\") == \"0\"\nassert solution(\"10 1000\") == \"0\"\nassert solution(\"20 2000\") == \"0\"\nassert solution(\"30 3000\") == \"0\"\nassert solution(\"40 4000\") == \"0\"\nassert solution(\"50 5000\") == \"0\"\nassert solution(\"60 6000\") == \"0\"\nassert solution(\"70 7000\") == \"0\"\nassert solution(\"80 8000\") == \"0\"\nassert solution(\"90 9000\") == \"0\"\nassert solution(\"100 10000\") == \"0\"\nassert solution(\"110 11000\") == \"0\"\nassert solution(\"120 12000\") == \"0\"\nassert solution(\"130 13000\") == \"0\"\nassert solution(\"140 14000\") == \"0\"\nassert solution(\"150 15000\") == \"0\"\nassert solution(\"160 16000\") == \"0\"\nassert solution(\"170 17000\") == \"0\"\nassert solution(\"180 18000\") == \"0\"\nassert solution(\"190 19000\") == \"0\"\nassert solution(\"200 20000\") == \"0\"\nassert solution(\"210 21000\") == \"0\"\nassert solution(\"220 22000\") == \"0\"\nassert solution(\"230 23000\") == \"0\"\nassert solution(\"240 24000\") == \"0\"\nassert solution(\"250 25000\") == \"0\"\nassert solution(\"260 26000\") == \"0\"\nassert solution(\"270 27000\") == \"0\"\nassert solution(\"280 28000\") == \"0\"\nassert solution(\"290 29000\") == \"0\"\nassert solution(\"300 30000\") == \"0\"\nassert solution(\"310 31000\") == \"0\"\nassert solution(\"320 32000\") == \"0\"\nassert solution(\"330 33000\") == \"0\"\nassert solution(\"340 34000\") == \"0\"\nassert solution(\"350 35000\") == \"0\"\nassert solution(\"360 36000\") == \"0\"\nassert solution(\"370 37000\") == \"0\"\nassert solution(\"380 38000\") == \"0\"\nassert solution(\"390 39000\") == \"0\"\nassert solution(\"400 40000\") == \"0\"\nassert solution(\"410 41000\") == \"0\"\nassert solution(\"420 42000\") == \"0\"\nassert solution(\"430 43000\") == \"0\"\nassert solution(\"440 44000\") == \"0\"\nassert solution(\"450 45000\") == \"0\"\nassert solution(\"460 46000\") == \"0\"\nassert solution(\"470 47000\") == \"0\"\nassert solution(\"480 48000\") == \"0\"\nassert solution(\"490 49000\") == \"0\"\nassert solution(\"500 50000\") == \"0\"\nassert solution(\"510 51000\") == \"0\"\nassert solution(\"520 52000\") == \"0\"\nassert solution(\"530 53000\") == \"0\"\nassert solution(\"540 54000\") == \"0",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data), \"Test Failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 3150\") == \"3150\"\nassert solution(\"1 5000\") == \"5000\"\nassert solution(\"4 4500\") == \"4500\"\nassert solution(\"2 4111\") == \"4111\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt').read()) == '4\\n'\nprint('Test successful')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11, 2) == 4",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\", \"Output should be 4.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"10 4\") == \"1\"\nassert solution(\"1000000000 10\") == \"4\"\nassert solution(\"1000000000 16\") == \"8\"\nassert solution(\"1000000000 36\") == \"26\"",
        "num_ids_2": 26,
        "num_ids_4": 70
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test 1 failed\"\nassert solution(\"12345678901234567890\") == \"15\", \"Test 2 failed\"\nassert solution(\"10\") == \"1\", \"Test 3 failed\"\nassert solution(\"1234567890\") == \"15\", \"Test 4 failed\"\nassert solution(\"123456789012345678901234567890\") == \"31\", \"Test 5 failed\"\n\nfor line in open(\"input.txt\", \"r\"):\n    assert solution(line) == \"4\", f\"Test {len(line.split())} failed\"",
        "num_ids_2": 55,
        "num_ids_4": 98
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test case 1 failed\"\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000\") == \"1\", \"Test case 2 failed\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000\") == \"1\", \"Test case 3 failed\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000\") == \"1\", \"Test case 4 failed\"\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 100,
        "num_ids_4": 258
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"The correct answer is 3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\\n\", \"Invalid input\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '3', 'The output should be 3.'\nassert solution(1) == '1', 'The output should be 1.'\nassert solution(50) == '30', 'The output should be 30.'\nassert solution(10) == '4', 'The output should be 4.'\nassert solution(0) == '0', 'The output should be 0.'",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\\n\"\nassert solution(\"100\") == \"100\\n\"\nassert solution(\"10\") == \"10\\n\"\nassert solution(\"0\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\", \"Test case 1 failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\", \"The function should return 'Yay!' for both inputs.\"\nassert solution(\"7 10\") == \"Yay!\\n\", \"The function should return 'Yay!' for both inputs.\"\nassert solution(\"8 14\") == \":(.\\n\", \"The function should return ':(.' for the third input.\"\nassert solution(\"12 16\") == \":(.\\n\", \"The function should return ':(.' for the fourth input.\"\nassert solution(\"5 16\") == \":(.\\n\", \"The function should return ':(.' for the fifth input.\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\", \"E869120's and square1001's 16-th birthday is coming soon.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yay!', \"Test case failed\"\nprint(\"Test case passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"3 5\") == \"Yay!\"\nassert solution(\"10 1\") == \"Yay!\"\nassert solution(\"10 0\") == \"Yay!\"\nassert solution(\"10 2\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\", \"The output is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\"\n\nassert solution(\"1 2\") == \"Yay!\\n\"\n\nassert solution(\"3 10\") == \"Yay!\\n\"\n\nassert solution(\"15 8\") == \"Yay!\\n\"\n\nassert solution(\"2 2\") == \":(\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yay!\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nassert solution(\"5 3\") == \"Yay!\"\n\nassert solution(\"6 3\") == \"Yay!\"\n\nassert solution(\"4 4\") == \"Yay!\"\n\nassert solution(\"4 3\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yay!\\n\", \"Testcase failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test failed for input S = 1234567876\"\nprint(\"Test passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34', 'Test failed'\nassert solution('1234567890') == '0', 'Test failed'\nassert solution('1234567875') == '1', 'Test failed'\nassert solution('1234567899') == '1', 'Test failed'",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"9876543210\") == \"6\"\nassert solution(\"7899876543\") == \"10\"\nassert solution(\"12345678\") == \"0\"\nassert solution(\"1234567876543210\") == \"1000000000\"\nassert solution(\"123456789012345678901234567890\") == \"0\"\nassert solution(\"123456789012345678901234567891\") == \"0\"\nassert solution(\"123456789012345678901234567892\") == \"0\"\nassert solution(\"123456789012345678901234567893\") == \"0\"\nassert solution(\"123456789012345678901234567894\") == \"0\"\nassert solution(\"123456789012345678901234567895\") == \"0\"\nassert solution(\"123456789012345678901234567896\") == \"0\"\nassert solution(\"123456789012345678901234567897\") == \"0\"\nassert solution(\"123456789012345678901234567898\") == \"0\"\nassert solution(\"123456789012345678901234567899\") == \"0\"\nassert solution(\"123456789012345678901234567900\") == \"0\"\nassert solution(\"123456789012345678901234567901\") == \"0\"\nassert solution(\"123456789012345678901234567902\") == \"0\"\nassert solution(\"123456789012345678901234567903\") == \"0\"\nassert solution(\"123456789012345678901234567904\") == \"0\"\nassert solution(\"123456789012345678901234567905\") == \"0\"\nassert solution(\"123456789012345678901234567906\") == \"0\"\nassert solution(\"123456789012345678901234567907\") == \"0\"\nassert solution(\"123456789012345678901234567908\") == \"0\"\nassert solution(\"123456789012345678901234567909\") == \"0\"\nassert solution(\"123456789012345678901234567910\") == \"0\"\nassert solution(\"123456789012345678901234567911\") == \"0\"\nassert solution(\"123456789012345678901234567912\") == \"0\"\nassert solution(\"1234567890123456",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '''\n5 3\n'''\n\nassert solution('''\n2\n2 9\n''') == '''\n1 7\n'''\n\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '''\n2999999987 2\n'''\n\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '''\n12 13\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5 3\"\nassert solution() == \"1 7\"\nassert solution() == \"2999999987 2\"\nassert solution() == \"12 13\"",
        "num_ids_2": 20,
        "num_ids_4": 51
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5 3\"\nassert solution(stdin) == \"1 7\"\nassert solution(stdin) == \"2999999987 2\"\nassert solution(stdin) == \"12 13\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 59
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Your code has a wrong output.\\nExpected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(4) == 3\nassert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n3 1 4 1\\n') == '3'\nassert solution('1\\n3 1 4 1\\n') == '3'\nassert solution('1\\n3 1 4 1\\n') == '3'\nassert solution('1\\n3 1 4 1\\n') == '1'\nassert solution('1\\n3 1 4 1\\n') == '1'\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 1 4 1\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"1\"\nassert solution(13) == \"2\"\nassert solution(14) == \"2\"\nassert solution(15) == \"2\"\nassert solution(16) == \"3\"\nassert solution(17) == \"3\"\nassert solution(18) == \"3\"\nassert solution(19) == \"4\"\nassert solution(20) == \"4\"\nassert solution(21) == \"4\"\nassert solution(22) == \"5\"\nassert solution(23) == \"5\"\nassert solution(24) == \"5\"\nassert solution(25) == \"6\"\nassert solution(26) == \"6\"\nassert solution(27) == \"6\"\nassert solution(28) == \"7\"\nassert solution(29) == \"7\"\nassert solution(30) == \"7\"\nassert solution(31) == \"8\"\nassert solution(32) == \"8\"\nassert solution(33) == \"8\"\nassert solution(34) == \"9\"\nassert solution(35) == \"9\"\nassert solution(36) == \"9\"\nassert solution(37) == \"10\"\nassert solution(38) == \"10\"\nassert solution(39) == \"10\"\nassert solution(40) == \"11\"\nassert solution(41) == \"11\"\nassert solution(42) == \"11\"\nassert solution(43) == \"12\"\nassert solution(44) == \"12\"\nassert solution(45) == \"12\"\nassert solution(46) == \"13\"\nassert solution(47) == \"13\"\nassert solution(48) == \"13\"\nassert solution(49) == \"14\"\nassert solution(50) == \"14\"\nassert solution(51) == \"14\"\nassert solution(52) == \"15\"\nassert solution(53) == \"15\"\nassert solution(54) == \"15\"\nassert solution(55) == \"16\"\nassert solution(56) == \"16\"\nassert solution(57) == \"16\"\nassert solution(58) == \"17\"\nassert solution(59) == \"17\"\nassert solution(60) == \"17\"\nassert solution(61) == \"18\"\nassert solution(62) == \"18\"\nassert solution(63) == \"18\"\nassert solution(64) == \"19\"\nassert solution(65) == \"19\"\nassert solution(66) == \"19\"\nassert solution(67) == \"20\"\nassert solution(68) == \"20\"\nassert solution(69) == \"20\"\nassert solution(70) == \"21\"\nassert solution(71) == \"21\"\nassert solution(72) == \"21\"\nassert solution(73) == \"22\"\nassert solution(74) == \"22\"\nassert solution(75) == \"22\"\nassert solution(76) == \"23\"\nassert solution(77) == \"23\"\nassert solution(78) == \"23\"\nassert solution(79) == \"24\"\nassert solution(80) == \"24\"\nassert solution(81) == \"24\"\nassert solution(82) == \"25\"\nassert solution(83) == \"25\"\nassert solution(84) == \"25\"\nassert solution(85) == \"26\"\nassert solution(86) == \"26\"\nassert solution(87) == \"26\"\nassert solution(88) == \"27\"\nassert solution(89) == \"27\"\nassert solution(90) == \"27\"\nassert solution(91) == \"28\"\nassert solution(92) == \"28\"\nassert solution(93) == \"28\"\nassert solution(94) == \"29\"\nassert solution(95) == \"29\"\nassert solution(96) == \"29\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n3 1 4 1') == '3'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 1 1 2 2') == '2'",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 1 4 1\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {solution(stdin)}!= {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 1 4 1\\n\") == \"3\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 1\\n\") == \"3\\n\"\nassert solution(\"3 1 1\\n\") == \"1\\n\"\nassert solution(\"5 1 1 2 2\\n\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Expected: {expected}, Received: {solution}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 0) == 1\nassert solution(1, 0) == 1\nassert solution(3, 1) == 2\nassert solution(1, 1) == 2\nassert solution(3, 2) == 2\nassert solution(1, 2) == 2\nassert solution(3, 3) == 2\nassert solution(1, 3) == 2",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2\\n1 2\\n3 4\\n4 2\\n\\n3 2\\n1 3\\n2 3\\n\\n1 2\\n1 3\\n3 4\\n4 2\\n\") == \"2\\n4 2\\n\\n1 2\\n3 4\\n4 2\\n\"\nassert solution(\"2 0\\n1 2\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n1 2\\n1 3\\n3 4\\n4 2\\n\") == \"2\\n2 4\\n\\n1 2\\n3 4\\n4 2\\n\"\nassert solution(\"2\\n1 2\\n3 4\\n4 2\\n\\n1 2\\n1 3\\n3 4\\n4 2\\n\\n3 2\\n1 3\\n2 3\\n\\n\") == \"2\\n2 4\\n\\n1 2\\n3 4\\n4 2\\n\"",
        "num_ids_2": 133,
        "num_ids_4": 295
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n4 2\\n4 2\\n4 2\\n1\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\") == \"2\\n4 2\\n\\n1\\n1 2\\n\\n2\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\") == \"1\\n1 2\\n\\n2\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 0\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"3\"\nassert solution(\"4 2\\n1 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"2\"\nassert solution(\"2 1\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"3\"\nassert solution(\"2 0\\n1 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"2\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"1\"\nassert solution(\"2 0\\n1 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"2\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 109,
        "num_ids_4": 193
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n4 2\\n\\n2'\nassert solution(input()) == '1\\n1 2\\n\\n1'\nassert solution(input()) == '2\\n1\\n\\n2'\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\\nOutput\\n11\\n\\nInput\\n7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\\nOutput\\n4\") == \"Output\\n11\\n\\nInput\\n7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\\nOutput\\n4\"",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Received output: {solution}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output\\n4\\n', 'Test case 1 failed'\n\nassert solution(stdin) == 'Output\\n4\\n', 'Test case 2 failed'\n\nassert solution(stdin) == 'Output\\n11\\n', 'Test case 3 failed'\n\nassert solution(stdin) == 'Output\\n4\\n', 'Test case 4 failed'\n\nassert solution(stdin) == 'Output\\n4\\n', 'Test case 5 failed'",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Solution mismatch. Expected: {expected_output}, Actual: {solution}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\\n7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == 11\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == 4",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '11'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"\n",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"1 1\n1 9\n2 2\n2 13\n3 1\n3 12\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n2 3\\n5 10000000000\\n5 6 9999999999\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"\nprint(\"All test cases passed\")",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\\n\") == \"1 5\\n2 1\\n2 9999999994\\n\"",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}\\nOutput: {solution(input())}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"\\n1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3,6,5,4) == \"2 1 3\", \"Polycarp's guess\"\nassert solution(40,40,40,60) == \"20 20 20\", \"Polycarp's guess\"\nassert solution(201,101,101,200) == \"1 100 100\", \"Polycarp's guess\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 61,
        "num_ids_4": 100
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n1 100 100\\n\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n\") == \"2 1 3\\n1 100 100\\n\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n\") == \"2 1 3\\n1 100 100\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 161
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\", \"Expected output: '2 1 3\\n', got: '\"+solution(\"3 6 5 4\")+\"'\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\", \"Expected output: '20 20 20\\n', got: '\"+solution(\"40 40 40 60\")+\"'\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\", \"Expected output: '1 100 100\\n', got: '\"+solution(\"201 101 101 200\")+\"'\"",
        "num_ids_2": 116,
        "num_ids_4": 191
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 6, 5, 4) == \"2 1 3\"\nassert solution(40, 40, 40, 60) == \"20 20 20\"\nassert solution(201, 101, 101, 200) == \"1 100 100\"",
        "num_ids_2": 53,
        "num_ids_4": 88
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 6 5 4) == \"2 1 3\"\nassert solution(40 40 40 60) == \"20 20 20\"\nassert solution(201 101 101 200) == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"2 1 3\\n20 20 20\\n1 100 100\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR'\nassert solution(stdin='9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR'\nassert solution(stdin='9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR'\nassert solution(stdin='13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 96,
        "num_ids_4": 175
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 34,
        "num_ids_4": 86
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\nRBGRRBRGG') == 2\nassert solution('8\\nBBBGBRRR') == 2\nassert solution('13\\nBBRRRRGGGGGRR') == 6",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\\n\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\\n\") == \"6\\nBGRBRBGBGBGRG\"\n",
        "num_ids_2": 51,
        "num_ids_4": 82
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == 2\nassert solution(\"8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == 2\nassert solution(\"13\\nBBRRRRGGGGGRR\") == 6\n\nfrom typing import List",
        "num_ids_2": 72,
        "num_ids_4": 91
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '''4\n2 3 5 6 '''\n\nassert solution('''6\n1 3 5 2 4 6''') == '''2\n1 4 '''\n\nassert solution('''4\n10 9 8 7''') == '''1\n1 '''\n\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '''6\n1 2 3 7 8 9 '''",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"\n4\n2 3 5 6\n\"\"\"\n\nassert solution() == \"\"\"\n2\n1 4\n\"\"\"\n\nassert solution() == \"\"\"\n1\n1\n\"\"\"\n\nassert solution() == \"\"\"\n6\n1 2 3 7 8 9\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\\n2\\n1 4\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 70,
        "num_ids_4": 137
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1\\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\\n6\\n1 3 5 2 4 6\\n\\n4\\n10 9 8 7\\n\\n9\\n6 7 8 3 4 5 9 10 11\\n\") == \"4\\n2 3 5 6 \\n1 4 \\n1 1\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\\n2\\n1 4\\n\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\\n\\n9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\"\n",
        "num_ids_2": 145,
        "num_ids_4": 206
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed\"\nfor i in range(len(tests)):\n    if i!= len(tests)-1:\n        print(\"\")\n    print(f\"Test case {i+1}:\")\n    solution(tests[i])",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"Yes\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'Yes\\n', \"The output should be 'Yes', not '{}'.\".format(solution('3 1'))\n\nprint(\"All tests passed.\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n\") == \"Yes\\n\"\nassert solution(\"2 2\\n\") == \"No\\n\"\nassert solution(\"1 1\\n\") == \"Yes\\n\"\nassert solution(\"4 1\\n\") == \"No\\n\"\nassert solution(\"3 2\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('4 1') == 'No'\nassert solution('5 1') == 'No'\nassert solution('3 3') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1) == \"Yes\", \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\\n\"\nassert solution(\"4 1\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"81 58\") == \"110\", \"Test failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\\n\", \"Incorrect output\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\", \"The test case should output 110, but got: \" + solution(\"81 58\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"100 10\") == \"120\"\nassert solution(\"20 30\") == \"50\"\nassert solution(\"150 300\") == \"180\"\nassert solution(\"100 500\") == \"300\"\nassert solution(\"70 200\") == \"50\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\", \"The expected output is not correct\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"72 48\") == \"68\"\nassert solution(\"96 72\") == \"116\"\nassert solution(\"81 64\") == \"108\"\nassert solution(\"100 50\") == \"50\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"81 58\") == \"110\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the values of X and Y: \")) == \"110\", \"The output is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 8, \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 8, \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 8, \"Error: incorrect output\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nprint(\"All tests passed successfully\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"0\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\"\nassert solution(\"10\\n\") == \"NO\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\", \"Test case 1\"\nassert solution(\"3\") == \"YES\", \"Test case 2\"\nassert solution(\"10\") == \"NO\", \"Test case 3\"\nassert solution(\"9\") == \"YES\", \"Test case 4\"\nassert solution(\"8\") == \"YES\", \"Test case 5\"",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES', \"The growth of a five-year-old child will be celebrated.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"15\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\n\nHere's the solution:\n\n```python\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"999\") == \"ABC\", \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(999) == 'ABC', \"Incorrect output\"\nassert solution(1000) == 'ABD', \"Incorrect output\"\nassert solution(1998) == 'ABD', \"Incorrect output\"\nassert solution(2000) == 'ACD', \"Incorrect output\"\nassert solution(2001) == 'ACD', \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ABC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(999) == \"ABC\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABC\", \"Expected output is 'ABC', but got '{0}'\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999\") == \"ABC\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='999') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"2\\n3\\n5\\n7\\n8\\n12\") == \"Yay!\"\nassert solution(\"3\\n4\\n6\\n8\\n9\\n13\") == \"Yay!\"\nassert solution(\"4\\n5\\n7\\n9\\n10\\n14\") == \"Yay!\"\nassert solution(\"5\\n6\\n8\\n10\\n11\\n15\") == \"Yay!\"\nassert solution(\"6\\n7\\n9\\n11\\n12\\n16\") == \"Yay!\"\nassert solution(\"7\\n8\\n10\\n12\\n13\\n17\") == \"Yay!\"\nassert solution(\"8\\n9\\n11\\n13\\n14\\n18\") == \"Yay!\"\nassert solution(\"9\\n10\\n12\\n14\\n15\\n20\") == \"Yay!\"\nassert solution(\"10\\n11\\n13\\n15\\n16\\n21\") == \"Yay!\"\nassert solution(\"11\\n12\\n14\\n16\\n17\\n22\") == \"Yay!\"\nassert solution(\"12\\n13\\n15\\n17\\n18\\n23\") == \"Yay!\"\nassert solution(\"13\\n14\\n16\\n18\\n19\\n24\") == \"Yay!\"\nassert solution(\"14\\n15\\n17\\n19\\n20\\n25\") == \"Yay!\"\nassert solution(\"15\\n16\\n18\\n20\\n21\\n26\") == \"Yay!\"\nassert solution(\"16\\n17\\n19\\n21\\n22\\n27\") == \"Yay!\"\nassert solution(\"17\\n18\\n20\\n22\\n23\\n28\") == \"Yay!\"\nassert solution(\"18\\n19\\n21\\n23\\n24\\n29\") == \"Yay!\"\nassert solution(\"19\\n20\\n22\\n24\\n25\\n30\") == \"Yay!\"\nassert solution(\"20\\n21\\n23\\n25\\n26\\n31\") == \"Yay!\"\nassert solution(\"21\\n22\\n24\\n26\\n27\\n32\") == \"Yay!\"\nassert solution(\"22\\n23\\n25\\n27\\n28\\n33\") == \"Yay!\"\nassert solution(\"23\\n24\\n26\\n28\\n29\\n34\") == \"Yay!\"\nassert solution(\"24\\n25\\n27\\n29\\n30\\n35\") == \"Yay!\"\nassert solution(\"25\\n26\\n28\\n30\\n31\\n36\") == \"Yay!\"\nassert solution(\"26\\n27\\n29\\n31\\n32\\n37\") == \"Yay!\"\nassert solution(\"27\\n28\\n30\\n32\\n33\\n38\") == \"Yay!\"\nassert solution(\"28\\n29\\n31\\n33\\n34\\n39\") == \"Yay!\"\nassert solution(\"29\\n30\\n32\\n34\\n35\\n40\") == \"Yay!\"\nassert solution(\"30\\n31\\n33\\n35\\n36\\n41\") == \"Yay!\"\nassert solution(\"31\\n32\\n34\\n36\\n37\\n42\") == \"Yay!\"\nassert solution(\"32\\n33\\n35\\n37\\n38\\n43\") == \"Yay!\"\nassert solution(\"33\\n34\\n36\\n38\\n39\\n44\") == \"Yay!\"\n",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n6\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n7\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n8\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n9\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n10\\n\") == \"No pair found.\"\nassert solution(\"1\\n2\\n3\\n4\\n11\\n\") == \"No pair found.\"\nassert solution(\"1\\n2\\n3\\n4\\n12\\n\") == \"No pair found.\"\nassert solution(\"1\\n2\\n3\\n4\\n13\\n\") == \"No pair found.\"\nassert solution(\"1\\n2\\n3\\n4\\n14\\n\") == \"No pair found.\"\nassert solution(\"1\\n2\\n3\\n4\\n15\\n\") == \"No pair found.\"\n",
        "num_ids_2": 54,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"2\\n4\\n8\\n12\\n14\\n20\") == \"No pair of antennas that cannot communicate directly\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n3\\n8\\n9\\n10') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n8\\n9') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n5\\n8\\n9') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n8\\n9') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n10') == 'Nope!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n10\\n15') == 'Yay!'",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\nassert solution(\"12345\\nabc\\n\") == \"abc\"\nassert solution(\"2800\\nred\\n\") == \"red\"\nassert solution(\"3201\\nred\\n\") == \"red\"\nassert solution(\"1000\\nred\\n\") == \"red\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"1500\\napple\") == \"red\"\nassert solution(\"999\\norange\") == \"red\"\nassert solution(\"1000\\ngrape\") == \"green\"\nassert solution(\"3201\\nsweet\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3200) == \"pink\"\nassert solution(5000) == \"red\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"pink\", \"The output is not as expected\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"pink\\n\", \"Incorrect output for solution\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2000\\no\") == \"red\"\nassert solution(\"1000\\napple\") == \"red\"\nassert solution(\"300\\nsuzy\") == \"red\"\nassert solution(\"200\\nfrog\") == \"red\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"a\") == \"red\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"5000\\npink\") == \"red\"\nassert solution(\"a\\nb\") == \"red\"\nassert solution(\"a\\nc\") == \"red\"\nassert solution(\"a\\nd\") == \"red\"\nassert solution(\"a\\ne\") == \"red\"\nassert solution(\"a\\nf\") == \"red\"\nassert solution(\"a\\ng\") == \"red\"\nassert solution(\"a\\nh\") == \"red\"\nassert solution(\"a\\ni\") == \"red\"\nassert solution(\"a\\nj\") == \"red\"\nassert solution(\"a\\nk\") == \"red\"\nassert solution(\"a\\ll\") == \"red\"\nassert solution(\"a\\mm\") == \"red\"\nassert solution(\"a\\nn\") == \"red\"\nassert solution(\"a\\no\") == \"red\"\nassert solution(\"a\\np\") == \"red\"\nassert solution(\"a\\nq\") == \"red\"\nassert solution(\"a\\nr\") == \"red\"\nassert solution(\"a\\ns\") == \"red\"\nassert solution(\"a\\tt\") == \"red\"\nassert solution(\"a\\tw\") == \"red\"\nassert solution(\"a\\tx\") == \"red\"\nassert solution(\"a\\ty\") == \"red\"\nassert solution(\"a\\tz\") == \"red\"\nassert solution(\"a\\ua\") == \"red\"\nassert solution(\"a\\ub\") == \"red\"\nassert solution(\"a\\uc\") == \"red\"\nassert solution(\"a\\ud\") == \"red\"\nassert solution(\"a\\ue\") == \"red\"\nassert solution(\"a\\uf\") == \"red\"\nassert solution(\"a\\ug\") == \"red\"\nassert solution(\"a\\uh\") == \"red\"\nassert solution(\"a\\ui\") == \"red\"\nassert solution(\"a\\uj\") == \"red\"\nassert solution(\"a\\uk\") == \"red\"\nassert solution(\"a\\ul\") == \"red\"\nassert solution(\"a\\um\") == \"red\"\nassert solution(\"a\\un\") == \"red\"\nassert solution(\"a\\uo\") == \"red\"\nassert solution(\"a\\up\") == \"red\"\nassert solution(\"a\\uq\") == \"red\"\nassert solution(\"a\\ur\") == \"red\"\nassert solution(\"a\\us\") == \"red\"\nassert solution(\"a\\tt\") == \"red\"\nassert solution(\"a\\tw\") == \"red\"\nassert solution(\"a\\tx\") == \"red\"\nassert solution(\"a\\ty\") == \"red\"\nassert solution(\"a\\tz\") == \"red\"\nassert solution(\"a\\ua\") == \"red\"\nassert solution(\"a\\ub\") == \"red\"\nassert solution(\"a\\uc\") == \"red\"\nassert solution(\"a\\ud\") == \"red\"\nassert solution(\"a\\ue\") == \"red\"\nassert solution(\"a\\uf\") == \"red\"\nassert solution(\"a\\ug\") == \"red\"\nassert solution(\"a\\uh\") == \"red\"\nassert solution(\"a\\ui\") == \"red\"\nassert solution(\"a\\uj\") == \"red\"\nassert solution(\"a\\uk\") == \"red\"\nassert solution(\"a\\ul\") == \"red\"\nassert solution(\"a\\um\") == \"red\"\nassert solution(\"a\\un\") == \"red\"\nassert solution(\"a\\uo\") == \"red\"\nassert solution(\"a\\up\") == \"red\"\nassert solution(\"a\\uq\") == \"red\"\nassert solution(\"a\\ur\") == \"red\"\nassert solution(\"a\\us\") == \"red\"\nassert solution(\"a\\tt\") == \"red\"\nassert solution(\"a\\tw\") == \"red\"\nassert solution(\"a\\tx\") == \"red\"\nassert solution(\"a\\ty\") == \"red\"\nassert solution(\"a\\tz\") == \"red\"\nassert solution(\"a\\ua\") == \"red\"\nassert solution(\"a\\ub\") == \"red\"\nassert solution(\"a\\uc\") == \"red\"\nassert solution(\"a\\ud\") == \"red\"\nassert solution(\"a\\ue\") == \"red\"\nassert solution(\"a\\uf\") == \"red\"\nassert solution(\"a\\ug\") == \"red\"\nassert solution(\"a\\uh\") == \"red\"\nassert solution(\"a\\ui\") == \"red\"\nassert solution(\"a\\uj\") ==",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\napple\") == \"red\"\nassert solution(\"2400\\nbanana\") == \"red\"\nassert solution(\"3500\\ncherry\") == \"red\"\nassert solution(\"1000\\ngrape\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\\n\"\nassert solution(\"1200\") == \"ABC\\n\"\nassert solution(\"1210\") == \"ABC\\n\"\nassert solution(\"2800\") == \"ABC\\n\"\nassert solution(\"4208\") == \"ABC\\n\"\nassert solution(\"4209\") == \"ABC\\n\"\nassert solution(\"4210\") == \"ABC\\n\"\nassert solution(\"4211\") == \"ABC\\n\"\nassert solution(\"4212\") == \"ABC\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1199\") == \"ABC\\n\", \"The output should be 'ABC'\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Solution should return ABC\"\nassert solution(\"1201\") == \"ARC\", \"Solution should return ARC\"\nassert solution(\"2800\") == \"AGC\", \"Solution should return AGC\"\nassert solution(\"4209\") == \"AGC\", \"Solution should return AGC\"\nassert solution(\"4208\") == \"ABC\", \"Solution should return ABC\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\nprint(\"ABC\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\nSolution:\n\nWe can solve this problem by using a conditional statement to check the rating of the next contest rated for Takahashi.\n\nHere's the Python code to solve the problem:\n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1199\\n\") == \"ABC\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Test 1\"\nassert solution(\"1200\") == \"ABC\", \"Test 2\"\nassert solution(\"1201\") == \"ABC\", \"Test 3\"\nassert solution(\"1202\") == \"ABC\", \"Test 4\"\nassert solution(\"2800\") == \"ARC\", \"Test 5\"\nassert solution(\"2801\") == \"ARC\", \"Test 6\"\nassert solution(\"2802\") == \"ARC\", \"Test 7\"\nassert solution(\"2803\") == \"ARC\", \"Test 8\"\nassert solution(\"2804\") == \"ARC\", \"Test 9\"\nassert solution(\"2805\") == \"ARC\", \"Test 10\"\nassert solution(\"2806\") == \"ARC\", \"Test 11\"\nassert solution(\"2807\") == \"ARC\", \"Test 12\"\nassert solution(\"2808\") == \"ARC\", \"Test 13\"\nassert solution(\"2809\") == \"ARC\", \"Test 14\"\nassert solution(\"2810\") == \"ARC\", \"Test 15\"\nassert solution(\"2811\") == \"ARC\", \"Test 16\"\nassert solution(\"2812\") == \"ARC\", \"Test 17\"\nassert solution(\"2813\") == \"ARC\", \"Test 18\"\nassert solution(\"2814\") == \"ARC\", \"Test 19\"\nassert solution(\"2815\") == \"ARC\", \"Test 20\"\nassert solution(\"2816\") == \"ARC\", \"Test 21\"\nassert solution(\"2817\") == \"ARC\", \"Test 22\"\nassert solution(\"2818\") == \"ARC\", \"Test 23\"\nassert solution(\"2819\") == \"ARC\", \"Test 24\"\nassert solution(\"2820\") == \"ARC\", \"Test 25\"\nassert solution(\"2821\") == \"ARC\", \"Test 26\"\nassert solution(\"2822\") == \"ARC\", \"Test 27\"\nassert solution(\"2823\") == \"ARC\", \"Test 28\"\nassert solution(\"2824\") == \"ARC\", \"Test 29\"\nassert solution(\"2825\") == \"ARC\", \"Test 30\"\nassert solution(\"2826\") == \"ARC\", \"Test 31\"\nassert solution(\"2827\") == \"ARC\", \"Test 32\"\nassert solution(\"2828\") == \"ARC\", \"Test 33\"\nassert solution(\"2829\") == \"ARC\", \"Test 34\"\nassert solution(\"2830\") == \"ARC\", \"Test 35\"\nassert solution(\"2831\") == \"ARC\", \"Test 36\"\nassert solution(\"2832\") == \"ARC\", \"Test 37\"\nassert solution(\"2833\") == \"ARC\", \"Test 38\"\nassert solution(\"2834\") == \"ARC\", \"Test 39\"\nassert solution(\"2835\") == \"ARC\", \"Test 40\"\nassert solution(\"2836\") == \"ARC\", \"Test 41\"\nassert solution(\"2837\") == \"ARC\", \"Test 42\"\nassert solution(\"2838\") == \"ARC\", \"Test 43\"\nassert solution(\"2839\") == \"ARC\", \"Test 44\"\nassert solution(\"2840\") == \"ARC\", \"Test 45\"\nassert solution(\"2841\") == \"ARC\", \"Test 46\"\nassert solution(\"2842\") == \"ARC\", \"Test 47\"\nassert solution(\"2843\") == \"ARC\", \"Test 48\"\nassert solution(\"2844\") == \"ARC\", \"Test 49\"\nassert solution(\"2845\") == \"ARC\", \"Test 50\"\nassert solution(\"2846\") == \"ARC\", \"Test 51\"\nassert solution(\"2847\") == \"ARC\", \"Test 52\"\nassert solution(\"2848\") == \"ARC\", \"Test 53\"\nassert solution(\"2849\") == \"ARC\", \"Test 54\"\nassert solution(\"2850\") ==",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(119) == '991'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"119\") == \"991\", \"Solution should output '991' but it is: {}\".format(solution(\"119\"))\n\nprint(\"Test passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"119\") == \"991\", \"The solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"10111\") == \"19911\"\nassert solution(\"9999\") == \"9991\"\nassert solution(\"111111\") == \"111111\"\nassert solution(\"1000000\") == \"1000000\"\nassert solution(\"123456789\") == \"123456789\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzz\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzz\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'abac', \"Your solution is incorrect.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'abac', 'The output should be \"abac\"'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output.\"\nassert solution() == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output.\"\nassert solution() == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output.\"\nassert solution() == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output.\"\nassert solution() == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '3'\nassert solution('10 1\\n20 2\\n30 3\\n40 4\\n50 5') == '1'",
        "num_ids_2": 90,
        "num_ids_4": 127
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"100 100\\n100 100\\n100 100\\n100 100\\n100 100\") == \"2\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"2\\n\"\nassert solution(2) == \"5\\n\"\nassert solution(3) == \"4\\n\"\nassert solution(4) == \"333\\n\"\nassert solution(5) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '2\\n5\\n4\\n333\\n0'\nassert solution('2 5\\n4 3\\n6 1\\n8 7\\n10 9') == '4\\n3\\n0'\nassert solution('100 13\\n123 456\\n92 46\\n89 45') == '333\\n0'\nassert solution('0') == '0'",
        "num_ids_2": 86,
        "num_ids_4": 139
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"",
        "num_ids_2": 67,
        "num_ids_4": 91
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\") == \"2\\n5\\n4\\n333\"\nassert solution(\"5 2\\n3 4\\n1 6\") == \"2\\n5\\n4\\n333\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"1 2\\n1 1\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 66,
        "num_ids_4": 100
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(5)) == '2\\n5\\n4\\n333\\n0\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2.666666666666667\nassert solution(4) == 2.666666666666667\nassert solution(5) == 2.666666666666667\nassert solution(6) == 2.666666666666667\nassert solution(7) == 2.666666666666667\nassert solution(8) == 2.666666666666667\nassert solution(9) == 2.666666666666667\nassert solution(10) == 2.666666666666667\nassert solution(11) == 2.666666666666667\nassert solution(12) == 2.666666666666667\nassert solution(13) == 2.666666666666667\nassert solution(14) == 2.666666666666667\nassert solution(15) == 2.666666666666667\nassert solution(16) == 2.666666666666667\nassert solution(17) == 2.666666666666667\nassert solution(18) == 2.666666666666667\nassert solution(19) == 2.666666666666667\nassert solution(20) == 2.666666666666667\nassert solution(21) == 2.666666666666667\nassert solution(22) == 2.666666666666667\nassert solution(23) == 2.666666666666667\nassert solution(24) == 2.666666666666667\nassert solution(25) == 2.666666666666667\nassert solution(26) == 2.666666666666667\nassert solution(27) == 2.666666666666667\nassert solution(28) == 2.666666666666667\nassert solution(29) == 2.666666666666667\nassert solution(30) == 2.666666666666667\nassert solution(31) == 2.666666666666667\nassert solution(32) == 2.666666666666667\nassert solution(33) == 2.666666666666667\nassert solution(34) == 2.666666666666667\nassert solution(35) == 2.666666666666667\nassert solution(36) == 2.666666666666667\nassert solution(37) == 2.666666666666667\nassert solution(38) == 2.666666666666667\nassert solution(39) == 2.666666666666667\nassert solution(40) == 2.666666666666667\nassert solution(41) == 2.666666666666667\nassert solution(42) == 2.666666666",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('4 2\\n3 4 1 2') == '1.666666666666667'\nassert solution('4 1\\n3 4 1 2') == '1.0'\nassert solution('4 4\\n3 4 1 2') == '1.0'\nassert solution('5 1\\n3 4 1 2') == '1.0'\nassert solution('5 2\\n3 4 1 2') == '1.666666666666667'\nassert solution('5 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('5 4\\n3 4 1 2') == '3.666666666666667'\nassert solution('5 5\\n3 4 1 2') == '4.666666666666667'",
        "num_ids_2": 74,
        "num_ids_4": 120
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667', 'The correct output is not obtained.'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3) == 2.666666666666667, \"The output is incorrect.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin: str)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == 2.666666666666667, \"Testcase failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == 2.666666666666667, \"The expected output is 2.666666666666667, but it is actually {}\".format(solution(3, 3))\nassert solution(5, 3) == 2.8333333333333336, \"The expected output is 2.8333333333333336, but it is actually {}\".format(solution(5, 3))\nassert solution(2, 4) == 3.166666666666667, \"The expected output is 3.166666666666667, but it is actually {}\".format(solution(2, 4))\nassert solution(4, 3) == 2.8333333333333336, \"The expected output is 2.8333333333333336, but it is actually {}\".format(solution(4, 3))\nassert solution(2, 3) == 3.166666666666667, \"The expected output is 3.166666666666667, but it is actually {}\".format(solution(2, 3))\nassert solution(3, 2) == 3.166666666666667, \"The expected output is 3.166666666666667, but it is actually {}\".format(solution(3, 2))",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2.666666666666667\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 3, 2, 1, 1, 2, 1, 3, 4, 2, 2, 1, 4, 3, 2, 1, 3, 5, 2, 2, 1, 2, 3, 3, 1, 4, 2) == \"YES\"\nassert solution(1, 2, 3, 4, 5) == \"NO\"\nassert solution(3, 2) == \"YES\"\nassert solution(5, 1) == \"NO\"",
        "num_ids_2": 113,
        "num_ids_4": 139
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 2 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('4 1 2 3') == 'NO'\nassert solution('3 2') == 'YES'\nassert solution('5 1') == 'YES'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('4 2') == 'NO'\nassert solution('2 1 4 3') == 'NO'\nassert solution('1 3') == 'NO'\nassert solution('4 2') == 'NO'\nassert solution('4 3 2 1') == 'NO'\nassert solution('1 3') == 'NO'\nassert solution('5 2') == 'NO'\nassert solution('2 1 2 3 3') == 'NO'\nassert solution('1 4') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Case {test_case} has incorrect output. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3, 2, 1]) == \"YES\"\nassert solution([3, 2, 1, 4, 5]) == \"YES\"\nassert solution([4, 1, 2, 3]) == \"YES\"\nassert solution([4, 1, 2, 3, 5]) == \"NO\"\nassert solution([1, 2, 3, 4, 5]) == \"NO\"\nassert solution([4, 1, 2, 3, 2]) == \"NO\"\nassert solution([4, 1, 2, 3, 2, 1]) == \"YES\"\nassert solution([1, 2, 3, 4, 2]) == \"YES\"\nassert solution([1, 2, 3, 4, 2, 1]) == \"YES\"\nassert solution([1, 2, 3, 4, 2, 1, 3]) == \"YES\"\nassert solution([1, 2, 3, 4, 2, 1, 3, 4]) == \"YES\"\nassert solution([1, 2, 3, 4, 2, 1, 3, 4, 5]) == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Output: '{solution(input())}', Expected: '{expected_output}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed: expected output '{expected_output}', but got '{solution(stdin)}'.\"\nfor test_case_number in range(1, t + 1):\n    assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'NO'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'NO'",
        "num_ids_2": 242,
        "num_ids_4": 484
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: Expected output: '{expected_output}', Actual output: '{solution(input())}'\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"YES\", \"Please provide the correct solution for the given problem statement.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    6\n    baabbb\n    \"\"\"\n) == \"bab\"\n\nassert solution(\n    \"\"\"\n    10\n    ooopppssss\n    \"\"\"\n) == \"oops\"\n\nassert solution(\n    \"\"\"\n    1\n    z\n    \"\"\"\n) == \"z\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test case 1 failed\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test case 2 failed\"\nassert solution(\"z\") == \"z\", \"Test case 3 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test 1\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test 2\"\nassert solution(\"z\") == \"z\", \"Test 3\"",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"6\\nbaabbb\") == \"bab\"\nassert solution(stdin=\"10\\noopppssss\") == \"oops\"\nassert solution(stdin=\"1\\nz\") == \"z\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n4 3\\n2 1 3\\n4 3 4\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"The solution is incorrect\"\nassert solution() == \"0\", \"The solution is incorrect\"\nassert solution() == \"0\", \"The solution is incorrect\"\nassert solution() == \"1\", \"The solution is incorrect\"\nassert solution() == \"2\", \"The solution is incorrect\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"Test failed\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Expected 1, got: \" + solution()",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\\n\") == 1\nassert solution(\"7\\nRGBGRBB\\n\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == 1\nassert solution('7') == 3\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nBRB\\n\") == 1\nassert solution(\"7\\nRGBGRBB\\n\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1\"\nassert solution(7) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n10000 JPY\n0.10000000 BTC\"\"\") == \"48000.0\"\nassert solution(\"\"\"2\n0 JPY\n0.00000000 BTC\"\"\") == \"0.00000000\"\nassert solution(\"\"\"2\n10000 BTC\n0.10000000 JPY\"\"\") == \"0.00000000\"\nassert solution(\"\"\"2\n10000 BTC\n1.00000000 JPY\"\"\") == \"100000000.00000000\"\nassert solution(\"\"\"2\n0 JPY\n1.00000000 BTC\"\"\") == \"100000000.00000000\"\nassert solution(\"\"\"2\n10000 JPY\n0.10000000 BTC\n1.00000000 JPY\"\"\") == \"0.00000000\"\nassert solution(\"\"\"2\n10000 JPY\n0.10000000 BTC\n0.00000000 JPY\"\"\") == \"0.00000000\"\nassert solution(\"\"\"2\n10000 JPY\n0.10000000 BTC\n0.00000001 JPY\"\"\") == \"100000000.00000000\"\nassert solution(\"\"\"2\n10000 JPY\n0.10000000 BTC\n100.00000000 JPY\"\"\") == \"100000000.00000000\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"48000.0\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"",
        "num_ids_2": 98,
        "num_ids_4": 284
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\\n\") == \"47999.999999999999\\n\"\nassert solution(\"4\\n10000 JPY\\n0.10000000 BTC\\n\") == \"47999.999999999999\\n\"\nassert solution(\"5\\n10000 JPY\\n0.10000000 BTC\\n\") == \"47999.999999999999\\n\"\nassert solution(\"6\\n10000 JPY\\n0.10000000 BTC\\n\") == \"47999.999999999999\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 201
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"48000.0\", \"Output should be 48000.0\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.100",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\") == \"45000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\\n5000 JPY\\n0.00100000 BTC\") == \"42000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\\n5000 JPY\\n0.00100000 BTC\\n10000 JPY\\n0.00010000 BTC\") == \"40000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\\n5000 JPY\\n0.00100000 BTC\\n10000 JPY\\n0.00010000 BTC\\n5000 JPY\\n0.00001000 BTC\") == \"38000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\\n5000 JPY\\n0.00100000 BTC\\n10000 JPY\\n0.00010000 BTC\\n5000 JPY\\n0.00001000 BTC\\n10000 JPY\\n0.00000100 BTC\") == \"38000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.05000000 BTC\\n5000 JPY\\n0.00100000 BTC\\n10000 JPY\\n0.00010000 BTC\\n5000 JPY\\n0.00001000 BTC\\n10000 JPY\\n0.00000100 BTC\\n5000 JPY\\n0.00000010 BTC\") == \"38000.0\"",
        "num_ids_2": 98,
        "num_ids_4": 282
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.1\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.2\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.3\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.4\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000",
        "num_ids_2": 98,
        "num_ids_4": 328
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"4 7\") == \"5\"\nassert solution(\"5 6\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 10\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"3\\n\", \"The second car from the front of a 4-car train is the third car from the back.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"3\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"4 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"icpc\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ip cc\") == \"icpc\", \"Test failed\"\nassert solution(\"ab\") == \"aba\", \"Test failed\"\nassert solution(\"abc\") == \"cba\", \"Test failed\"\nassert solution(\"abcd\") == \"dcba\", \"Test failed\"\nassert solution(\"12345\") == \"12345\", \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nip cc') == 'icpc'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2ip cc\") == \"icpc\", \"The correct solution is: icpc\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution is {solution(input())}, but the output is {output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\"\nassert solution(\"5\\naaa\\nbbb\\nccc\\nddd\\neee\\n\") == \"aaabbbcccddddeeeee\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\", \"Incorrect output. Expected: 'Yes', Actual: '{}'\".format(solution(\"ABA\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"Yes\", \"The solution is incorrect.\"\nassert solution(\"ABBB\") == \"No\", \"The solution is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"AAA\") == \"Yes\"\nassert solution(\"BBB\") == \"No\"\nassert solution(\"ACB\") == \"No\"\nassert solution(\"ACD\") == \"No\"\nassert solution(\"BCA\") == \"No\"\nassert solution(\"BCD\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABBB\") == \"No\\n\"\nassert solution(\"AAA\") == \"No\\n\"\nassert solution(\"ABBAB\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2.There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2. There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2. There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAB\") == \"Yes\"\nassert solution(\"CAB\") == \"No\"\nassert solution(\"ABCB\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\", \"Output should be 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\\n\", \"Solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == \"2\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\", \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2', \"Expected '2', but got '{}'\".format(solution('RRS'))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\", \"The maximum number of consecutive rainy days in the period should be 2, but it is \" + solution(\"RRS\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRL\") == \"1\"\nassert solution(\"RRRR\") == \"2\"\nassert solution(\"RRRRRR\") == \"4\"\nassert solution(\"RRRRRRRR\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'RRS') == b'2', \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n\") == \"3 1 2\\n\", \"The output is not correct\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\", \"Test case 1 failed\"\nassert solution(\"4 5 6\") == \"6 4 5\", \"Test case 2 failed\"\nassert solution(\"7 8 9\") == \"9 7 8\", \"Test case 3 failed\"\nassert solution(\"10 11 12\") == \"12 10 11\", \"Test case 4 failed\"\nassert solution(\"13 14 15\") == \"15 13 14\", \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 4 3\") == \"3 1 2\"\nassert solution(\"10 9 8\") == \"3 1 2\"\nassert solution(\"0 0 0\") == \"0 0 0\"\nassert solution(\"3 5 7\") == \"7 5 3\"\nassert solution(\"5 10 15\") == \"15 10 5\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"7 8 9\") == \"9 8 7\"\nassert solution(\"10 11 12\") == \"12 11 10\"\nassert solution(\"13 14 15\") == \"15 14 13\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3 1 2\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '100'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 100\") == \"100\", \"The cost of the Ferris wheel for Takahashi should be 100 yen.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\nassert solution('40 200') == '200'\nassert solution('15 50') == '50'\nassert solution('7 50') == '50'\nassert solution('25 200') == '200'",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '100'\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"25 50\") == \"125\"\nassert solution(\"15 20\") == \"150\"\nassert solution(\"12 15\") == \"120\"\nassert solution(\"20 75\") == \"100\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Takahashi is 30 years old now, and the cost of the Ferris wheel is 100 yen.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\", \"Output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Error: Expected output to be '%s', but got '%s'.\" % (output(), solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+++\") == \"2\", \"Incorrect solution\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\\n\"\nassert solution(\"+-+-\") == \"0\\n\"\nassert solution(\"+++++\") == \"2\\n\"\nassert solution(\"+++--\") == \"0\\n\"\nassert solution(\"---+\") == \"1\\n\"\nassert solution(\"+++--\") == \"0\\n\"\nassert solution(\"---+-\") == \"0\\n\"\nassert solution(\"---++\") == \"0\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nprint(\"All assertions passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+++\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('+++') == '2'\nassert solution('++++') == '2'\nassert solution('---') == '1'\nassert solution('++++') == '1'\nassert solution('+-+') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == 'Heisei'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\n\nassert solution(\"2020/04/30\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Test case 1 failed\"\nassert solution(\"2018/01/01\") == \"TBD\", \"Test case 2 failed\"\nassert solution(\"2019/13/31\") == \"TBD\", \"Test case 3 failed\"\nassert solution(\"2019/04/30\") == \"Heisei\", \"Test case 4 failed\"\nassert solution(\"2019/05/01\") == \"TBD\", \"Test case 5 failed\"",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(18) == 14\nassert solution(10) == 9\nassert solution(3) == 3",
        "num_ids_2": 21,
        "num_ids_4": 30
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"14\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test 2 failed: {solution(input_2)}!= {output_2}\"\nassert solution(input_3) == output_3, f\"Test 3 failed: {solution(input_3)}!= {output_3}\"\n\ninput_1 = \"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\"\ninput_2 = \"10\\n6 6 6 3 6 1000000000 3 3 6 6\"\ninput_3 = \"3\\n1337 1337 1337\"\n\noutput_1 = \"14\"\noutput_2 = \"9\"\noutput_3 = \"3\"\n\nsolution = lambda stdin: \"1\"",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Error: The solution does not match the expected output.\\nInput: {}\\nOutput: {}\\nExpected output: {}\".format(stdin, solution(input()), expected_output)",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\"\nassert solution(10) == \"9\"\nassert solution(18) == \"14\"\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14', '18'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9', '10'\nassert solution('3\\n1337 1337 1337') == '3', '3'",
        "num_ids_2": 107,
        "num_ids_4": 136
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n3 2 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 126
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n1 1 2 2 2 1 1 1 2 2 2\\n') == '1\\n1\\n2\\n'\nassert solution('10 4\\n1 1 2 2 2 1 1 1 2 2 2\\n') == '1\\n1\\n2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 173
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"5\\n5 9 8 7 6 5 4 3 2 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 141
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"1 3\\n1 2 2 1\\n\") == \"3\\n1 2 1 \\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"2\\n1 1 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 139
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"10\\n1 2 3 4 5 6 7 8 9 10\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 143
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \"\nassert solution(\"7 3\\n1 2 3 4 5 6 7 8\\n\") == \"4\"\nassert solution(\"10 7\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"7\"",
        "num_ids_2": 77,
        "num_ids_4": 145
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'\nassert solution('1 1\\n1 2\\n1 3\\n1 4') == '1\\n0\\n0\\n1'\nassert solution('2 3\\n10 20\\n100') == '3\\n15\\n60'\nassert solution('5 5\\n1 2\\n2 3\\n4 5') == '2\\n3\\n4\\n5'\nassert solution('5 5\\n1 2\\n2 3\\n4 5\\n1000000000') == '5\\n4\\n3\\n2'",
        "num_ids_2": 83,
        "num_ids_4": 151
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {solution(stdin)!= expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_input, expected_output)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The solution provided ({solution(input())}) does not match the expected output ({expected_output}).\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n-1\\n3\\n2'\nassert solution(stdin) == '2\\n1\\n2'\nassert solution(stdin) == '1\\n3\\n-1'\nassert solution(stdin) == '3\\n2\\n1'\nassert solution(stdin) == '2\\n3\\n-1'",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {solution(input())}!= {expected}\"\nfor i in range(5):\n    solution(input())\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"21\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\") == \"21\\n\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"21\", \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"21\"\nassert solution() == \"0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\\nInput\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '21\\n'\nassert solution('Input\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0\\n'",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '21\\n'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0\\n'\nassert solution('4 4\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10 11\\n4 5 6 7 8 9 10 11 12') == '272\\n'",
        "num_ids_2": 143,
        "num_ids_4": 290
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\", \"21\"),\n    (\"3 3\\n9 9 9 9 9 9 9 9 9 9\", \"0\"),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3 \\n1 1 2 \\n\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 2 1 \\n2 3 2 \\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 71,
        "num_ids_4": 104
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([2, 4, 6, 6, 6]) == 2\nassert solution([2, 8, 10]) == 2\nassert solution([1, 1, 1, 1]) == 0",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 4 6 6 6') == '2\\n1 2 3\\n1 1 2\\n'\nassert solution('3\\n2 8 10') == '2\\n2 2 1\\n2 3 2\\n'\nassert solution('4\\n1 1 1 1') == '0\\ndef solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 71,
        "num_ids_4": 104
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 4 6 6 6\\n\\n3\\n2 8 10\\n\\n4\\n1 1 1 1\\n') == '2\\n1 2 3\\n1 1 2\\n2\\n2 2 1\\n2 3 2\\n0\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3 \\n1 1 2 \\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1 \\n2 3 2 \\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List",
        "num_ids_2": 75,
        "num_ids_4": 112
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 106
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 4 6 6 6\\n\\n3\\n2 8 10\\n\\n4\\n1 1 1 1\\n') == 2\nassert solution('3\\n2 8 10\\n\\n4\\n1 1 1 1\\n') == 2\nassert solution('4\\n1 1 1 1\\n') == 0",
        "num_ids_2": 82,
        "num_ids_4": 102
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 2 8 10\") == \"2\"\nassert solution(\"4 1 1 1\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n2 2 1\\n2 3 2'\nassert solution() == '0\\n'\nassert solution() == '0\\n'",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 0\nassert solution() == 1\nassert solution() == 1\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"1\\n100000\\n\") == \"0\"\nassert solution(\"1\\n10101\\n\") == \"0\"\nassert solution(\"1\\n101000\\n\") == \"0\"\nassert solution(\"1\\n111111\\n\") == \"0\"\nassert solution(\"1\\n100100\\n\") == \"0\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100010\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n100011\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100110\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n111111\\n\") == \"1\"\nassert solution(\"1\\n101000\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100101\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100010\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n100011\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100110\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100010\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n100011\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100110\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100010\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n100011\\n\") == \"1\"\nassert solution(\"1\\n100001\\n\") == \"1\"\nassert solution(\"1\\n100110\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100000\\n\") == \"1\"\nassert solution(\"1\\n101001\\n\") == \"1\"\nassert solution(\"1\\n100010\\n\") == \"",
        "num_ids_2": 110,
        "num_ids_4": 149
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == 1\nassert solution(\"6\\n6 2\\n100010\\n6 1\\n000000\\n5 2\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 2\\n0\") == 2\nassert solution(\"6\\n5 2\\n100010\\n6 1\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 2\\n0\") == 0\nassert solution(\"6\\n5 1\\n100010\\n6 1\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 2\\n0\") == 1\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 2\\n0\") == 2\nassert solution(\"6\\n6 2\\n100010\\n6 1\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 2\\n0\") == 0",
        "num_ids_2": 148,
        "num_ids_4": 296
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1, \"Your solution is incorrect\"\nprint(\"Correct\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\\n\"\nassert solution(\"000000\\n3 1\\n01\\n1 1\\n0\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"101010\\n2 1\\n00\\n100010\\n2 1\\n111111\\n111111\\n\") == \"2\\n2\\n1\\n1\\n1\\n\"\nassert solution(\"10010001\\n10000010\\n00000000\\n00100000\\n10100100\\n10011001\\n11111111\\n\") == \"2\\n2\\n1\\n1\\n1\\n\"\nassert solution(\"01101111\\n00110101\\n00000000\\n00000000\\n01101111\\n00110101\\n00000000\\n00000000\\n\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"01101111\\n00110101\\n00000000\\n00000000\\n00110101\\n00110111\\n01101111\\n00110101\\n00000000\\n\") == \"2\\n2\\n2\\n2\\n2\\n\"\nassert solution(\"00110101\\n00110111\\n01101111\\n00110101\\n00110111\\n01101111\\n01101111\\n00110101\\n00110111\\n\") == \"3\\n3\\n3\\n3\\n3\\n3\\n\"",
        "num_ids_2": 144,
        "num_ids_4": 306
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\n\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 174,
        "num_ids_4": 348
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 180,
        "num_ids_4": 360
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input_, output in zip(get_input(), get_output()):\n    print(input_, end=\"\\n\\n\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Input: {stdin}, Expected output: {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30') == '3\\n1 4 5'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '4\\n1 3 5 6'",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7 '\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 '\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6'\nassert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7 '\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 '\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6'",
        "num_ids_2": 116,
        "num_ids_4": 229
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n4 6 7\"\nassert solution() == \"3\\n4 6 7\"\nassert solution() == \"3\\n1 4 5\"\nassert solution() == \"4\\n1 3 5 6\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7\\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5\\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '30\\n31\\n10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"\"\"30\n31\n10\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is wrong. Please fix the given code.\\nInput: {stdin}\\nOutput: {expected_output}\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor q in range(1, q+1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_sum = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                max_sum = max(max_sum, a[i] + a[j] + a[k])\n    print(max_sum)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"30\\n31\\n10\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 30\nassert solution() == 31\nassert solution() == 10",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == '30\\n31\\n10'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '2'\nassert solution(4) == '1'\nassert solution(5) == '2'\nassert solution(6) == '1'\nassert solution(7) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"\"\"2\n1\n2\n1\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\\n\", \"The solution is incorrect\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\"\nassert solution() == \"2\\n1\\n2\\n1\"\nassert solution() == \"2\\n1\\n2\\n1\"\nassert solution() == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\\n2\\n1\\n\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n1\\n2\\n1\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\" or solution(input()) == \"NO\" or solution(input()) == \"YES\" or solution(input()) == \"YES\", \"Invalid input\"\n\nimport re",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\n\nimport re",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(4) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n1\\n2\\n3\\n6\\n5\\n2\\n6\\n27\\n3\\n3\\n5\\n18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('5\\n2\\n6\\n27\\n3\\n3\\n5\\n18') == 'YES'\nassert solution('3\\n3\\n5\\n18') == 'NO'",
        "num_ids_2": 99,
        "num_ids_4": 119
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\"\nfor _ in range(q):\n    a, b, n, S = map(int, stdin.readline().split())\n    x, y = map(int, stdin.readline().split())\n    x_coins, y_coins, total_value = [int(coin) for coin in stdin.readline().split()]\n    solution(stdin)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\\nYES\\nYES\\nYES\"\nassert solution(\"1 2 3 6\") == \"YES\\nNO\\nYES\\nNO\"\nassert solution(\"5 2 6 27\") == \"NO\\nNO\\nYES\\nYES\"\nassert solution(\"3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"YES\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"YES\\n0\") == \"YES\\n0\"\nassert solution(\"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"",
        "num_ids_2": 42,
        "num_ids_4": 112
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(\"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution(\"NO\\n\") == \"NO\"\nassert solution(\"YES\\n0\") == \"YES\\n0\"\nassert solution(\"YES\\n1\\n3\\n4\") == \"YES\\n1\\n3\\n4\"",
        "num_ids_2": 64,
        "num_ids_4": 92
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3\\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 139
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\n\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\"\n\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\n\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n4 \\n2\\n3 1 \\n\"\n\nassert solution(\"5\\n4 3 2 1 0\") == \"YES\\n1\\n0 \\n3\\n4 2 1 0 3\"",
        "num_ids_2": 90,
        "num_ids_4": 148
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n''') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1 '\nassert solution('''\n5\n4 3 1 5 3\n''') == 'YES\\n1\\n3\\n4\\n5 4 3 1 '\nassert solution('''\n5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''\n5\n0 1 2 3 4\n''') == 'YES\\n0\\n3\\n4\\n5 4 3 1 '",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3\\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n3\\n3 7 \\n4\\n7 4 3 2 1 \"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 120,
        "num_ids_4": 169
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(io.StringIO(\"\"\"8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\"\"\")) == 18\n\nassert solution(io.StringIO(\"\"\"5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\"\"\")) == 8\n\nassert solution(io.StringIO(\"\"\"5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\"\"\")) == -1",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 18\nassert solution(5) == 8\nassert solution(1) == -1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '18'\n\nimport sys",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\n\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\n\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 18\nassert solution() == 8\nassert solution() == -1",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '18'\n\nassert solution(input()) == '8'\n\nassert solution(input()) == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\"\nassert solution(\"2\\n6\\n-1\\n7\") == \"-1\"\nassert solution(\"3\\n5\\n2 5\") == \"6\"",
        "num_ids_2": 82,
        "num_ids_4": 100
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_result, f\"Expected result: {expected_result}, but got: {solution}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n5 1\\na 1 1 2 3 1\\na 2 2\\na 1 6\\na 3 5\\na 5 2 5\\n') == '2\\n6\\n-1\\n7'\n\nassert solution('3\\n5\\na 1 1 2 3 1\\na 2 2\\na 1 6\\na 3 5\\na 5 2 5\\n') == '2\\n6\\n-1\\n7'\n\nassert solution('2\\n6\\na 1 1 2 3 1\\na 2 2\\na 1 6\\na 3 5\\na 5 2 5\\n') == '2\\n6\\n-1\\n7'\n\nassert solution('3\\n5\\na 1 1 2 3 1\\na 2 2\\na 1 6\\na 3 5\\na 5 2 5\\n') == '2\\n6\\n-1\\n7'",
        "num_ids_2": 128,
        "num_ids_4": 254
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n2\\n6\\n-1\\n7'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2\n6\n-1\n7\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Test failed for input: {}, expected output: {}, but got: {}\".format(input, output, solution(input))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"\n2\n6\n-1\n7\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"[4, 8, 15, 16, 23, 42]\") == 5\nassert solution(\"[4, 8, 4, 15, 16, 8, 23, 15, 16, 42, 23, 42]\") == 0\nassert solution(\"[4, 8, 15, 16, 23, 42, 4]\") == 3",
        "num_ids_2": 78,
        "num_ids_4": 109
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n8\\n15\\n16\\n23\\n42\\n') == '5\\n'\nassert solution('12\\n4\\n8\\n4\\n15\\n16\\n8\\n23\\n15\\n16\\n42\\n23\\n42\\n') == '0\\n'\nassert solution('15\\n4\\n8\\n4\\n8\\n15\\n16\\n8\\n16\\n23\\n15\\n16\\n4\\n42\\n23\\n42\\n') == '3\\n'",
        "num_ids_2": 92,
        "num_ids_4": 161
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == 5, \"Input 5\"\nassert solution(\"12\") == 0, \"Input 12\"\nassert solution(\"15\") == 3, \"Input 15\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5\\n'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0\\n'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3\\n'",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 23''') == '5\\n'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42''') == '0\\n'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42''') == '3\\n'",
        "num_ids_2": 11,
        "num_ids_4": 17
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 5, \"Please implement the solution\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == 5\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == 0\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == 3",
        "num_ids_2": 66,
        "num_ids_4": 116
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5\\n'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0\\n'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3\\n'",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"0\\n\"\nassert solution(6) == \"3\\n\"\nassert solution(7) == \"2\\n\"\nassert solution(8) == \"92\\n\"\nassert solution(9) == \"87654322\\n\"\nassert solution(10) == \"9150\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5\\n13\\n42\\n18\\n4\\n1337\\n420\\n123456789\\n1000000000\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"6\\n5\\n13\\n42\\n18\\n4\\n1337\\n420\\n123456789\\n1000000000\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"7\\n5\\n13\\n42\\n18\\n4\\n1337\\n420\\n123456789\\n1000000000\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"8\\n5\\n13\\n42\\n18\\n4\\n1337\\n420\\n123456789\\n1000000000\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"9\\n5\\n13\\n42\\n18\\n4\\n1337\\n420\\n123456789\\n1000000000\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 208,
        "num_ids_4": 416
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"0\"\nassert solution(6) == \"0\"\nassert solution(7) == \"3\"\nassert solution(8) == \"2\"\nassert solution(9) == \"92\"\nassert solution(10) == \"87654322\"\nassert solution(11) == \"9150\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution() == '3'\nassert solution() == '2'\nassert solution() == '92'\nassert solution() == '87654322'\nassert solution() == '9150'",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nprint(0)\nprint(3)\nprint(2)\nprint(92)\nprint(87654322)\nprint(9150)",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"92\"\nassert solution() == \"87654322\"\nassert solution() == \"9150\"",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '92\\n'\nassert solution(stdin) == '87654322\\n'\nassert solution(stdin) == '9150\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    5\n    5 5\n    13 42\n    18 4\n    1337 420\n    123456789 1000000000\n    100500 9000\n\"\"\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"\n\nassert solution(r\"\"\"\n    6\n    5 5\n    13 42\n    18 4\n    1337 420\n    123456789 1000000000\n    100500 9000\n\"\"\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: expected {expected_output}, got {solution(input())}\"\n\nfor i, (x, y, n) in enumerate(map(int, input().split())):\n    assert solution(f'{x} {y} {n}') == f'{max(k for k in range(1, n + 1) if k % x == y)}', f\"Test case {i + 1} failed: expected {f'{max(k for k in range(1, n + 1) if k % x == y)}'}, got {solution(f'{x} {y} {n}')}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n') == '12339'\nassert solution('5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n') == '0'\nassert solution('17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n') == '15'\nassert solution('499999993\\n9\\n1000000000\\n10\\n5\\n187\\n2\\n0\\n999999999\\n') == '54306'\nassert solution('10\\n5\\n187\\n2\\n0\\n999999999\\n') == '999999995'\nassert solution('185\\n9\\n999999998\\n') == '999999998'",
        "num_ids_2": 183,
        "num_ids_4": 315
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n4999",
        "num_ids_2": 280,
        "num_ids_4": 560
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"\n",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"your_answer\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution() == \"8\"\nassert solution() == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6\\n'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8\\n'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\n",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == 6\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == 8\nassert solution('7 3\\n1 2 2 3 2 4 5') == 4",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"6\", \"The output is incorrect\"\nassert solution == \"8\", \"The output is incorrect\"\nassert solution == \"4\", \"The output is incorrect\"\n\nThe output is incorrect. The correct solution is:",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"1 2\\nXYZ\") == \"xyz\"\nassert solution(\"4 2\\nABC\") == \"abc\"\nassert solution(\"1 4\\nXYZ\") == \"xyz\"\nassert solution(\"2 1\\n\") == \" \"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\nABC\\n') == 'aBC\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\n\nprint(solution(\"3 1\\nABC\"))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\", \"Test case 1 failed\"\n\nassert solution(\"4 2\\nxyz\") == \"xYZ\", \"Test case 2 failed\"\n\nassert solution(\"5 2\\n\") == \"\", \"Test case 3 failed\"\n\nassert solution(\"6 3\\n\") == \"\", \"Test case 4 failed\"\n\nassert solution(\"7 4\\n\") == \"\", \"Test case 5 failed\"\n\nassert solution(\"8 5\\n\") == \"\", \"Test case 6 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 84
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nABC\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\\n\") == \"aBC\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_string)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\n\") == \"3\\n4\\n6\\n1\\n5\\n\"\nassert solution(\"5\\nlosangeles 80\\npalo alto 90\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"5\\nlosangeles 80\\npalo alto 90\\npaloma 85\\n\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"3\\nnew york 70\\nchicago 80\\n\") == \"4\\n6\\n2\\n3\\n1\\n\"\nassert solution(\"5\\nlosangeles 80\\npalo alto 90\\nchicago 85\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5\\nlosangeles 80\\npalo alto 90\\nboston 85\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5\\nlosangeles 80\\npalo alto 90\\naustin 85\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"",
        "num_ids_2": 127,
        "num_ids_4": 209
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\kazan 50\\kazan 35\\nmoscow 60\\khabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"4\\nmoksha 10\\negypt 50\\nshanghai 35\\nbeijing 60\\nmoksha 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\n3\n4\n6\n1\n5\n2\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\", \"Test case failed.\"\nassert solution(\"3 200\") == \"No\\n\", \"Test case failed.\"\nassert solution(\"4 100\") == \"Yes\\n\", \"Test case failed.\"\nassert solution(\"5 100\") == \"No\\n\", \"Test case failed.\"\nassert solution(\"6 100\") == \"Yes\\n\", \"Test case failed.\"\nassert solution(\"7 100\") == \"No\\n\", \"Test case failed.\"\nassert solution(\"8 100\") == \"Yes\\n\", \"Test case failed.\"\nassert solution(\"9 100\") == \"No\\n\", \"Test case failed.\"\nassert solution(\"10 100\") == \"Yes\\n\", \"Test case failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1000\") == \"No\"\nassert solution(\"3 500\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 1000\") == \"No\"\nassert solution(\"5 1500\") == \"Yes\"\nassert solution(\"1 1000\") == \"Yes\"\nassert solution(\"1 1001\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"2 100\") == \"No\\n\"\nassert solution(\"2 500\") == \"Yes\\n\"\nassert solution(\"2 501\") == \"No\\n\"\nassert solution(\"3 1000\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1000\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 500\") == \"No\"\nassert solution(\"1 500\") == \"No\"\nassert solution(\"3 1000\") == \"Yes\"\nassert solution(\"1 2000\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"500 1000\") == \"No\"\nassert solution(\"498 1001\") == \"Yes\"\nassert solution(\"1 100\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"3 500\") == \"No\\n\"\nassert solution(\"1 1000\") == \"Yes\\n\"\nassert solution(\"4 900\") == \"No\\n\"\nassert solution(\"200 500\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.1458333333\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.1458333333\"\nassert solution(\"5 5\") == \"0.0\"\nassert solution(\"7 7\") == \"1.0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 52
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.1458333333\\n\", \"Test Failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"4 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\nassert solution(\"6 10\") == \"0.145833333333\"\nassert solution(\"7 10\") == \"0.145833333333\"\nassert solution(\"8 10\") == \"0.145833333333\"\nassert solution(\"9 10\") == \"0.145833333333\"\nassert solution(\"10 10\") == \"0.145833333333\"\nassert solution(\"11 10\") == \"0.145833333333\"\nassert solution(\"12 10\") == \"0.145833333333\"\nassert solution(\"13 10\") == \"0.145833333333\"\nassert solution(\"14 10\") == \"0.145833333333\"\nassert solution(\"15 10\") == \"0.145833333333\"\nassert solution(\"16 10\") == \"0.145833333333\"\nassert solution(\"17 10\") == \"0.145833333333\"\nassert solution(\"18 10\") == \"0.145833333333\"\nassert solution(\"19 10\") == \"0.145833333333\"\nassert solution(\"20 10\") == \"0.145833333333\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"4 10\") == \"0.073166666667\"\nassert solution(\"5 10\") == \"0.040583333333\"\nassert solution(\"6 10\") == \"0.025083333333\"\nassert solution(\"7 10\") == \"0.017222222222\"\nassert solution(\"8 10\") == \"0.011166666667\"\nassert solution(\"9 10\") == \"0.006458333333\"\nassert solution(\"10 10\") == \"0.003222222222\"\nassert solution(\"11 10\") == \"0.001583333333\"\nassert solution(\"12 10\") == \"0.000833333333\"\nassert solution(\"13 10\") == \"0.000333333333\"\nassert solution(\"14 10\") == \"0.000166666667\"\nassert solution(\"15 10\") == \"0.000083333333\"\nassert solution(\"16 10\") == \"0.000041666667\"\nassert solution(\"17 10\") == \"0.000020833333\"\nassert solution(\"18 10\") == \"0.000010416667\"\nassert solution(\"19 10\") == \"0.000005208333\"\nassert solution(\"20 10\") == \"0.000002604167\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. The output is {output}, but your code is {solution(input())}.\\n\"\n\ninput_ = input().split()\nN = int(input_[0])\nK = int(input_[1])",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"Sample Output does not match the expected output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.145833333333\\n\", \"Incorrect output. Please check the problem statement.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"Test passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Solution should return 1 for Saturday today.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Test 1 failed.\"\nassert solution(\"SUN\") == \"0\\n\", \"Test 2 failed.\"\nassert solution(\"MON\") == \"0\\n\", \"Test 3 failed.\"\nassert solution(\"TUE\") == \"1\\n\", \"Test 4 failed.\"\nassert solution(\"WED\") == \"1\\n\", \"Test 5 failed.\"\nassert solution(\"THU\") == \"1\\n\", \"Test 6 failed.\"\nassert solution(\"FRI\") == \"1\\n\", \"Test 7 failed.\"\nassert solution(\"SAT\") == \"1\\n\", \"Test 8 failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '0'\nassert solution('WED') == '2'\nassert solution('THU') == '4'\nassert solution('WED') == '2'\nassert solution('THU') == '4'\nassert solution('SAT') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('SAT') == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\\n\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"10 1 100000\") == \"100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n\"\nassert solution(\"5 10 200000\") == \"200000\\n200000\\n200000\\n200000\\n200000\\n200000\\n200000\\n200000\\n200000\\n\"\nassert solution(\"1 200 0\") == \"0\\n100\\n200\\n300\\n400\\n500\\n600\\n700\\n800\\n900\\n\"\nassert solution(\"3 100 2000\") == \"2000\\n3000\\n4000\\n5000\\n6000\\n7000\\n8000\\n9000\\n10000\\n\"\nassert solution(\"2 100 20000\") == \"20000\\n30000\\n40000\\n50000\\n60000\\n70000\\n80000\\n90000\\n100000\\n\"",
        "num_ids_2": 158,
        "num_ids_4": 312
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"3 100 10\") == \"50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"4 100 200\") == \"90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"5 100 300\") == \"170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"6 100 400\") == \"330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"7 100 500\") == \"650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"8 100 600\") == \"1290\\n2570\\n5130\\n10250\"\nassert solution(\"9 100 700\") == \"2570\\n5130\\n10250\"\nassert solution(\"10 100 800\") == \"5130\\n10250\"",
        "num_ids_2": 127,
        "num_ids_4": 241
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your code is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5\nassert solution() == 4\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"\nassert solution(\"5\\n1 3 1 1 4 2 1 4\") == \"5\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input_string)}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution {solution(input())} should be {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {output}, Expected: {input()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n100 100 100\\nYES\\n1 1 1000000000\\nNO\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(solution(input()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\n\nfor i in range(int(input())):\n    x, y, z = map(int, input().split())\n    a, b, c = -1, -1, -1\n\n    for i in range(min(x, y, z)):\n        if x - i <= y and x - i <= z:\n            a = i\n            break\n\n    for i in range(min(x, y, z)):\n        if y - i <= x and y - i <= z:\n            b = i\n            break\n\n    for i in range(min(x, y, z)):\n        if z - i <= x and z - i <= y:\n            c = i\n            break\n\n    if a == -1 or b == -1 or c == -1:\n        print(\"NO\")\n    else:\n        print(a, b, c)\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nprint(\"YES\")\nassert solution() == \"YES\"\nprint(\"YES\")\nassert solution() == \"NO\"\nprint(\"NO\")\nassert solution() == \"NO\"\nprint(\"NO\")\nassert solution() == \"YES\"\nprint(\"YES\")\nassert solution() == \"YES\"\nprint(\"YES\")\nassert solution() == \"YES\"\nprint(\"YES\")",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 2 3\n    100 100 100\n    50 49 49\n    10 30 20\n    1 1000000000 1000000000\n    \"\"\"\n) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n3\\n100\\n100\\n100\\n50\\n49\\n49\\n10\\n30\\n20\\n1\\n1000000000\\n1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"1\\n1000000000\\n1000000000\\n\") == \"NO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n100\\n50\\n10\\n1\\n1000000000\\n1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"5\\n3 2 3\\n100\\n50\\n10\\n1\\n1000000000\\n1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"5\\n3 2 3\\n100\\n50\\n10\\n1\\n1000000000\\n1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"5\\n3 2 3\\n100\\n50\\n10\\n1\\n1000000000\\n1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"5\\n3 2 3\\n100\\n50\\n10\\n1\\n1000000000\\n1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 203,
        "num_ids_4": 413
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\n\nassert solution() == 1\n\nassert solution() == 5",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4\\n'\nassert solution('5 1 4\\n4 2 3 4 1') == '1\\n'\nassert solution('5 3 3\\n1 2 3 1 1') == '5\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"Your implementation is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution() == '1'\nassert solution() == '5'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\nassert solution('5 1 4\\n1 2 3 1 1\\n') == '4'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Solution here",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n7 2\nabacaba\na b\n\"\"\") == \"12\"\n\nassert solution(r\"\"\"\n10 3\nsadfaasdda\nf a d\n\"\"\") == \"21\"\n\nassert solution(r\"\"\"\n7 1\naaaaaaa\nb\n\"\"\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\na aaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaab\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\nfor _ in range(test_cases):\n    n, k = map(int, input().split())\n    s = input().strip()\n    c = input().split()\n    count = 0\n    for i in range(len(s) - k + 1):\n        substring = s[i:i+k]\n        if substring in c:\n            count += 1\n    print(count)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == [\"2\", \"-1\", \"6\", \"-2999999997\"]\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n-1\\n6\\n-2999999997\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\") == \"2\\n-1\\n6\\n-2999999997\\n\"\nassert solution(\"4\\n1 2 1\\n3\\n-1 -2\\n\") == \"1\\n-2\\n2\\n3\\n\"",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Invalid Output\"\nassert solution(input()) == \"6\", \"Invalid Output\"\nassert solution(input()) == \"-2999999997\", \"Invalid Output\"",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"The output does not match the expected output.\\nInput: {input}\\nOutput: {output}\" for input, output in [\n    (input, output) for testcase in range(int(stdin.strip()), int(stdin.strip())+1)\n    for input in (\n        [1, 2, 3, -1, -2],\n        [-1, -2, -1, -3],\n        [10, -2, 8, 3, 8, -4, -15, 5, -2, -3, 1],\n        [-1000000000, -1000000000, -1000000000, -1000000000],\n    )\n    for output in (\n        [1, 2, 3, -1, -2],\n        [-1, -2, -1, -3],\n        [1, 2, 3, -1, -2],\n        [1, 2, 3, -1, -2],\n    )\n]",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(stdin)}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '2\\n-1\\n6\\n-2999999997'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"3\"",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n-1\\n6\\n-2999999997\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"3 5\n2 1\n3 2\n3 4\"\"\"\n\nassert solution(stdin) == \"\"\"4 1\n1 2\n1 3\"\"\"\n\nassert solution(stdin) == \"\"\"8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 110,
        "num_ids_4": 199
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 110,
        "num_ids_4": 199
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_example1) == output_example1, f\"Expected: {output_example1}\\nActual: {solution(input_example1)}\"\nassert solution(input_example2) == output_example2, f\"Expected: {output_example2}\\nActual: {solution(input_example2)}\"\nassert solution(input_example3) == output_example3, f\"Expected: {output_example3}\\nActual: {solution(input_example3)}\"\nassert solution(input_example4) == output_example4, f\"Expected: {output_example4}\\nActual: {solution(input_example4)}\"\nassert solution(input_example5) == output_example5, f\"Expected: {output_example5}\\nActual: {solution(input_example5)}\"\nassert solution(input_example6) == output_example6, f\"Expected: {output_example6}\\nActual: {solution(input_example6)}\"\nassert solution(input_example7) == output_example7, f\"Expected: {output_example7}\\nActual: {solution(input_example7)}\"\nassert solution(input_example8) == output_example8, f\"Expected: {output_example8}\\nActual: {solution(input_example8)}\"\nassert solution(input_example9) == output_example9, f\"Expected: {output_example9}\\nActual: {solution(input_example9)}\"\nassert solution(input_example10) == output_example10, f\"Expected: {output_example10}\\nActual: {solution(input_example10)}\"\nassert solution(input_example11) == output_example11, f\"Expected: {output_example11}\\nActual: {solution(input_example11)}\"\nassert solution(input_example12) == output_example12, f\"Expected: {output_example12}\\nActual: {solution(input_example12)}\"\nassert solution(input_example13) == output_example13, f\"Expected: {output_example13}\\nActual: {solution(input_example13)}\"\nassert solution(input_example14) == output_example14, f\"Expected: {output_example14}\\nActual: {solution(input_example14)}\"\nassert solution(input_example15) == output_example15, f\"Expected: {output_example15}\\nActual: {solution(input_example15)}\"\nassert solution(input_example16) == output_example16, f\"Expected: {output_example16}\\nActual: {solution(input_example16)}\"\nassert solution(input_example17) == output_example17, f\"Expected: {output_example17}\\nActual: {solution(input_example17)}\"\nassert solution(input_example18) == output_example18, f\"Expected: {output_example18}\\nActual: {solution(input_example18)}\"\nassert solution(input_example19) == output_example19, f\"Expected: {output_example19}\\nActual: {solution(input_example19)}\"\nassert solution(input_example20) == output_example20, f\"Expected: {output_example20}\\nActual: {solution(input_example20)}\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Wrong output: {solution(input_data)}!= {expected_output}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n3 5\n2 1\n3 2\n3 4\n'''\n\nfrom typing import List",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.readlines(), stdout.readlines())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3 5\\n2 1\\n3 2\\n3 4\\n4 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\\n40\\n41664916690999888\"\nassert solution(input()) == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"40\"\nassert solution(input()) == \"41664916690999888\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"2\\n6\\n499995\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"3\\n7\\n499997\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=solution.py) == '''0\n40\n41664916690999888'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {t+1} has incorrect output. Expected output: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Test case {t+1} failed: {solution(stdin=input())}!= {output}\"\nfor t in range(int(stdin)):\n    n = int(stdin.split()[1])\n    board = []\n    for _ in range(n):\n        row = list(map(int, stdin.split()))\n        board.append(row)\n    moves = 0\n    for i in range(1, n-1):\n        for j in range(1, n-1):\n            if board[i][j] == 0:\n                moves += 1\n                board[i][j], board[i-1][j-1], board[i-1][j], board[i][j-1], board[i+1][j-1], board[i+1][j], board[i+1][j+1], board[i][j+1] = 0, 0, 0, 0, 0, 0, 0, 0\n    print(moves)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0\\n40\\n41664916690999888'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\nassert solution(\"hello\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\nassert solution(\"world\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\nassert solution(\"12345\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\nassert solution(\"1\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\nassert solution(\"5\") == \"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\"\n",
        "num_ids_2": 76,
        "num_ids_4": 156
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'10\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6') == '1 1 1 2 -1 1 1 3 1 1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6\\n6 4 5 6 5 4 3 5 4 6') == '1 1 1 2 -1 1 1 3 1 1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6\\n6 4 5 6 5 4 3 5 4 6\\n7 6 5 7 5 5 6 5 4 6') == '1 1 1 2 -1 1 1 3 1 1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6\\n6 4 5 6 5 4 3 5 4 6\\n7 6 5 7 5 5 6 5 4 6\\n8 5 7 6 5 6 5 5 5 5') == '-1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6\\n6 4 5 6 5 4 3 5 4 6\\n7 6 5 7 5 5 6 5 4 6\\n8 5 7 6 5 6 5 5 5 5\\n9 8 7 6 7 5 5 5 5 5') == '-1\\n'\nassert solution(b'10\\n4 5 7 6 7 5 4 4 6 4\\n5 7 6 5 6 4 3 5 4 6\\n6 4 5 6 5 4 3 5 4 6\\n7 6 5 7 5 5 6 5 4 6\\n8 5 7 6 5 6 5 5 5 5\\n9 8 7 6 7 5 5 5 5 5\\n10 7 6 7 6 5 5 5 5 5') == '-1\\n'",
        "num_ids_2": 129,
        "num_ids_4": 342
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['1 1 1 2 -1 1 1 3 1 1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1']",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4, 5, 7, 6, 7, 5, 4, 4, 6, 4]) == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 120,
        "num_ids_4": 240
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n'\n\nsolution('5\\n64\\n32\\n97\\n2\\n12345')",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', Received: '{solution(stdin)}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8\"\nassert solution(\"10\\n100\\n1000\\n1000000\\n1000000000\\n\") == \"YES\\n3 5 8\"\nassert solution(\"10\\n100\\n1000\\n1000000\\n1000000000\\n\") == \"NO\"\nassert solution(\"10\\n100\\n1000\\n1000000\\n1000000000\\n\") == \"NO\"\nassert solution(\"10\\n100\\n1000\\n1000000\\n1000000000\\n\") == \"NO\"\nassert solution(\"10\\n100\\n1000\\n1000000\\n1000000000\\n\") == \"YES\\n3 5 823\"",
        "num_ids_2": 89,
        "num_ids_4": 179
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor i in range(t):\n    n = int(stdin.readline())\n    a, b, c = map(int, stdin.readline().split())\n    if not is_possible(a, b, c, n):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nbbbbb') == '2\\nabba'\nassert solution('6\\nababab') == '0\\nababab'\nassert solution('2\\naa') == '1\\nba'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\\naba\"\nassert solution(\"6\") == \"0\\nababab\"\nassert solution(\"2\") == \"1\\nbaa\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\nbbbb') == '2\\nabba'\nassert solution('6\\nabbab') == '0\\nabbab'\nassert solution('2\\naa') == '1\\nba'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == 0\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\naa\") == \"1\\nba\"\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabcab\") == \"0\\nabcab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nbbbb\\n') == '2\\nabba\\n'\nassert solution('6\\nabbab\\n') == '0\\nabbab\\n'\nassert solution('2\\naa\\n') == '1\\nba\\n'",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 2\nassert solution(6) == 0\nassert solution(2) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\nbbbb') == '2\\nabba'\nassert solution('6\\nababab') == '0\\nababa'\nassert solution('2\\naa') == '1\\nbaa'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"15\", \"The given solution is incorrect.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.input()) == solution.output()",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '15'\n\nSolution:\n\nWe can solve this problem using dynamic programming. We will use a 2D array `visited` to keep track of the points that we have visited. We will initialize the `visited` array with all points as initially unvisited. We will then fill in the `visited` array as we traverse the key points.\n\nWe will start by initializing the `visited` array with all points as unvisited. Then, for each level of the key points, we will create a 2D array of size `n x n` where `n` is the number of levels. We will fill in this 2D array with all `True` values initially, indicating that we have visited all the points of the corresponding level.\n\nFinally, we will iterate through all the levels of the key points from the minimum level to the maximum level, and for each level, we will iterate through all the points in that level. For each point, we will check if we have already visited that point in the current level. If we have not visited that point, we will mark it as visited in the current level and move to the next level.\n\nWe will keep track of the minimum possible total distance Maksim has to travel by iterating through all the points of the given levels. We will calculate the total distance by summing up all the distances of all the points in the current level.\n\nHere is the Python code:\n\n```python\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"15\", \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 15",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Error in the code\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15\\n'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9\\n'",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Takahashi is solving quizzes. He has easily solved all but the last one. The last quiz has three choices: 1, 2, and 3. With his supernatural power, Takahashi has found out that the choices A and B are both wrong. Print the correct choice for this problem.\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Error: Takahashi is not correctly solving the quizzes.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Test 1: Should print '2' when the input is 3 and 1 are both wrong\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\nassert solution(\"4\\n2\\n\") == \"3\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n3\\n\") == \"3\\n\"\nassert solution(\"3\\n2\\n\") == \"2\\n\"\nassert solution(\"4\\n3\\n\") == \"3\\n\"\nassert solution(\"5\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\") == \"2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Incorrect output: {}\".format(solution(\"3\\n1\\n\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"2\\n3\\n\") == \"3\"\nassert solution(\"1\\n3\\n\") == \"1\"\nassert solution(\"4\\n3\\n\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '1.000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '1.000000000000\\n', 'Solution is incorrect'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"1.000000000000\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1.000000000000\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"Test failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '1.000000000000\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1.000000000000\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1.000000000000\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1.000000000000\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"1.000000000000\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"Hello World\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"10\"\nassert solution(\"1\\n2\\nA\\nB\") == \"Hello World\"\nassert solution(\"3\\n4\\n5\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Hello World\\n\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Hello World\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"10\\n\"\nassert solution(input()) == \"20\\n\"\n\ninput() will read the input from the standard input.",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No input given\\n\", \"Test 1\"\nassert solution(\"1\\n\") == \"Hello World\\n\", \"Test 2\"\nassert solution(\"1\\nA\\nB\\n\") == \"A+B\\n\", \"Test 3\"\nassert solution(\"2\\n\") == \"2\\n\", \"Test 4\"\nassert solution(\"2\\nA\\nB\\n\") == \"5\\n\", \"Test 5\"\nassert solution(\"0\\n\") == \"No input given\\n\", \"Test 6\"",
        "num_ids_2": 37,
        "num_ids_4": 81
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Hello World\\n', 'Test Failed'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\n\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\n\nassert solution(\"1\\nA\\n\") == \"Hello World\\nA\\n\"\n\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\nA\\nB\\n\"\n\nassert solution(\"2\\nAB\\n\") == \"AB\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 78
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'1\\n') == 'Hello World\\n'\nassert solution(b'2\\nA\\nB\\n') == 'A+B\\n'\nassert solution(b'3\\nA\\nB\\n') == 'Hello World\\n'\nassert solution(b'4\\nA\\nB\\n') == 'A+B\\n'\nassert solution(b'5\\nA\\nB\\n') == 'A+B\\n'",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Hello World\\n\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"Hello World\"\nassert solution(stdin=\"1\\n\") == \"Hello World\"\nassert solution(stdin=\"2\\nA\\nB\\n\") == \"3\"\nassert solution(stdin=\"2\\n9\\n9\\n\") == \"18\"",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3333\", \"The solution is incorrect.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 9\") == \"3333\"\nassert solution(\"1 2\") == \"22\"\nassert solution(\"5 5\") == \"55\"\nassert solution(\"3 3\") == \"33\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 9\") == \"19\"\nassert solution(\"5 9\") == \"59\"\nassert solution(\"9 1\") == \"91\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\", \"The solution should return the lexicographically smaller of the two strings.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"9 1\") == \"111\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 10\") == \"1010\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"9 9\") == \"999\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 3\") == \"3333\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 2\") == \"222\"\nassert solution(\"1 2\") == \"11\"\nassert solution(\"3 4\") == \"444\"\nassert solution(\"9 8\") == \"888\"\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 2\") == \"11\"\nassert solution(\"1 3\") == \"13\"\nassert solution(\"2 2\") == \"22\"\nassert solution(\"2 3\") == \"23\"\nassert solution(\"3 3\") == \"33\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"B\") == \"b\"\nassert solution(\"c\") == \"d\"\nassert solution(\"D\") == \"d\"\nassert solution(\"z\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"c\") == \"b\", \"Test 1\"\nassert solution(\"z\") == \"c\", \"Test 2\"\nassert solution(\"a\") == \"b\", \"Test 3\"\nassert solution(\"Z\") == \"c\", \"Test 4\"\nassert solution(\"9\") == \"b\", \"Test 5\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"C\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"c\") == \"b\", \"Expected 'b' but got '{}'\".format(solution(\"c\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a') == 'b', 'Test Case 1 failed'\nassert solution('c') == 'd', 'Test Case 2 failed'\nassert solution('z') == 'z', 'Test Case 3 failed'\nassert solution('x') == 'y', 'Test Case 4 failed'\nassert solution('A') == 'B', 'Test Case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\", \"Solution should return the letter 'b' for input 'a'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\n\nprint(\"a is followed by b.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"C\") == \"b\", \"Test 1: Expected b, got \" + solution(\"C\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"ab cde\") == \"cdecab\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"oder atc\") == \"atcoder\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"hello world\") == \"helloworld\"\nassert solution(\"abcde\") == \"abcdef\"\nassert solution(\"az\") == \"az\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"atcoder\", \"Test case 1 failed\"\n\nassert solution(\"oder atc\") == \"atcoder\", \"Test case 2 failed\"\n\nassert solution(\"hello world\") == \"helloworld\", \"Test case 3 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"erat as\") == \"atcoder\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 7 8 2\") == 0\nassert solution(\"6 5 1 2 4 3\") == 0\nassert solution(\"2 1000000 1000000\") == 1000000",
        "num_ids_2": 36,
        "num_ids_4": 67
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output', 'Please provide the correct input and output'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 5 7 8 2\\n6\\n5 1 2 4 6 3\\n2\\n1000000 1000000\\n') == '0\\n0\\n1000000\\n'\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"Input\\n6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"Input\\n2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 98
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 7 8 2\") == \"0\"\nassert solution(\"6 5 1 2 4 6 3\") == \"0\"\nassert solution(\"2 1000000 1000000\") == \"1000000\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Error: function definition missing.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == 5\nassert solution('''\n1 1 100 99\n100\n''') == 1\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == 6",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\\n\"\nassert solution(\"1 1 100 99\\n100\") == \"1\\n\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2, 3, 3) == 5\nassert solution(1, 1, 100, 99) == 1\nassert solution(7, 4, 2, 1) == 6",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99\\n100') == '1'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6') == '6'",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"Incorrect output for solution 5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 2 3\") == 0\nassert solution(\"6 3\\n3 2 0 6 10 12\") == 3\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\") == 2",
        "num_ids_2": 46,
        "num_ids_4": 80
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n3 2 0 7 10 14'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n3 2 0 7 10 14\\n0\\n0 1 2 3\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\\n4 2\\n0 1 2 3\\n\") == \"3\\n3 2 0 7 10 14\\n\"\nassert solution(\"4 2\\n0 1 2 3\\n\") == \"0\\n0 1 2 3\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"3 2 0 7 10 14\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output\\n3\\n3 2 0 7 10 14'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output:\\n{expected_output}\\nActual output:\\n{solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3\\n3 2 0 7 10 14'\nassert solution('4 2\\n0 1 2 3') == '0\\n0 1 2 3'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\") == \"3\\n3 2 0 7 10 14 \"\nassert solution(\"4 2\\n0 1 2 3\\n\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n4 2\\n0 1 2 3\") == \"3\\n3 2 0 7 10 14\\n\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2') == '20'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == 8\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == 20\n\nfrom typing import List",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20\\n'",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input {input()} is incorrect. Output {output} is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == 8\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2') == 20\nassert solution('') == 0",
        "num_ids_2": 85,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20\\n'\n\nfrom typing import List",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'YES'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: got {solution(input())}, expected {expected}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"1\\n1 1 10 10\") == \"YES\"\nassert solution(\"1\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\") == \"YES\"\nassert solution(\"1\\n1 1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"1\\n10000 10000 10000 10000\") == \"NO\"",
        "num_ids_2": 31,
        "num_ids_4": 109
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\n\nimport typing",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output\\n3\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Output\\n3\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'\n",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Your solution here\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n\"\"\") == \"9\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n\nfrom typing import List",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Please check the expected output and the function signature.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\"\n\ninput_n = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, \"Your code is not correct\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 83,
        "num_ids_4": 161
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1 '\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1 '\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 '",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, \"Your solution is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1 \\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1 \\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '3 1'\nassert solution(6) == '7 2'\nassert solution(10) == '7486 3'",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Error: Invalid input.\"\nassert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\"",
        "num_ids_2": 36,
        "num_ids_4": 123
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '2\\n' + '5000 9\\n' + '1\\n' + '7\\n' + '4\\n' + '800 70 6 9000\\n' + '1\\n' + '10000\\n' + '1\\n' + '10\\n'\nassert solution(7) == '2\\n' + '5000 9\\n' + '1\\n' + '7\\n' + '4\\n' + '800 70 6 9000\\n' + '1\\n' + '10000\\n' + '1\\n' + '10\\n'",
        "num_ids_2": 176,
        "num_ids_4": 176
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'answer', \"Solution should return 'answer'.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case #{test_case} failed.\\nExpected output: {expected_output}\\nGot output: {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5009) == \"2 5000 9\\n1\\n7\"\nassert solution(7) == \"4 800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5009) == \"5000 9\\n1\\n7\"\nassert solution(7) == \"4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\", \"The output is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1 1 1 1 1\"\nassert solution(2) == \"3 3 3\"\nassert solution(3) == \"2 3 3 2 1 3\"\nassert solution(4) == \"1\"\nassert solution(5) == \"2 2 2 2\"\nassert solution(6) == \"4 4 4 1 4\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('2\\n3\\n1\\n2\\n3\\n4\\n5') == '1 1 2 2 3'",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 1\nassert solution() == 3\nassert solution() == 2\nassert solution() == 3\nassert solution() == 1\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n1 1 1 1 1\n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1, 2, 3, 4, 5) == \"1 1 1 1 1\"\nassert solution(3, 2, 3, 1, 5, 4) == \"2 3 3 2 1 3\"\nassert solution(3, 1, 2, 3, 4, 5) == \"1 1 1 1 1\"\nassert solution(3, 2, 3, 1, 5, 4) == \"2 3 3 2 1 3\"\nassert solution(6, 4, 6, 2, 1, 5, 3) == \"1 1 1 1 1\"\nassert solution(6, 4, 6, 2, 1, 5, 3) == \"1 1 1 1 1\"\nassert solution(6, 4, 6, 2, 1, 5, 3) == \"1 1 1 1 1\"\nassert solution(6, 4, 6, 2, 1, 5, 3) == \"1 1 1 1 1\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Solution is available\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n2\\n1\"\nassert solution() == \"3\\n2\\n1\"\nassert solution() == \"3\\n2\\n1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\\n3\\n2\\n1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n2\\n1\\n', \"Test 1\"\n\nassert solution() == '3\\n2\\n1\\n', \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected_output, f\"Your code is wrong. Please see the expected output and check the code again.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n2\\n1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '3\\n'\nassert solution(4) == '2\\n'\nassert solution(5) == '1\\n'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"The answer is: 2\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please check the output and the expected output for the query case.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2 \\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5') == '5 4 0 5 3 3 9 0 2 5 \\n'",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"0 0 1 2\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == [\"0 0 1 2\", \"5 4 0 5 3 3 9 0 2 5\"]",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\np1 2 3\\np1 3 2\") == \"YES\\nabb\\ndef\"\nassert solution(\"3 1\\np1 2\\np2 1\") == \"NO\"\nassert solution(\"4 2\\np1 2 3\\np1 3 2\\np2 1 3\\np2 3 1\") == \"YES\\nabc\\ndefg\\nhij\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\" # Your code should print \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\"\nassert solution(\"1 3 2\\n2 3 1\") == \"YES\\ndef\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nabbd\"\nassert solution() == \"YES\\nabcde\"\nassert solution() == \"YES\\nabcdef\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 3\\n1 2') == 'YES\\nabbb\\ndef'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\nabb\\ndef\\nabc\\nbcd\\n\"\nassert solution() == \"YES\\ndef\\nabc\\nbcd\\n\"\nassert solution() == \"YES\\nabc\\nbcd\\n\"\nassert solution() == \"NO\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 65
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\\ndef\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\nab\\nefg\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n20 10 20\\n\\n4\\n10 10 10 10\\n\\n6\\n5 4 5 4 4 5\\n\\n2\\n1 4\\n\\n2\\n1 4') == '43\\n1 3 2\\n\\n64\\n2 1 4 3\\n\\n69\\n6 1 3 5 2 4'\nassert solution('4\\n10 10 10 10\\n\\n6\\n5 4 5 4 4 5\\n\\n2\\n1 4\\n\\n2\\n1 4') == '64\\n2 1 4 3\\n\\n69\\n6 1 3 5 2 4'\nassert solution('6\\n5 4 5 4 4 5\\n\\n2\\n1 4\\n\\n2\\n1 4') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n\\n2\\n1 4') == '3\\n2 1'\nprint(\"All test cases pass!\")",
        "num_ids_2": 208,
        "num_ids_4": 295
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\"\nassert solution(\"2\\n1 4\\n\") == \"3\"",
        "num_ids_2": 49,
        "num_ids_4": 92
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\n",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 134
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"The output is incorrect.\"\nassert solution(\"10\\n1 2 3 4 5\") == \"5\\n\", \"The output is incorrect.\"\nassert solution(\"5\\n2 3 4 5 1\") == \"3\\n\", \"The output is incorrect.\"",
        "num_ids_2": 59,
        "num_ids_4": 88
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"5\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Test failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\", \"Test failed\"\nassert solution(\"5\\n1 3 2 5 4\") == \"2\\n\", \"Test failed\"\nassert solution(\"5\\n3 5 1 4 2\") == \"2\\n\", \"Test failed\"\nassert solution(\"5\\n1 4 5 3 2\") == \"1\\n\", \"Test failed\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"5\\n4 3 2 5 1\") == \"2\"\nassert solution(\"5\\n4 5 2 3 1\") == \"1\"\nassert solution(\"5\\n4 1 2 3 5\") == \"0\"\nassert solution(\"5\\n4 2 1 3 5\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3\\n'  # pass\nassert solution(input()) == '5\\n'  # pass\nassert solution(input()) == '2\\n'  # pass\nassert solution(input()) == '1\\n'  # pass\nassert solution(input()) == '4\\n'  # pass",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"5\\n3 3 3 3 4\\n\") == \"1\"\nassert solution(\"6\\n3 3 3 3 4 5\\n\") == \"2\"\nassert solution(\"7\\n3 3 3 3 4 5 6\\n\") == \"2\"\nassert solution(\"8\\n3 3 3 3 4 5 6 7\\n\") == \"3\"\nassert solution(\"9\\n3 3 3 3 4 5 6 7 8\\n\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"1\", \"Input error\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"3\\n5 2 1\") == \"2\\n\"\nassert solution(\"5\\n4 2 1 5 3\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"1\\n5 4 3 2 1\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\" # correctness of the solution\nassert solution(\"4\\n1 1 1 1\") == \"1\" # correctness of the solution",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\", \"The given sequence is not a good sequence.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"The solution should return 1.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"0 1 2 3 4\") == \"0\"\nassert solution(\"1 0 2 3 4\") == \"0\"\nassert solution(\"1 2 1 3 4\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"The output should be 1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1', \"Output should be 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Test case 1\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\", \"Test case 2\"\nassert solution(\"3 2 4 5 1\") == \"1\\n\", \"Test case 3\"\nassert solution(\"1 2 4 5 3\") == \"1\\n\", \"Test case 4\"\nassert solution(\"5 4 2 1 3\") == \"1\\n\", \"Test case 5\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Test Case 1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"The variable Snuke assigned 0 was x_1, so we should print 1.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Solution should return 0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 5) == 0, \"Test failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\"  # The minimum possible value of S_{max} - S_{min} is 0.\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\\n\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\nprint(\"Yes\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\\n\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"5\\n1 100 1000 10000 100000\") == \"No\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\", \"Solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"yx\") == \"Yes\", \"Incorrect output: \" + solution(\"yx\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"acde\") == \"No\"\nassert solution(\"xya\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"zxy\") == \"No\"\nassert solution(\"abcde\") == \"Yes\"\nassert solution(\"aaabbbccd\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\", \"Testcase 1 failed\"\nassert solution(\"axy\") == \"Yes\", \"Testcase 2 failed\"\nassert solution(\"xyz\") == \"No\", \"Testcase 3 failed\"\nassert solution(\"\") == \"No\", \"Testcase 4 failed\"\nassert solution(\"hello\") == \"No\", \"Testcase 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\nassert solution(\"atcoder\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\", \"Test case 1 failed.\"\nassert solution(\"2 2 5\") == \"NO\", \"Test case 2 failed.\"\nassert solution(\"10 10 10\") == \"YES\", \"Test case 3 failed.\"\nassert solution(\"100 100 100\") == \"YES\", \"Test case 4 failed.\"\nassert solution(\"10 5 20\") == \"NO\", \"Test case 5 failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 93
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"3 5 10\") == \"NO\"\nassert solution(\"4 3 7\") == \"YES\"\nassert solution(\"5 7 11\") == \"NO\"\nassert solution(\"6 8 15\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 5 7\") == \"YES\"\nassert solution(\"4 6 7\") == \"YES\"\nassert solution(\"5 3 20\") == \"NO\"\nassert solution(\"6 10 5\") == \"YES\"\nassert solution(\"9 8 4\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n\nassert solution(\"4 6 12\") == \"YES\"\n\nassert solution(\"10 10 10\") == \"YES\"\n\nassert solution(\"8 9 10\") == \"YES\"\n\nassert solution(\"6 3 7\") == \"YES\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\", \"Solution should return 'YES'.\"\nassert solution(\"1 5 1\") == \"NO\\n\", \"Solution should return 'NO'.\"\nassert solution(\"1 6 1\") == \"YES\\n\", \"Solution should return 'YES'.\"\nassert solution(\"7 5 7\") == \"NO\\n\", \"Solution should return 'NO'.\"\nassert solution(\"1 5 6\") == \"NO\\n\", \"Solution should return 'NO'.\"\nassert solution(\"5 5 5\") == \"YES\\n\", \"Solution should return 'YES'.\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"9 5 3\") == \"YES\"\nassert solution(\"7 5 7\") == \"YES\"\nassert solution(\"7 5 10\") == \"YES\"\nassert solution(\"6 5 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\", \"The sum of 7 and 14 is congruent to 1 modulo 5.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"The area of this yard excluding the roads should be 1 square yard.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nprint(\"All assertions passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\\n\"\n\nThis solution first asserts that the input is valid and produces the expected output.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"1 100\") == \"10000\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"The area of this yard excluding the roads is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\\n\"\nassert solution(\"5 5\") == \"0\\n\"\nassert solution(\"1 1\") == \"0\\n\"\nassert solution(\"2 0\") == \"0\\n\"\nassert solution(\"1 0\") == \"1\\n\"\nassert solution(\"0 2\") == \"0\\n\"\nassert solution(\"0 1\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"The solution should return the area of this yard excluding the roads as 1 square yard.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 6\") == \"3\"\nassert solution(\"7 8\") == \"4\"\nassert solution(\"9 10\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 4 3\") == \"4\"\nassert solution(\"16 6 2\") == \"5\"\nassert solution(\"2 4 1\") == \"2\"\nassert solution(\"20 8 5\") == \"7\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"15 4 2\") == \"2\"\nassert solution(\"16 3 1\") == \"1\"\nassert solution(\"15 3 1\") == \"1\"\nassert solution(\"14 4 1\") == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 3 1\") == \"3\", \"Test failed\" # Failed",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\", \"Solution does not work\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2\\n'\nprint(\"All test cases passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\nassert solution(\"1\\n1 1\\n1 2\\n2 2\") == \"1\\n\"\nassert solution(\"2\\n3 0\\n3 1\\n0 3\\n1 2\\n1 3\\n2 3\") == \"2\\n\"\nassert solution(\"1\\n1 2\\n1 3\\n1 4\") == \"1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 138
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n0\") == \"0\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 123
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == 2\nassert solution(\"1\\n1 1\") == 1\nassert solution(\"2\\n1 1\\n2 1\") == 2\nassert solution(\"1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == 10\nassert solution(\"10\\n1 1\") == 10\nassert solution(\"10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n1 1\") == 10",
        "num_ids_2": 53,
        "num_ids_4": 133
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed with input {input_data}, expected output {output_data}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == 2\nassert solution(\"1\\n2\\n3\\n4\\n5\") == 1\nassert solution(\"2\\n2\\n2\\n2\\n2\") == 1\nassert solution(\"3\\n3\\n3\\n3\\n3\") == 1\nassert solution(\"5\\n5\\n5\\n5\\n5\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"2\\n2\\n2\\n2\\n2\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\n",
        "num_ids_2": 60,
        "num_ids_4": 102
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\na 2\\nb 0\\nc 3\\na 1\\nb 2\\nc 4\\na 3\\nb 4\\nc 5') == '2'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"The output should be 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected {output_data}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n0 3\\n') == '7\\n'\nassert solution('4 7\\n1 2\\n3 4\\n') == '14\\n'\nassert solution('5 6\\n1 2\\n3 4\\n5 6\\n') == '14\\n'\nassert solution('7 8\\n1 2\\n3 4\\n5 6\\n7 8\\n') == '21\\n'\nassert solution('9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n') == '21\\n'",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n0 3') == '7\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"3 1\\n1 2\") == \"0\"\nassert solution(\"1 2\\n1 3\") == \"3\"\nassert solution(\"3 2\\n1 1\") == \"1\"\nassert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"3 1\\n1 2\") == \"0\"\nassert solution(\"1 2\\n1 3\") == \"3\"\nassert solution(\"3 2\\n1 1\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\\n\"\nassert solution(\"3 4\\n0 3\\n0 1\\n0 2\\n\") == \"12\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\", \"Output not as expected\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"1\\n1\\n2\\n\"\n\nassert solution(\"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"1\\n1\\n2\\n\"\n\nassert solution(\"\"\"10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1\\n'",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\"\n) == \"1\\n1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\"\n) == \"0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n3\nL 1\nR 2\n? 3\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n2\nL 1\nR 2\nL 1\nR 2\nL 1\nR 2\nL 1\nR 2\nL 1\nR 2\nL 1\nR 2\n\"\"\"\n) == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n1\nL 1\nR 2\nR ",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\n\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\n\nprint(solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n'''))  # Output: 1\nprint(solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n'''))  # Output: 0\nprint(solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n'''))  # Output: 1\nprint(solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n'''))  # Output: 0\nprint(solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n'''))  # Output: 1\nprint(solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n'''))  # Output: 0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1\\n1\\n2\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\"1\n1\n2\n\"\"\"\n\nassert solution(input()) == \"\"\"0\n2\n1\n\"\"\"\n\nassert solution(input()) == \"\"\"2\n1\n1\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Test case {case_num} failed. Expected output: {expected_output}, Got: {solution}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected, f\"Incorrect output: '{solution()}'\\nExpected output: '{expected}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1\\n20\\n1000000000000000000') == '6\\n'\nassert solution('5\\n10\\n1000000000000000000') == '7\\n'\nassert solution('10\\n1000000000000000000') == '72\\n'\nassert solution('10\\n-1\\n1000000000000000000') == '-1\\n'\nassert solution('1000000000000000000\\n2\\n1000000000000000000') == '4\\n6\\n6\\n72\\n'\nassert solution('1000000000000000000\\n20\\n-1') == '-1\\n'",
        "num_ids_2": 77,
        "num_ids_4": 150
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '0'\nassert solution(10) == '0'\nassert solution(50) == '0'\nassert solution(250) == '0'\nassert solution(1000000000000000000) == '0'\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    if n % 2 == 0:\n        n //= 2\n    elif n % 3 == 0:\n        n //= 3\n    elif n % 5 == 0:\n        n //= 5\n    else:\n        print(-1)\n        continue\n    print(n + 1)",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_int()) == expected, f\"Test {index+1} failed\"\nfor index, (n, expected) in enumerate(tests):\n    assert solution(n) == expected, f\"Test {index+1} failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1\\n25\\n30\\n14\\n27\\n1000000000000000000\") == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # pass\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0, \"Expected 0, got {}\".format(solution(3))\nassert solution(10) == 1, \"Expected 1, got {}\".format(solution(10))\nassert solution(25) == 2, \"Expected 2, got {}\".format(solution(25))\nassert solution(30) == 3, \"Expected 3, got {}\".format(solution(30))\nassert solution(14) == 3, \"Expected 3, got {}\".format(solution(14))\nassert solution(27) == 3, \"Expected 3, got {}\".format(solution(27))\nassert solution(1000000000000000000) == -1, \"Expected -1, got {}\".format(solution(1000000000000000000))",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\\n') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\nassert solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n10000000000000000000\\n') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\nassert solution('8\\n10\\n10000000000000000000\\n') == '-1'\nassert solution('9\\n10000000000000000000\\n') == '-1'\nassert solution('10\\n10\\n10000000000000000000\\n') == '-1'\nassert solution('11\\n10000000000000000000\\n') == '-1'\nassert solution('12\\n10000000000000000000\\n') == '-1'\nassert solution('13\\n10000000000000000000\\n') == '-1'\nassert solution('14\\n10000000000000000000\\n') == '-1'\nassert solution('15\\n10000000000000000000\\n') == '-1'\nassert solution('16\\n10000000000000000000\\n') == '-1'\nassert solution('17\\n10000000000000000000\\n') == '-1'\nassert solution('18\\n10000000000000000000\\n') == '-1'\nassert solution('19\\n10000000000000000000\\n') == '-1'\nassert solution('20\\n10000000000000000000\\n') == '-1'\nassert solution('21\\n10000000000000000000\\n') == '-1'\nassert solution('22\\n10000000000000000000\\n') == '-1'\nassert solution('23\\n10000000000000000000\\n') == '-1'\nassert solution('24\\n10000000000000000000\\n') == '-1'\nassert solution('25\\n10000000000000000000\\n') == '-1'\nassert solution('26\\n10000000000000000000\\n') == '-1'\nassert solution('27\\n10000000000000000000\\n') == '-1'\nassert solution('28\\n10000000000000000000\\n') == '-1'\nassert solution('29\\n10000000000000000000\\n') == '-1'\nassert solution('30\\n10000000000000000000\\n') == '-1'\nassert solution('31\\n10000000000000000000\\n') == '-1'\nassert solution('32\\n10000000000000000000\\n')",
        "num_ids_2": 150,
        "num_ids_4": 222
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0\\n'\nassert solution() == '4\\n'\nassert solution() == '6\\n'\nassert solution() == '6\\n'\nassert solution() == '-1\\n'\nassert solution() == '6\\n'\nassert solution() == '72\\n'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 3\nassert solution(8) == 4\nassert solution(9) == -1\nassert solution(1000000000000000000) == -1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4]) == 'NO'\nassert solution([3, 1, 1, 3]) == 'NO'\nassert solution([1, 1, 2, 1]) == 'YES'\nassert solution([11, 11]) == 'YES'\nassert solution([100]) == 'YES'",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO\\nYES\\nYES'\nassert solution('4\\n3\\n1 1 1\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n99') == 'NO'",
        "num_ids_2": 112,
        "num_ids_4": 161
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO\\nYES\\nYES'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\", \"Function should return YES\"\nassert solution() == \"NO\", \"Function should return NO\"\nfor test_case in range(int(stdin.strip()), int(stdin.strip()) + 1):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    result = solution()\n    assert result == \"YES\" if test_case == int(stdin.strip()) else result == \"NO\"\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The solution for test case {index + 1} is incorrect. Expected: '{expected_output}', got: '{solution(input())}'.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3]) == \"YES\"\nassert solution([1, 1, 3]) == \"YES\"\nassert solution([4]) == \"NO\"\nassert solution([1, 1, 2, 1]) == \"YES\"\nassert solution([11, 11]) == \"YES\"\nassert solution([100]) == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\") == 0",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"The solution should return 4.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\") == 0",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected output: {}\".format(input(), output())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\ndbacz\\n') == '0'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    6\n    5 2 3\n    100 1 4\n    1 10 5\n    1000000000 1 6\n    1 1 1000000000\n    1 1 999999999\n    \"\"\"\n) == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for the given input: \\nInput: {stdin}\\nOutput: {output}\\n\\nSolution: {solution(stdin=input())}\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\"\n\ninput_lines = stdin.split('\\n')\nt = int(input_lines[0])\n\noutput = [0] * t\n\nfor i in range(t):\n    a, b, k = map(int, input_lines[i+1].split())\n    \n    position = 0\n    \n    for j in range(k):\n        position += (a if (j % 2 == 0) else -b)\n        if (j + 1) % 2 == 1:\n            position += a\n        else:\n            position -= b\n    \n    output[i] = position\n\nfor i in range(t):\n    print(output[i])",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n8\n198\n-17\n2999999997\n0\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\", \"Test failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n100000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n1",
        "num_ids_2": 217,
        "num_ids_4": 1027
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n'\nassert solution(r'4\\n1\\n5\\n7\\n9\\n10\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed\"\ntest_case_number += 1\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\nprint(f\"The answer is: {expected_output}\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 354,
        "num_ids_4": 685
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"55\\n10\"",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '70'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n10\\n8\\n5\\n3\\n\\n12\\n8\\n8\\n7\\n2\\n\\n12343\\n43\\n4543\\n39\\n123212\\n1000000000\\n1000000000\\n1\\n1\\n1000000000\\n1000000000\\n10\\n11\\n2\\n1\\n5\\n10\\n11\\n9\\n1\\n10\\n\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\"",
        "num_ids_2": 219,
        "num_ids_4": 219
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n10\\n15\\n20\") == \"75\\n285\\n14285\\n9464285\\n500000000\"\nassert solution(\"1\\n10\\n20\\n25\\n30\") == \"30\\n60\\n120\\n240\\n500\"\nassert solution(\"1\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\") == \"300\\n700\\n1500\\n3000\\n6000\\n12000\\n24000\\n48000\\n96000\\n192000\"\nassert solution(\"1\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\") == \"300\\n700\\n1500\\n3000\\n6000\\n12000\\n24000\\n48000\\n96000\\n192000\\n384000\\n768000\\n1536000\\n3472000\\n7544000\"",
        "num_ids_2": 104,
        "num_ids_4": 402
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"your_answer\"  # Test the correctness of your solution here\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\", \"The output is incorrect.\"",
        "num_ids_2": 183,
        "num_ids_4": 183
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\n",
        "num_ids_2": 205,
        "num_ids_4": 205
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10 15\") == \"2\"\nassert solution(\"30 20\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(2)) == \"1\"\nassert solution(str(10)) == \"0\"\nassert solution(str(2)) == \"2\"\nassert solution(str(7)) == \"2\"\nassert solution(str(9)) == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == ['1', '0', '2', '2', '1']",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1') == '0'\nassert solution(stdin='2 3') == '1'\nassert solution(stdin='10 10') == '0'\nassert solution(stdin='2 4') == '2'\nassert solution(stdin='7 4') == '2'\nassert solution(stdin='9 3') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"5\\n\") == \"0\"\nassert solution(\"1\\n2 3\\n\") == \"1\"\nassert solution(\"5\\n1\\n\") == \"1\"\n",
        "num_ids_2": 63,
        "num_ids_4": 95
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your code is incorrect. Please check the code provided and update it to pass the test.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '90', \"Test case 1 failed: should return '90'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '4'\nassert solution(5) == '5'\nassert solution(6) == '6'\nassert solution(7) == '7'\nassert solution(8) == '8'\nassert solution(9) == '9'\nassert solution(10) == '10'\nassert solution(11) == '11'\nassert solution(12) == '12'\nassert solution(13) == '13'\nassert solution(14) == '14'\nassert solution(15) == '15'\nassert solution(16) == '16'\nassert solution(17) == '17'\nassert solution(18) == '18'\nassert solution(19) == '19'\nassert solution(20) == '20'\nassert solution(21) == '21'\nassert solution(22) == '22'\nassert solution(23) == '23'\nassert solution(24) == '24'\nassert solution(25) == '25'\nassert solution(26) == '26'\nassert solution(27) == '27'\nassert solution(28) == '28'\nassert solution(29) == '29'\nassert solution(30) == '30'\nassert solution(31) == '31'\nassert solution(32) == '32'\nassert solution(33) == '33'\nassert solution(34) == '34'\nassert solution(35) == '35'\nassert solution(36) == '36'\nassert solution(37) == '37'\nassert solution(38) == '38'\nassert solution(39) == '39'\nassert solution(40) == '40'\nassert solution(41) == '41'\nassert solution(42) == '42'\nassert solution(43) == '43'\nassert solution(44) == '44'\nassert solution(45) == '45'\nassert solution(46) == '46'\nassert solution(47) == '47'\nassert solution(48) == '48'\nassert solution(49) == '49'\nassert solution(50) == '50'\nassert solution(51) == '51'\nassert solution(52) == '52'\nassert solution(53) == '53'\nassert solution(54) == '54'\nassert solution(55) == '55'\nassert solution(56) == '56'\nassert solution(57) == '57'\nassert solution(58) == '58'\nassert solution(59) == '59'\nassert solution(60) == '60'\nassert solution(61) == '61'\nassert solution(62) == '62'\nassert solution(63) == '63'\nassert solution(64) == '64'\nassert solution(65) == '65'\nassert solution(66) == '66'\nassert solution(67) == '67'\nassert solution(68) == '68'\nassert solution(69) == '69'\nassert solution(70) == '70'\nassert solution(71) == '71'\nassert solution(72) == '72'\nassert solution(73) == '73'\nassert solution(74) == '74'\nassert solution(75) == '75'\nassert solution(76) == '76'\nassert solution(77) == '77'\nassert solution(78) == '78'\nassert solution(79) == '79'\nassert solution(80) == '80'\nassert solution(81) == '81'\nassert solution(82) == '82'\nassert solution(83) == '83'\nassert solution(84) == '84'\nassert solution(85) == '85'\nassert solution(86) == '86'\nassert solution(87) == '87'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Explanation: {input()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"13\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13\\n90\\n1\\n66'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES\\n2 6'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES\\n2 2'",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Expected: {expected_output}, Received: {solution(input_str)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\") == \"YES\\n2 6\\n1 2\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\"",
        "num_ids_2": 87,
        "num_ids_4": 163
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n') == 'YES\\n2 6\\n1 2\\n'\nassert solution('3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'NO\\n'\nassert solution('4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n') == 'YES\\n2 2\\n4 1\\n'",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2\\n'\n\nassert solution('''\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO\\n'\n\nassert solution('''\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1\\n'\n\nassert solution('''\n5\n7\n2 3 4 5 6 7\n8\n1 1 1 1 1 1 1 1 1 1\n2\n2 2 2 2 2 2\n3\n3 3 3 3 3 3\n4\n4 4 4 4 4 4\n5\n5 5 5 5 5 5\n6\n6 6 6 6 6 6\n7\n7 7 7 7 7 7\n8\n8 8 8 8 8 8\n''') == 'YES\\n3 3\\n5 2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5\n    \"\"\") == \"NO\"\n\nassert solution(\"\"\"\n    2\n    2 3 1 3 2\n    \"\"\") == \"YES\\n2 6\"\n\nassert solution(\"\"\"\n    3\n    1\n    5\n    5\n    1 1 1 1 1\n    2\n    2 3\n    \"\"\") == \"NO\"\n\nassert solution(\"\"\"\n    4\n    6\n    2 2 2 2 2 2\n    5\n    2 2 2 2 2\n    3\n    2 2 2\n    5\n    2 2 2 2 2\n    \"\"\") == \"YES\\n2 2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([2,3,4,5,6,7,8,9], 10) == 104\nassert solution([], 1) == 0\nassert solution([4,-5,-6,-7,-8,-9], 10) == 0",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"[4,2,3]\") == \"5\"\nassert solution(\"[3,-1,0,2]\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([1,2,3,4,5]) == 6\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4,2,3,1,5\") == \"5\"\nassert solution(\"3,-1,0,2,1\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['4', '2', '3'], 1) == 5\nassert solution(['3', '-1', '0', '2'], 3) == 6\nassert solution(['2', '-3', '-1', '5', '-4'], 2) == 13",
        "num_ids_2": 39,
        "num_ids_4": 64
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True\n",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"",
        "num_ids_2": 80,
        "num_ids_4": 117
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nbet\\nbeet\\n\") == \"beet\\n\"\nassert solution(\"2\\nbeat\\n\") == \"beet\\n\"\nassert solution(\"3\\nbed\\n\") == \"bed\\n\"\nassert solution(\"4\\nvet\\n\") == \"vet\\n\"\nassert solution(\"5\\nbeet\\n\") == \"beet\\n\"\nassert solution(\"6\\nbet\\n\") == \"bet\\n\"\nassert solution(\"7\\nbeat\\n\") == \"beet\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbeat\\nvet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"10\\nbbc\\nccc\\nddd\\naaa\\nzzz\\n\") == \"aaa\\nzzz\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbeat\\nbet\\nvet\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nvet\\nbet\\nbeat\\nbet\\nvet\\nbet\\nvet\\nbet\\nbet\\nvet\\nbet\\nbet\\nbet\") == \"beet\\nvet\\nvet\\nvet\\nbet\\nbet\\nbet\\nbet\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbeeet\\nbet\\nbet\\n\") == \"beet\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\nbet\\nbet\\nbet\\nbet') == 'beet\\nvet\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [\"1\"]\nassert solution(\"2\\nbeat\\n\\n\\nvet\\n\\n\\nbet\\n\\n\\nbeet\\n\") == [\"beet\", \"vet\"]\nassert solution(\"3\\nbat\\n\\nwat\\n\\ncat\\n\\nbat\\n\\nwat\\n\\ncat\\n\") == [\"bat\", \"bat\"]\nassert solution(\"4\\nbat\\n\\nwat\\n\\ncat\\n\\nbat\\n\\nwat\\n\\ncat\\n\\n\") == [\"bat\", \"bat\"]\nassert solution(\"5\\nbat\\n\\nwat\\n\\ncat\\n\\nbat\\n\\nwat\\n\\ncat\\n\\n\\n\") == [\"bat\", \"bat\"]\nassert solution(\"6\\nbat\\n\\nwat\\n\\ncat\\n\\nbat\\n\\nwat\\n\\ncat\\n\\n\\n\\n\") == [\"bat\", \"bat\"]\nassert solution(\"7\\nbat\\n\\nwat\\n\\ncat\\n\\nbat\\n\\nwat\\n\\ncat\\n\\n\\n\\n\\n\\n\") == [\"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\", \"",
        "num_ids_2": 16,
        "num_ids_4": 100
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\nbet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\nbet\\nbet\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 177
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbete\\n\") == \"beet\\nvet\\nbete\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'beet\\nvet\\n', \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '8\\n', \"Solution does not work as expected.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"6\"\nassert solution(\"4\\n1 2 3 4\") == \"12\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\\n\", \"Please provide the input as a single line of input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"8\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\"\nassert solution(\"1\\n4 8\\n\") == \"4\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 1\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"5\\n1 2 3 4\") == \"9\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\", \"Test Failed\"\nassert solution(\"1\\n1\\n\") == \"1\\n\", \"Test Failed\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\\n\", \"Test Failed\"",
        "num_ids_2": 44,
        "num_ids_4": 74
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Invalid Input\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '84'\nprint('Test Passed')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\\n\"\n\nYou can use Python to solve this problem by following the given constraints and format of the input and output.\n\nHere's the code to solve the problem:\n\n```python\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1234\\n150\\n100\\n\") == \"84\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"84\"\nprint(\"You have 1234 - 150 = 1084 yen left after buying a cake.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"84\"\nprint(\"Test Passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"84\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n') == '8\\n'  # expected output: 8\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\", \"Test Case 1 failed\"\nassert solution(\"3 3\\n\") == \"6\\n\", \"Test Case 2 failed\"\nassert solution(\"4 4\\n\") == \"5\\n\", \"Test Case 3 failed\"\nassert solution(\"5 5\\n\") == \"5\\n\", \"Test Case 4 failed\"\nassert solution(\"6 6\\n\") == \"6\\n\", \"Test Case 5 failed\"\nassert solution(\"7 7\\n\") == \"7\\n\", \"Test Case 6 failed\"\nassert solution(\"8 8\\n\") == \"8\\n\", \"Test Case 7 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Output not provided.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"5 5\") == \"792\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"5 5\") == \"6\"\nassert solution(\"6 6\") == \"4\"\nassert solution(\"7 7\") == \"24\"\nassert solution(\"8 8\") == \"24\"\nassert solution(\"9 9\") == \"24\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\\n\", \"Expected output: 8\\n, but got: \" + solution(\"2 2\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10\\na_11 b_11\\na_12 b_12\\na_13 b_13\\na_14 b_14\\na_15 b_15\\na_16 b_16\\na_17 b_17\\na_18 b_18\\na_19 b_19\\na_20 b_20\\na_21 b_21\\na_22 b_22\\na_23 b_23\\na_24 b_24\\na_25 b_25\\na_26 b_26\\na_27 b_27\\na_28 b_28\\na_29 b_29\\na_30 b_30\\na_31 b_31\\na_32 b_32\\na_33 b_33\\na_34 b_34\\na_35 b_35\\na_36 b_36\\na_37 b_37\\na_38 b_38\\na_39 b_39\\na_40 b_40\\na_41 b_41\\na_42 b_42\\na_43 b_43\\na_44 b_44\\na_45 b_45\\na_46 b_46\\na_47 b_47\\na_48 b_48\\na_49 b_49\\na_50 b_50\\na_51 b_51\\na_52 b_52\\na_53 b_53\\na_54 b_54\\na_55 b_55\\na_56 b_56\\na_57 b_57\\na_58 b_58\\na_59 b_59\\na_60 b_60\\na_61 b_61\\na_62 b_62\\na_63 b_63\\na_64 b_64\\na_65 b_65\\na_66 b_66\\na_67 b_67\\na_68 b_68\\na_69 b_69\\na_70 b_70\\na_71 b_71\\na_72 b_72\\na_73 b_73\\na_74 b_74\\na_75 b_75\\na_76 b_76\\na_77 b_77\\na_78 b_78\\na_79 b_79\\na_80 b_80\\na_81 b_81\\na_82 b_82\\na_83 b_83\\na_84 b_84\\na_85 b_85\\na_86 b_86\\na_87 b_87\\na_88 b_88\\na_89 b_89\\na_90 b_90\\na_91 b_91\\na_92 b_92\\na_93 b_93\\na_94 b_94\\na_95 b_95\\na_96 b_96\\na_97 b_97\\na_98 b_98\\na_99 b_99\\na_100 b_100\\na_101 b_101\\na_102 b_102\\na_103 b_103\\na_104 b_104\\na_105 b_105\\na_106 b_106\\na_107 b_107\\na_108 b_108\\na_109 b_109\\na_110 b_110\\na_111 b_111\\na_112 b_112\\na_1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 1\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"4 3\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"4 4\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE\\n'\nassert solution('1 1\\n2 2\\n3 3') == 'IMPOSSIBLE\\n'\nassert solution('1 2\\n3 4\\n5 6') == 'IMPOSSIBLE\\n'",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 1\\n2 3\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE\\n'\n\nfrom collections import defaultdict\nfrom itertools import combinations",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"1 1\\n3 4\\n5 6\\n7 8\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\\n1 2\\n5 6\\n7 8\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 5\\n1 2\\n4 3\\n6 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 4\\n5 6\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\\n7 8\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"acdr\", \"Test Case Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"The output should be acdr\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr', \"Test 1 failed\"\nassert solution('abcde') == 'abcd', \"Test 2 failed\"\nassert solution('hello') == 'hll', \"Test 3 failed\"\nassert solution('world') == 'lwrd', \"Test 4 failed\"\nassert solution('code') == 'cod', \"Test 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"hello\") == \"olleh\"\nassert solution(\"world\") == \"dlrow\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"1234567890\") == \"1234567890\"",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Your solution is incorrect. It should return the string 'acdr'.\"\nassert solution(\"hello\") == \"helo\", \"Your solution is incorrect. It should return the string 'helo'.\"\nassert solution(\"python\") == \"inno\", \"Your solution is incorrect. It should return the string 'inno'.\"\nassert solution(\"cat\") == \"at\", \"Your solution is incorrect. It should return the string 'at'.\"\nassert solution(\"world\") == \"world\", \"Your solution is incorrect. It should return the string 'world'.\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"hello\") == \"llh\"\nassert solution(\"world\") == \"wrd\"\nassert solution(\"leetcode\") == \"le\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"aabbc\") == \"aacb\"",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"The output should be 'acdr', but it's actually '{}'\".format(solution(\"atcoder\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"hello\") == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\\n\", \"The given inputs are invalid.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple banana orange\") == \"YES\"\nassert solution(\"giraffe cucumber\") == \"NO\"\nassert solution(\"abcd\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\\n\"\nassert solution(\"apple cat\") == \"YES\\n\"\nassert solution(\"a b c\") == \"NO\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"You have not implemented the solution correctly.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"heater lamp light\") == \"YES\"\nassert solution(\"robot head leash\") == \"YES\"\nassert solution(\"dog cry eye\") == \"NO\"\nassert solution(\"tiger meow\") == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"helo world\") == \"NO\"\nassert solution(\"racecar\") == \"NO\"\nassert solution(\"hello world\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"36 24\") == \"GREATER\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\"\nassert solution(\"12\\n9\\n\") == \"EQUAL\\n\"\nassert solution(\"0\\n1\\n\") == \"EQUAL\\n\"\nassert solution(\"1\\n1\\n\") == \"EQUAL\\n\"\nassert solution(\"0\\n0\\n\") == \"EQUAL\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(36,24) == \"GREATER\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='36\\n24\\n') == 'GREATER'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\", \"Test case 1 failed.\"\nassert solution(\"12\\n24\\n\") == \"LESS\", \"Test case 2 failed.\"\nassert solution(\"10\\n10\\n\") == \"EQUAL\", \"Test case 3 failed.\"\nassert solution(\"1000000\\n1000000\\n\") == \"GREATER\", \"Test case 4 failed.\"\nassert solution(\"1000000\\n1000001\\n\") == \"LESS\", \"Test case 5 failed.\"",
        "num_ids_2": 49,
        "num_ids_4": 108
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\", \"Your solution is incorrect\"\nassert solution(\"0\\n0\\n\") == \"EQUAL\", \"Your solution is incorrect\"\nassert solution(\"25\\n31\\n\") == \"LESS\", \"Your solution is incorrect\"\nassert solution(\"2\\n1\\n\") == \"LESS\", \"Your solution is incorrect\"\nassert solution(\"0\\n0\\n\") == \"EQUAL\", \"Your solution is incorrect\"\nassert solution(\"2\\n1\\n\") == \"LESS\", \"Your solution is incorrect\"\n\nassert solution(\"5\\n7\\n\") == \"LESS\", \"Your solution is incorrect\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(36) == \"GREATER\", \"The solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\", \"Output should be GREATER\"\nassert solution(\"1\\n0\") == \"EQUAL\", \"Output should be EQUAL\"\nassert solution(\"5\\n0\") == \"LESS\", \"Output should be LESS\"\nassert solution(\"100\\n100\") == \"EQUAL\", \"Output should be EQUAL\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"GREATER\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\norANGE\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\napple\\nother\\napple\\n1\\ngrape\\n') == '2'\nassert solution('2\\napple\\nother\\nbanana\\n2\\nbanana\\n1\\nbanana\\n') == '1'\nassert solution('3\\napple\\nother\\napple\\n1\\ngrape\\n') == '2'\nassert solution('2\\napple\\nother\\nbanana\\n2\\nbanana\\n1\\nbanana\\n') == '1'\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\napple\\n2\\ngrape\\n\") == \"1\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\\nActual output: \" + str(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output should be '2'\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n2\\nbanana\\n\") == \"1\\n\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 97
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\napple\\noorange\\napple\\n1\\ngrape\\n') == '2\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\nofferle\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nofferle\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nofferle\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nofferle\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nofferle\\napple\\n1\\ngrape\\n\") == \"2\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"5\\nbanana\\nbanana\\nbanana\\nbanana\\n\") == \"0\"\nassert solution(\"3\\napple\\nother\\nappple\\n\") == \"1\"",
        "num_ids_2": 56,
        "num_ids_4": 77
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"T\"\nassert solution(\"G\") == \"G\"\nassert solution(\"T\") == \"T\"\nassert solution(\"Z\") == \"Z\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"14\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"14\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '14\\n', 'Your code is incorrect.'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"14\", \"Your solution is not correct\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '14\\n'\nassert solution(input()) == '13\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"3 3\\n1 2 3\") == \"2\"\nassert solution(\"3 3\\n1 1 2\") == \"3\"\nassert solution(\"3 3\\n1 1 1\") == \"3\"\nassert solution(\"3 3\\n1 1 0\") == \"4\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1\\n\"\nassert solution(4) == \"1\\n\"\nassert solution(5) == \"2\\n\"\nassert solution(6) == \"2\\n\"\nassert solution(7) == \"3\\n\"\nassert solution(8) == \"3\\n\"\nassert solution(9) == \"4\\n\"\nassert solution(10) == \"4\\n\"\nassert solution(11) == \"5\\n\"\nassert solution(12) == \"5\\n\"\nassert solution(13) == \"6\\n\"\nassert solution(14) == \"6\\n\"\nassert solution(15) == \"7\\n\"\nassert solution(16) == \"7\\n\"\nassert solution(17) == \"8\\n\"\nassert solution(18) == \"8\\n\"\nassert solution(19) == \"9\\n\"\nassert solution(20) == \"9\\n\"\nassert solution(21) == \"10\\n\"\nassert solution(22) == \"10\\n\"\nassert solution(23) == \"11\\n\"\nassert solution(24) == \"11\\n\"\nassert solution(25) == \"12\\n\"\nassert solution(26) == \"12\\n\"\nassert solution(27) == \"13\\n\"\nassert solution(28) == \"13\\n\"\nassert solution(29) == \"14\\n\"\nassert solution(30) == \"14\\n\"\nassert solution(31) == \"15\\n\"\nassert solution(32) == \"15\\n\"\nassert solution(33) == \"16\\n\"\nassert solution(34) == \"16\\n\"\nassert solution(35) == \"17\\n\"\nassert solution(36) == \"17\\n\"\nassert solution(37) == \"18\\n\"\nassert solution(38) == \"18\\n\"\nassert solution(39) == \"19\\n\"\nassert solution(40) == \"19\\n\"\nassert solution(41) == \"20\\n\"\nassert solution(42) == \"20\\n\"\nassert solution(43) == \"21\\n\"\nassert solution(44) == \"21\\n\"\nassert solution(45) == \"22\\n\"\nassert solution(46) == \"22\\n\"\nassert solution(47) == \"23\\n\"\nassert solution(48) == \"23\\n\"\nassert solution(49) == \"24\\n\"\nassert solution(50) == \"24\\n\"\nassert solution(51) == \"25\\n\"\nassert solution(52) == \"25\\n\"\nassert solution(53) == \"26\\n\"\nassert solution(54) == \"26\\n\"\nassert solution(55) == \"27\\n\"\nassert solution(56) == \"27\\n\"\nassert solution(57) == \"28\\n\"\nassert solution(58) == \"28\\n\"\nassert solution(59) == \"29\\n\"\nassert solution(60) == \"29\\n\"\nassert solution(61) == \"30\\n\"\nassert solution(62) == \"30\\n\"\nassert solution(63) == \"31\\n\"\nassert solution(64) == \"31\\n\"\nassert solution(65) == \"32\\n\"\nassert solution(66) == \"32\\n\"\nassert solution(67) == \"33\\n\"\nassert solution(68) == \"33\\n\"\nassert solution(69) == \"34\\n\"\nassert solution(70) == \"34\\n\"\nassert solution(71) == \"35\\n\"\nassert solution(72) == \"35\\n\"\nassert solution(73) == \"36\\n\"\nassert solution(74) == \"36\\n\"\nassert solution(75) == \"37\\n\"\nassert solution(76) == \"37\\n\"\nassert solution(77) == \"38\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2 2 2') == '1\\n'\nassert solution('2 3 3\\n3 3') == '2\\n'\nassert solution('10 10 10\\n2 3 4 5') == '5\\n'",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\nassert solution('6 2\\n1 2 2 1') == '3'\nassert solution('8 4\\n1 2 3 4') == '2'\nassert solution('20 16\\n1 2 2 3 2 4 4 1 5') == '4'\nassert solution('4 1\\n1 2 3 4') == '1'\nassert solution('1 1\\n1') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\n\nsolution('3 3\\n2 2 2') == '1'\n\nsolution('3 3\\n2 2 2') == '1'\n\nsolution('3 3\\n2 2 2') == '1'\n\nsolution('3 3\\n2 2 2') == '1'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\na 2 b 2\\na 3 c 3\\n') == '1\\n'\nassert solution('5 5\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 5\\n5 4 3 2 1\\n') == '3\\n'\nassert solution('5 5\\n5 4 3 2 1\\n') == '3\\n'",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"2 2 2\\n2 2 2\") == \"2\"\nassert solution(\"2 2\\n2 2 2\") == \"1\"\nassert solution(\"2 2 2\\n2 2 2\\n2 2 2\") == \"2\"\nassert solution(\"2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1\\n'\nprint('Eat one candy in the second box.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n3 2 3\\n\") == \"No\"\nassert solution(\"0 0 1\\n1 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"0 0 1\\n1 1 2\\n2 1 2\\n\") == \"No\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n0 1 0\\n0 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n0 1 0\") == \"Yes\"\nassert solution(\"1 1 1\\n0 0 0\\n1 1 1\") == \"Yes\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Input should be 'ABC', not '{}'\".format(solution(\"ABC\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nprint(\"All tests pass\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8 2\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3\\n'\nassert solution('4 8 16') == '0\\n'\nassert solution('2 8 16') == '3\\n'\nassert solution('1 8 16') == '3\\n'\nassert solution('0 8 16') == '0\\n'",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"6 10 2\") == \"1\"\nassert solution(\"1 10 5\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"Test 1 failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(25) == \"Christmas\\n\"\nassert solution(24) == \"Christmas\\n\"\nassert solution(23) == \"Christmas\\n\"\nassert solution(22) == \"Christmas\\n\"\nassert solution(26) == \"Christmas\\n\"\nassert solution(27) == \"Christmas\\n\"\nassert solution(28) == \"Christmas\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(25) == \"Christmas\"\nassert solution(24) == \"Christmas Eve\"\nassert solution(23) == \"Christmas Eve Eve\"\nassert solution(22) == \"Christmas Eve Eve Eve\"\nassert solution(21) == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Incorrect output for D = 25\"\nassert solution(\"24\") == \"Christmas Eve\", \"Incorrect output for D = 24\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Incorrect output for D = 23\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Incorrect output for D = 22\"\nassert solution(\"26\") == \"Christmas\", \"Incorrect output for D = 26\"\nassert solution(\"27\") == \"Christmas\", \"Incorrect output for D = 27\"",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Christmas\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"26\") == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"25\\n\") == \"Christmas\", \"Test failed for solution\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\\n\"\nassert solution(\"24\") == \"Christmas\\n\"\nassert solution(\"23\") == \"Christmas\\n\"\nassert solution(\"22\") == \"Christmas\\n\"\nassert solution(\"21\") == \"Christmas\\n\"\nassert solution(\"20\") == \"Christmas\\n\"\nassert solution(\"19\") == \"Christmas\\n\"\nassert solution(\"18\") == \"Christmas\\n\"\nassert solution(\"17\") == \"Christmas\\n\"\nassert solution(\"16\") == \"Christmas\\n\"\nassert solution(\"15\") == \"Christmas\\n\"\nassert solution(\"14\") == \"Christmas\\n\"\nassert solution(\"13\") == \"Christmas\\n\"\nassert solution(\"12\") == \"Christmas\\n\"\nassert solution(\"11\") == \"Christmas\\n\"\nassert solution(\"10\") == \"Christmas\\n\"\nassert solution(\"9\") == \"Christmas\\n\"\nassert solution(\"8\") == \"Christmas\\n\"\nassert solution(\"7\") == \"Christmas\\n\"\nassert solution(\"6\") == \"Christmas\\n\"\nassert solution(\"5\") == \"Christmas\\n\"\nassert solution(\"4\") == \"Christmas\\n\"\nassert solution(\"3\") == \"Christmas\\n\"\nassert solution(\"2\") == \"Christmas\\n\"\nassert solution(\"1\") == \"Christmas\\n\"\nassert solution(\"0\") == \"Christmas\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'25') == 'Christmas\\n'\nassert solution(b'24') == 'Christmas Eve\\n'\nassert solution(b'23') == 'Christmas Eve Eve\\n'\nassert solution(b'22') == 'Christmas Eve Eve Eve\\n'",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"21\") == \"Christmas\"\nassert solution(\"26\") == \"New Year's Day\"\nassert solution(\"100\") == \"Christmas\"\nassert solution(\"27\") == \"Christmas Day\"\nassert solution(\"29\") == \"Christmas Day\"\nassert solution(\"28\") == \"Christmas Day\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4, \"4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 3.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"7\\n\") == \"4\\n\", \"Test case 1 failed.\"\nassert solution(stdin=\"10\\n\") == \"5\\n\", \"Test case 2 failed.\"\nassert solution(stdin=\"15\\n\") == \"6\\n\", \"Test case 3 failed.\"\nassert solution(stdin=\"20\\n\") == \"7\\n\", \"Test case 4 failed.\"\nassert solution(stdin=\"25\\n\") == \"8\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4', \"The output should be 4, but it is not.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"4 can be divided by 2 twice\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == '4\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == 4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"4\\n\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but the solution should be {output}.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == '4', 'Test failed'\nassert solution(8) == '4->2->1', 'Test failed'\nassert solution(3) == '0', 'Test failed'",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"4 8 10 3\") == \"No\\n\"\nassert solution(\"1 1 1 1\") == \"Yes\\n\"\nassert solution(\"2 2 2 2\") == \"No\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"8 6 9 1\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"1 2 3 0\") == \"No\"\nassert solution(\"1 2 3 -1\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\", \"Test failed\"\nassert solution(\"1 1 1 1\") == \"No\", \"Test failed\"\nassert solution(\"2 1 1 1\") == \"No\", \"Test failed\"\nassert solution(\"4 8 8 2\") == \"Yes\", \"Test failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nprint('All test cases passed.')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"4 3 9 6\") == \"No\\n\"\nassert solution(\"4 1 9 6\") == \"No\\n\"\nassert solution(\"4 4 1 6\") == \"Yes\\n\"\nassert solution(\"4 4 9 6\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 7 9 3') == 'Yes', \"The output is incorrect.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 7 8 3\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"atcoder beginner contest\\n\") == \"ABC\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"atcoder beginner contest\\n\") == \"ABC\", \"Test Case 1 Failed\"\nassert solution(stdin=\"Hello world!\\n\") == \"HEL\", \"Test Case 2 Failed\"\nassert solution(stdin=\"a b c\\n\") == \"ABC\", \"Test Case 3 Failed\"\nassert solution(stdin=\"Python is fun!\\n\") == \"PYTH\", \"Test Case 4 Failed\"\nassert solution(stdin=\"Python 2 is cool!\\n\") == \"PYTH2\", \"Test Case 5 Failed\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"Hello world\") == \"Hello World\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"hello world\") == \"HELLO WORLD\"\nassert solution(\"python is a language\") == \"PSY\"\nassert solution(\"programming is fun\") == \"PROGRAM\"\nassert solution(\"12345\") == \"12345\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\n\nassert solution(\"10 20 30\") == \"No\"\n\nassert solution(\"0 0 0\") == \"No\"",
        "num_ids_2": 69,
        "num_ids_4": 83
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\nassert solution(\"50 100 121\") == \"No\\nHe does not have enough coins to buy the toy.\"\nassert solution(\"50 100 0\") == \"No\\nHe does not have enough coins to buy the toy.\"\nassert solution(\"50 100 -1\") == \"No\\nHe does not have enough coins to buy the toy.\"",
        "num_ids_2": 84,
        "num_ids_4": 144
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"30 50 100\") == \"No\\n\"\nassert solution(\"100 50 100\") == \"No\\n\"\nassert solution(\"500 100 1000\") == \"No\\n\"\nassert solution(\"100 0 100\") == \"No\\n\"\nassert solution(\"100 500 1000\") == \"No\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\\n\" + \"He has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nassert solution('4 3\\n1 2 3') == '2'\nassert solution('5 8\\n2 3 4 5 6') == '3'\nassert solution('5 6\\n1 2 3 4 5') == '3'\nassert solution('4 3\\n1 2 3 4') == '1'\nassert solution('5 8\\n3 4 5 6 7') == '1'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"4 10\\n2 3 4\") == \"3\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"5 7\") == \"1\"\nassert solution(\"2 100\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected Output: {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"1 2\\n3 4\") == \"2\\n\"\nassert solution(\"1 3\\n5 6\") == \"3\\n\"\nassert solution(\"2 4\\n7 8\") == \"2\\n\"\nassert solution(\"3 5\\n10 11\") == \"5\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nassert solution('4 5\\n2 3 5') == '3'\nassert solution('4 8\\n7 8 9 9') == '0'\nassert solution('4 8\\n7 8 8 9') == '0'\nassert solution('4 8\\n7 8 9 8') == '2'\nassert solution('4 8\\n7 9 9 9') == '0'\nassert solution('4 8\\n7 8 8 8') == '2'",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n', 'The solution should return 5.'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"10 100\\n200\") == \"11\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4 2 1 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4 2 1 3\"\nprint(solution(input()))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6 5 4 3 2 1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9 8 7 6 5 4 3 2 1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10 9 8 7 6 5 4 3 2 1\"",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4 2 1 3\\n', \"The output is incorrect.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4 2 1 3\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4 2 1 3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n\nassert solution(\"4\\n1 2 3 5\") == \"5 3 2 1\"\n\nassert solution(\"4\\n5 4 3 2\") == \"5 4 3 2\"\n\nassert solution(\"5\\n10 5 3 2 9\") == \"9 5 3 2 10\"\n\nassert solution(\"1\\n1\") == \"1\"\n\nassert solution(\"1\\n-1\") == \"-1\"",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4 2 1 3\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 4\\n4 5 6\") == \"No\"\nassert solution(\"10 5\\n4 5 6\") == \"Yes\"\nassert solution(\"10 6\\n4 5 6\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"11 3\\n4 5 6\") == \"No\"\nassert solution(\"10 3\\n4 5 7\") == \"No\"\nassert solution(\"10 3\\n4 5 6\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 68
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"5 3\\n1 2 3\") == \"No\"\nassert solution(\"10 5\\n2 3 4 5\") == \"Yes\"\nassert solution(\"5 5\\n1 1 1 1\") == \"No\"\nassert solution(\"1 3\\n1 1 1\") == \"Yes\"",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('10 5\\n2 3 4') == 'No'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 3\\n4 5 6\\n') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nassert solution(\"10 3\\n5 6 7\") == \"No\\n\"\nassert solution(\"10 3\\n1 1 1\") == \"No\\n\"\nassert solution(\"10 3\\n1 1 0\") == \"Yes\\n\"\nassert solution(\"10 3\\n0 0 0\") == \"No\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abababab\") == \"7\"\nassert solution(\"abababaaa\") == \"6\"\nassert solution(\"abababaaaabb\") == \"10\"\nassert solution(\"ababababaaaaaaab\") == \"12\"\nassert solution(\"ababababaaaaaaabbbb\") == \"13\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abababababab\") == \"10\"\nassert solution(\"xyzxyzz\") == \"5\"\nassert solution(\"aaaaaaaaa\") == \"5\"\nassert solution(\"aaaaaaab\") == \"6\"\nassert solution(\"aaaaaab\") == \"6\"\nassert solution(\"aaaaab\") == \"6\"\nassert solution(\"aaaaa\") == \"6\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Testcase 1\"\nassert solution(\"ababababaa\") == \"2\", \"Testcase 2\"\nassert solution(\"ababababa\") == \"2\", \"Testcase 3\"\nassert solution(\"abababab\") == \"2\", \"Testcase 4\"\nassert solution(\"abababa\") == \"6\", \"Testcase 5\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abcdefg\") == \"1\"\nassert solution(\"abcabcabc\") == \"2\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678",
        "num_ids_2": 23,
        "num_ids_4": 1027
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\"  # abaababaab itself is even, but we need to delete at least one character.\nassert solution(\"abaababaa\") == \"1\\n\"  # abaababaa is not even.\nassert solution(\"abaababa\") == \"1\\n\"  # abaababa is not even.\nassert solution(\"abaabab\") == \"1\\n\"  # abaabab is not even.\nassert solution(\"abaaba\") == \"6\\n\"  # abaaba is even. Thus, we should print its length, 6.",
        "num_ids_2": 58,
        "num_ids_4": 104
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"ababababaab\") == \"6\"\nassert solution(\"ababababa\") == \"6\"\nassert solution(\"abababab\") == \"6\"\nassert solution(\"abababa\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abcabcabc\") == \"2\"\nassert solution(\"defghijklm\") == \"4\"\nassert solution(\"qrstuvwxyz\") == \"1\"\nassert solution(\"ghijklmnopqrstuvwxyz\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa\") == \"0\"\nassert solution(\"abaaaaa",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Incorrect output for test case 1\"\nassert solution(\"cb\") == \"Yes\", \"Incorrect output for test case 2\"\nassert solution(\"abc\") == \"No\", \"Incorrect output for test case 3\"\nassert solution(\"abcd\") == \"No\", \"Incorrect output for test case 4\"\nassert solution(\"abcdef\") == \"No\", \"Incorrect output for test case 5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\\n\"\nassert solution(\"cab\") == \"No\\n\"\nassert solution(\"abc\") == \"Yes\\n\"\nassert solution(\"acb\") == \"No\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\\nSwapping the first and second characters in bac results in abc.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bac\") == \"Yes\\n\", \"Solution should return Yes\"\nassert solution(\"cba\") == \"No\\n\", \"Solution should return No\"\nassert solution(\"abcd\") == \"No\\n\", \"Solution should return No\"\nassert solution(\"acb\") == \"Yes\\n\", \"Solution should return Yes\"\nassert solution(\"a\") == \"No\\n\", \"Solution should return No\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == 646\nassert solution(\"1\\n1000000\\n1000000\\n\") == 757402647\nassert solution(\"2\\n1 3\\n4 2\\n\") == 20",
        "num_ids_2": 72,
        "num_ids_4": 94
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\\n\") == 646\nassert solution(\"1\\n1000000\\n1000000\\n\") == 757402647\nassert solution(\"2\\n1 3\\n4 2\\n\") == 20",
        "num_ids_2": 69,
        "num_ids_4": 91
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '646', \"Test case 1 failed.\"\nassert solution(stdin) == '757402647', \"Test case 2 failed.\"\nassert solution(stdin) == '20', \"Test case 3 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"7\"\nassert solution(5) == \"646\"\nassert solution(6) == \"757402647\"\nassert solution(7) == \"20\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 646\nassert solution(4) == 20\nassert solution(1) == 757402647\nassert solution(1000000) == 757402647",
        "num_ids_2": 21,
        "num_ids_4": 61
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\\n\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 103
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"",
        "num_ids_2": 71,
        "num_ids_4": 94
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n1\\n1000000\\n1000000\\n2\\n1 3\\n4 2\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\\n\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 137
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"1 8 7 2 4\\n9 7 2 9 3\\n\") == 646\nassert solution(b\"1\\n1000000\\n1000000\\n\") == 757402647\nassert solution(b\"2\\n1 3\\n4 2\\n\") == 20",
        "num_ids_2": 73,
        "num_ids_4": 97
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', Received output: '{solution(input())}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '17', 'Expected Output: 17, Actual Output: {}'.format(solution())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 17, \"Your solution is wrong.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(1)) == \"1\"\nassert solution(str(7)) == \"7\"\nassert solution(str(2)) == \"2\"\nassert solution(str(9)) == \"17\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '7\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\\n\"\nassert solution() == \"17\\n\"\nassert solution() == \"17\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\", \"Your code is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\", \"The expected output is 2, but it is: \" + solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\")\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\", \"The expected output is 0, but it is: \" + solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\")\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\", \"The expected output is 1, but it is: \" + solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\")",
        "num_ids_2": 184,
        "num_ids_4": 276
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"\n",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == 2\nassert solution(1) == 2\nassert solution(7) == 0\nassert solution(7) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 7) == \"10\"\nassert solution(4, 12) == \"15\"\nassert solution(2, 1000000000) == \"1999999999\"\nassert solution(7, 97) == \"113\"\nassert solution(1000000000, 1000000000) == \"1000000001\"",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output\\n10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\") == \"10\\n15\\n1999999999\\n113\\n1000000001\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''2\n2 1'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\"\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 3\\n1 2 2 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n1 2 2 1 1 2 1 2 3 3 4 4\\n\") == \"5\\n1 3 2 4\\n\"\nassert solution(\"10 4\\n1 2 2 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 177
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"5 1\\n1\\n\") == \"1\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n\") == \"10\\n1 2 3 4 5 6 7 8 9\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n\") == \"10\\n1 2 3 4 5 6 7 8 9\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 157
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1 '\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2 '\nassert solution('7 10\\n1 2 3 4 5 6 7 8 9 10') == '2\\n3 5 7 9 '",
        "num_ids_2": 73,
        "num_ids_4": 117
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"2\n1 3\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    7 2\n    1 2 3 2 1 3 2\n    \"\"\"\n) == \"2\\n2 1\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    2 3 3 1 1 2 1 2 3 3\n    \"\"\"\n) == \"3\\n1 3 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 2 3 2 1\n    \"\"\"\n) == \"3\\n2 1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    1\n    \"\"\"\n) == \"2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    2\n    \"\"\"\n) == \"2\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 1 1 1 1\n    \"\"\"\n) == \"3\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    2\n    \"\"\"\n) == \"2\\n2\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == '263'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected: {expected_output}, but got: {solution}\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"",
        "num_ids_2": 188,
        "num_ids_4": 282
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Solution did not match expected output.\\nInput: {input_str}\\nOutput: {output_str}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"263\", \"Solution should return 263\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed with input: {input_str}, output: {output_str}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str} -> {output_str}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\", \"Expected Output: 3\\nActual Output: {}\".format(solution(\"abacaba\"))\nassert solution(\"dfcbbcfeeedbaea\") == \"5\", \"Expected Output: 5\\nActual Output: {}\".format(solution(\"dfcbbcfeeedbaea\"))",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n1\\n2\\n\\n5\\n2\\n5\\n2\"\nassert solution(stdin) == \"5\\n2\\n6\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacaba') == '3', \"The solution for input 'abacaba' should be '3'.\"\nassert solution('dfcbbcfeeedbaea') == '5', \"The solution for input 'dfcbbcfeeedbaea' should be '5'.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == ['1\\n', '3\\n', '5\\n']",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\", \"Test case 1 failed\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\", \"Test case 2 failed\"\nassert solution(\"abcdefg\") == \"0\", \"Test case 3 failed\"\nassert solution(\"\") == \"0\", \"Test case 4 failed\"\nassert solution(\"hello\") == \"0\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 75
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\nassert solution(\"hello world\") == \"4\"\nassert solution(\"leetcode\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 49
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"386592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\nassert solution(\"412968357\") == \"412958357\"\nassert solution(\"631457982\") == \"631457992\"\nassert solution(\"598236471\") == \"998236471\"\nassert solution(\"247189563\") == \"247789563\"\nassert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"386592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\nassert solution(\"412968357\") == \"412958357\"\nassert solution(\"631457982\") == \"631457992\"\nassert solution(\"598236471\") == \"998236471\"\nassert solution(\"247189563\") == \"247789563\"\nassert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"386592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\nassert solution(\"412968357\") == \"412958357\"\nassert solution(\"631457982\") == \"631457992\"\nassert solution(\"598236471\") == \"998236471\"\nassert solution(\"247189563\") == \"247789563\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"154873296\"\nprint(\"154873396\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\") == \"123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n247189563\") == \"247189563\\n247189563\\n247189563\\n247189563\\n247189563\\n247189563\\n247189563\\n247189563\\n247189563\"\nassert solution(\"911223344\\n921334455\\n931445566\\n941556677\\n951667788\\n961778899\\n971889910\\n981991021\\n992002132\") == \"911223344\\n931445566\\n951667788\\n971889910\\n992002132\\n911223344\\n921334455\\n941556677\\n961778899\"",
        "num_ids_2": 404,
        "num_ids_4": 819
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nprint(\"All test cases passed\")",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nfor i in range(t):\n    stdin = input()\n    expected = output[i]\n    solution = solution(stdin)\n    assert solution == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\\n890123456\") == \"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\"\nassert solution(\"3\\n912345678\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\") == \"912345678\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\"\nassert solution(\"4\\n798765432\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\") == \"798765432\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\"\nassert solution(\"5\\n678901234\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\") == \"678901234\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\"",
        "num_ids_2": 388,
        "num_ids_4": 754
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\\n789012345\\n901234567\") == \"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\\n789012345\\n901234567\"\n\nassert solution(\"111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\") == \"111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\"\n\nassert solution(\"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\\n789012345\\n901234567\") == \"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\\n789012345\\n901234567\"\n\nassert solution(\"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n123456789\\n345678901\\n567890123\\n789012345\\n901234567\") == \"123456789\\n345678901\\n567890123\\n789012345\\n901234567\\n1",
        "num_ids_2": 426,
        "num_ids_4": 852
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n2\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n3\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n4\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n5",
        "num_ids_2": 512,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\nassert solution(stdin='2\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '247189563\\n154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'",
        "num_ids_2": 433,
        "num_ids_4": 433
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n6\\n8\\n-1\\n9\\n4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, Received output: {solution()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n6\\n8\\n-1\\n9\\n4'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"2\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"3\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"4\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n2 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n2 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n2 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n2 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n2 1\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [\"3\", \"6\", \"8\", \"-1\", \"9\", \"4\"]\nassert solution(\"10\\n1 ",
        "num_ids_2": 127,
        "num_ids_4": 227
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"3\"\nassert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"6\"\nassert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"8\"\nassert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"-1\"\nassert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"9\"\nassert solution([9, 6, 1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == \"4\"",
        "num_ids_2": 146,
        "num_ids_4": 292
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n6\\n8\\n-1\\n9\\n4\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n') == '3\\n6\\n8\\n-1\\n9\\n4\\n'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case {i + 1} failed: expected '{expected}', got '{solution(stdin)}'\"\nfor i in range(t):\n    a, b, c, n = map(int, input().split())\n    expected = 'YES' if can_distribute(a, b, c, n) else 'NO'\n    assert solution(stdin) == expected, f\"Test case {i + 1} failed: expected '{expected}', got '{solution(stdin)}'\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed: {expected}!= {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\nYES\\nNO\\nNO\\nYES\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=f\"\"\"\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\n\nimport re\nimport sys\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 0\") == \"NO\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"NO\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 2\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 0\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 2\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 1\") == \"YES\"",
        "num_ids_2": 160,
        "num_ids_4": 320
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Incorrect output: {solution(stdin)}\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"3 4 6 5 \\n\"\nassert solution(\"5 5\\n2 1 5 3 5\") == \"9 8 12 6 8 \\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\") == \"3 3 \\n\"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5 \"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8 \"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 \"\n",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"3 4 6 5\"\n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"9 8 12 6 8\"\n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"3 3\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\\n5 5\\n2 1 5 3 5\\n\\n2 10\\n1 2 1 1 2 2 2 2 2 2\\n\\n3 3\\n1 2 3 4\\n2 1 3 4\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n6 7 8 9 10\\n7 8 9 10 11\\n8 9 10 11 12\\n9 10 11 12 13\\n10 11 12 13 14\\n11 12 13 14 15\\n12 13 14 15 16\\n13 14 15 16 17\\n14 15 16 17 18\\n15 16 17 18 19\\n16 17 18 19 20\\n17 18 19 20 21\\n18 19 20 21 22\\n19 20 21 22 23\\n20 21 22 23 24\\n21 22 23 24 25\\n22 23 24 25 26\\n23 24 25 26 27\\n24 25 26 27 28\\n25 26 27 28 29\\n26 27 28 29 30\\n27 28 29 30 31\\n28 29 30 31 32\\n29 30 31 32 33\\n30 31 32 33 34\\n31 32 33 34 35\\n32 33 34 35 36\\n33 34 35 36 37\\n34 35 36 37 38\\n35 36 37 38 39\\n36 37 38 39 40\\n37 38 39 40 41\\n38 39 40 41 42\\n39 40 41 42 43\\n40 41 42 43 44\\n41 42 43 44 45\\n42 43 44 45 46\\n43 44 45 46 47\\n44 45 46 47 48\\n45 46 47 48 49\\n46 47 48 49 50\\n47 48 49 50 51\\n48 49 50 51 52\\n49 50 51 52 53\\n50 51 52 53 54\\n51 52 53 54 55\\n52 53 54 55 56\\n53 54 55 56 57\\n54 55 56 57 58\\n55 56 57 58 59\\n56 57 58 59 60\\n57 58 59 60 61\\n58 59 60 61 62\\n59 60 61 62 63\\n60 61 62 63 64\\n61 62 63 64 65\\n62 63 64 65 66\\n63",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5\\n'\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8\\n'\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\nx = [1, 2, 3, 4]\\n') == '3 4 6 5\\n'\nassert solution('5 5\\nx = [2, 1, 5, 3, 5]\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\nx = [1, 2, 1, 1, 2, 2, 2, 2, 2, 2]\\n') == '3 3\\n'",
        "num_ids_2": 78,
        "num_ids_4": 129
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n2 1 5 3 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\") == \"3 3\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([10, 6]) == 'YES'\nassert solution([1, 2, 1, 3, 1, 4, 2, 5, 2, 6, 3, 7, 7, 9, 9, 10, 4, 3, 8, 9, 10, 3, 2, 4, 6, 3, 2, 1, 5]) == 'YES'\nassert solution([3, 8, 9, 10]) == 'YES'\nassert solution([2, 4, 6]) == 'YES'\nassert solution([2, 1, 5]) == 'YES'\nassert solution([4, 8, 2]) == 'YES'\nassert solution([3, 5, 4, 7]) == 'NO'\nassert solution([3, 8, 2, 1, 5]) == 'NO'\nassert solution([3, 9, 10]) == 'NO'\nassert solution([4, 3, 8, 9, 10]) == 'NO'\nassert solution([2, 3, 4, 6]) == 'NO'\nassert solution([2, 3, 4, 7, 8, 9, 10]) == 'NO'",
        "num_ids_2": 110,
        "num_ids_4": 146
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"Your code is wrong.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n\nassert solution(\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 155,
        "num_ids_4": 285
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([10, 6]) == \"YES\"\nassert solution([1, 2, 1, 3, 1, 4, 2, 5, 2, 6, 3, 7, 7, 9, 9, 10, 4, 3, 8, 9, 10, 3, 2, 4, 6, 3, 5, 4, 7]) == \"YES\"\nassert solution([3, 8, 9, 10, 3, 2, 4, 6, 3, 5, 4, 7]) == \"NO\"\nassert solution([2, 4, 6, 2, 1, 5]) == \"YES\"\nassert solution([3, 8, 9, 10, 2, 1, 4, 6, 3, 5, 4, 7, 2, 6, 10, 3, 2, 4, 6, 3, 5, 4, 7]) == \"YES\"\nassert solution([1, 2, 1, 3, 1, 4, 2, 5, 2, 6, 3, 7, 7, 9, 9, 10, 4, 3, 8, 9, 10, 3, 2, 4, 6, 3, 5, 4, 7]) == \"NO\"\nassert solution([3, 8, 9, 10, 3, 2, 4, 6, 3, 5, 4, 7, 2, 6, 10, 3, 2, 4, 6, 3, 5, 4, 7]) == \"NO\"",
        "num_ids_2": 110,
        "num_ids_4": 179
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Test failed: {solution(input)}!= {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"def solution(stdin: str) -> str:\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"NO\\nYES\\nYES\\nYES\\nNO\"\nassert solution(5) == \"YES\\n1 2\\n2 3\\n3 4\\n1 3\\nYES\\nYES\\nNO\"\nassert solution(1000) == \"YES\\n1 2\\n2 3\\n3 4\\n1 3\\nYES\\nYES\\nNO\"\nassert solution(2) == \"NO\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\", \"Test case 1 failed.\"\nassert solution(stdin) == \"YES\\n1 2\\n1 3\\n1 4\", \"Test case 2 failed.\"\nassert solution(stdin) == \"YES\\n1 3\\n2 3\\n3 4\", \"Test case 3 failed.\"",
        "num_ids_2": 90,
        "num_ids_4": 122
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"NO\\nYES\\nYES\\nYES\\nNO\"\nassert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110') == '01011110'\nassert solution('1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The function should return the expected output, but it returns {}\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '01011110'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\") == \"01011110\\n0101111\\n0011111\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000110\") == \"01011110\"\nassert solution(\"10111010\") == \"01011110\"\nassert solution(\"11111000\") == \"01011110\"\nassert solution(\"11111000\") == \"01011110\"\nassert solution(\"10111101\") == \"01011110\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"01011110\\n0101111\\n0011111\\n\"\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\"\"\") == \"3\\n1 4 7\\n\"\n\nassert solution(\"\"\"\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\"\"\") == \"3\\n1 2 4\\n\"\n\nassert solution(\"\"\"\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\"\"\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3\\n1 4 7\\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30') == '3\\n1 2 4\\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 112,
        "num_ids_4": 163
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected_output, f\"Expected output:\\n{expected_output}\\nGot output:\\n{solution()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\n\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\"\n\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\n2\\n2 1\\n-3 0\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\n2\\n2 1\\n-3 0\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 146
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3\\n1 3 2\\n-100 2 3\\n\\nInput\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\nInput\\n2\\n2 1\\n-3 0\\n\\nOutput\\n3\\n') == '3\\n'\nassert solution('Output\\n\\n') == '3\\n'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\n2\\n2 1\\n-3 0\") == \"3\\n\\n19\\n0\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\n2\\n2 1\\n-3 0\") == \"19\\n0\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\"",
        "num_ids_2": 131,
        "num_ids_4": 152
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"19\\n\", \"Expected output is 19, but got {}.\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1, 3) == 3\nassert solution(5, 2, 1, 4, 3, 5) == 19\nassert solution(2, 2, 1, -3, 0) == 0",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\", solution(input())",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == 3\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == 19\nassert solution(\"2\\n2 1\\n-3 0\") == 0",
        "num_ids_2": 58,
        "num_ids_4": 78
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 15\n\nfrom typing import List",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3 \\n\", \"Solution should return the expected output\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0 \\n\", \"Solution should return the expected output\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3 \\n\", \"Solution should return the expected output\"",
        "num_ids_2": 119,
        "num_ids_4": 168
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3\\n'\nassert solution('1 2\\n1 2\\n') == '0 0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3\\n'",
        "num_ids_2": 101,
        "num_ids_4": 142
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\") == \"1 3 3\"",
        "num_ids_2": 95,
        "num_ids_4": 132
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3 \\n\"\nassert solution(\"1 2\\n1 2\") == \"0 0 \\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\") == \"1 3 3 \\n\"\n",
        "num_ids_2": 99,
        "num_ids_4": 138
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3\\n'\nassert solution('1 2\\n1 2\\n') == '0 0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3\\n'",
        "num_ids_2": 103,
        "num_ids_4": 144
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(100) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"YES\\nYES\\nNO\\nNO\\nYES\") == \"YES\"\nassert solution(\"YES\\nYES\\nNO\\nNO\\nYES\") == \"YES\"\nassert solution(\"NO\\nNO\\nNO\\nNO\\nNO\") == \"NO\"\nassert solution(\"NO\\nNO\\nNO\\nNO\\nNO\") == \"NO\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == [\"YES\", \"YES\", \"NO\", \"NO\", \"YES\"]\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\", \"Expected YES, but got: \" + solution(stdin)\nassert solution(stdin) == \"YES\", \"Expected YES, but got: \" + solution(stdin)\nassert solution(stdin) == \"NO\", \"Expected NO, but got: \" + solution(stdin)\nassert solution(stdin) == \"NO\", \"Expected NO, but got: \" + solution(stdin)",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"4 4\n    1010\n    1101\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"4 5\n    1001\n    10101\"\"\"\n) == \"11\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12\\n'\nassert solution('4 5\\n1001\\n10101\\n') == '11\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\nassert solution('') == ''",
        "num_ids_2": 55,
        "num_ids_4": 61
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"\nassert solution(\"4 4\\n1100001010\") == \"1111\"",
        "num_ids_2": 51,
        "num_ids_4": 78
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nYES\\nNO\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == 'YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == 'YES'\nassert solution(stdin='1') == 'NO'\nassert solution(stdin='2') == 'YES'\nassert solution(stdin='2 4 1 5') == 'NO'\nassert solution(stdin='2 4 6 8 1 3 5 11') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2\\n4\\n6\\n8\\n10\\n') == 'YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\n\nfrom typing import List",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"YES\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"YES\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"YES\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(21) == \"YES\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"YES\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"YES\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"YES\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"YES\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"YES\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"YES\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"YES\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"YES\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"YES\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"YES\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"YES\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"YES\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"YES\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"YES\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"YES\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"YES\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"YES\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"YES\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"YES\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"YES\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"YES\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"YES\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"YES\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"YES\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"YES\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"YES\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"YES\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"YES\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"YES\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"YES\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"YES\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"YES\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"YES\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"YES\"\nassert solution(95) == \"YES\"\nassert solution(96) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 'YES'\nassert solution(4) == 'YES'\nassert solution(6) == 'YES'\nassert solution(8) == 'YES'\nassert solution(10) == 'YES'\n\nassert solution(20) == 'NO'\nassert solution(40) == 'NO'\nassert solution(60) == 'NO'\nassert solution(80) == 'NO'\nassert solution(100) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5\\n1\\n0\\n4\\n0'  # Correct output\nassert solution(input()) == '5\\n1\\n0\\n4\\n0'  # Correct output",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1') == '5\\n1\\n0\\n4\\n0'\nprint('All test cases passed.')",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\") == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()}.\"\n\nclass Solution:\n    def countSpecialElements(self, a: List[int]) -> int:\n        special_elements = 0\n        for i in range(1, len(a)):\n            if a[i]!= a[i-1]:\n                special_elements += 1\n        return special_elements\n\nsolution = Solution()\nn = int(input())\na = list(map(int, input().split()))\nt = int(input())\n\nfor _ in range(t):\n    print(solution.countSpecialElements(a))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect.\\nInput: {input()}\\nOutput: {output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i + 1} failed\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n') == '5\\n1\\n'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n0\\n4\\n0\\n') == '5\\n0\\n'\n",
        "num_ids_2": 184,
        "num_ids_4": 184
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n') == '3\\n4\\n2\\n7'",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n4\\n2\\n7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\\n\", \"Test case 1\"\n\nassert solution() == \"4\\n3\\n2\\n7\\n\", \"Test case 2\"\n\nassert solution() == \"2\\n7\\n7\\n\", \"Test case 3\"\n\nassert solution() == \"2\\n7\\n\", \"Test case 4\"",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n\") == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())}!= {expected}\" for i, (input_, expected) in enumerate(zip(input().split('\\n'), expected_output.split('\\n'))):\n    stdin = input_\n    try:\n        result = solution(stdin)\n        print(result)\n    except Exception as e:\n        print(\"Test case\", i+1, \"failed:\", e)\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: got '{solution(input())}', expected '{expected_output}'\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '1\\n'\nassert solution(open('input2.txt').read()) == '1\\n'\nassert solution(open('input3.txt').read()) == '1\\n'\nassert solution(open('input4.txt').read()) == '1\\n'\nassert solution(open('input5.txt').read()) == '1\\n'",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\"\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 5\nassert solution(2) == 1440\nassert solution(1) == 1440\nassert solution(3) == 1180\nassert solution(12) == 0",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 60\") == \"60\\n1439\\n1180\\n1\"\nassert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 61\") == \"1180\\n1439\\n1180\\n1\"\nassert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 62\") == \"1439\\n1180\\n1180\\n1\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"24 0\") == \"0\"\nassert solution(\"12 0\") == \"0\"\nassert solution(\"24 60\") == \"0\"",
        "num_ids_2": 111,
        "num_ids_4": 223
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"5\\n\"\nassert solution(6) == \"1180\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(4) == \"1439\\n\"\nassert solution(1) == \"0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5'\n\nassert solution() == '60'\n\nassert solution() == '1439'\n\nassert solution() == '1180'\n\nassert solution() == '1'",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Testcase failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"2\\n1\\nULDU\\n1\\nURDU\\n2\\nRDUD\") == \"1 2\\n1 2\\n1 2\\n-1\"\nassert solution(\"3\\n2\\nURDL\\n2\\nLDLR\\n3\\nLDRD\") == \"1 2\\n1 2\\n1 2\\n-1\"\nassert solution(\"4\\n3\\nLDRR\\n3\\nDRUL\\n4\\nULDR\") == \"1 2\\n1 2\\n1 2\\n-1\"\nassert solution(\"5\\n4\\nDRUL\\n4\\nULDR\\n5\\nDRUD\") == \"1 2\\n1 2\\n1 2\\n-1\"",
        "num_ids_2": 103,
        "num_ids_4": 200
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\nfor _ in range(t):\n    n, s = map(int, input().split())\n    s = list(s)\n    l = max(0, n//2)\n    r = min(n, n//2)\n    if s[l:r] == \"LURD\":\n        print(1, 2)\n    elif s[l:r] == \"LURLLR\":\n        print(1, 4)\n    elif s[l:r] == \"URDLR\":\n        print(3, 4)\n    else:\n        print(-1)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, \"LRUD\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(4, \"LURD\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(5, \"RRUDU\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(5, \"LLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 61,
        "num_ids_4": 122
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4') == 1, \"Test case 1\"\nassert solution('4\\n4') == 1, \"Test case 2\"\nassert solution('5\\n5') == -1, \"Test case 3\"\nassert solution('5\\nLLDDR') == 3, \"Test case 4\"\nassert solution('5\\nRRUDU') == 1, \"Test case 5\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, Received output: {solution(stdin)}\" for index, (stdin, expected_output) in enumerate(test_cases)",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4, 2, 4, 1, 4, 3, 4, 5, 2, 1, 5, 4, 3, 1, 1, 1, 3]) == 3\nassert solution([2, 1, 5, 4, 3]) == 0\nassert solution([1, 1, 1, 3]) == 2\nassert solution([5]) == 0",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('1') == '0'\nassert solution('4') == '0'\nassert solution('4') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    7\n    4 2 4 1 4 3 4\n    5\n    2 1 5 4 3\n    1\n    1\n    4\n    1 1 1 3\n    ''') == '3\\n1\\n0\\n2\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '''3\n1\n0\n2\n'''\n\nassert solution('''\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n2\n3\n''') == '''3\n1\n0\n2\n'''\n\nassert solution('''\n2\n1 2\n1\n1\n4\n1 1 1 3\n''') == '''1\n0\n2\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"1\\n1\\n1\\n3\") == \"0\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0', 'There is no way to choose a vertex arbitrarily.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\n\nassert solution('''1\n1337\n''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 121\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"121\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"The solution is incorrect.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8') == '121'\nassert solution('1\\n1337') == '0'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\"\nassert solution(\"1\\n1337\\n\") == \"0\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}, \\nGot: {solution}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '6\\n18\\n0\\n227\\n8'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"\nassert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 312,
        "num_ids_4": 312
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\"\n\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = 0\n    moves = 0\n\n    while True:\n        for i in range(1, n+1):\n            if a[i-1] % k == 0:\n                a[i-1] = a[i-1] + x\n                x = x + 1\n                moves += 1\n                break\n        else:\n            break\n\n    print(moves)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"\nassert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n10 20\\n2 4 6 8 10\") == \"10\"",
        "num_ids_2": 313,
        "num_ids_4": 313
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n1 2\\n3 4 5 6\\n\") == \"4\\n4\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8\\n\") == \"4\\n12\\n4\\n\"\nassert solution(\"2\\n1 2\\n3 4 5 6\\n\") == \"1\\n2\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6 7 8 9\\n5 6 7 8 9 10\\n6 7 8 9 10 11\\n7 8 9 10 11 12\\n8 9 10 11 12 13\\n9 10 11 12 13 14\\n10 11 12 13 14 15\\n11 12 13 14 15 16\\n12 13 14 15 16 17\\n13 14 15 16 17 18\\n14 15 16 17 18 19\\n15 16 17 18 19 20\\n16 17 18 19 20 21\\n17 18 19 20 21 22\\n18 19 20 21 22 23\\n19 20 21 22 23 24\\n20 21 22 23 24 25\\n21 22 23 24 25 26\\n22 23 24 25 26 27\\n23 24 25 26 27 28\\n24 25 26 27 28 29\\n25 26 27 28 29 30\\n26 27 28 29 30 31\\n27 28 29 30 31 32\\n28 29 30 31 32 33\\n29 30 31 32 33 34\\n30 31 32 33 34 35\\n31 32 33 34 35 36\\n32 33 34 35 36 37\\n33 34 35 36 37 38\\n34 35 36 37 38 39\\n35 36 37 38 39 40\\n36 37 38 39 40 41\\n37 38 39 40 41 42\\n38 39 40 41 42 43\\n39 40 41 42 43 44\\n40 41 42 43 44 45\\n41 42 43 44 45 46\\n42 43 44 45 46 47\\n43 44 45 46 47 48\\n4",
        "num_ids_2": 173,
        "num_ids_4": 242
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '18\\n0\\n227\\n8'",
        "num_ids_2": 309,
        "num_ids_4": 309
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([\"1\", \"2\", \"3\"], [\"1\", \"1\"]) == 1\nassert solution([\"1\", \"2\"], [\"1\", \"2\", \"3\"]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"Input: [1,2,3], [1,1]\") == 1\nassert solution(stdin=\"Input: [1,2], [1,2,3]\") == 2",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['1', '2', '3'], ['1', '1']) == 1\nassert solution(['1', '2'], ['1', '2', '3']) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [1]\nassert solution(\"2\") == [1,1]\nassert solution(\"3\") == [1,2,1]\nassert solution(\"12\") == [1,2,3,1]\nassert solution(\"100\") == [1,2,5,10,5,10,5,2,1]",
        "num_ids_2": 16,
        "num_ids_4": 42
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input: 3\\nOutput: [1,3,3,1]\\n\") == [1,3,3,1]",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [1,3,3,1]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == [1, 3, 3, 1]\n\nfrom itertools import permutations",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"5\") == [1,5,10,5,1]\nassert solution(\"8\") == [1,10,10,5,5,10,10,5,1]\nassert solution(\"13\") == [1,13,21,13,21,13,21,13,21,13]\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 103
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == [1, 3, 3, 1]\nassert solution(\"1\") == [1]\nassert solution(\"0\") == [1]\nassert solution(\"-1\") == [1]\nassert solution(\"33\") == [1]",
        "num_ids_2": 29,
        "num_ids_4": 49
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1,3,3,1]\n\nSolution:\nWe can solve this problem in O(k) extra space using a two-dimensional array. We will use the row index k to represent the elements in the row. We will iterate over the array from the second element down to the third element, and for each element we will use a two-dimensional array to store the sums of the elements directly above it.\n\nWe will initialize the first element of the first row with 1, and the second element of the first row with the value at the first index. We will then iterate over the array starting from the third element and work our way down to the second-to-last element, using the first two elements to get the sum of the elements above it.\n\nHere's the Python code to implement this algorithm:\n\n```python\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 83,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"\nassert solution
        "num_ids_2": 85,
        "num_ids_4": 1027
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 81,
        "num_ids_4": 123
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 80,
        "num_ids_4": 122
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == 3, \"Example 1\"\nassert solution('00000000000000000000000010000000') == 1, \"Example 2\"\nassert solution('1111111111111111111111111111101') == 31, \"Example 3\"",
        "num_ids_2": 92,
        "num_ids_4": 138
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01') == '1'\nassert solution(b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01') == 3\nassert solution(b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01') == 1\nassert solution(b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01') == 31",
        "num_ids_2": 147,
        "num_ids_4": 294
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3\nassert solution(\"0000000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n\nfrom typing import List",
        "num_ids_2": 83,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3\nassert solution(\"0000000000000000000000000001000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31",
        "num_ids_2": 83,
        "num_ids_4": 124
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('123') == '124'\nassert solution('4321') == '4322'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 2, 3) == [1, 2, 4]\nassert solution(4, 3, 2, 1) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(['1', '2', '3']) == ['1', '2', '4']\nassert solution(['4', '3', '2', '1']) == ['4', '3', '2', '2']",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\", \"The largest among A+B, A-B and A * B is 4.\"\nassert solution(\"5 1\") == \"4\", \"The largest among A+B, A-B and A * B is 4.\"\nassert solution(\"5 3\") == \"12\", \"The largest among A+B, A-B and A * B is 12.\"\nassert solution(\"2 1\") == \"2\", \"The largest among A+B, A-B and A * B is 2.\"\nassert solution(\"1 1\") == \"1\", \"The largest among A+B, A-B and A * B is 1.\"",
        "num_ids_2": 62,
        "num_ids_4": 126
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"6 2\") == \"4\\n\", \"Test 2 failed\"\nassert solution(\"12 5\") == \"10\\n\", \"Test 3 failed\"\nassert solution(\"-1 -5\") == \"-15\\n\", \"Test 4 failed\"\nassert solution(\"0 0\") == \"0\\n\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Sample Input\"\nassert solution(\"5 2\") == \"6\\n\", \"Sample Input\"\nassert solution(\"6 3\") == \"9\\n\", \"Sample Input\"\nassert solution(\"4 5\") == \"12\\n\", \"Sample Input\"\nassert solution(\"7 -1\") == \"-6\\n\", \"Sample Input\"\nassert solution(\"8 9\") == \"-4\\n\", \"Sample Input\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4', 'Test 1 failed'\nassert solution('1 4') == '3', 'Test 2 failed'\nassert solution('10 5') == '55', 'Test 3 failed'\nassert solution('5 3') == '15', 'Test 4 failed'\nassert solution('1 1') == '2', 'Test 5 failed'",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Sample Output\"\nassert solution(\"-3 1\") == \"2\\n\", \"Sample Output\"\nassert solution(\"3 2\") == \"6\\n\", \"Sample Output\"\nassert solution(\"5 10\") == \"55\\n\", \"Sample Output\"\nassert solution(\"0 0\") == \"0\\n\", \"Sample Output\"\nassert solution(\"0 1\") == \"1\\n\", \"Sample Output\"\nassert solution(\"1 1\") == \"1\\n\", \"Sample Output\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"The largest value among A+B, A-B and A \\times B is 4.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"4\", \"Test case 1 failed\"\nassert solution(\"2 -3\") == \"2\", \"Test case 2 failed\"\nassert solution(\"6 4\") == \"12\", \"Test case 3 failed\"\nassert solution(\"5 10\") == \"55\", \"Test case 4 failed\"\nassert solution(\"0 -1\") == \"0\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\", \"Output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Test Case 1 Failed\"\nassert solution(\"2 3\") == \"2\\n\", \"Test Case 2 Failed\"\nassert solution(\"10 5\") == \"15\\n\", \"Test Case 3 Failed\"\nassert solution(\"5 10\") == \"20\\n\", \"Test Case 4 Failed\"\nassert solution(\"10 0\") == \"10\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\", \"Your code is not correct.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\" # Solution is correct.",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\nassert solution(\"4 10\\n0 0\\n5 5\\n-5 2\\n10 7\") == \"0\\n\"\nassert solution(\"10 10\\n10 0\\n10 5\\n0 -5\\n-5 5\") == \"2\\n\"\nassert solution(\"1 10\\n1 0\\n10 10\\n0 0\\n-5 -5\") == \"2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 149
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All test cases pass\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"4 10\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"0\"\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -5\") == \"3\"\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4.5\") == \"0\"\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"15\") == \"No\"\nassert solution(\"20\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(23) == \"No\"\nassert solution(432) == \"No\"\nassert solution(1000000007) == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"Yes\", \"Solution should return Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\n\nprint(\"No\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == \"Yes\\n\", \"Harshad number test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(12) == \"Yes\", \"Input 12 is not a Harshad number.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n2\") == \"2\\n\"\nassert solution(\"1\\n3\") == \"3\\n\"\nassert solution(\"1\\n4\") == \"4\\n\"\nassert solution(\"1\\n5\") == \"5\\n\"\nassert solution(\"1\\n6\") == \"6\\n\"\nassert solution(\"1\\n7\") == \"7\\n\"\nassert solution(\"1\\n8\") == \"8\\n\"\nassert solution(\"1\\n9\") == \"9\\n\"\nassert solution(\"1\\n10\") == \"10\\n\"\nassert solution(\"1\\n11\") == \"11\\n\"\nassert solution(\"1\\n12\") == \"12\\n\"\nassert solution(\"1\\n13\") == \"13\\n\"\nassert solution(\"1\\n14\") == \"14\\n\"\nassert solution(\"1\\n15\") == \"15\\n\"\nassert solution(\"1\\n16\") == \"16\\n\"\nassert solution(\"1\\n17\") == \"17\\n\"\nassert solution(\"1\\n18\") == \"18\\n\"\nassert solution(\"1\\n19\") == \"19\\n\"\nassert solution(\"1\\n20\") == \"20\\n\"\nassert solution(\"2\\n2\") == \"2\\n\"\nassert solution(\"2\\n3\") == \"3\\n\"\nassert solution(\"2\\n4\") == \"4\\n\"\nassert solution(\"2\\n5\") == \"5\\n\"\nassert solution(\"2\\n6\") == \"6\\n\"\nassert solution(\"2\\n7\") == \"7\\n\"\nassert solution(\"2\\n8\") == \"8\\n\"\nassert solution(\"2\\n9\") == \"9\\n\"\nassert solution(\"2\\n10\") == \"10\\n\"\nassert solution(\"2\\n11\") == \"11\\n\"\nassert solution(\"2\\n12\") == \"12\\n\"\nassert solution(\"2\\n13\") == \"13\\n\"\nassert solution(\"2\\n14\") == \"14\\n\"\nassert solution(\"2\\n15\") == \"15\\n\"\nassert solution(\"2\\n16\") == \"16\\n\"\nassert solution(\"2\\n17\") == \"17\\n\"\nassert solution(\"2\\n18\") == \"18\\n\"\nassert solution(\"2\\n19\") == \"19\\n\"\nassert solution(\"2\\n20\") == \"20\\n\"\nassert solution(\"3\\n3\") == \"3\\n\"\nassert solution(\"3\\n4\") == \"4\\n\"\nassert solution(\"3\\n5\") == \"5\\n\"\nassert solution(\"3\\n6\") == \"6\\n\"\nassert solution(\"3\\n7\") == \"7\\n\"\nassert solution(\"3\\n8\") == \"8\\n\"\nassert solution(\"3\\n9\") == \"9\\n\"\nassert solution(\"3\\n10\") == \"10\\n\"\nassert solution(\"3\\n11\") == \"11\\n\"\nassert solution(\"3\\n12\") == \"12\\n\"\nassert solution(\"3\\n13\") == \"13\\n\"\nassert solution(\"3\\n14\") == \"14\\n\"\nassert solution(\"3\\n15\") == \"15\\n\"\nassert solution(\"3\\n16\") == \"16\\n\"\nassert solution(\"3\\n17\") == \"17\\n\"\nassert solution(\"3\\n18\") == \"18\\n\"\nassert solution(\"3\\n19\") == \"19\\n\"\nassert solution(\"3\\n20\") == \"20\\n\"\nassert solution(\"4\\n4\") == \"4\\n\"\nassert solution(\"4\\n5\") == \"5\\n\"\nassert solution(\"4\\n6\") == \"6\\n\"\nassert solution(\"4\\n7\") == \"7\\n\"\nassert solution(\"4\\n8\") == \"8\\n\"\nassert solution(\"",
        "num_ids_2": 42,
        "num_ids_4": 72
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\nassert solution(\"4\\n1 2 3 4 5\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"2\\n1 2 -1 3 4 -2\") == \"1\\n2\\n\"\nassert solution(\"4\\n0 1 2 3 -4\") == \"0\\n4\\n4\\n\"\nassert solution(\"5\\n-5 1 2 3 4 5\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected output: {}, got output: {}\".format(input(), output(), solution(input()))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"N: \")) == \"12\\n8\\n10\\n\", \"Test case 1\"\nassert solution(input(\"N: \")) == \"12\\n8\\n10\\n\", \"Test case 2\"\nassert solution(input(\"N: \")) == \"12\\n8\\n10\\n\", \"Test case 3\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n\nN = int(stdin.readline().strip())\nA = list(map(int, stdin.readline().strip().split()))\n\nspots = [A[0], A[1], A[2], A[3], A[4]]\nspot_index = [0, 1, 2, 3, 4]",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"f\") == \"consonant\"\nassert solution(\"g\") == \"consonant\"\nassert solution(\"h\") == \"consonant\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"j\") == \"consonant\"\nassert solution(\"k\") == \"consonant\"\nassert solution(\"l\") == \"consonant\"\nassert solution(\"m\") == \"consonant\"\nassert solution(\"n\") == \"consonant\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"p\") == \"consonant\"\nassert solution(\"q\") == \"consonant\"\nassert solution(\"r\") == \"consonant\"\nassert solution(\"s\") == \"consonant\"\nassert solution(\"t\") == \"consonant\"\nassert solution(\"u\") == \"vowel\"\nassert solution(\"v\") == \"consonant\"\nassert solution(\"w\") == \"consonant\"\nassert solution(\"x\") == \"consonant\"\nassert solution(\"y\") == \"consonant\"\nassert solution(\"z\") == \"consonant\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\", \"Solution does not match expected output.\"\n\nassert solution(\"b\") == \"consonant\", \"Solution does not match expected output.\"\n\nassert solution(\"c\") == \"consonant\", \"Solution does not match expected output.\"\n\nassert solution(\"d\") == \"consonant\", \"Solution does not match expected output.\"\n\nassert solution(\"e\") == \"vowel\", \"Solution does not match expected output.\"\n\nassert solution(\"f\") == \"consonant\", \"Solution does not match expected output.\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel', \"Incorrect output for a.\"\nassert solution('b') == 'consonant', \"Incorrect output for b.\"\nassert solution('c') == 'consonant', \"Incorrect output for c.\"\nassert solution('d') == 'consonant', \"Incorrect output for d.\"\nassert solution('e') == 'vowel', \"Incorrect output for e.\"\nassert solution('f') == 'consonant', \"Incorrect output for f.\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"A\") == \"vowel\"\nassert solution(\"e\") == \"consonant\"\nassert solution(\"E\") == \"consonant\"\nassert solution(\"i\") == \"consonant\"\nassert solution(\"I\") == \"consonant\"\nassert solution(\"o\") == \"consonant\"\nassert solution(\"O\") == \"consonant\"\nassert solution(\"u\") == \"consonant\"\nassert solution(\"U\") == \"consonant\"\nassert solution(\"z\") == \"consonant\"\nassert solution(\"Z\") == \"consonant\"\nassert solution(\"1\") == \"consonant\"\nassert solution(\"2\") == \"consonant\"\nassert solution(\"3\") == \"consonant\"\nassert solution(\"4\") == \"consonant\"\nassert solution(\"5\") == \"consonant\"\nassert solution(\"6\") == \"consonant\"\nassert solution(\"7\") == \"consonant\"\nassert solution(\"8\") == \"consonant\"\nassert solution(\"9\") == \"consonant\"\nassert solution(\"0\") == \"consonant\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"vowel\", \"The function should return 'vowel' for the given input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\" # correct output\nassert solution(\"BBBBWW\") == \"2\" # correct output\nassert solution(\"BBWWWW\") == \"3\" # correct output\nassert solution(\"BWWWWW\") == \"4\" # correct output\nassert solution(\"WWWWWW\") == \"5\" # correct output",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\", \"The correct output is not provided.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BBBWW\") == \"1\" # Example 1\nassert solution(\"WWWWW\") == \"2\" # Example 2\nassert solution(\"WWWWWW\") == \"3\" # Example 3\nassert solution(\"BWWWW\") == \"4\" # Example 4\nassert solution(\"BWWW\") == \"4\" # Example 5\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWW\") == \"2\"\nassert solution(\"WWBBW\") == \"3\"\nassert solution(\"WWWWW\") == \"4\"\nassert solution(\"WWWWWW\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBB\") == \"0\"\nassert solution(\"WWWWW\") == \"3\"\nassert solution(\"WWWWWW\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\", \"The expected output is not as expected.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\", \"The output is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWWW\") == \"1\"\nassert solution(\"BWWWW\") == \"1\"\nassert solution(\"WWWWW\") == \"1\"\nassert solution(\"WWWWW\") == \"1\"\nassert solution(\"BBBWW\") == \"0\"\nassert solution(\"BBBWW\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Incorrect output for test case 1\"\n\nassert solution(input()) == \"No\\n\", \"Incorrect output for test case 2\"\n\nassert solution(input()) == \"Yes\\n\", \"Incorrect output for test case 3\"\n\nassert solution(input()) == \"No\\n\", \"Incorrect output for test case 4\"\n\nassert solution(input()) == \"No\\n\", \"Incorrect output for test case 5\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\", \"Input 1 and Output 1\"\nassert solution(\"1 32\") == \"No\\n\", \"Input 1 and Output 2\"\nassert solution(\"4 64\") == \"No\\n\", \"Input 2 and Output 1\"\nassert solution(\"12 96\") == \"Yes\\n\", \"Input 2 and Output 2\"\nassert solution(\"25 81\") == \"No\\n\", \"Input 3 and Output 1\"\nassert solution(\"36 129\") == \"No\\n\", \"Input 3 and Output 2\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 21\") == \"Yes\"\nassert solution(stdin=\"2 5\") == \"No\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 42\") == \"No\"\nassert solution(\"5 16\") == \"Yes\"\nassert solution(\"17 23\") == \"No\"\nassert solution(\"100 100\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\", \"Test case 1\"\nassert solution(\"5 7\") == \"No\", \"Test case 2\"\nassert solution(\"10 10\") == \"No\", \"Test case 3\"\nassert solution(\"7 7\") == \"Yes\", \"Test case 4\"\nassert solution(\"5 5\") == \"Yes\", \"Test case 5\"",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"7\\n4 1 4 1 5 9 2\") == \"2\"\nassert solution(\"7\\n3 2 4 1 5 9 2\") == \"5\"\nassert solution(\"7\\n2 2 3 2 6 9 2\") == \"4\"\nassert solution(\"7\\n2 2 3 2 6 9 3\") == \"3\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"10 5 3 2 4 1 6 7 8 9\") == \"2\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test 1\"\n\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test 2\"\n\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test 3\"\n\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test 4\"\n\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test 5\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1 1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"3\"\nassert solution(\"1\\n4\") == \"4\"",
        "num_ids_2": 48,
        "num_ids_4": 74
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Your code is incorrect!\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4', \"The given sequence is incorrect. The output should be 4, but it is \" + solution(input())",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\", \"Input is invalid.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\", \"Test failed for the given constraints\"\nassert solution(\"2\\n5\") == \"10\\n\", \"Test failed for the given constraints\"\nassert solution(\"3\\n2\") == \"15\\n\", \"Test failed for the given constraints\"\nassert solution(\"2\\n3\") == \"20\\n\", \"Test failed for the given constraints\"\nassert solution(\"4\\n3\") == \"25\\n\", \"Test failed for the given constraints\"\nassert solution(\"10\\n5\") == \"105\\n\", \"Test failed for the given constraints\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\", \"There are nine squares in a 3 \\times 3 square grid. Four of them will be painted white, so the remaining five squares will be painted black.\"\nassert solution(\"10\\n0\") == \"0\\n\", \"The grid has nine squares, but they are painted black.\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"5\\n4\\n\") == \"4\\n\"\nassert solution(\"4\\n5\\n\") == \"3\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n\") == \"4\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"5\\n5\\n\") == \"0\\n\"\nassert solution(\"6\\n6\\n\") == \"0\\n\"\nassert solution(\"7\\n7\\n\") == \"0\\n\"\nassert solution(\"8\\n8\\n\") == \"0\\n\"\nassert solution(\"9\\n9\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\", \"The output must be '5'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\", \"Test case failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"5\\n3\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\", \"Test failed\"\nassert solution(\"6\\n8\\n\") == \"5\\n\", \"Test failed\"\nassert solution(\"4\\n1\\n\") == \"5\\n\", \"Test failed\"\nassert solution(\"10\\n4\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"10\\n8\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"10\\n10\\n\") == \"10\\n\", \"Test failed\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"4\\n2\\n\") == \"5\\n\"\nassert solution(\"3\\n5\\n\") == \"8\\n\"\nassert solution(\"5\\n5\\n\") == \"10\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"5 6 7\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(29) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(29) == 'Yes', \"Test failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"Yes\"\n\nassert solution(\"56\") == \"No\"\n\nassert solution(\"1234\") == \"Yes\"\n\nassert solution(\"0\") == \"No\"\n\nassert solution(\"901\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(29) == \"Yes\", \"Input 29 is not valid. Please enter a valid input.\"\nprint(\"No\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(123) == 'No'\nassert solution(900) == 'Yes'\nassert solution(1234) == 'No'\nassert solution(55) == 'Yes'\nassert solution(0) == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('29') == 'Yes'\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(29) == \"Yes\", \"Test Case 1 failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(sample_input)}\"\n\nsample_input = \"5 3 3\\n1 2 4\"\nexpected_output = \"1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5 3 3\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5 3 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\\n5 3 3\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 133
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1\\n'\nassert solution('5 3 4\\n1 2 3') == '1\\n'\nassert solution('5 3 5\\n1 2 3') == '2\\n'\nassert solution('5 3 6\\n1 2 3') == '4\\n'\nassert solution('5 3 7\\n1 2 3') == '4\\n'\nassert solution('5 3 8\\n1 2 3') == '5\\n'\nassert solution('5 3 9\\n1 2 3') == '5\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\", \"Test failed. Please fix the code.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n.#.\n###\n.#.\n''') == 'Yes'\n\nassert solution('''\n3 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n.#.\\n.#.\\n') == 'Yes'\nassert solution('3 3\\n...\\n...\\n') == 'No'\nassert solution('3 3\\n..#\\n..#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n.##.\\n.##.\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No'\nassert solution('3 3\\n..#.\\n..#.\\n') == 'Yes'\nassert solution('3 3\\n...#\\n...#\\n') == 'No",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n..#\\n\") == \"No\"\nassert solution(\"3 3\\n....\\n\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"No\"  # Here, the squares being painted are not marked by stars.",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"3 3\\n.#.\\n\") == \"Yes\\n\"\nassert solution(input_str=\"3 3\\n.#.\\n\") == \"No\\n\"\nassert solution(input_str=\"4 4\\n###\\n\") == \"Yes\\n\"\nassert solution(input_str=\"4 4\\n###\\n\") == \"No\\n\"\nassert solution(input_str=\"5 5\\n###\\n\") == \"No\\n\"\nassert solution(input_str=\"6 6\\n###\\n\") == \"Yes\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 30 15\") == \"No\"\nassert solution(\"25 10 20\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"40 50 60\") == \"No\"\nassert solution(\"75 80 90\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"5 7 5 9\") == \"Balanced\"\nassert solution(\"1 2 3 4\") == \"Right\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 8 7 1') == 'Left'\n\nprint('All tests passed!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Left', \"Test case failed\"\nprint('Right')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\", \"The solution should return Left\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"2 3 10 7\") == \"Balanced\"\nassert solution(\"1 3 8 9\") == \"Right\"\nassert solution(\"1 1 1 1\") == \"Left\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 8, 7, 1) == \"Left\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\", \"Test case 1\"\nassert solution(\"1 2 3 4\") == \"Right\", \"Test case 2\"\nassert solution(\"10 10 10 10\") == \"Right\", \"Test case 3\"\nassert solution(\"10 10 10 11\") == \"Left\", \"Test case 4\"\nassert solution(\"0 0 0 0\") == \"Right\", \"Test case 5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 8, \"Solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8\\n'\n\nassert solution('''\n2\n0 0 1 1 1 1 0 1 1 0\n1 2 3 4 5 6 7 8 9 0 1\n''') == '8\\n'\n\nassert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8\\n'\n\nassert solution('''\n3\n0 0 1 1 1 1 0 1 1 0\n1 2 3 4 5 6 7 8 9 0 1\n''') == '8\\n'\n\nassert solution('''\n1\n0 0 0 1 0 0 0 1 0 0\n1 1 1 2 1 1 1 2 1 1 1\n''') == '2\\n'\n\nassert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8\\n'\n\nassert solution('''\n1\n0 0 0 1 0 0 0 1 0 0\n1 1 1 2 1 1 1 2 1 1 1\n''') == '2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n0 1\\n1 0 1 0 1 0\\n\\n5\\n0 0\\n0 0 0 0 0 0\\n\\n10\\n0 0\\n0 0 0 0 0 0\\n\\n10\") == \"8\\n\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\\n\"  # Sample Output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 8\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '8'\nprint('All test cases passed')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"5 4\\n269-6650\") == \"No\"\nassert solution(\"5 4\\n2696650\") == \"No\"\nassert solution(\"5 4\\n2696651\") == \"No\"\nassert solution(\"5 4\\n269665\") == \"No\"\nassert solution(\"5 4\\n2696650A\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n269-6650\\n') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"3 4\\n2696650\") == \"No\"\nassert solution(\"4 4\\n269-6650\") == \"No\"\nassert solution(\"4 4\\n2696650\") == \"Yes\"\nassert solution(\"5 4\\n269-6650\") == \"No\"\nassert solution(\"5 4\\n2696650\") == \"No\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"\nassert solution(\"3 5\\n269-6651\\n\") == \"No\"\nassert solution(\"3 4\\n269-6650-123\\n\") == \"No\"\nassert solution(\"3 3\\n269-6650\\n\") == \"No\"\nassert solution(\"3 4\\n269-6650-0\\n\") == \"Yes\"\n",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 1 10') == '1'\nassert solution('5 5 5') == '5'\nassert solution('10 10 10') == '10'",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"5 3 7\") == \"2\"\nassert solution(\"4 2 5\") == \"1\"\nassert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"5 3 10\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"10 10 10\") == \"3\\n\", \"Test case 3 failed.\"\nassert solution(\"100 50 100\") == \"4\\n\", \"Test case 4 failed.\"\nassert solution(\"0 0 0\") == \"5\\n\", \"Test case 5 failed.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Incorrect output. Please check the sample input and constraints.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output. Please see the problem statement.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 10 3\") == \"1\\n10\\n3\"\nassert solution(\"10 20 15\") == \"10\\n15\\n20\"\nassert solution(\"1 2 3 4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"10 20 30 40\") == \"10\\n20\\n30\\n40\"",
        "num_ids_2": 45,
        "num_ids_4": 96
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 8, 2) == \"3\\n4\\n7\\n8\\n\"\nassert solution(2, 8, 2) == \"2\\n4\\n7\\n8\\n\"\nassert solution(3, 8, 4) == \"3\\n4\\n7\\n8\\n\"\nassert solution(3, 8, 1) == \"3\\n4\\n7\\n8\\n\"\nassert solution(3, 8, 5) == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test case 1 failed\"\nassert solution(\"1 100 1\") == \"1\\n100\\n1\\n\", \"Test case 2 failed\"\nassert solution(\"10 100 1\") == \"10\\n100\\n10\\n\", \"Test case 3 failed\"\nassert solution(\"1 10 1\") == \"1\\n10\\n1\\n\", \"Test case 4 failed\"\nassert solution(\"10 10 1\") == \"10\\n10\\n10\\n\", \"Test case 5 failed\"\n",
        "num_ids_2": 65,
        "num_ids_4": 132
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 1\\n4 5 2\\n3 7 3\") == \"3\\n4\\n7\\n8\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"atcoder s contest\") == \"ABC\"\nassert solution(\"atcoder s contest\") == \"ABC\"\nassert solution(\"atcoder contest\") == \"ABC\"\nassert solution(\"atcoder contests\") == \"ABC\"\nassert solution(\"atcoder contestant\") == \"ABC\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 2 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\n\nA + B cats and dogs. There are 3 known cats and 4 known dogs. We can say that there are exactly 4 cats among these A + B animals.\n\nLet's write a function to determine if it is possible that there are exactly X cats among these A + B animals.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES\\n'\nassert solution(stdin) == 'NO\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('5 2 3') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"\nassert solution(\"3 4 5\") == \"NO\\n\"\nassert solution(\"1 1 1\") == \"YES\\n\"\nassert solution(\"2 2 2\") == \"YES\\n\"\nassert solution(\"1 1 0\") == \"NO\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(\"3 5 4\") == \"YES\"\nassert solution(\"5 7 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'100 17') == '83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 17\") == \"83\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"83\\n\"\nassert solution(\"100 17\") == \"83\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 17\") == \"83\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"200 30\") == \"166\"\nassert solution(\"500 70\") == \"415\"\nassert solution(\"1000 999\") == \"1491\"\nassert solution(\"1000000 1000001\") == \"1491000\"",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 17\") == \"83\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 1000000000000000000\nprint(-1)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\") == \"-1\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\") == \"-1\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"1000000000000000000\"",
        "num_ids_2": 95,
        "num_ids_4": 234
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 1000000000000000000\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n9999999999 9999999999\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000001 1000000001\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n9999999998 9999999998\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 202
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test Failed: {input()}!= {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 1000000000000000000\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000001 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000001\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000001 1000000000\") == \"-1\"\nassert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000\") == \"-1\"\nassert solution(\"2\\n1000000000 1000000001\") == \"-1\"\nassert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"-1\"\nassert solution(\"5\\n1000000000 1000000000\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 120
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('218') == 'No'\nassert solution('50') == 'No'\nassert solution('10000') == 'No'\nassert solution('0') == 'No'\nassert solution('10001') == 'No'\nassert solution('-5000') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2018\\n218\\n') == 'Yes\\n'\nprint('All tests passed!')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Solution not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\\n\", \"The correct answer is Yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\", \"Incorrect output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\", \"E869120 has A 1-yen coins and infinitely many 500-yen coins.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"X A B\\n\")) == \"safe\\n\"\nassert solution(input(\"4 3 6\\n\")) == \"safe\\n\"\nassert solution(input(\"100 3 6\\n\")) == \"dangerous\\n\"\nassert solution(input(\"5 3 6\\n\")) == \"safe\\n\"\nassert solution(input(\"4 2 6\\n\")) == \"dangerous\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"5 2 7\") == \"dangerous\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 3\") == \"dangerous\"\nassert solution(\"5 3 6\") == \"safe\"\nassert solution(\"6 3 6\") == \"safe\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"Test 1\"\nassert solution(\"1 1 1\") == \"safe\", \"Test 2\"\nassert solution(\"5 5 5\") == \"safe\", \"Test 3\"\nassert solution(\"4 3 5\") == \"delicious\", \"Test 4\"\nassert solution(\"1 1 5\") == \"safe\", \"Test 5\"\nassert solution(\"4 2 6\") == \"safe\", \"Test 6\"\nassert solution(\"1 1 4\") == \"safe\", \"Test 7\"\nassert solution(\"4 3 7\") == \"safe\", \"Test 8\"\nassert solution(\"1 1 6\") == \"safe\", \"Test 9\"\nassert solution(\"5 5 4\") == \"safe\", \"Test 10\"\nassert solution(\"5 5 6\") == \"safe\", \"Test 11\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3 6') =='safe', \"Solution should return'safe'\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) =='safe'\nassert solution(input()) =='safe'\nassert solution(input()) == 'dangerous'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) =='safe'\nassert solution(input()) =='safe'\nassert solution(input()) =='safe'\nassert solution(input()) == 'dangerous'\nassert solution(input()) == 'dangerous'\nassert solution(input()) == 'dangerous'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"dangerous\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"\nassert solution(\"1 3 2\") == \"dangerous\\n\"\nassert solution(\"2 3 5\") == \"safe\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) =='safe', 'Output should be safe'\nassert solution(input()) =='safe', 'Output should be safe'\nassert solution(input()) =='safe', 'Output should be safe'\nassert solution(input()) =='safe', 'Output should be safe'\nassert solution(input()) =='safe', 'Output should be safe'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\nprint(\"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\"\n\nprint(\"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('20') == '16'\nassert solution('30') == '19'\nassert solution('40') == '24'\nassert solution('50') == '30'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"\nassert solution(\"5\") == \"5\\n5 is not square, but 5 = 1\u00b2 is. Thus, we print 5.\"\nassert solution(\"7\") == \"13\\n7 is not square, but 7 = 4 \u00d7 4 is. Thus, we print 13.\"\nassert solution(\"100\") == \"25\\n100 is not square, but 25 = 16 \u00d7 16 is. Thus, we print 25.\"\nassert solution(\"1000000000\") == \"49\\n1000000000 is not square, but 49 = 200 \u00d7 200 is. Thus, we print 49.\"",
        "num_ids_2": 68,
        "num_ids_4": 147
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"9\"\nassert solution(\"1000\") == \"9\"\nassert solution(\"10000\") == \"9\"\nassert solution(\"100000\") == \"9\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == '9'\nassert solution(100) == '10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.'\nassert solution(100000000) == '100000000 is not square, but 999999999 = 333333333 \u00d7 333333333 is. Thus, we print 999999999.'\nassert solution(1000000000000000000) == '10000000000000000000 is not square, but 9999999999999999999999999 is. Thus, we print 999999999999999999999999.'\nassert solution(100000000000000000000) == '100000000000000000000 is not square, but 99999999999999999999999999 is. Thus, we print 9999999999999999999999999.'",
        "num_ids_2": 45,
        "num_ids_4": 233
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10') == '9\\n', 'Testcase 1 failed'\nassert solution('10') == '9\\n', 'Testcase 2 failed'\nassert solution('10') == '9\\n', 'Testcase 3 failed'\nassert solution('10') == '9\\n', 'Testcase 4 failed'\nassert solution('10') == '9\\n', 'Testcase 5 failed'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"9\", \"Test failed for input 10\"\nassert solution(9) == \"9\", \"Test failed for input 9\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nassert solution(\"6\\n1 2\\n3 1\\n2 3\\n2 1\\n4 4\\n1 5\") == \"16\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nassert solution(\"4\\n1 2\\n3 1\\n4 1\") == \"10\\n\"\nassert solution(\"5\\n1 2\\n3 1\\n4 1\\n5 1\") == \"10\\n\"\nassert solution(\"6\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\") == \"10\\n\"\nassert solution(\"7\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"10\\n\"\nassert solution(\"8\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\") == \"10\\n\"\nassert solution(\"9\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\") == \"10\\n\"\nassert solution(\"10\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == \"10\\n\"\nassert solution(\"11\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\") == \"10\\n\"\nassert solution(\"12\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\") == \"10\\n\"\nassert solution(\"13\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\") == \"10\\n\"\nassert solution(\"14\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\") == \"10\\n\"\nassert solution(\"15\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\") == \"10\\n\"\nassert solution(\"16\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\") == \"10\\n\"\nassert solution(\"17\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\") == \"10\\n\"\nassert solution(\"18\\n1 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\") == \"10\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 127
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nprint(\"All tests passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n2 3\\n1 1\\n3 2\"\n) == \"10\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"hello\") == \"yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test case 1 failed\"\nassert solution(\"hello\") == \"no\", \"Test case 2 failed\"\nassert solution(\"abc\") == \"no\", \"Test case 3 failed\"\nassert solution(\" \") == \"no\", \"Test case 4 failed\"\nassert solution(\"ab\") == \"no\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5\\nWEEWW\\n') == '1\\n'\nprint('All tests passed!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\n\nsolution(\"5\\nWEEWW\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nWEEWW\\n\") == \"1\\n\"\nassert solution(\"6\\nWWWWWW\\n\") == \"2\\n\"\nassert solution(\"4\\nWWEWWW\\n\") == \"3\\n\"\nassert solution(\"1\\nWW\\n\") == \"1\\n\"\nassert solution(\"3\\nWWE\\n\") == \"3\\n\"\nassert solution(\"6\\nWWWWW\\n\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nWEEWW\\n\") == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nWEEWW') == '1\\n'\nprint('All test cases passed!')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(r\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 3\\n2 4\\n3 5\\n4 6\\n5 2\\n2 6\\n6 5\") == \"3\\n1\\n1\\n2\\n2\\n2\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nprint(\"All test cases pass\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1\\n'\nprint('All test cases pass.')",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n2\\n1\\n1\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n1 3\") == \"2\\n1\\n1\\n\"\nassert solution(\"3 5\\n1 2\\n2 3\\n1 4\") == \"1\\n1\\n1\\n\"\nassert solution(\"4 4\\n1 2\\n2 3\\n1 4\\n1 5\\n2 4\\n3 4\\n4 3\") == \"1\\n1\\n1\\n1\\n1\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 169
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n\") == \"30\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n5\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n5\\n10\\n5\\n\") == \"30\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 99
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"5\\n10\\n20\\n\") == \"30\"\nassert solution(\"10\\n10\\n10\\n\") == \"200\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"200\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n\") == \"200\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n\") == \"200\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\") == \"200\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"10\\n15\\n5\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"2\\n5\\n10\\n15\\n\") == \"15\\n\"\nassert solution(\"1\\n10\\n15\\n\") == \"10\\n\"\nassert solution(\"3\\n10\\n15\\n2\\n\") == \"25\\n\"\nassert solution(\"1\\n10\\n15\\n2\\n\") == \"15\\n\"\nassert solution(\"1\\n10\\n15\\n1\\n\") == \"10\\n\"\nassert solution(\"3\\n10\\n15\\n2\\n1\\n\") == \"25\\n\"\nassert solution(\"1\\n10\\n15\\n2\\n1\\n\") == \"15\\n\"\nassert solution(\"1\\n10\\n15\\n1\\n\") == \"10\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 102
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"4\\n2\\n2\\n1\\n\") == \"1\\n\"\nassert solution(\"6\\n3\\n2\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n10\\n15\\n10\\n\") == \"0\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"25\"\nprint(solution(input()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\\n\"\nassert solution(\"3\\n10\\n5\\n15\") == \"30\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"100\\n\"\nassert solution(\"10\\n11\\n12\\n13\\n14\") == \"0\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"100\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 103
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"30\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"25\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"30\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"25\"",
        "num_ids_2": 48,
        "num_ids_4": 130
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"\nassert solution(\"1\\nabc\") == \"1\\n\"\nassert solution(\"3\\nabcde\") == \"3\\n\"\nassert solution(\"5\\nfghij\") == \"5\\n\"\nassert solution(\"4\\nabcd\") == \"4\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\\n\"\nassert solution(\"6\\naabbca\\n\") == \"3\\n\"\nassert solution(\"1\\naaa\\n\") == \"1\\n\"\nassert solution(\"1\\naaa\\n\") == \"2\\n\"\nassert solution(\"1\\naaa\\n\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabbca\") == \"2\" # Test Case 1\nassert solution(\"7\\nbbbbbb\") == \"3\" # Test Case 2\nassert solution(\"8\\naabbccc\") == \"4\" # Test Case 3\nassert solution(\"9\\naabbccd\") == \"5\" # Test Case 4\nassert solution(\"10\\naabbcdc\") == \"6\" # Test Case 5",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabbca\") == \"2\", \"The function should return 2 for the given inputs.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\naabbca') == '2\\n', 'Test case 1 failed'\nassert solution('7\\nabcdcd') == '0\\n', 'Test case 2 failed'\nassert solution('8\\nabcabc') == '1\\n', 'Test case 3 failed'\nassert solution('9\\nabccba') == '0\\n', 'Test case 4 failed'\nassert solution('10\\nabcde') == '2\\n', 'Test case 5 failed'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"\nassert solution(\"5\\naaaabb\") == \"0\\n\"\nassert solution(\"7\\naaabcde\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"The solution should return Cloudy for the input Sunny\"\nassert solution(\"Cloudy\") == \"Rainy\", \"The solution should return Rainy for the input Cloudy\"\nassert solution(\"Rainy\") == \"Sunny\", \"The solution should return Sunny for the input Rainy\"\nassert solution(\"Sunny\") == \"Sunny\", \"The solution should return Sunny for the input Sunny\"\nassert solution(\"Sunny\") == \"Rainy\", \"The solution should return Rainy for the input Sunny\"\nassert solution(\"Cloudy\") == \"Sunny\", \"The solution should return Sunny for the input Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\", \"The solution should return Cloudy for the input Rainy\"\nassert solution(\"Rainy\") == \"Rainy\", \"The solution should return Rainy for the input Rainy\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\nassert solution('Sunny') == 'Rainy'\nassert solution('Cloudy') == 'Sunny'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Test 1 failed\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Test 2 failed\"\nassert solution(\"Rainy\") == \"Sunny\", \"Test 3 failed\"\nassert solution(\"Sunny\") == \"Cloudy\", \"Test 4 failed\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Test 5 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Please enter the correct input format.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"7 17 120\") == \"119\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Expected output: 119\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"119\"\nprint(\"All assertions passed successfully.\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter N and A, B: \")) == \"119\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"119\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3800'\nprint('All test cases passed!')",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n\") == \"3800\\n\", \"Expected: 3800\\nGot: \" + solution(\"1 1\\n\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3800', 'The expected output is incorrect.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\\n\", \"Invalid input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3800\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"3800\\n\"\nassert solution(\"2 1\\n\") == \"900\\n\"\nassert solution(\"3 1\\n\") == \"1800\\n\"\nassert solution(\"4 1\\n\") == \"2700\\n\"\nassert solution(\"5 1\\n\") == \"3600\\n\"\nassert solution(\"6 1\\n\") == \"4500\\n\"\nassert solution(\"7 1\\n\") == \"5400\\n\"\nassert solution(\"8 1\\n\") == \"6300\\n\"\nassert solution(\"9 1\\n\") == \"7200\\n\"\nassert solution(\"10 1\\n\") == \"8100\\n\"\nassert solution(\"11 1\\n\") == \"9000\\n\"\nassert solution(\"12 1\\n\") == \"9900\\n\"\nassert solution(\"13 1\\n\") == \"10800\\n\"\nassert solution(\"14 1\\n\") == \"11700\\n\"\nassert solution(\"15 1\\n\") == \"12600\\n\"\nassert solution(\"16 1\\n\") == \"13500\\n\"\nassert solution(\"17 1\\n\") == \"14400\\n\"\nassert solution(\"18 1\\n\") == \"15300\\n\"\nassert solution(\"19 1\\n\") == \"16200\\n\"\nassert solution(\"20 1\\n\") == \"17100\\n\"\nassert solution(\"21 1\\n\") == \"18000\\n\"\nassert solution(\"22 1\\n\") == \"18900\\n\"\nassert solution(\"23 1\\n\") == \"19800\\n\"\nassert solution(\"24 1\\n\") == \"20700\\n\"\nassert solution(\"25 1\\n\") == \"21600\\n\"\nassert solution(\"26 1\\n\") == \"22500\\n\"\nassert solution(\"27 1\\n\") == \"23400\\n\"\nassert solution(\"28 1\\n\") == \"24300\\n\"\nassert solution(\"29 1\\n\") == \"25200\\n\"\nassert solution(\"30 1\\n\") == \"26100\\n\"\nassert solution(\"31 1\\n\") == \"27000\\n\"\nassert solution(\"32 1\\n\") == \"27900\\n\"\nassert solution(\"33 1\\n\") == \"28800\\n\"\nassert solution(\"34 1\\n\") == \"29700\\n\"\nassert solution(\"35 1\\n\") == \"30600\\n\"\nassert solution(\"36 1\\n\") == \"31500\\n\"\nassert solution(\"37 1\\n\") == \"32400\\n\"\nassert solution(\"38 1\\n\") == \"33300\\n\"\nassert solution(\"39 1\\n\") == \"34200\\n\"\nassert solution(\"40 1\\n\") == \"35100\\n\"\nassert solution(\"41 1\\n\") == \"36000\\n\"\nassert solution(\"42 1\\n\") == \"36900\\n\"\nassert solution(\"43 1\\n\") == \"37800\\n\"\nassert solution(\"44 1\\n\") == \"38700\\n\"\nassert solution(\"45 1\\n\") == \"39600\\n\"\nassert solution(\"46 1\\n\") == \"40500\\n\"\nassert solution(\"47 1\\n\") == \"41400\\n\"\nassert solution(\"48 1\\n\") == \"42300\\n\"\nassert solution(\"49 1\\n\") == \"43200\\n\"\nassert solution(\"50 1\\n\") == \"44100\\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\", \"The correct output should be 3800.\"\nassert solution(\"1 5\") == \"7500\", \"The correct output should be 7500.\"\nassert solution(\"1 6\") == \"7800\", \"The correct output should be 7800.\"\nassert solution(\"1 7\") == \"8100\", \"The correct output should be 8100.\"\nassert solution(\"1 8\") == \"8400\", \"The correct output should be 8400.\"\nassert solution(\"1 9\") == \"8700\", \"The correct output should be 8700.\"\nassert solution(\"1 10\") == \"9000\", \"The correct output should be 9000.\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3800\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3800\", \"Your solution is incorrect!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3800\\n'\nassert solution('2 2') == '1900\\n'\nassert solution('3 3') == '1550\\n'\nassert solution('4 4') == '1300\\n'\nassert solution('5 5') == '1100\\n'\nassert solution('6 6') == '950\\n'\nassert solution('7 7') == '850\\n'\nassert solution('8 8') == '750\\n'\nassert solution('9 9') == '650\\n'\nassert solution('10 10') == '550\\n'\nassert solution('11 11') == '450\\n'\nassert solution('12 12') == '350\\n'\nassert solution('13 13') == '250\\n'\nassert solution('14 14') == '150\\n'\nassert solution('15 15') == '100\\n'\nassert solution('16 16') == '50\\n'\nassert solution('17 17') == '0\\n'\nassert solution('18 18') == '0\\n'\nassert solution('19 19') == '0\\n'\nassert solution('20 20') == '0\\n'\nassert solution('21 21') == '0\\n'\nassert solution('22 22') == '0\\n'\nassert solution('23 23') == '0\\n'\nassert solution('24 24') == '0\\n'\nassert solution('25 25') == '0\\n'\nassert solution('26 26') == '0\\n'\nassert solution('27 27') == '0\\n'\nassert solution('28 28') == '0\\n'\nassert solution('29 29') == '0\\n'\nassert solution('30 30') == '0\\n'\nassert solution('31 31') == '0\\n'\nassert solution('32 32') == '0\\n'\nassert solution('33 33') == '0\\n'\nassert solution('34 34') == '0\\n'\nassert solution('35 35') == '0\\n'\nassert solution('36 36') == '0\\n'\nassert solution('37 37') == '0\\n'\nassert solution('38 38') == '0\\n'\nassert solution('39 39') == '0\\n'\nassert solution('40 40') == '0\\n'\nassert solution('41 41') == '0\\n'\nassert solution('42 42') == '0\\n'\nassert solution('43 43') == '0\\n'\nassert solution('44 44') == '0\\n'\nassert solution('45 45') == '0\\n'\nassert solution('46 46') == '0\\n'\nassert solution('47 47') == '0\\n'\nassert solution('48 48') == '0\\n'\nassert solution('49 49') == '0\\n'\nassert solution('50 50') == '0\\n'\nassert solution('51 51') == '0\\n'\nassert solution('52 52') == '0\\n'\nassert solution('53 53') == '0\\n'\nassert solution('54 54') == '0\\n'\nassert solution('55 55') == '0\\n'\nassert solution('56 56') == '0\\n'\nassert solution('57 57') == '0\\n'\nassert solution('58 58') == '0\\n'\nassert solution('59 59') == '0\\n'\nassert solution('60 60') == '0\\n'\nassert solution('61 61') == '0\\n'\nassert solution('62 62') == '0\\n'\nassert solution('63 63') == '0\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"Test failed for the given input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") is None",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"4\n3\n3\n4\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"4\n3\n3\n4\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n4\n3\n3\n4\n\"\"\".strip()",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: {solution(stdin=input())}!= {output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"2\\n1 3 5 7 9\") == \"1\\n3\\n5\\n7\\n9\\n\"\nassert solution(\"5\\n9 8 7 6 5\") == \"9\\n7\\n5\\n3\\n1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"1\\n3\\n5\\n7\\n9\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 144
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n2 4 4 3\"\"\") == \"\"\"4\n3\n3\n4\"\"\"\n\nassert solution(\"\"\"4\n1 2 3 4\"\"\") == \"\"\"4\n4\n3\n3\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 \\times 2 rectangle can be formed.\"\nassert solution(\"4\\n3\") == \"0\"\nassert solution(\"2\\n1\") == \"1 \\times 2 rectangle can be formed.\"\nassert solution(\"10\\n5\\n4\\n3\\n2\") == \"0\"",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"6\\n3 1 2 4 2 1\") == \"0\\nNo rectangle can be formed.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"7\\n1 1 1 1 1 1\") == \"2\"\nassert solution(\"6\\n3 1 1 4 2 1\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\\n0 rectangle can be formed.\\n0 rectangle can be formed.\\n0 rectangle can be formed.\\n0 rectangle can be formed.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n1 \\times 2 rectangle can be formed.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n1\\nrectangle can be formed.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"3\\n1 1\\n1\") == \"1\\n\"\nassert solution(\"5\\n10 1\\n10\\n1\") == \"1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 72
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '8\\n', \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8\\n'\nassert solution('3\\n7 2\\n2\\n5\\n10') == '9\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"\nassert solution(\"2\\n1\\n\\n\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n50\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n50\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n50\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n50\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"1\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"2\"",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"3\\n3\\n3\\n150\\n\") == \"2\\n\"\nassert solution(\"4\\n4\\n4\\n200\\n\") == \"3\\n\"\nassert solution(\"5\\n5\\n5\\n250\\n\") == \"4\\n\"\nassert solution(\"6\\n6\\n6\\n300\\n\") == \"4\\n\"\nassert solution(\"7\\n7\\n7\\n350\\n\") == \"4\\n\"\nassert solution(\"8\\n8\\n8\\n400\\n\") == \"5\\n\"\nassert solution(\"9\\n9\\n9\\n450\\n\") == \"5\\n\"\nassert solution(\"10\\n10\\n10\\n500\\n\") == \"5\\n\"\nassert solution(\"11\\n11\\n11\\n550\\n\") == \"5\\n\"\nassert solution(\"12\\n12\\n12\\n600\\n\") == \"5\\n\"\nassert solution(\"13\\n13\\n13\\n650\\n\") == \"5\\n\"\nassert solution(\"14\\n14\\n14\\n700\\n\") == \"5\\n\"\nassert solution(\"15\\n15\\n15\\n750\\n\") == \"6\\n\"\nassert solution(\"16\\n16\\n16\\n800\\n\") == \"6\\n\"\nassert solution(\"17\\n17\\n17\\n850\\n\") == \"6\\n\"\nassert solution(\"18\\n18\\n18\\n900\\n\") == \"6\\n\"\nassert solution(\"19\\n19\\n19\\n950\\n\") == \"6\\n\"\nassert solution(\"20\\n20\\n20\\n1000\\n\") == \"6\\n\"\nassert solution(\"21\\n21\\n21\\n1050\\n\") == \"7\\n\"\nassert solution(\"22\\n22\\n22\\n1100\\n\") == \"7\\n\"\nassert solution(\"23\\n23\\n23\\n1150\\n\") == \"7\\n\"\nassert solution(\"24\\n24\\n24\\n1200\\n\") == \"7\\n\"\nassert solution(\"25\\n25\\n25\\n1250\\n\") == \"7\\n\"\nassert solution(\"26\\n26\\n26\\n1300\\n\") == \"7\\n\"\nassert solution(\"27\\n27\\n27\\n1350\\n\") == \"7\\n\"\nassert solution(\"28\\n28\\n28\\n1400\\n\") == \"8\\n\"\nassert solution(\"29\\n29\\n29\\n1450\\n\") == \"8\\n\"\nassert solution(\"30\\n30\\n30\\n1500\\n\") == \"8\\n\"\nassert solution(\"31\\n31\\n31\\n1550\\n\") == \"8\\n\"\nassert solution(\"32\\n32\\n32\\n1600\\n\") == \"8\\n\"\nassert solution(\"33\\n33\\n33\\n1650\\n\") == \"8\\n\"\nassert solution(\"34\\n34\\n34\\n1700\\n\") == \"8\\n\"\nassert solution(\"35\\n35\\n35\\n1750\\n\") == \"8\\n\"\nassert solution(\"36\\n36\\n36\\n1800\\n\") == \"8\\n\"\nassert solution(\"37\\n37\\n37\\n1850\\n\") == \"8\\n\"\nassert solution(\"38\\n38\\n38\\n1900\\n\") == \"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n50\\n\") == \"2\"\nassert solution(\"10\\n5\\n7\\n30\\n\") == \"2\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"2\"\nassert solution(\"50\\n100\\n50\\n\") == \"1\"",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n'\nassert solution('5\\n5\\n5\\n100\\n') == '1\\n1\\n'\nassert solution('3\\n3\\n3\\n100\\n') == '1\\n2\\n'\nassert solution('10\\n10\\n10\\n100\\n') == '1\\n2\\n3\\n'\nassert solution('25\\n25\\n25\\n100\\n') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n'",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n\") == \"1\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"5\\n2\\n3\\n4\\n\") == \"1\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"1\\n\"\nassert solution(\"5\\n10\\n20\\n30\\n\") == \"2\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n200\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n0\\n\") == \"2\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n50\") == \"1\"\nassert solution(\"5\\n6\\n7\") == \"0\"\nassert solution(\"10\\n12\\n14\") == \"4\"\nassert solution(\"10\\n10\\n10\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2\\n'\n\nassert solution('3\\n2\\n2\\n100\\n') == '3\\n'\n\nassert solution('4\\n2\\n2\\n100\\n') == '12\\n'\n\nassert solution('5\\n2\\n2\\n100\\n') == '38\\n'\n\nassert solution('6\\n2\\n2\\n100\\n') == '1000\\n'",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"The solution does not work\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"\nassert solution(\"100 3 10\") == \"No\\n\"\nassert solution(\"3 3 3\") == \"Yes\\n\"\nassert solution(\"1 1 1\") == \"No\\n\"\nassert solution(\"10 3 10\") == \"Yes\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"-1 3 2\") == \"No\"\nassert solution(\"1 3 -2\") == \"No\"\nassert solution(\"1 3 5\") == \"No\"\nassert solution(\"1 3 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"1 3 2\") == \"Yes\\n\"\nassert solution(b\"4 3 2\") == \"No\\n\"\nassert solution(b\"1 1 2\") == \"Yes\\n\"\nassert solution(b\"5 3 2\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"4 3 2\") == \"No\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"4 1 2\") == \"Yes\"\nassert solution(\"1 3 1\") == \"No\"\nassert solution(\"4 3 1\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 3 2\") == \"Yes\\n\"\nassert solution(stdin=\"5 7 9\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('0 10 5') == 'No'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 4 2\") == \"No\"\nassert solution(\"2 3 4\") == \"No\"\nassert solution(\"5 3 2\") == \"No\"\nassert solution(\"5 4 2\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"4 1 5\") == \"No\"\nassert solution(\"2 3 5\") == \"Yes\"\nassert solution(\"2 4 3\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\n\nassert solution(\"2 1000\\n100\\n50\\n\") == \"2\\n\"\n\nassert solution(\"1 1000\\n100\\n50\\n\") == \"1\\n\"\n\nassert solution(\"2 500\\n100\\n140\\n\") == \"5\\n\"\n\nassert solution(\"2 100\\n100\\n50\\n\") == \"1\\n\"\n\nassert solution(\"2 500\\n100\\n140\\n\") == \"5\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9\\n'\nassert solution('4 3\\n20\\n30\\n50') == '13\\n'\nassert solution('1 1000\\n200\\n300\\n400') == '12\\n'\nassert solution('10 1000000\\n200000\\n300000\\n400000') == '25\\n'\nassert solution('2 1000000\\n1000000\\n500000\\n200000') == '16\\n'",
        "num_ids_2": 59,
        "num_ids_4": 138
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\nassert solution(\"4 1000\\n120\\n100\\n140\\n160\\n\") == \"10\\n\"\nassert solution(\"5 1000\\n120\\n100\\n140\\n160\\n180\\n\") == \"11\\n\"\nassert solution(\"6 1000\\n120\\n100\\n140\\n160\\n180\\n150\\n\") == \"12\\n\"\nassert solution(\"7 1000\\n120\\n100\\n140\\n160\\n180\\n150\\n170\\n\") == \"13\\n\"\nassert solution(\"8 1000\\n120\\n100\\n140\\n160\\n180\\n150\\n170\\n190\\n\") == \"14\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 167
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nassert solution(\"2 3000\\n100\\n150\\n100\\n\") == \"6\"\nassert solution(\"3 6000\\n500\\n1000\\n1000\\n\") == \"12\"",
        "num_ids_2": 64,
        "num_ids_4": 99
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nassert solution(\"5 1000\\n100\\n50\\n150\\n\") == \"6\"\nassert solution(\"3 2000\\n100\\n100\\n500\\n\") == \"15\"\nassert solution(\"1 1000\\n100\\n100\\n1000\\n\") == \"1\"\nassert solution(\"3 1000\\n50\\n50\\n500\\n\") == \"15\"\n",
        "num_ids_2": 63,
        "num_ids_4": 129
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n\") == \"10\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\napple\\nother\\napple\") == \"2\\n\"\nassert solution(stdin=\"3\\napple\\norange\\napple\") == \"2\\n\"\nassert solution(stdin=\"3\\napple\\norange\\ncherry\") == \"0\\n\"\nassert solution(stdin=\"3\\nbananas\\nbananas\\nbananas\") == \"2\\n\"\nassert solution(stdin=\"3\\nsoda\\nsoda\\nsoda\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\napple\\norange\\napple\\n') == '2'\nprint('All tests passed!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\napple\\norange\\napple') == '2', \"Output should be '2', but instead got '{}'.\".format(solution('3\\napple\\norange\\napple'))\n\nprint(\"You got two kinds of items: apple and orange.\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\napple\\noffice\\nbird\\n\") == \"2\\n\"\nassert solution(\"4\\napple\\noffice\\nbird\\n\") == \"3\\n\"\nassert solution(\"5\\napple\\noffice\\nbird\\n\") == \"4\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\napple\\norange\\napple') == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\noctopus\\nberry\\n\") == \"2\\nberry\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\napple\\no\\napple\\n') == '2\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\napple\\noffice\\noffice\\n\") == \"2\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\no\\nnugget\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\\n\") == \"2 2\\n\"\nassert solution(\"5\\n2100 2500 2700 2700 3200\\n\") == \"4 4\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\\n\") == \"2 2\\n\"\nassert solution(\"4\\n2000 2500 2700 2700\\n\") == \"2 2\\n\"\nassert solution(\"4\\n2100 2500 2700 3200\\n\") == \"3 3\\n\"\nassert solution(\"4\\n2100 2500 2700 3000\\n\") == \"3 3\\n\"\nassert solution(\"4\\n2100 2500 2700 3100\\n\") == \"4 4\\n\"\nassert solution(\"4\\n2100 2500 2700 3200\\n\") == \"3 3\\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n2100 2500 2700 2700\\n\") == \"2 2\\n\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2 2'\nprint(solution(stdin))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\", \"The user with rating 2100 is \" \"yellow\", and the others are \" \"orange\". There are two different colors.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2\\n'\nassert solution('4\\n2100 2500 2700 2700 3200') == '2 2\\n'\nassert solution('4\\n1800 1800 1800 1800') == '1 1\\n'\nassert solution('4\\n2200 2200 2200 2200 3200') == '1 1\\n'",
        "num_ids_2": 75,
        "num_ids_4": 150
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"4\\na_1 a_2... a_N\\n\") == \"2 2\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('oxo') == '900'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\", \"Test case 1 failed\"\nassert solution(\"oxx\") == \"700\", \"Test case 2 failed\"\nassert solution(\"xxo\") == \"700\", \"Test case 3 failed\"\nassert solution(\"xxx\") == \"700\", \"Test case 4 failed\"\nassert solution(\"oox\") == \"100\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"H D D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D H D\") == \"D\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\", \"Test failed for input H H\"\nassert solution(\"H H\") == \"H\", \"Test failed for input H H\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\", \"Solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\", \"Incorrect output for example 1\"\nassert solution(\"H H\") == \"H\", \"Incorrect output for example 2\"\nassert solution(\"H H\") == \"H\", \"Incorrect output for example 3\"\nassert solution(\"H H\") == \"H\", \"Incorrect output for example 4\"\nassert solution(\"H H\") == \"H\", \"Incorrect output for example 5\"\nassert solution(\"H H\") == \"H\", \"Incorrect output for example 6\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Solution should be 1+2+2+2=7\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Invalid Input\"\nprint(\"Solution:\")\nprint(solution(\"1222\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Solution not correct\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"3214\") == \"3-2+1+4=10\"\nassert solution(\"1020\") == \"1+0+2+0=2\"\nassert solution(\"1111\") == \"1+1+1+1=1\"\nassert solution(\"2222\") == \"2+2+2+2=4\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The solution is not valid.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Test failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"10\\n1 1 2 2 1 1\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n\") == \"2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 2\\n1 3 4 5') == '2\\n0\\n2\\n2\\n2\\n'\nassert solution('5\\n1 1 2 2\\n1 3 4 5\\n1 5 6 7') == '0\\n0\\n2\\n2\\n2\\n'\nassert solution('5\\n1 1 2 2\\n1 3 4 5\\n1 5 6 7\\n1 7 8 9') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 2\\n1 3 4 5\\n1 5 6 7\\n1 7 8 9\\n1 11 12 13') == '0\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 75,
        "num_ids_4": 186
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 3\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 4\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 5\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 6\\n') == '0\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n2\\n0\\n0\\n0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"11\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\n\nTherefore, the correctness of the solution is verified.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"111\") == \"3\"\nassert solution(\"112\") == \"4\"\nassert solution(\"113\") == \"4\"\nassert solution(\"114\") == \"4\"\nassert solution(\"115\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n') == '3\\n', \"The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n\") == \"3\\n\", \"Test case 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1112\") == \"No\"\nassert solution(\"111\") == \"No\"\nassert solution(\"111111\") == \"No\"\nassert solution(\"999\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1118') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1118) == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1118') == 'Yes', 'Output incorrect'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes', 'The correct output is \"Yes\"'\nassert solution('1234') == 'No', 'The correct output is \"No\"'\nassert solution('1122') == 'No', 'The correct output is \"No\"'\nassert solution('111111') == 'Yes', 'The correct output is \"Yes\"'\nassert solution('123456') == 'No', 'The correct output is \"No\"'",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    2\n    1 5\n    2 4\n    3 6\n    ''') == '3\\n'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '3\\n'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n2\\n4\\n3\\n6\\n\") == \"3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"3\", \"Incorrect output for input_1\"\nassert solution(input_2) == \"3\", \"Incorrect output for input_2\"\nassert solution(input_3) == \"3\", \"Incorrect output for input_3\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"N\\n\")) == \"3\\n\"\nassert solution(input(\"A_1 5\\nB_2 4\\nC_3 6\\n\")) == \"3\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A B') == '>'\nassert solution('C D') == '>'\nassert solution('F G') == '>'\nassert solution('A B') == '<'\nassert solution('C D') == '<'\nassert solution('F G') == '<'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \">\" # correct output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C D\") == \"<\"\nassert solution(\"F A\") == \"=\"\nassert solution(\"G H\") == \"=\"\nassert solution(\"I J\") == \"=\"\nassert solution(\"K L\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \">\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C D\") == \"<\"\nassert solution(\"F G\") == \"=\"\nassert solution(\"H I\") == \">\"\nassert solution(\"J K\") == \"<\"\nassert solution(\"L M\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '<'\nassert solution('C C') == '='\nassert solution('D D') == '='\nassert solution('F F') == '='",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \">\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C C\") == \"<\\n\"\nassert solution(\"D D\") == \"<\\n\"\nassert solution(\"E E\") == \"<\\n\"\nassert solution(\"F F\") == \"<\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"5 5\\n.#.#.\\n.....\\n..##\\n..##\") == \"222222\\n#11#11\\n222222\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 4\\n11#2\\n234#\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"4 5\\n.....\\n..#.#\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n.....\\n.#..#\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"4 6\\n.....\\n..#..\\n11221\\n12345\\n\") == \"11211\\n1#2#1\\n11211\\n1#3#1\\n22331\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 178
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"4 6\\n....\\n....\\n....\\n\") == \"2211\\n2#2#1\\n2211\\n\"\nassert solution(\"6 7\\n.....\\n#....\\n.....\\n\") == \"3311\\n3#2#1\\n3311\\n\"\nassert solution(\"8 9\\n.....\\n.....\\n#....\\n\") == \"4411\\n4#2#1\\n4411\\n\"\nassert solution(\"10 11\\n#....\\n#....\\n.....\\n\") == \"5511\\n5#2#1\\n5511\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 167
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '11211\\n1#2#1\\n11211'\nprint(\"Test passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"H W\\nS_1\\n:S_H\\n\")) == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n....\\n.#.#\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n....\\n..##\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n....\\n..#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n....\\n..#.#\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"5 10\\n.....\\n....#\\n.....\\n\") == \"11111\\n12345\\n11111\\n\"\nassert solution(\"7 8\\n#.#.#\\n..#..#\\n...#.\\n\") == \"1#2#3\\n#4#5#6\\n#7#8#9\\n\"\nassert solution(\"10 10\\n....#\\n.....\\n....#\\n.....\\n....#\\n.....\\n\") == \"111111111\\n122222222\\n133333333\\n144444444\\n155555555\\n166666666\\n177777777\\n188888888\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 259
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#. \\n.....\") == \"11211\\n1#2#1\\n11211\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"4 3 120\\n60 120\\n90\\n120\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 3 1\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"5 1 1\") == \"5\"\nassert solution(\"6 1 1\") == \"6\"\nassert solution(\"7 1 1\") == \"7\"\nassert solution(\"8 1 1\") == \"8\"\nassert solution(\"9 1 1\") == \"9\"\nassert solution(\"10 1 1\") == \"10\"\nassert solution(\"11 1 1\") == \"11\"\nassert solution(\"12 1 1\") == \"12\"\nassert solution(\"13 1 1\") == \"13\"\nassert solution(\"14 1 1\") == \"14\"\nassert solution(\"15 1 1\") == \"15\"\nassert solution(\"16 1 1\") == \"16\"\nassert solution(\"17 1 1\") == \"17\"\nassert solution(\"18 1 1\") == \"18\"\nassert solution(\"19 1 1\") == \"19\"\nassert solution(\"20 1 1\") == \"20\"\nassert solution(\"21 1 1\") == \"21\"\nassert solution(\"22 1 1\") == \"22\"\nassert solution(\"23 1 1\") == \"23\"\nassert solution(\"24 1 1\") == \"24\"\nassert solution(\"25 1 1\") == \"25\"\nassert solution(\"26 1 1\") == \"26\"\nassert solution(\"27 1 1\") == \"27\"\nassert solution(\"28 1 1\") == \"28\"\nassert solution(\"29 1 1\") == \"29\"\nassert solution(\"30 1 1\") == \"30\"\nassert solution(\"31 1 1\") == \"31\"\nassert solution(\"32 1 1\") == \"32\"\nassert solution(\"33 1 1\") == \"33\"\nassert solution(\"34 1 1\") == \"34\"\nassert solution(\"35 1 1\") == \"35\"\nassert solution(\"36 1 1\") == \"36\"\nassert solution(\"37 1 1\") == \"37\"\nassert solution(\"38 1 1\") == \"38\"\nassert solution(\"39 1 1\") == \"39\"\nassert solution(\"40 1 1\") == \"40\"\nassert solution(\"41 1 1\") == \"41\"\nassert solution(\"42 1 1\") == \"42\"\nassert solution(\"43 1 1\") == \"43\"\nassert solution(\"44 1 1\") == \"44\"\nassert solution(\"45 1 1\") == \"45\"\nassert solution(\"46 1 1\") == \"46\"\nassert solution(\"47 1 1\") == \"47\"\nassert solution(\"48 1 1\") == \"48\"\nassert solution(\"49 1 1\") == \"49\"\nassert solution(\"50 1 1\") == \"50\"\nassert solution(\"51 1 1\") == \"51\"\nassert solution(\"52 1 1\") == \"52\"\nassert solution(\"53 1 1\") == \"53\"\nassert solution(\"54 1 1\") == \"54\"\nassert solution(\"55 1 1\") == \"55\"\nassert solution(\"56 1 1\") == \"56\"\nassert solution(\"57 1 1\") == \"57\"\nassert solution(\"58 1 1\") == \"58\"\nassert solution(\"59 1 1\") == \"5",
        "num_ids_2": 75,
        "num_ids_4": 103
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == 3\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == 3\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"  # Pass\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n120 180\") == \"3\\n\"  # Pass\nassert solution(\"5 4 240\\n60 90 120\\n80 150 80 150\\n120 180\\n130 240\") == \"5\\n\"  # Pass\nassert solution(\"5 4 240\\n60 90 120\\n80 150 80 150\\n120 180\\n130 240\\n200 300\") == \"5\\n\"  # Pass",
        "num_ids_2": 103,
        "num_ids_4": 242
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 100 120\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 86,
        "num_ids_4": 128
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3', \"The output is incorrect.\"\nprint(\"Correct\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"2 1 2\\n3 4 5\\n6 7 8\") == \"1\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == 3\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == 3\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == 3\n",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"3000 3000 3000 3 3\") == \"15000\"\nassert solution(\"2000 2000 2000 2 2\") == \"4000\"\nassert solution(\"2500 2500 2500 2 2\") == \"5000\"\nassert solution(\"3000 3000 3000 3 3\") == \"15000\"\nassert solution(\"1000 2000 1000 3 4\") == \"7000\"",
        "num_ids_2": 61,
        "num_ids_4": 121
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 1 2\") == \"0\"\nassert solution(\"1000 1000 1000 1000 1000\") == \"0\"\nassert solution(\"2 1 1 1 1\") == \"0\"\nassert solution(\"1000 1000 1000 1000 2000\") == \"0\"\nassert solution(\"50000 50000 50000 50000 50000\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 99
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2000 1500 1600 3 2\") == \"7900\"\nassert solution(\"1600 1500 2000 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 1\") == \"7900\"\nassert solution(\"1600 1500 2000 3 1\") == \"7900\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\\n\", \"Test Failed\"\nassert solution(\"2000 1500 1600 3 2\") == \"7900\\n\", \"Test Failed\"\nassert solution(\"2500 1000 1600 3 2\") == \"7900\\n\", \"Test Failed\"\nassert solution(\"2000 1000 1600 3 2\") == \"7900\\n\", \"Test Failed\"\n\npass",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1000 5000 2500 3 2\") == \"5200\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4\nprint(\"All tests passed!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"4\", \"Solution should return 4.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 4, \"Incorrect output. Expected: 4, Actual: \" + str(solution(3))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"10\") == \"1000\\n\", \"Test case 2 failed\"\nassert solution(\"100\") == \"5000000000\\n\", \"Test case 3 failed\"\nassert solution(\"1000\") == \"1000000000000000\\n\", \"Test case 4 failed\"\nassert solution(\"1000000000\") == \"500000000000000000000000000\\n\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 42,
        "num_ids_4": 109
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4, \"The output should be 4.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4\", \"Incorrect output\"\nassert solution(\"1\") == \"1\", \"Incorrect output\"\nassert solution(\"5\") == \"0\", \"Incorrect output\"\nassert solution(\"10\") == \"0\", \"Incorrect output\"\nassert solution(\"0\") == \"0\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4\", \"The output should be 4.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '9\\n', \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"9\", \"The largest perfect power that is at most 10 is 9.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n\") == \"9\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9\", \"Sample Input 1 failed\"\nassert solution(\"12\") == \"12\", \"Sample Input 2 failed\"\nassert solution(\"15\") == \"15\", \"Sample Input 3 failed\"\nassert solution(\"17\") == \"17\", \"Sample Input 4 failed\"\nassert solution(\"20\") == \"20\", \"Sample Input 5 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 9",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"9\"\nassert solution(15) == \"10\"\nassert solution(20) == \"11\"\nassert solution(100) == \"11\"\nassert solution(1000) == \"11\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"9\", \"Test case 1 failed\"\nassert solution(1001) == \"9\", \"Test case 2 failed\"\nassert solution(1000) == \"9\", \"Test case 3 failed\"\nassert solution(999) == \"9\", \"Test case 4 failed\"\nassert solution(1) == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n15\\n20\\n25\\n30\") == \"1\"\nassert solution(\"6\\n10\\n15\\n20\\n25\") == \"2\"\nassert solution(\"7\\n12\\n18\\n25\\n30\") == \"2\"\nassert solution(\"8\\n12\\n16\\n20\\n25\") == \"2\"\nassert solution(\"9\\n14\\n20\\n25\\n30\") == \"3\"\nassert solution(\"10\\n18\\n28\\n30\\n35\") == \"4\"",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"4\\n10\\n8\\n12\\n6\\n\") == \"4\"\nassert solution(\"4\\n10\\n8\\n8\\n10\\n\") == \"4\"\nassert solution(\"4\\n10\\n8\\n8\\n10\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n10\\n8\\n8\\n6\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"2\\n6\\n8\\n6\\n4\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n7\\n6\\n5\\n4\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(\"4\\n11\\n9\\n8\\n7\") == \"5\\n\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nprint('All tests passed!')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\", \"Output should be '3\\n'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"2\\n5\\n6\\n7\") == \"2\"\nassert solution(\"2\\n2\\n3\\n4\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\"\nassert solution(\"2\\n1 3 5\\n2 4 6\\n3 7 8\") == \"3\\n\"\nassert solution(\"3\\n8 12 40\") == \"2\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 75
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n8 12 40') == '2'\nassert solution('5\\n8 10 40 20 60') == '2'\nassert solution('4\\n5 10 20') == '2'",
        "num_ids_2": 44,
        "num_ids_4": 63
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string=\"3\\n8 12 40\\n\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{stdin}\\nOutput:\\n{output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"1\\n5\") == \"1\"\nassert solution(\"2\\n6 8\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8 12 40\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"2\\n10 20 30 40 50\\n\") == \"2\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 78
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\", \"Solution does not return the correct answer.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n\", \"Sample output does not match the expected output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1027
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"  # expected output: \"6\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=3) == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1), \"Test 1 Failed\"\nassert solution(2), \"Test 2 Failed\"\nassert solution(3), \"Test 3 Failed\"\nassert solution(4), \"Test 4 Failed\"\nassert solution(5), \"Test 5 Failed\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\", \"Test failed for input 3.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\\n\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\", \"Your code is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\\n\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"2\\n4 6 8\\n\") == \"3\\n\", \"Test Case 2\"\nassert solution(\"2\\n1 2 3\\n\") == \"4\\n\", \"Test Case 3\"\nassert solution(\"2\\n99 98 97\\n\") == \"97\\n\", \"Test Case 4\"\nassert solution(\"2\\n100000 99999\\n\") == \"100000\\n\", \"Test Case 5\"",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"\nassert solution(\"3\\n1 3\\n\") == \"1\"\nassert solution(\"3\\n3 3\\n\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2', \"Expected output: 2 but got: \" + solution(input())\nassert solution(input()) == '1', \"Expected output: 1 but got: \" + solution(input())\nassert solution(input()) == '0', \"Expected output: 0 but got: \" + solution(input())\nassert solution(input()) == '12', \"Expected output: 12 but got: \" + solution(input())",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"\nassert solution(\"2\\n3 5\\n\") == \"7\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\na_1 a_2 a_3... a_N') == '2\\n'\nassert solution('3\\na_1 a_2 a_3... a_N') == '2\\n'\nassert solution('1\\na_1 a_2 a_3... a_N') == '1\\n'\nassert solution('4\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('5\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('6\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('7\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('8\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('9\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('10\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('11\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('12\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('13\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('14\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('15\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('16\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('17\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('18\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('19\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('20\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('21\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('22\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('23\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('24\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('25\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('26\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('27\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('28\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('29\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('30\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('31\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('32\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('33\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('34\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('35\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('36\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('37\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('38\\na_1 a_2 a_3... a_N') == '0\\n'\nassert solution('39\\na_1",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"5\\n5 5\") == \"0\"\nassert solution(\"3\\n2 4\") == \"5\"\nassert solution(\"1\\n3 3\") == \"6\"\nassert solution(\"4\\n2 4 3\") == \"9\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(2) == 0\nassert solution(4) == 6\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\\n\", \"The solution is incorrect.\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n2 WA\\n2 AC\\n1 WA\\n1 AC\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n1 WA\\n1 AC\") == \"2 2\"",
        "num_ids_2": 68,
        "num_ids_4": 106
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n1 WA\") == \"2 2\\n\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n1 AC\") == \"2 2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 112
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n4 1 5\") == 5\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"2 1\\n2 2 3\") == \"3\"\nassert solution(\"1 1\\n1 1 1\") == \"1\"\nassert solution(\"1 1\\n2 2 3\") == \"3\"\nassert solution(\"5 1\\n4 5 6\") == \"5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 4, 1, 5) == \"5\"  # Test case 1\nassert solution(3, 1, 4, 2, 5) == \"5\"  # Test case 2\nassert solution(3, 1, 4, 1, 10) == \"5\"  # Test case 3\nassert solution(3, 2, 4, 1, 5) == \"4\"  # Test case 4\nassert solution(3, 2, 4, 2, 5) == \"4\"  # Test case 5\nprint(\"All test cases passed!\")",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\nassert solution(\"10 20\\n50 60 70\\n90 80 70 60 50\") == \"5\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n4 1 5\") == 5\nassert solution(\"5 5\\n0 5 1 1\") == 4\nassert solution(\"3 2\\n4 2 3 2\") == 5\nassert solution(\"5 4\\n0 4 0 0\") == 5\nassert solution(\"3 3\\n4 3 3 3 2\") == 6\nassert solution(\"5 3\\n0 3 0 0 0\") == 6\nassert solution(\"5 1\\n0 1 0 0 0 0\") == 1",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\"\nassert solution(\"1 5\\n2 3\\n\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n1\\n2\\n') == '4'\nassert solution('1\\n1\\n5\\n') == '10'\nassert solution('1\\n1\\n5\\n2\\n') == '16'",
        "num_ids_2": 37,
        "num_ids_4": 78
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n20\\n1\\n\") == \"4\\n\"\nassert solution(\"1\\n20\\n3\\n\") == \"8\\n\"\nassert solution(\"1\\n10\\n4\\n\") == \"12\\n\"\nassert solution(\"1\\n20\\n2\\n\") == \"12\\n\"\nassert solution(\"1\\n20\\n1\\n\") == \"12\\n\"\nassert solution(\"1\\n10\\n2\\n\") == \"8\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n3 2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n2 1\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n3 2\\n\") == \"4\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n3\\n\") == \"5\"\nassert solution(\"1\\n10\\n2\\n3\\n4\\n5\\n\") == \"4\"",
        "num_ids_2": 29,
        "num_ids_4": 79
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"No input provided.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"2\\n20\\n1\\n1\\n\") == \"16\\n\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n\") == \"16\\n\"\nassert solution(\"1\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n\") == \"8\\n\"\nassert solution(\"1\\n1\\n1\\n2\\n2\\n2\\n2\\n\") == \"16\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 117
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\", \"Sample Output not correct\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('2\\n10\\n0\\n') == '0\\n'\nassert solution('3\\n10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 42,
        "num_ids_4": 1027
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(600) == '520'\nassert solution(300) == '300'\nassert solution(220) == '520'\nassert solution(420) == '520'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"520\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"520\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n4 2 4 0 2\") == \"3\\n\"\nassert solution(\"5\\n1 2 4 0 2\") == \"0\\n\"\nassert solution(\"5\\n2 3 4 0 2\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 0 2\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n2 4 4 0 3\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n2 4 4 0 3\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == 4\nassert solution(\"5\\n2 4 4 0 1\") == 0\nassert solution(\"5\\n2 4 4 0 2\") == 4\nassert solution(\"5\\n2 4 4 0 1\") == 0\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4\\n'\nassert solution('5\\n2 4 4 1 2\\n') == '0\\n'\nassert solution('5\\n2 4 4 0 2\\n') == '4\\n'\nassert solution('5\\n2 4 4 1 2\\n') == '0\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('3\\n3 3 3 3') == '0'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n1 1 2 3 4\") == \"0\"\nassert solution(\"5\\n1 1 2 4 5\") == \"0\"\nassert solution(\"5\\n1 1 1 3 4\") == \"0\"\nassert solution(\"5\\n1 1 2 3 3\") == \"0\"\nassert solution(\"5\\n1 1 2 4 4\") == \"0\"\nassert solution(\"5\\n1 1 1 2 3\") == \"0\"\nassert solution(\"5\\n1 1 1 3 2\") == \"0\"\nassert solution(\"5\\n1 1 1 3 4\") == \"0\"\nassert solution(\"5\\n1 1 2 3 2\") == \"0\"\nassert solution(\"5\\n1 1 1 2 4\") == \"0\"\nassert solution(\"5\\n1 1 2 4 5\") == \"0\"\nassert solution(\"5\\n1 1 1 4 5\") == \"0\"\nassert solution(\"5\\n1 1 1 5 4\") == \"0\"\nassert solution(\"5\\n1 1 2 4 4\") == \"0\"\nassert solution(\"5\\n1 1 1 5 5\") == \"0\"\nassert solution(\"5\\n1 1 2 5 4\") == \"0\"\nassert solution(\"5\\n1 1 1 4 3\") == \"0\"\nassert solution(\"5\\n1 1 1 4 5\") == \"0\"\nassert solution(\"5\\n1 1 2 4 3\") == \"0\"\nassert solution(\"5\\n1 1 1 3 5\") == \"0\"\nassert solution(\"5\\n1 1 1 5 3\") == \"0\"\nassert solution(\"5\\n1 1 1 5 5\") == \"0\"\nassert solution(\"5\\n1 1 2 5 3\") == \"0\"\nassert solution(\"5\\n1 1 1 3 4\") == \"0\"\nassert solution(\"5\\n1 1 2 3 5\") == \"0\"\nassert solution(\"5\\n1 1 2 5 4\") == \"0\"\nassert solution(\"5\\n1 1 1 4 2\") == \"0\"\nassert solution(\"5\\n1 1 2 4 2\") == \"0\"\nassert solution(\"5\\n1 1 1 3 3\") == \"0\"\nassert solution(\"5\\n1 1 2 3 3\") == \"0\"\nassert solution(\"5\\n1 1 2 3 4\") == \"0\"\nassert solution(\"5\\n1 1 1 4 3\") == \"0\"\nassert solution(\"5\\n1 1 2 4 3\") == \"0\"\nassert solution(\"5\\n1 1 1 4 4\") == \"0\"\nassert solution(\"5\\n1 1 2 4 4\") == \"0\"\nassert solution(\"5\\n1 1 1 5 5\") == \"0\"\nassert solution(\"5\\n1 1 2 5 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 2 5') == '84'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Incorrect solution\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"84\", \"Test failed!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 10 10\") == \"1000\"\nassert solution(\"10 1 10\") == \"1000\"\nassert solution(\"100 10 100\") == \"10000\"\nassert solution(\"500 10 500\") == \"50000\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '84\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"100 5 20\") == \"120\"\nassert solution(\"300 10 30\") == \"600\"\nassert solution(\"10 10 10\") == \"400\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 3 2\") == \"0\"\nassert solution(\"1 4 3\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == 'ABC100', \"Your solution should output ABC100.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'ABC100', \"Incorrect solution.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"ABC100\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"ABC100\", \"Test case 1 failed\"\nassert solution(\"101\") == \"ABC101\", \"Test case 2 failed\"\nassert solution(\"102\") == \"ABC102\", \"Test case 3 failed\"\nassert solution(\"103\") == \"ABC103\", \"Test case 4 failed\"\nassert solution(\"104\") == \"ABC104\", \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100') == 'ABC100'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(100) == \"ABC100\"\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(100) == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Invalid input\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == 5, \"Invalid input. Please provide two integers a and b separated by a space.\"\na, b = map(int, stdin.split())\nassert a <= 12 and b <= 31, \"Invalid input. Please provide two integers a and b between 1 and 31 (inclusive).\"\nfor i in range(1, a + 1):\n    for j in range(1, b + 1):\n        date_str = f\"{i}-{j}\"\n        if \"5-5\" in date_str:\n            count += 1\nprint(count)",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"The output should be '5\\n', but it is '{}'\".format(solution(\"5 5\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Please input 5 integers separated by spaces.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\", \"Please enter a valid input (a b)\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\nassert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\nassert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\nassert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\nassert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\nassert solution('3\\na_1\\na_2\\na_3\\n') == '2\\n'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nprint(\"Press Button 1, then Button 3.\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == 2\nassert solution(\"1\\n2\\n3\\n\") == -1\nassert solution(\"3\\n4\\n1\\n2\\n\") == 1\nassert solution(\"3\\n3\\n1\\n1\\n\") == -1\nassert solution(\"3\\n3\\n1\\n1\\n2\\n\") == 2\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == -1\nassert solution(\"1\\n3\\n2\\n\") == 2\nassert solution(\"3\\n1\\n3\\n\") == -1\nassert solution(\"1\\n3\\n2\\n\") == -1\nassert solution(\"3\\n3\\n1\\n2\\n\") == 2\nassert solution(\"3\\n1\\n2\\n\") == 1\nassert solution(\"2\\n1\\n2\\n\") == 1\nassert solution(\"1\\n2\\n2\\n\") == 1\nassert solution(\"1\\n1\\n1\\n\") == 1",
        "num_ids_2": 37,
        "num_ids_4": 71
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2\\n'\nassert solution('3\\n3\\n1\\n2\\n\\n') == '-1\\n'\nassert solution('4\\n1\\n2\\n3\\n') == '-1\\n'\nassert solution('2\\n3\\n4\\n1\\n') == '3\\n'\nassert solution('3\\n4\\n5\\n6\\n7\\n') == '3\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\na_1\\na_2\\na_3\\na_4\\na_5\\n') == 2\nassert solution('3\\na_6\\na_7\\na_8\\na_9\\na_10\\n') == -1",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '-1'\nprint(-1)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3\n1\n2\n\"\"\") == \"2\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output: {}\".format(solution(stdin))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"Expected Output: 1\\n, Actual Output: \" + solution(\"3\\n6\\n2\\n6\")\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"4\\n12\\n10\\n24\\n\") == \"2\\n\"\nassert solution(\"5\\n12\\n36\\n56\\n\") == \"2\\n\"\nassert solution(\"6\\n12\\n36\\n56\\n72\\n\") == \"2\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 105
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n6\\n2\\n6') == '1\\n'\nprint('All tests passed!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\"\nassert solution(\"4\\n3\\n2\\n5\\n4\") == \"2\\n\"\nassert solution(\"3\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"5\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 85
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"3 2\\n1 1 2 2 1\") == \"3\"\nassert solution(\"5 0\\n1 1 2 2 5\") == \"1\"\nassert solution(\"3 0\\n1 1 2 2 1\") == \"3\"\nassert solution(\"5 3\\n1 1 2 2 5\") == \"1\"\nassert solution(\"3 3\\n1 1 2 2 1\") == \"3\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"2\\n\"\nassert solution(\"5 2\\n1 1 2 2 3\") == \"2\\n\"\nassert solution(\"5 2\\n1 1 2 2 2\") == \"3\\n\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"3\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"4 2\\n1 1 2 2 5\") == \"2\\n\"\nassert solution(\"5 1\\n1 1 1\") == \"1\\n\"\nassert solution(\"5 1\\n1 1 2 2 5 2 3\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n\nsolution(\"5 2\\n1 1 2 2 5\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"\nassert solution(\"3\\n1 1 2\\n4 1 1\") == \"No\\n\"\nassert solution(\"5\\n1 1 2\\n5 1 1\") == \"No\\n\"\nassert solution(\"2\\n3 1 2\\n6 1 1\\n10 2 2\\n15 2 1\\n20 2 2\") == \"No\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 128
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n\") == \"No\\n\"\nassert solution(\"2\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"No\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 91
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n6 1 2 3 4 5\\n7 1 2 3 4 5\\n8 1 2 3 4 5\\n9 1 2 3 4 5\\n10 1 2 3 4 5\\n\") == \"No\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\"\nassert solution(stdin=\"2\\n3 1 2\\n6 1 1\\n4 2 3\\n\") == \"No\"\nassert solution(stdin=\"2\\n3 1 2\\n6 1 1\\n4 2 3\\n5 3 4\\n\") == \"No\"\nassert solution(stdin=\"2\\n3 1 2\\n6 1 1\\n4 2 3\\n5 3 4\\n6 4 5\\n\") == \"No\"\nassert solution(stdin=\"2\\n3 1 2\\n6 1 1\\n4 2 3\\n5 3 4\\n6 4 5\\n7 5 6\\n\") == \"Yes\"",
        "num_ids_2": 63,
        "num_ids_4": 154
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\\n\"\n\nassert solution(\"\"\"\n3\n1 1\n2 2\n4 3\n\"\"\") == \"No\\n\"\n\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"Yes\\n\"\n\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"No\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'No\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('1\\n0 1 2\\n1 1 1\\n2 1 0') == 'No'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n1 1 2\\n1 1 1\\n1 1 0\\n1 1 1\") == \"No\"\nassert solution(\"2\\n1 1 2\\n1 1 1\\n1 1 0\\n1 1 1\") == \"No\"",
        "num_ids_2": 62,
        "num_ids_4": 100
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"\nassert solution(\"1\\n3 1 2\\n6 1 1\") == \"No\\n\"\nassert solution(\"4\\n1 1\\n2 1\\n3 1\\n4 1\") == \"No\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 84
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"\nassert solution(\"3\\n1 2\\n4 3 4\") == \"No\\n\"\nassert solution(\"5\\n1 1 2\\n4 2 3\\n1 1 2\\n3 2 1\") == \"Yes\\n\"\nassert solution(\"10\\n1 1 2\\n4 2 3\\n1 1 2\\n3 2 1\\n5 3 4\\n2 2 2\\n1 1 1\\n2 2 2\\n2 2 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"No\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 194
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nprint(\"Test passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"The code is not correct\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test 1 failed\"\nassert solution(\"2 3\") == \"2\", \"Test 2 failed\"\nassert solution(\"10 3\") == \"13\", \"Test 3 failed\"\nassert solution(\"5 5\") == \"5\", \"Test 4 failed\"\nassert solution(\"100 50\") == \"100\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\\n\"\nassert solution(\"5 7\") == \"8\\n\"\nassert solution(\"10 12\") == \"12\\n\"\nassert solution(\"15 17\") == \"18\\n\"\nassert solution(\"20 22\") == \"22\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\", \"The solution should return 2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2' # Correct solution\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\", \"Expected Output: 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\n\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\\n\"\n\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\n\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\\n\\n\\n\") == \"4\\n\"\n\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\n\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n4 5\\n5 6\\n6 7\\n5 6\\n6 7\\n6 7\\n7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 206
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The output is wrong. Expected 7, but got \" + solution(\"5 7 5\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"7\" # Test case 1\nassert solution(\"3 5 6\") == \"3\" # Test case 2\nassert solution(\"2 2 2\") == \"2\" # Test case 3\nassert solution(\"1 1 1\") == \"1\" # Test case 4\nassert solution(\"1 1 3\") == \"3\" # Test case 5",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Test case 1 failed\"\nassert solution(\"3 2 5\") == \"2\", \"Test case 2 failed\"\nassert solution(\"5 5 5\") == \"5\", \"Test case 3 failed\"\nassert solution(\"7 5 5\") == \"1\", \"Test case 4 failed\"\nassert solution(\"4 8 9\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The one that is different from the rest among the given three integers should be 7.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Incorrect output for solution\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The solution should be 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '7', 'The output should be 7'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"5 7 1\") == \"1\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 6\") == \"6\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"110 10\", \"Incorrect output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nprint(\"All test cases passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\", \"Expected output: 110 10, actual output: {}\".format(solution(\"1 2 10 20 15 200\"))",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 10 500\") == \"110 10\"\nassert solution(\"1 2 10 20 10 1000\") == \"100 0\"\nassert solution(\"100A 200B 10C 20D 10E 15F\") == \"110 10\"\nassert solution(\"100A 200B 10C 20D 10E 50F\") == \"110 10\"\nassert solution(\"100A 200B 10C 20D 10E 100F\") == \"100 0\"",
        "num_ids_2": 60,
        "num_ids_4": 129
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"110 10\"\nprint(\"OK\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 100\") == \"0 0\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\", \"Test 1 failed.\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\", \"Test 2 failed.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"3 4 1 2 3 4\") == \"0 0\"\nassert solution(\"10 20 30 40 50 60\") == \"250 0\"\nassert solution(\"10 20 30 40 50\") == \"250 0\"\nassert solution(\"200 200 200 200 200\") == \"200000 0\"\nassert solution(\"2 2 2 2 2 2\") == \"0 0\"\nassert solution(\"1 2 1 2 1 2 1\") == \"0 0\"\nassert solution(\"1 1 1 1 1 1 1\") == \"0 0\"",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"abandon\") == \"abandon\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"world\") == \"wor\"\nassert solution(\"hello world\") == \"hello wor\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abbcdefg\") == \"abcdefg\"\n",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('internationalization') == 'i18n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\\n\"\nassert solution(\"top\") == \"NO\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('pot\\ntop') == 'YES', \"Test case 1 failed\"\n\nassert solution('C_11C_12C_13\\nC_21C_22C_23') == 'NO', \"Test case 2 failed\"\n\nassert solution('C_11C_12C_13\\nC_21C_22C_23\\nC_31C_32C_33') == 'YES', \"Test case 3 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\"\nassert solution(\"pot\\n\") == \"NO\"\nassert solution(\"po\\nto\") == \"YES\"\nassert solution(\"po\\n\") == \"NO\"\nassert solution(\"pot\\ntop\") == \"YES\"\nassert solution(\"pot\\n\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('pot\\ntop') == 'YES\\n', 'Sample Input and Output do not match'\nassert solution('pot\\ntop') == 'YES\\n', 'Sample Input and Output do not match'\nassert solution('pot\\ntop\\n') == 'YES\\n', 'Sample Input and Output do not match'\nassert solution('pot\\ntop\\n') == 'YES\\n', 'Sample Input and Output do not match'\nassert solution('pot\\ntop\\n') == 'YES\\n', 'Sample Input and Output do not match'",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"\nassert solution(\"top\\npot\\n\") == \"NO\"\nassert solution(\"p\\np\\n\") == \"YES\"\nassert solution(\"p\\np\\np\\n\") == \"YES\"\nassert solution(\"p\\n\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcabcabcabcabcabc') == 'ababc'\nassert solution('abcdabcdabcdabcd') == 'abcdabcdabcd'\nassert solution('abcabcabcabcabcabcabc') == 'ababc'",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\\n4\") == \"b\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'b'\nassert solution('aab') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'bc'\nassert solution('abcba') == 'b'\nassert solution('abcabc') == 'abc'\nassert solution('abcdabc') == 'abc'\nassert solution('abcdabcabc') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\\n4\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aba') == 'b'\nassert solution('ac') == 'an'\nassert solution('abcd') == 'cd'\nassert solution('abcdefg') == 'fg'\nassert solution('abcdefg') == 'fg'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abac\") == \"ab\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"acbd\") == \"ac\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == 'b'\n\ns = input()\nK = int(input())\n\nsubstrings = []\nfor i in range(len(s)):\n    substrings.append(s[i:i+1])\n\nsubstrings = list(set(substrings))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba\\n4') == 'b\\n'\nprint('Test passed!')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Expected output: {output_data}, Received: {solution(input_data)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '9', \"The area of the white region within the rectangle after Snuke finished painting is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"4 3 1\\n1 2 3\\n4 2 5\") == \"10\"\nassert solution(\"100 50 10\") == \"1000\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9\\n', 'Expected output: \"9\"\\nActual output: \"{}\"'.format(solution('5 4 2\\n2 1 1\\n3 3 4'))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nprint('All test cases pass')",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 4 2\n2 1 1\n3 3 4\n\"\"\") == \"9\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0'\n\nassert solution('3\\n6 5 1\\n1 10 2') == '12\\n11\\n1'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    6 5 1\n    1 10 1\n    ''') == '''\n    12\n    11\n    0\n    '''\n\nassert solution('''\n    4\n    5 2\n    2 1 2\n    2 1 3\n    1 1 1\n    ''') == '''\n    21\n    22\n    22\n    0\n    '''\n\nassert solution('''\n    4\n    5 2\n    2 1 2\n    2 1 3\n    1 1 1\n    ''') == '''\n    21\n    22\n    22\n    0\n    '''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please check the given constraints and the input format.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n6 5 1\n1 10 1''') == '''12\n11\n0'''\n\nassert solution('''1\n1 100 100''') == '''100'''\n\nassert solution('''5\n1 20 5\n1 30 3\n1 40 2\n1 50 1''') == '''5\n0'''\n\nassert solution('''1\n1 100 100''') == '''100'''\n\nassert solution('''1\n1 100 100''') == '''100'''\n\nassert solution('''3\n6 5 1\n1 10 1''') == '''12\n11\n0'''\n\nassert solution('''1\n1 100 100''') == '''100'''",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nassert solution(\"4\\n2 3\\n1 5\\n\") == \"4\\n1\\n1\\n\"\nassert solution(\"6\\n7 8\\n2 6\\n\") == \"16\\n14\\n0\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n1\\n1\\n\"\nassert solution(\"10\\n10 10\\n1 10\\n\") == \"10\\n10\\n1\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 125
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0'\nassert solution('2\\n10 3\\n1 3\\n2 2') == '0\\n1\\n2'\nassert solution('1\\n10 1\\n1 1') == '1\\n2\\n3'\nassert solution('4\\n10 1\\n1 1') == '2\\n3\\n4'\nassert solution('5\\n10 1\\n1 1') == '3\\n4\\n5'",
        "num_ids_2": 65,
        "num_ids_4": 119
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"3 3\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"4 4\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"5 5\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"6 6\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"7 7\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '*.\\n*.\\n.*\\n*.\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n.**\\n.**\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 3\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"3 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"4 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"5 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n*.**\\n*.**\\n*.**\\n\".replace(\" \", \"\") == \"**.\\n**.\\n*.**\\n*.**\\n*.**\\n\".replace(\" \", \"\")\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n*.**\\n*.**\\n*.**\\n*.**\\n\".replace(\" \", \"\") == \"**.\\n*.**\\n*.**\\n*.**\\n*.**\\n\".replace(\" \", \"\")",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n*.\\n\"\nassert solution(\"1 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n*.\\n\"\nassert solution(\"2 1\\n*.\\n.*\\n\") == \".*\\n*.\\n*.\\n*.\\n\"\nassert solution(\"1 1\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"1 1\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n.*\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"***\\n*.*\\n*.*\\n*.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n1 1\\n\") == \"***\\n*.*\\n*.*\\n*.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n1 1\\n1 1\\n\") == \"***\\n*.*\\n*.*\\n*.*\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 117
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n*.*\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n*.*\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n*.*\\n*.*\\n\") == \"**.\\n**.\\n**.\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n.*\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\\n\"\nassert solution(\"5\\n3 4 5 6 7\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"NO\\n\"\nassert solution(\"5\\n2 1 3 5 4\\n\") == \"YES\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES', \"Expected output 'YES', but got '{}'.\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"4\\n2 4 2 4 2\") == \"YES\"\nassert solution(\"6\\n2 6 1 4 5\") == \"NO\"\nassert solution(\"8\\n2 6 1 4 5\\n3 2 1 4 5\") == \"YES\"\nassert solution(\"10\\n2 6 1 4 5\\n3 2 1 4 5\\n4 1 1 4 5\\n5 1 1 4 5\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 95
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\\n\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'5\\n2 6 1 4 5') == 'YES'\nprint('All tests passed.')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES\\n'\nprint('All test cases passed')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\", \"Solution should return 'YES' when the sequence of integers is pairwise distinct\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"1001\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"1001\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 204,
        "num_ids_4": 402
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 204,
        "num_ids_4": 408
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output for the first test case\"\nassert solution(input()) == \"3\", \"Incorrect output for the second test case\"\nassert solution(input()) == \"4\", \"Incorrect output for the third test case\"\nassert solution(input()) == \"1\", \"Incorrect output for the fourth test case\"\nassert solution(input()) == \"2\", \"Incorrect output for the fifth test case\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 1 failed\"\nassert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 2 failed\"\nassert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 3 failed\"\nassert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 4 failed\"\nassert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 5 failed\"\n\nsolution = \"\"\"\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"8\") == \"2\\n3\\n4\\n1\"\nassert solution(\"10\") == \"1\\n2\\n1\"\nassert solution(\"3\") == \"1\\n2\"",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Your code is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\\n\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\\n\"\nassert solution(\"5\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1\\n1\\n1\\n1\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\" # Correct",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"The correct output should be 3, but it is {}\".format(solution())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77' # Correct",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(stdin)}'\"\n\nimport math",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"aabc\"\n\nassert solution(\"codeforces\") == \"aabc\"\n\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"abc\"\n\nfor t in range(int(input())):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    combo = [s[p[i-1]:p[i]].upper() for i in range(1, m+1)]\n    total = 0\n    for button in combo:\n        count = combo.count(button)\n        total += count\n    print(total)",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 2]) == \"4 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 4]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 3]) == \"4 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 2]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 1]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 4]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 1, 2, 4]) == \"4 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 2, 2, 1]) == \"4 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 2, 2, 4]) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 2, 2, 1, 3, 4]) == \"4 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\\n    \"Your solution is incorrect.\"\n\nassert solution(\"abca\", 2, [1, 3, 3, 2, 1, 4]) == \"4 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \\",
        "num_ids_2": 131,
        "num_ids_4": 269
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \"The output is incorrect.\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 122,
        "num_ids_4": 185
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"26\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'''",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 ",
        "num_ids_2": 122,
        "num_ids_4": 246
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n\nassert solution(\"1\\n1 1 2\") == \"1\"\n\nassert solution(\"1\\n2 3 4\") == \"0\"\n\nassert solution(\"1\\n1000000000 1000000000\") == \"0\"\n\nassert solution(\"1\\n1 1000000000 1000000000\") == \"1\"\n\nassert solution(\"1\\n3 2 5\\n3 2 6\") == \"0\"",
        "num_ids_2": 161,
        "num_ids_4": 211
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution() == '36'\nassert solution() == '0'\nassert solution() == '0'\nassert solution() == '1999999994'\nassert solution() == '1999999994'\nassert solution() == '2'\nassert solution() == '4'",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == 0\nassert solution(\"1\\n1 1\\n1 2\\n1 3\\n1 4\") == 0\nassert solution(\"3\\n3 2\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"1\\n1 1\\n1 1\") == 0\nassert solution(\"3\\n3 2\\n3 2\\n3 3\\n3 4\\n2\\n2 2\\n2 2\\n2 2\\n2 2\") == 0\n\nfrom typing import List",
        "num_ids_2": 118,
        "num_ids_4": 166
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"36\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1999999994\"\nassert solution(input()) == \"1999999994\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test Case {t+1} failed: {output}!= {result}\" for t, (input, output, result) in enumerate(input_data)\nprint(\"All test cases passed\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Answer', 'Please implement the solution for the given problem'\nprint(\"Answer\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} does not match expected output {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 4]) == 0\nassert solution([10, 20, 30]) == 0\nassert solution([5, 5, 5]) == 0\nassert solution([2, 4, 3]) == 0\nassert solution([1, 1000000000, 1000000000]) == 0\nassert solution([1, 1000000000, 999999999]) == 0\nassert solution([3, 2, 5]) == 0\nassert solution([3, 2, 6]) == 0",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\"",
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 2, 11, 14, 16, 12]) == \"YES\"\nassert solution([2, 1, 8, 4, 1, 1, 1, 4, 1, 2, 5, 6, 2, 12, 13, 6, 1, 6, 3, 10, 5, 8, 6, 1, 12, 3, 10, 5, 8]) == \"YES\"\nassert solution([1, 6, 3, 10, 5, 8]) == \"NO\"",
        "num_ids_2": 128,
        "num_ids_4": 154
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Actual: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 22, \"Expected 22, got {}\".format(solution())  # Expected output: 22",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\n\nassert solution(\"\"\"5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '22\\n', 'Test failed'\nprint(\"Test passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == 22\n\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == 13",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22\\n'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13\\n'\n",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"22\", \"Output doesn't match\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 5, 2) == \"22\"\nassert solution(5, 5, 4) == \"13\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '22\\n'\nassert solution(open('input_example.txt', 'r')) == '13\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"The expected output is '{expected_output}', but the actual output is '{solution}'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example.in', 'r')) == \"22\\n\"\nassert solution(open('example.in', 'r')) == \"13\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"13\") == \"7\"\nassert solution(\"14\") == \"14\"\nassert solution(\"3620\") == \"22\"\nassert solution(\"10000\") == \"30\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please check the expected output and submit again.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5)) == \"1\"\nassert solution(str(10)) == \"3\"\nassert solution(str(15)) == \"9\"\nassert solution(str(20)) == \"13\"\nassert solution(str(30)) == \"27\"\nassert solution(str(35)) == \"6561\"\nassert solution(str(40)) == \"19683\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\"7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output\\n1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n', \"Incorrect output\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '1\\n'\nassert solution('2') == '2\\n'\nassert solution('6') == '6\\n'\nassert solution('13') == '13\\n'\nassert solution('14') == '14\\n'\nassert solution('3620') == '3620\\n'\nassert solution('10000') == '10000\\n'\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"2\\n4\\n16\\n64\\n128\\n512\\n1024\\n\") == \"2\\n4\\n16\\n64\\n128\\n512\\n1024\\n\"\nassert solution(\"3\\n12\\n24\\n48\\n96\\n192\\n384\\n768\\n1536\\n\") == \"3\\n12\\n24\\n48\\n96\\n192\\n384\\n768\\n1536\\n\"\nassert solution(\"4\\n16\\n64\\n128\\n512\\n1024\\n1536\\n3072\\n6144\\n12288\\n\") == \"4\\n16\\n64\\n128\\n512\\n1024\\n1536\\n3072\\n6144\\n12288\\n\"\nassert solution(\"5\\n12\\n24\\n48\\n96\\n192\\n384\\n768\\n1536\\n3072\\n6144\\n12288\\n51200\\n\") == \"5\\n12\\n24\\n48\\n96\\n192\\n384\\n768\\n1536\\n3072\\n6144\\n12288\\n51200\\n\"\nassert solution(\"6\\n19\\n38\\n76\\n152\\n304\\n608\\n1216\\n2432\\n4864\\n9728\\n\") == \"6\\n19\\n38\\n76\\n152\\n304\\n608\\n1216\\n2432\\n4864\\n9728\\n\"",
        "num_ids_2": 134,
        "num_ids_4": 334
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test {test_num} failed. Expected output: {output}, but got: {solution(stdin)}\"\nfor test_num in range(1, 6):\n    output = solution(f\"Test {test_num}\")\n    assert test_num in [1, 3, 5], f\"Test {test_num} failed. Expected output: {test_num} in {test_set}, but got: {output}\"\nprint(\"All test cases passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_code) == expected_output, f\"Solution {solution_code} does not produce the expected output.\\nExpected output: {expected_output}\\nOutput: {solution_code}\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\nprint(\"Success\") if test_cases == 0 else print(\"Failed\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())} should be {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6\\n1 5\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"Expected: {expected_output}, Got: {solution()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3 \\n'\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'\nassert solution('') == ''\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == ''",
        "num_ids_2": 69,
        "num_ids_4": 103
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3\\n'\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n8\n-1 2 6 4 0 3 \n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '''\n8\n-1 2 6 4 0 3\n'''\n\nassert solution('''\n3 5\n0 3 1\n''') == '''\n7\n5 -2 4 -1 2\n'''\n\nassert solution('''\n2 5\n1 2\n''') == '''\n-1\n0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8\\n-1 2 6 4 0 3 '\nassert solution('''\n3 5\n0 3 1\n''') == '7\\n5 -2 4 -1 2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3 \\n'\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3 '\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n\nassert solution('3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n1",
        "num_ids_2": 158,
        "num_ids_4": 1025
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n\nimport heapq\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nRUUURRRRUU\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\nRRRRUUU\"",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"NO\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"YES\"",
        "num_ids_2": 101,
        "num_ids_4": 123
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\"\n\nimport heapq",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(2**18)) == '0'\nassert solution(str(2**18 + 1)) == '1'\nassert solution(str(2**18 + 2)) == '1'\nassert solution(str(2**18 + 3)) == '1'\nassert solution(str(2**18 + 4)) == '2'\nassert solution(str(2**18 + 5)) == '2'\nassert solution(str(2**18 + 6)) == '2'\nassert solution(str(2**18 + 7)) == '3'\nassert solution(str(2**18 + 8)) == '3'\nassert solution(str(2**18 + 9)) == '4'\nassert solution(str(2**18 + 10)) == '4'\nassert solution(str(2**18 + 11)) == '4'\nassert solution(str(2**18 + 12)) == '5'\nassert solution(str(2**18 + 13)) == '5'\nassert solution(str(2**18 + 14)) == '5'\nassert solution(str(2**18 + 15)) == '5'\nassert solution(str(2**18 + 16)) == '6'\nassert solution(str(2**18 + 17)) == '6'\nassert solution(str(2**18 + 18)) == '6'\nassert solution(str(2**18 + 19)) == '6'\nassert solution(str(2**18 + 20)) == '7'\nassert solution(str(2**18 + 21)) == '7'\nassert solution(str(2**18 + 22)) == '7'\nassert solution(str(2**18 + 23)) == '7'\nassert solution(str(2**18 + 24)) == '7'\nassert solution(str(2**18 + 25)) == '8'\nassert solution(str(2**18 + 26)) == '8'\nassert solution(str(2**18 + 27)) == '8'\nassert solution(str(2**18 + 28)) == '8'\nassert solution(str(2**18 + 29)) == '8'\nassert solution(str(2**18 + 30)) == '9'\nassert solution(str(2**18 + 31)) == '9'\nassert solution(str(2**18 + 32)) == '9'\nassert solution(str(2**18 + 33)) == '9'\nassert solution(str(2**18 + 34)) == '9'\nassert solution(str(2**18 + 35)) == '9'\nassert solution(str(2**18 + 36)) == '10'\nassert solution(str(2**18 + 37)) == '10'\nassert solution(str(2**18 + 38)) == '10'\nassert solution(str(2**18 + 39)) == '10'\nassert solution(str(2**18 + 40)) == '10'\nassert solution(str(2**18 + 41)) == '10'\nassert solution(str(2**18 + 42)) == '11'\nassert solution(str(2**18 + 43)) == '11'\nassert solution(str(2**18 + 44)) == '11'\nassert solution(str(2**18 + 45)) == '11'\nassert solution(str(2**18 + 46)) == '11'\nassert solution(str(2**18 + 47)) == '11'\nassert solution(str(2**18 + 48)) == '12'\nassert solution(str(2**18 + 49)) == '12'\nassert solution(str(2**18 + 50)) == '12'\nassert solution(str(2**18 + 51)) == '12'\nassert solution(str(2**18 + 52)) == '12'\nassert solution(str(2**18 + 53)) ==",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {tc} failed: Expected output: {expected_output}, Received output: {solution(stdin)}\" for tc, (n, s) in enumerate(input_data) for expected_output in [0, 8]\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\\n\", \"Incorrect output\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\"\nassert solution(1) == \"0\"\nassert solution(10) == \"8\"\nassert solution(100000000000000001) == \"8\"\nassert solution(1000000000000000002) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 58
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\n\nfor _ in range(t):\n    n, s = map(int, input().split())\n    moves = 0\n    while n % 10 > s:\n        n = n + 1\n        moves += 1\n    if n % 10 <= s:\n        moves += 1\n    print(moves)",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(f\"{output}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n0\\n2\\n4\\n1\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n4\\n1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(['2', '5']) == '2\\n'\nassert solution(['3', '4', '1']) == '2\\n'\nassert solution(['4', '2', '1']) == '2\\n'\nassert solution(['5', '1', '1']) == '0\\n'\nassert solution(['5', '1', '0', '0', '1']) == '2\\n'\nassert solution(['5', '1', '1', '1', '0']) == '2\\n'\nassert solution(['5', '1', '1', '1', '1']) == '2\\n'",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"2\\n\"\nassert solution(7) == \"2\\n\"\nassert solution(3) == \"0\\n\"\nassert solution(5) == \"2\\n\"\nassert solution(1, 1, 0, 1, 0, 1) == \"2\\n\"\nassert solution(1, 1, 0, 1, 0, 1) == \"0\\n\"\nassert solution(1, 1, 0, 1, 0, 1) == \"2\\n\"\nassert solution(1, 1, 0, 1, 0, 1) == \"4\\n\"\nassert solution(1, 1, 0, 1, 0, 1) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2\\n0\\n2\\n4\\n1'\nassert solution('5\\n7\\n1 1 1 0 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '0\\n2\\n4\\n1'",
        "num_ids_2": 183,
        "num_ids_4": 183
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"cbcacab\"\nassert solution(stdin) == \"abcd\"\nassert solution(stdin) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"cbcacab\\nabcd\\nbaabab\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['cbcacab', 'abcd', 'baabab']",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2') == 'cbcacab'\nassert solution('1\\n3 3\\n4 4\\n5 5\\n6 6') == 'cbabcabb'\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    n, k = map(int, stdin.strip().split())\n    s = ''\n    for i in range(k):\n        if i == 0:\n            s += 'a'\n        else:\n            s += chr(ord('a') + i - 1)\n    return ''.join(s)",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=stdin) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n4 4\\n6 2\\n\") == \"cbcacab\\nabcd\\nbaabab\"\nassert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\\nabcd\\nbaabab\"\nassert solution(\"1 3\\n5 4\\n6 2\\n\") == \"aabbcda\\nacbdaab\\nabaabcda\"\nassert solution(\"3\\n5 4\\n7 2\\n\") == \"aabbcda\\nacbdaab\\nabaabcda\"\nassert solution(\"1 2\\n2 2\\n3 2\\n\") == \"abcabc\\nabcabc\\nabcabc\"\n",
        "num_ids_2": 69,
        "num_ids_4": 139
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2\\n') == 'cbcacab'\nassert solution('3\\n7 3\\n4 4\\n6 2\\n') == 'abcd'\nassert solution('3\\n7 3\\n4 4\\n6 2\\n') == 'baabab'",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"cbcacab\"\nassert solution(stdin) == \"abcd\"\nassert solution(stdin) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == [\"cbcacab\", \"abcd\", \"baabab\"]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 188,
        "num_ids_4": 188
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\\n6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\", \"The solution is incorrect.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'\nassert solution('2\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'\nassert solution('2\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'",
        "num_ids_2": 288,
        "num_ids_4": 432
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} should output {output}, but got {solution(input())}.\"\n\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    max_sum = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            swap(a, b, i, j)\n            curr_sum = sum(a) - sum(b)\n            if curr_sum > max_sum:\n                max_sum = curr_sum\n            swap(a, b, i, j)\n    print(max_sum)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n27\\n39\\n11\\n17\\n\", \"The solution is not correct.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\"\nassert solution(\"10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"17\"",
        "num_ids_2": 193,
        "num_ids_4": 193
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"27\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"39\"\nassert solution(\"10\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"11\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"17\"",
        "num_ids_2": 257,
        "num_ids_4": 458
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\n\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == ['0', '7', '13', '18', '24', '35', '36', '37', '40', '45']",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin=input())}'\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"0 7 13 18 24 35 36 37 40 45 \"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\n\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution() == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}\\nGot: {solution(solution_input)}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt')) == \"aaabb\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"aaabb\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"aabab\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"baaba\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"bbaaa\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"abb\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"bab\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"aaaaabaaaaabaaaaaaaa\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'aaabb'\nassert solution(input()) == 'aabab'\nassert solution(input()) == 'baaba'\nassert solution(input()) == 'bbaaa'\nassert solution(input()) == 'abb'\nassert solution(input()) == 'bab'\nassert solution(input()) == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"aaabb\", \"The expected output is aaabb but got {}\".format(solution(input()))\nprint(\"All test cases passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"aaabb\\nbaba\\nabab\\naaaba\\naaaaabaaaaabaaaaaaaa\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"3 1\\n3 2\\n\") == \"abb\\n\"\nassert solution(\"20 100\") == \"aaaaabaaaaabaaaaaaaa\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 91
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"aaabb\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"aaabb\\nbaaa\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n') == '6\\n1\\n5\\n10'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n') == '6\\n1\\n5\\n10'",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"1\\n1\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"5\\n5\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"10\\n10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 367,
        "num_ids_4": 729
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"1\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"1\\n5\\n10\"",
        "num_ids_2": 371,
        "num_ids_4": 371
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint('Passed')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\n",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"6\\n1\\n5\\n10\") == \"6\\n1\\n5\\n10\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"6\\n1\\n5\\n10\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 217,
        "num_ids_4": 434
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed.\" for i, (input_data, output_data) in enumerate([\n    ('1 2\\n3 4\\n5 6\\n7 8', '6\\n1\\n5\\n10'),\n    ('1 2\\n3 4\\n5 6\\n7 8', '6\\n1\\n5\\n10'),\n    ('1 2\\n3 4\\n5 6\\n7 8', '6\\n1\\n5\\n10'),\n    ('1 2\\n3 4\\n5 6\\n7 8', '6\\n1\\n5\\n10'),\n    ('1 2\\n3 4\\n5 6\\n7 8', '6\\n1\\n5\\n10'),\n])",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 186
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1\n2\n3\n3\n4\n4\n7\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'",
        "num_ids_2": 87,
        "num_ids_4": 174
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"4 4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 308
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(input()) == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nassert solution(input()) == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7 3\n0\n1\n2\n2\n0\n0\n10\"\"\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"\"\"4 3\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"\"\"7\n0\n1\n2\n3\n4\n5\n6\n7\"\"\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 19
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2') == '0\\n0\\n0\\n0\\n'\nassert solution('0\\n0\\n0\\n0\\n') == '0\\n0\\n0\\n0\\n'",
        "num_ids_2": 89,
        "num_ids_4": 121
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str=f\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(input_str=f\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(input_str=f\"\"\"\n4 2\n1\n2\n1\n3\n\"\"\") == \"0\\n0\\n0\\n1\\n\"\n\nassert solution(input_str=f\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(input_str=f\"\"\"\n6 2\n2\n4\n3\n5\n6\n\"\"\") == \"2\\n1\\n1\\n1\\n1\\n\"\n\nassert solution(input_str=f\"\"\"\n6 3\n2\n4\n3\n5\n6\n\"\"\") == \"2\\n1\\n1\\n1\\n1\\n\"\n\nassert solution(input_str=f\"\"\"\n10 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 7\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 151
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n49\\n5\\n20\\n50\\n6\\n20\\n50\\n5\\n3\\n8\\n9\\n13\\n22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\", \"Test case 1\"\n\nassert solution(\"5\\n20\\n50\\n6\\n20\\n50\\n5\\n3\\n8\\n9\\n13\\n22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\", \"Test case 2\"\n\nassert solution(\"6\\n20\\n50\\n5\\n3\\n8\\n9\\n13\\n22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\", \"Test case 3\"\n\nassert solution(\"5\\n3\\n8\\n9\\n13\\n22\") == \"1 10 13 4 19 22 25 16 7\\n\", \"Test case 4\"\n\nassert solution(\"9\\n13\\n22\") == \"1 10 13 4 19 22 25 16 7\\n\", \"Test case 5\"",
        "num_ids_2": 278,
        "num_ids_4": 458
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1 49\\n1 49\\n1 49\"\nassert solution(5) == \"1 49\\n1 49\\n1 49\\n1 49\\n1 49\"\nassert solution(6) == \"1 49\\n1 49\\n1 49\\n1 49\\n1 49\"\nassert solution(7) == \"1 49\\n1 49\\n1 49\\n1 49\\n1 49\"\nassert solution(8) == \"1 49\\n1 49\\n1 49\\n1 49\\n1 49\"",
        "num_ids_2": 62,
        "num_ids_4": 136
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n1 \n2 49\n20 40 30 50 10\n26 32 20 38 44 50 8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7', \"The solution is incorrect.\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\\n1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\"\nprint(solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\"))",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\", \"The output should be: 1 2 3\"\n\nfrom bisect import bisect_left",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 2 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\", \"Test case 1\"\nassert solution(\"3 2 5 6\") == \"1 2 3 5 6\", \"Test case 2\"\nassert solution(\"2 1 3 4\") == \"1 2 3 4\", \"Test case 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\", \"Test case 4\"\nassert solution(\"5 3 1 2\") == \"1 2 3 5\", \"Test case 5\"\n\nprint(\"All test cases pass!\")",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '1 2 3', \"The solution should return '1 2 3' but instead returned '{}'.\".format(solution('3 3 1 2'))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('5 2 7 4 1') == '1 2 4 7 5'\nassert solution('6 2 8 9 1') == '1 2 8 9 6'\nassert solution('5 1 9 3 2') == '1 2 3 9 5'\nassert solution('5 9 7 5 8') == '1 2 5 7 8'",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 2 3'\nassert solution() == '3 2 1'\nassert solution() == '3 1 2'\nassert solution() == '1 3 2'\nassert solution() == '2 3 1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'YES\\nNO\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\nprint(\"OK\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    5\n    2\n    2 3\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n    '''\n) == 'YES'\n\nassert solution(\n    '''\n    5\n    2\n    2 3\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n    '''\n) == 'NO'\n\nassert solution(\n    '''\n    10\n    1\n    1 2 3 4 5 6 7 8 9 10\n    2\n    2 2 2 2 2 2\n    3\n    3 3 3 3 3 3\n    4\n    4 4 4 4 4 4\n    5\n    5 5 5 5 5 5\n    6\n    6 6 6 6 6 6\n    7\n    7 7 7 7 7 7\n    8\n    8 8 8 8 8 8\n    9\n    9 9 9 9 9 9\n    10\n    10 10 10 10 10 10\n    '''\n) == 'YES'\n\nassert solution(\n    '''\n    10\n    1\n    1 2 3 4 5 6 7 8 9 10\n    2\n    2 2 2 2 2 2\n    3\n    3 3 3 3 3 3\n    4\n    4 4 4 4 4 4\n    5\n    5 5 5 5 5 5\n    6\n    6 6 6 6 6 6\n    7\n    7 7 7 7 7 7\n    8\n    8 8 8 8 8 8\n    9\n    9 9 9 9 9 9\n    10\n    10 10 10 10 10 10\n    '''\n) == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {t+1} failed: Expected output {output}, but got {solution(input())}\"\nfor t in range(1, t+1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    output = \"YES\" if sum(a) % 2!= 0 else \"NO\"\n    print(f\"Test {t}:\", output)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\\n4\\n5\") == \"YES\\nNO\\nYES\\nNO\\nNO\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([2, 3, 4]) == \"YES\"\nassert solution([2, 2, 8, 8]) == \"YES\"\nassert solution([3, 3, 3]) == \"YES\"\nassert solution([4, 5, 5, 5]) == \"YES\"\nassert solution([1, 1, 1, 1]) == \"NO\"\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"5\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"NO\"\nassert solution(\"10\\n3 3 3 3 3\\n1 2 3 4 5\\n3 4 5 6 7\\n5 6 7 8 9\\n8 9 10 11 12\") == \"YES\"\nassert solution(\"5\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5\") == \"NO\"\n",
        "num_ids_2": 122,
        "num_ids_4": 256
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"NO\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12\"\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '-1\\n'\nassert solution(stdin) == '9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12'\nassert solution(stdin) == '9 6 10 8 4 7 3 1 5 2 \\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12'\nassert solution(stdin) == '9 6 10 8 4 7 3 1 5 2 \\n-1\\n5 3 6 2 4 1 \\n13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 113,
        "num_ids_4": 287
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n123 123\\n124 124\\n125 125\\n126 126\\n127 127\\n128 128\\n129 129\\n130 130\\n131 131\\n132 132\\n133 133\\n134 134\\n135 135\\n136 136\\n137 137\\n138 13",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '3 1 4 2 5'\nassert solution(4) == '1 3 5 2 4'\nassert solution(5) == '1 2 4 3 5'\nassert solution(6) == '1 2 3 4 5'\nassert solution(7) == '1 2 3 4 5'\nassert solution(8) == '1 2 3 4 5'\nassert solution(9) == '1 2 3 4 5'\nassert solution(10) == '1 2 3 4 5'\nassert solution(11) == '1 2 3 4 5'\nassert solution(12) == '1 2 3 4 5'\nassert solution(13) == '1 2 3 4 5'\nassert solution(14) == '1 2 3 4 5'\nassert solution(15) == '1 2 3 4 5'\nassert solution(16) == '1 2 3 4 5'\nassert solution(17) == '1 2 3 4 5'\nassert solution(18) == '1 2 3 4 5'\nassert solution(19) == '1 2 3 4 5'\nassert solution(20) == '1 2 3 4 5'\nassert solution(21) == '1 2 3 4 5'\nassert solution(22) == '1 2 3 4 5'\nassert solution(23) == '1 2 3 4 5'\nassert solution(24) == '1 2 3 4 5'\nassert solution(25) == '1 2 3 4 5'\nassert solution(26) == '1 2 3 4 5'\nassert solution(27) == '1 2 3 4 5'\nassert solution(28) == '1 2 3 4 5'\nassert solution(29) == '1 2 3 4 5'\nassert solution(30) == '1 2 3 4 5'\nassert solution(31) == '1 2 3 4 5'\nassert solution(32) == '1 2 3 4 5'\nassert solution(33) == '1 2 3 4 5'\nassert solution(34) == '1 2 3 4 5'\nassert solution(35) == '1 2 3 4 5'\nassert solution(36) == '1 2 3 4 5'\nassert solution(37) == '1 2 3 4 5'\nassert solution(38) == '1 2 3 4 5'\nassert solution(39) == '1 2 3 4 5'\nassert solution(40) == '1 2 3 4 5'\nassert solution(41) == '1 2 3 4 5'\nassert solution(42) == '1 2 3 4 5'\nassert solution(43) == '1 2 3 4 5'\nassert solution(44) == '1 2 3 4 5'\nassert solution(45) == '1 2 3 4 5'\nassert solution(46) == '1 2 3 4 5'\nassert solution(47) == '1 2 3 4 5'\nassert solution(48) == '1 2 3 4 5'\nassert solution(49) == '1 2 3 4 5'\nassert solution(50) == '1 2 3 4 5'\nassert solution(51) == '1 2 3 4 5'\nassert solution(52) == '1 2 3 4 5'\nassert solution(53) == '1 2 3 4 5'\nassert solution(54) == '1 2 3 4 5'\nassert solution(55) == '1 2 3 4 5'\nassert solution(56) == '1 2 3 4 5'\nassert solution(57) ==",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1 # solution does not exist",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"1\\n11\\n2\\n3\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"-1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"-1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n",
        "num_ids_2": 123,
        "num_ids_4": 231
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"1 6 2 5 4 8 9\"\nassert solution(\"100\") == \"1 6 5 3 9 7 8 4 2 10 11\"\nassert solution(\"1000\") == \"-1\"",
        "num_ids_2": 57,
        "num_ids_4": 70
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"The output does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\\nInput: {stdin}\\nOutput: {output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Solution does not match expected solution: got {solution}, expected {expected_solution}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Incorrect output\"\nassert solution() == 1, \"Incorrect output\"\nassert solution() == -1, \"Incorrect output\"\nassert solution() == 0, \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n1\\n-1\\n0\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2\nassert solution(3) == 1\nassert solution(1) == -1\nassert solution(3) == 1\nassert solution(3) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"The solution is not correct.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n1\\n-1\\n0\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"2\\n1\\n-1\\n0\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"1\\n-1\\n0\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"1\\n-1\\n0\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"2\\n1\\n-1\\n0\", \"Test case 5 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Error: solution(stdin) == {solution(stdin)}, but expected {expected}\"\nfor stdin in test_cases:\n    expected = min_moves\n    if solution(stdin)!= expected:\n        print(f\"Error: solution({stdin}) == {solution(stdin)}, but expected {expected}\")\n    else:\n        print(f\"Test case passed\")\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nprint(\"All test cases passed\")",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\"\nprint(\"Test Passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2 \\n\", \"Test 1 failed\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1 \\n\", \"Test 2 failed\"",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == solution(solution) # check for correctness",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor i, (input, output) in enumerate(zip(stdin.splitlines(), stdout.splitlines())):\n    assert solution(input) == output, f\"Case {i + 1}: {input}!= {output}\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2 \\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\\n\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\\n\"\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 2 1 1 0 2\"\n\nassert solution(r\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\"\"\") == \"0 -1 1 -1 \"\n\nassert solution(r\"\"\"\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 2 1 1 0 2\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\\n\"\nassert solution() == \"0 -1 1 -1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n2\\n3\\n1\\n4\\n5\\n6\\n7\") == \"-1\"\nassert solution(\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"0\"",
        "num_ids_2": 105,
        "num_ids_4": 136
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nprint(\"All test cases pass\")",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == '0'\nassert solution(0) == '0'\n\nn = int(stdin.readline())\n\nmoves = 0\nwhile n > 1:\n    if n % 6 == 0:\n        n //= 6\n        moves += 2\n    else:\n        n *= 2\n    moves += 1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'\nassert solution('5\\n2\\n4\\n8\\n16\\n32\\n64\\n') == '-1\\n'\nassert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'\nassert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'\nassert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'\nassert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'",
        "num_ids_2": 111,
        "num_ids_4": 263
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"10\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"1\\n0\\n1\"\nassert solution(\"8\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"-1\\n1\\n-1\"\nassert solution(\"6\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"2\\n1\\n-1\"\nassert solution(\"16\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"-1\\n-1\\n-1\"\nassert solution(\"15116544\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 129,
        "num_ids_4": 242
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'The solution is correct!'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('RBRGR') == '0'\nassert solution('BBBRR') == '3'\nassert solution('GBRG') == '1'\nassert solution('GRGRG') == '0'\nassert solution('RBRGR') == '0'\nassert solution('GBRG') == '1'\nassert solution('BBRGB') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BGGGG\") == \"0\"\nassert solution(\"RBRGR\") == \"3\"\nassert solution(\"BBBRR\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, output)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BGGGG\") == \"1\"\nassert solution(\"RBRGR\") == \"0\"\nassert solution(\"BBBRR\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\") == [1, 0, 3]",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"1\"\nassert solution(10) == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution() == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 2, 3, 1, 7, 1, 1, 1, 1, 1, 2, 2) == 3\nassert solution(2, 5) == 3",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3\\n3\\n'\n\nassert solution(stdin='''\n5\n3 5 4 2 1\n5\n4 4 4 4 4\n''') == '3\\n3\\n'\n\nassert solution(stdin='''\n5\n3 5 4 2 1\n3\n2 2 2 2 2\n''') == '0\\n0\\n'\n\nassert solution(stdin='''\n3\n1 1 1\n3\n4 4 4\n''') == '0\\n0\\n'\n\nassert solution(stdin='''\n10\n3 5 4 2 1\n3\n2 2 2 2 2\n''') == '1\\n3\\n'\n\nassert solution(stdin='''\n10\n3 5 4 2 1\n4\n2 2 2 2 2\n''') == '2\\n3\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output is '3', but got '{}'.\".format(solution(stdin))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n3'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"3\n3\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2 \"\nassert solution(\"1\\n2\\n4\\n3\") == \"1 2 3 4\"\nassert solution(\"1\\n4\\n3\\n2\") == \"1 4 3 2\"",
        "num_ids_2": 108,
        "num_ids_4": 133
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \"\nassert solution(\"4\\n5\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"4\\n5\\n1 3 2 4\") == \"1 3 2 4\"\nassert solution(\"4\\n5\\n1 4 2 3\") == \"1 4 2 3\"",
        "num_ids_2": 111,
        "num_ids_4": 167
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution() == \"1 2 3 4\\n1 5 4 3\"\nassert solution() == \"1\"\nassert solution() == \"1 4 3 2\"",
        "num_ids_2": 60,
        "num_ids_4": 82
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('tests/permutation_operations.txt', 'r').read()) == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES', \"The function should return 'YES'.\"\nassert solution() == 'YES', \"The function should return 'YES'.\"\nassert solution() == 'YES', \"The function should return 'YES'.\"\nassert solution() == 'NO', \"The function should return 'NO'.\"\nassert solution() == 'YES', \"The function should return 'YES'.\"\nassert solution() == 'YES', \"The function should return 'YES'.\"\nassert solution() == 'NO', \"The function should return 'NO'.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Test {index+1} failed: \\nExpected: {output}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Expected 5, but got {}\".format(solution())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5\\n18\\n10\\n6\\n75015\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(1) == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(3) == \"3\\n2\\n2\\n2\\n2\\n\"\nassert solution(5) == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(1) == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(3) == \"3\\n2\\n2\\n2\\n2\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 1\"\n\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 2\"\n\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 3\"\n\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 4\"\n\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 5\"",
        "num_ids_2": 144,
        "num_ids_4": 288
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == '5'\nassert solution(19) == '18'\nassert solution(12) == '10'\nassert solution(6) == '6'\nassert solution(75015) == '75015'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('santa.in', 'r').read()) == \"5\\n18\\n10\\n6\\n75015\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'your_answer'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num}: expected output is '{expected_output}', but got '{solution(input())}'\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: {output}\" for i, (n, k) in enumerate(tests) for test in (test.split() for test in stdin.splitlines())[:1]",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n', 'test case 1')\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n', 'test case 2')\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n', 'test case 3')\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n', 'test case 4')\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n",
        "num_ids_2": 450,
        "num_ids_4": 900
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"YES\\n1 2 3 4 5 6 7 8 9 10\\nNO\\nNO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n\") == \"NO\"\nassert solution(\"100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n10",
        "num_ids_2": 101,
        "num_ids_4": 1027
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution(\"10 2\\n5 3\\n3 2\\n5 4\\n7 3\\n11 4\\n\") == \"YES\\n1 1 1 1 1\\nNO\\nNO\\nNO\\nYES\\n5 4\\n7 3\"\nassert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 289,
        "num_ids_4": 719
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 1 1 1 1 1\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 1 1 1 1 1\\nNO\\nNO\"\n",
        "num_ids_2": 221,
        "num_ids_4": 257
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8) == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\"\nassert solution(97) == \"YES\\n1 1 1 1 1 1 1 1\"\nassert solution(1000000000) == \"YES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 85,
        "num_ids_4": 175
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example1) == 'YES\\n4 2 4'\nassert solution(example2) == 'YES\\n55 5 5 35'\nassert solution(example3) == 'NO'\nassert solution(example4) == 'YES\\n1 1 1 1 1 1 1 1'\nassert solution(example5) == 'NO'\n\nexample1 = '''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n'''\n\nexample2 = '''\n3 4 2\n97 2\n111111110 111111110 111111110 111111110 111111110 111111110 111111120\n'''\n\nexample3 = '''\n3 4 2\n97 2\n'''\n\nexample4 = '''\n3 4 2\n97 2\n'''\n\nexample5 = '''\n3 4 2\n97 2\n'''",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n150000000000000000'\nassert solution('1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n150000000000000000'\nassert solution('10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n150000000000000000'\nassert solution('23 34 45') == '4\\n55\\n150000000000000000'",
        "num_ids_2": 219,
        "num_ids_4": 356
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '55\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 3, 4]) == \"4\\n55\\n150000000000000000\"\nassert solution([1, 10, 100]) == \"51\\n56\\n150000000000000000\"\nassert solution([10000000000000000, 10000000000000000, 10000000000000000]) == \"4\\n55\\n150000000000000000\"\nassert solution([1, 10000000000000000, 10000000000000000]) == \"11\\n56\\n150000000000000000\"",
        "num_ids_2": 84,
        "num_ids_4": 245
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4\\n55\\n150000000000000000'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4\\n55\\n150000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output mismatch: {output}!= {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case} failed: got '{solution(input())}' but expected '{expected}'\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000') == '4\\n55\\n150000000000000000'\nassert solution('23 34 45') == '51'\nassert solution('1 3 4\\n1 10 100') == '1\\n4\\n55'\nassert solution('23 34 45\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000') == '4\\n51\\n150000000000000000'",
        "num_ids_2": 121,
        "num_ids_4": 258
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3', \"The first necklace cannot be assembled because it has three beads \\\"a\\\" (of the two available).\"\nassert solution() == '6', \"The second necklace cannot be assembled because it contains a bead \\\"d\\\", which is not sold in the store.\"\nassert solution() == '5', \"The first necklace cannot be assembled because it has three beads \\\"a\\\" (of the two available).\"\nassert solution() == '4', \"The first necklace cannot be assembled because it has three beads \\\"a\\\" (of the two available).\"\nassert solution() == '15', \"The first necklace cannot be assembled because it has three beads \\\"a\\\" (of the two available).\"\nassert solution() == '10', \"The first necklace cannot be assembled because it has three beads \\\"a\\\" (of the two available).\"",
        "num_ids_2": 68,
        "num_ids_4": 134
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {i + 1} has incorrect output. Expected {expected_output}, got {solution(stdin=input())}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution() == '3'\nassert solution() == '5'\nassert solution() == '4'\nassert solution() == '15'\nassert solution() == '10'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"\nassert solution(\"1\\n1 1\\n\") == \"1\"\nassert solution(\"10\\n10 2\\n\") == \"10\"\nassert solution(\"1\\n1 1\\n2\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2\\n3\\",
        "num_ids_2": 116,
        "num_ids_4": 156
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Output does not match expected: {solution(stdin)}!= {expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\nababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\nNO\\nNO\\n\"\nassert solution(\"2\\n1 1 1\\n2 2 2\\n1 1\\n\") == \"NO\"\nassert solution(\"3\\n3 3\\n3 3 3\\n3 3 3 3\\n\") == \"YES\"\nassert solution(\"1\\n1 2 3 4 5\\n\") == \"YES\\n1 2 3 4 5\"\nassert solution(\"1\\n1 2\\n\") == \"NO\"\nassert solution(\"2\\n1 1 1\\n2 2 2\\n1 1\\n\") == \"NO\"\nassert solution(\"1\\n1 1 1 1 1 1\\n\") == \"YES\"\n",
        "num_ids_2": 111,
        "num_ids_4": 178
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution() == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution() == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, but got {solution(input)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(\"YES\" if solution(stdin) == expected else \"NO\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES\\n1 3 5\\nNO\\nNO'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Output is incorrect. Received '{solution(input())}', expected '{expected}'.\"\nfor i in range(5):\n    assert solution(input()) == \"NO\" or \"YES\" + \" \" * (5 - len(solution(input()))) + solution(input()), f\"Output is incorrect for query #{i + 1}. Received '{solution(input())}', expected '{expected}' or 'NO'.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Your implementation of the Reverse Bits function is incorrect!\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\", \"Your implementation of the Reverse Bits function is incorrect!\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"1011111111111111111111111111111\") == \"983046511\"\n",
        "num_ids_2": 99,
        "num_ids_4": 147
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"00000010100101000001111010011100\") == b\"964176192\"\nassert solution(b\"11111111111111111111111111111101\") == b\"3221225471\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('1111111111111111111111111111101') == '3221225471'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"The solution should return the correct output\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\", \"The solution should return the correct output\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'00000010100101000001111010011100') == b'964176192'\nassert solution(b'1111111111111111111111111111101') == b'3221225471'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192', 'Test 1'\nassert solution('111111111111111111111111111111101') == '3221225471', 'Test 2'\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution(10) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6, 1], [1, 7, 21, 28, 21, 7, 1], [1, 8, 28, 40, 33, 28, 8, 1], [1, 9, 36, 64, 45, 36, 9, 1]]",
        "num_ids_2": 229,
        "num_ids_4": 229
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"[\\n [1],\\n[1,1],\\n[1,2,1],\\n[1,3,3,1],\\n[1,4,6,4,1]\\n]\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"[[1],\\n [1,1],\\n [1,2,1],\\n [1,3,3,1],\\n [1,4,6,4,1]]\", \"Test case 1 failed\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n], \"Test case 1 failed\"\n\nassert solution(1) == [\n     [],\n    [1],\n   [2,1],\n  [3,3,1],\n [4,6,4,1]\n], \"Test case 2 failed\"\n\nassert solution(10) == [\n     [],\n    [1],\n   [1,1],\n  [2,2,1],\n [3,3,3,1],\n[4,6,3,2,1],\n [5,10,10,5,1],\n[6,15,20,15,6,1],\n [7,21,35,35,21,7,1],\n [8,28,56,70,56,28,8,1]\n], \"Test case 3 failed\"",
        "num_ids_2": 16,
        "num_ids_4": 25
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\ninput('Enter the number of email addresses: ')) == ['a@b.com', 'c@d.com', 'e@f.com', 'g@h.com', 'i@j.com']",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\njohn@example.com\\ndoe@example.com\\nwolf@example.com\\n\") == [\"john@example.com\", \"doe@example.com\", \"wolf@example.com\"]\nassert solution(\"2\\njohn@example.com\\ndoe@example.com\\nwolf@example.com\\n\") == []\nassert solution(\"3\\njohn@example.com\\ndoe@example.com\\nwolf@example.com\\n\") == [\"john@example.com\", \"doe@example.com\"]\nassert solution(\"4\\njohn@example.com\\ndoe@example.com\\nwolf@example.com\\n\") == [\"john@example.com\"]\nassert solution(\"5\\njohn@example.com\\ndoe@example.com\\nwolf@example.com\\n\") == [\"john@example.com\"]",
        "num_ids_2": 83,
        "num_ids_4": 164
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == []\nassert solution(\"1\\n123@abc.com\") == [\"1@abc.com\"]\nassert solution(\"1\\n123@abc.com\\n456@xyz.com\") == [\"1@abc.com\", \"456@xyz.com\"]\nassert solution(\"1\\n123@abc.com\\n456@xyz.com\\n789@web.com\") == [\"1@abc.com\", \"456@xyz.com\", \"789@web.com\"]",
        "num_ids_2": 14,
        "num_ids_4": 78
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == ['<EMAIL>']\nassert solution(input()) == ['foo@bar.com', 'user@web.com']\nassert solution(input()) == ['user@web.com', 'bar@web.com']\nassert solution(input()) == []",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\njohn.doe@example.com\\nhannah.jones@example.com\\n\") == [\"john.doe@example.com\", \"hannah.jones@example.com\"]\nassert solution(\"2\\njohn.doe@example.com,jane.doe@example.net\\nhannah.jones@example.com,yoyo.jones@example.com\\n\") == [\"john.doe@example.com,jane.doe@example.net\", \"hannah.jones@example.com,yoyo.jones@example.com\"]\nassert solution(\"1\\njohn.doe@example.com\\nhannah.jones@example.com\\n\") == []\nassert solution(\"0\\njohn.doe@example.com\\nhannah.jones@example.com\\n\") == []\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]",
        "num_ids_2": 138,
        "num_ids_4": 198
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == ['1', '2', '3', '4', '5']\nassert solution(\"2\\nhello@example.com\\n3\\nmail@example.com\\n4\\njohn_doe@example.com\\n5\\nnathan@example.com\") == ['2', '3', '4', '5']\nassert solution(\"1\\njohn1234@example.com\\n2\\nyes@example.com\\n3\\nno@example.com\\n4\\ninvalid\\n5\\n\") == ['1', '2', '3', '4', '5']\nassert solution(\"1\\njohn1234@example.com\\n2\\nyes@example.com\\n3\\nno@example.com\\n4\\ninvalid\\n5\\n6\\ny\\n7\\n8\\n9\\n\") == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\nassert solution(\"1\\njohn1234@example.com\\n2\\nyes@example.com\\n3\\nno@example.com\\n4\\ninvalid\\n5\\n6\\ny\\n7\\n8\\n9\\n\") == ['1', '2', '3', '4', '5', '6', '7', '8', '9']",
        "num_ids_2": 42,
        "num_ids_4": 164
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1\nfoo@example.com\nbar@example.com\nbaz@example.com\n''') == ['bar@example.com', 'foo@example.com', 'baz@example.com']\n\nassert solution('''\n2\nfoo@example.com\nbar@example.co.uk\nbaz@example.com\n''') == ['bar@example.co.uk', 'foo@example.com', 'baz@example.com']\n\nassert solution('''\n3\nfoo@example.com\nbar@example.co.uk\nbaz@example.com.co.uk\n''') == []\n\nassert solution('''\n4\nfoo@example.com\nbar@example.co.uk\nbaz@example.com.co.uk\nqux@example.co.uk\n''') == ['bar@example.co.uk', 'foo@example.com']\n\nassert solution('''\n5\nfoo@example.com\nbar@example.co.uk\nbaz@example.com.co.uk\nqux@example.co.uk\ncorge@example.co.uk\n''') == ['bar@example.co.uk', 'foo@example.com', 'qux@example.co.uk', 'corge@example.co.uk']",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"3\\njohn.doe@example.com\\nharry.smith@example.net\\n123@invalid.com\\n456@example.org\\n\") == [\"john.doe@example.com\", \"harry.smith@example.net\", \"456@example.org\"]\n\nassert solution(\n\"1\\n1@example.com\\n\") == []\n\nassert solution(\n\"0\\n\") == []",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('') == []\nassert solution('1') == []\nassert solution('1\\n') == []",
        "num_ids_2": 14,
        "num_ids_4": 24
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"3\\njohndoe@example.com\\njohn-doe@example.com\\napple@example.com\\nbanana@example.com\") == [\"johndoe@example.com\", \"john-doe@example.com\", \"apple@example.com\"]\nassert solution(r\"4\\njohndoe@example.com\\njohn_doe@example.com\\napple@example.com\\nbanana@example.com\\nsunny@example.com\\n\") == []\nassert solution(r\"1\\njohndoe@example.com\\njohn_doe@example.com\\napple@example.com\\nbanana@example.com\\nsunny@example.com\\n123@example.com\\n456@example.com\") == []\n",
        "num_ids_2": 117,
        "num_ids_4": 185
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == [[1, 1, 1], [1, 2, 4], [1, 3, 9], [1, 5, 24], [1, 8, 720]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == [0, 1, 8, 27, 64], \"Test case 1 failed\"\nassert solution(\"10\") == [0, 1, 8, 27, 64, 125, 344, 721, 1448, 2917], \"Test case 2 failed\"\nassert solution(\"20\") == [0, 1, 8, 27, 64, 125, 344, 721, 1448, 2917, 5836, 11673, 23346, 47921], \"Test case 3 failed\"\nassert solution(\"100\") == [0, 1, 8, 27, 64, 125, 344, 721, 1448, 2917, 5836, 11673, 23346, 47921, 86209, 160088, 269825, 421790], \"Test case 4 failed\"\nassert solution(\"10000\") == [0, 1, 8, 27, 64, 125, 344, 721, 1448, 2917, 5836, 11673, 23346, 47921, 86209, 160088, 269825, 421790, 754857, 1421536, 2843073, 5327680, 9466909, 18933818, 37867637, 68702474, 122731625, 210168492, 404804449, 702615818, 1366047097, 2585290644, 5170581201, 10341162568, 20682325137, 41364650336, 72948512289, 145897024622, 289869148345, 579738296694, 1159476593305, 2318953186614, 4637906373281, 8275812746578, 15097525493157, 29995050986314, 59990101972681, 119980203945368, 239960407890725, 479920815781464, 859841631562941, 1629683263125898, 3009606526251797, 6009213052503606, 12010026105007321, 24020052210014668, 48040104420029337, 86080208840058674, 164160417680117349, 308320835360234728, 616641670720469457, 12332",
        "num_ids_2": 90,
        "num_ids_4": 294
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n3\\n9\\n27\\n81\\n218\\n546\\n1306\\n3578\\n7890\\n21202\\n57678\\n129204\\n391522\\n1081622\\n3042286\\n8063442\\n21569906\\n59443058\\n140229040\\n407918854\\n1168398034\\n3257513802\\n9008776622\\n25372921410\\n72760315526\\n229800437500\\n674932678314\\n1984442427950\\n5553484814250\\n13528410087482\\n47982047517454\\n122626111152806\\n358918341620642\\n1006224184958926\\n2993477793429182\\n8239750133914618\\n22029105605588546\\n72342390113962418\\n258926701918989726\\n758687920833107710\\n2272632999731229654\\n6869451675301605122\\n20108118044139712046\\n57725403550183473002\\n136976653632005251458\\n489385420836198576900\\n1310827721557355902802\\n4624485649672128253006\\n12056732153750699733502\\n36546127866775868238586\\n10563295023194358453522\\n30741116013719433198254\\n83293290414749319850006\\n219346963668108073230482\\n628290221166355232766818\\n1834313382083920626226594\\n6070197106029891897546406\\n14267304209192134182121626\\n40102330102150211851623950\\n117060165256829426323610834\\n326339818199919181957698026\\n914940711699691345899375670\\n255",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [\"0\", \"1\", \"8\", \"27\", \"1024\"]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == ['0', '1', '8', '27', '1024']\nassert solution(5) == ['0', '1', '8', '27', '1024', '32768']\nassert solution(10) == ['0', '1', '8', '27', '1024', '32768', '655360', '2097152', '5242880']",
        "num_ids_2": 59,
        "num_ids_4": 119
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [1, 8, 64, 512, 2560], \"Testcase 1\"\nassert solution(4) == [1, 8, 64, 512, 2560, 10240], \"Testcase 2\"\nassert solution(5) == [1, 8, 64, 512, 2560, 10240, 65536], \"Testcase 3\"\nassert solution(6) == [1, 8, 64, 512, 2560, 10240, 65536, 34359296], \"Testcase 4\"\nassert solution(7) == [1, 8, 64, 512, 2560, 10240, 65536, 34359296, 1677721920], \"Testcase 5\"",
        "num_ids_2": 75,
        "num_ids_4": 181
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == ['0', '1', '4', '6', '12']",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['36', '36', '60']\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['0', '1', '1', '2', '8']\nprint('Test Passed!')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == [\"1\"]\nassert solution(\"2\") == [\"1\", \"1\"]\nassert solution(\"3\") == [\"1\", \"1\", \"2\"]\nassert solution(\"4\") == [\"1\", \"1\", \"2\", \"3\"]\nassert solution(\"5\") == [\"1\", \"1\", \"2\", \"3\", \"5\"]",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><person><age>25</age><name>John</name></person><person><age>30</age><name>Jane</name></person><person><age>25</age><name>John</name></person></root>') == 3",
        "num_ids_2": 131,
        "num_ids_4": 279
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\", \"Expected output to be 0\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\") == \"0\", \"Expected output to be 0\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<elem>\\n<subelem1>\\n</subelem1>\\n<subelem2>\\n</subelem2>\\n</elem>\\n</root>\") == \"2\", \"Expected output to be 2\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<elem>\\n<subelem1>\\n</subelem1>\\n<subelem2>\\n</subelem2>\\n</elem>\\n</root>\") == \"3\", \"Expected output to be 3\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<elem>\\n<subelem1>\\n</subelem1>\\n<subelem2>\\n</subelem2>\\n</elem>\\n</root>\") == \"4\", \"Expected output to be 4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<elem>\\n<subelem1>\\n</subelem1>\\n<subelem2>\\n</subelem2>\\n</elem>\\n</root>\") == \"5\", \"Expected output to be 5\"",
        "num_ids_2": 50,
        "num_ids_4": 194
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"<root><child1><child2></child2></child1><child3></child3></root>\") == 3\nassert solution(\"<root><child1><child2></child2></child1><child3></child3><child4><child5></child5></child4></root>\") == 5\nassert solution(\"<root><child1><child2></child2></child1><child3></child3><child4><child5></child5><child6></child6></child4></root>\") == 6\nassert solution(\"<root><child1><child2></child2></child1><child3></child3><child4><child5></child5><child6></child6><child7></child7></child4></root>\") == 7",
        "num_ids_2": 36,
        "num_ids_4": 124
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <grandchild2>Hello</grandchild2>\\n    </grandchild1>\\n  </child1>\\n  <child2>\\n    <grandchild3>\\n      <grandchild4>World</grandchild4>\\n    </grandchild3>\\n  </child2>\\n</root>\") == \"4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <grandchild2>Hello</grandchild2>\\n    </grandchild1>\\n  </child1>\\n  <child2>\\n    <grandchild3>\\n      <grandchild4>World</grandchild4>\\n    </grandchild3>\\n  </child2>\\n</root>\") == \"4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <grandchild2>Hello</grandchild2>\\n    </grandchild1>\\n  </child1>\\n  <child2>\\n    <grandchild3>\\n      <grandchild4>World</grandchild4>\\n    </grandchild3>\\n  </child2>\\n</root>\") == \"4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <grandchild2>Hello</grandchild2>\\n    </grandchild1>\\n  </child1>\\n  <child2>\\n    <grandchild3>\\n      <grandchild4>World</grandchild4>\\n    </grandchild3>\\n  </child2>\\n</root>\") == \"4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <grandchild2>Hello</grandchild2>\\n    </grandchild1>\\n  </child1>\\n  <child2>\\n    <grandchild3>\\n      <grandchild4>World</grandchild4>\\n    </grandchild3>\\n  </child2>\\n</root>\") == \"4\"",
        "num_ids_2": 220,
        "num_ids_4": 440
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n<foo>\\n<bar>\\n<baz>123</baz>\\n<qux>xyz</qux>\\n</bar>\\n</foo>\\n</root>') == 3, \"The maximum level of nesting in the XML document is not 3.\"\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n<foo>\\n<bar>\\n<baz>123</baz>\\n<qux>xyz</qux>\\n</bar>\\n</foo>\\n</root>') == 1, \"The maximum level of nesting in the XML document is not 1.\"\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n<foo>\\n<bar>\\n<baz>123</baz>\\n<qux>xyz</qux>\\n</bar>\\n</foo>\\n</root>') == 0, \"The maximum level of nesting in the XML document is not 0.\"\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n<foo>\\n<bar>\\n<baz>123</baz>\\n<qux>xyz</qux>\\n</bar>\\n</foo>\\n</root>') == 2, \"The maximum level of nesting in the XML document is not 2.\"\n",
        "num_ids_2": 164,
        "num_ids_4": 328
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4', \"The maximum level of nesting in the XML document is 4.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('<?xml version=\"1.0\"?>\\n<root>\\n  <a>\\n    <b>\\n      <c>\\n        <d>\\n          <e>\\n            <f>\\n              <g>\\n                <h>\\n                  <i>\\n                    <j>\\n                      <k>\\n                        <l>\\n                          <m>\\n                            <n>\\n                              <o>\\n                                <p>\\n                                  <q>\\n                                    <r>\\n                                      <s>\\n                                        <t>\\n                                          <u>\\n                                            <v>\\n                                              <w>\\n                                                <x>\\n                                                  <y>\\n                                                    <z>\\n                                                      <aa>\\n                                                        <ab>\\n                                                          <ac>\\n                                                            <ad>\\n                                                              <ae>\\n                                                                <af>\\n                                                                  <ag>\\n                                                                    <ah>\\n                                                                      <ai>\\n                                                                        <aj>\\n                                                                          <ak>\\n                                                                            <al>\\n              </aa>\\n                                                    </ab>\\n                                                  </ac>\\n                                                </y>\\n                                              </x>\\n                                            </z>\\n                                          </w>\\n                                        </u>\\n                                      </s>\\n                                    </r>\\n                                  </q>\\n                                </p>\\n                              </o>\\n                            </j>\\n                          </i>\\n                        </k>\\n                      </l>\\n                    </m>\\n                  </n>\\n                </h>\\n              </g>\\n            </f>\\n          </e>\\n        </d>\\n      </c>\\n    </b>\\n  </a>\\n</root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n  <a>\\n    <b>\\n      <c>\\n        <d>\\n          <e>\\n            <f>\\n              <g>\\n                <h>\\n                  <i>\\n                    <j>\\n                      <k>\\n                        <l>\\n                          <m>\\n                            <n>\\n                              <o>\\n                                <p>\\n                                  <q>\\n                                    <r>\\n                                      <s>\\n                                        <t>\\n                                          <u>\\n                                            <v>\\n                                              <w>\\n                                                <x>\\n                                                  <y>\\n                                                    <z>\\n                                                      <aa>\\n                                                        <ab>\\n                                                          <ac>\\n                                                            <ad>\\n                                                              <ae>\\n                                                                <af>\\n                                                                  <ag>\\n                                                                    <ah>\\n                                                                      <ai>\\n                                                                        <aj>\\n                                                                          <ak>\\n                                                                            <al>\\n              </aa>\\n                                                    </ab>\\n                                                  </ac>\\n                                                </y>\\n                                              </x>\\n                                            </z>\\n                                          </w>\\n                                        </u>\\n                                      </s>\\n                                    </r>\\n                                  </q>\\n                                </p>\\n                              </o>\\n                            </j>\\n                          </i>\\n                        </k>\\n                      </l>\\n                    </m>\\n                  </n>\\n                </h>\\n              </g>\\n            </f>\\n          </e>\\n        </d>\\n      </c>\\n    </b>\\n  </a>\\n</root>') == 5\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n  <a>\\n    <b>\\n      <c>\\n        <d>\\n          <e>\\n            <f>\\n              <g>\\n                <h>\\n                  <i>\\n                    <j>\\n                      <k>\\n                        <l>\\n                          <m>\\n                            <n>\\n                              <o>\\n                                <p>\\n                                  <q>\\n                                    <r>\\n                                      <s>\\n                                        <t>\\n                                          <u>\\n                                            <v>\\n                                              <w>\\n                                                <x>\\n                                                  <y>\\n                                                    <z>\\n                                                      <aa>\\n                                                        <ab>\\n                                                          <ac>\\n                                                            <ad>\\n                                                              <ae>\\n                                                                <af>\\n                                                                  <ag>\\n                                                                    <ah>\\n                                                                      <ai>\\n                                                                        <aj>\\n                                                                          <ak>\\n                                                                            <al>\\n              </aa>\\n                                                    </ab>\\n                                                  </ac>\\n                                                </y>\\n                                              </x>\\n                                            </z>\\n                                          </w>\\n                                        </u>\\n                                      </s>\\n                                    </r>\\n                                  </q>\\n                                </p>\\n                              </o>\\n                            </j>\\n                          </i>\\n                        </k>\\n                      </l>\\n                    </m>\\n                  </n>\\n                </h>\\n              </g>\\n            </f>\\n          </e>\\n",
        "num_ids_2": 700,
        "num_ids_4": 1024
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"\"\"\n<bookstore>\n    <book>\n        <title>The Hunger Games</title>\n    </book>\n    <book>\n        <title>To Kill a Mockingbird</title>\n    </book>\n    <book>\n        <title>The Great Gatsby</title>\n    </book>\n    <book>\n        <title>Ozzy Osbourne</title>\n    </book>\n</bookstore>\n\"\"\") == 3\n\nassert solution(stdin=\"\"\"\n<bookstore>\n    <book>\n        <title>The Hunger Games</title>\n    </book>\n    <book>\n        <title>To Kill a Mockingbird</title>\n    </book>\n    <book>\n        <title>The Great Gatsby</title>\n    </book>\n    <book>\n        <title>Ozzy Osbourne</title>\n    </book>\n    <book>\n        <title>Jurassic Park</title>\n    </book>\n</bookstore>\n\"\"\") == 2\n\nassert solution(stdin=\"\"\"\n<bookstore>\n    <book>\n        <title>The Hunger Games</title>\n    </book>\n    <book>\n        <title>To Kill a Mockingbird</title>\n    </book>\n    <book>\n        <title>The Great Gatsby</title>\n    </book>\n    <book>\n        <title>Ozzy Osbourne</title>\n    </book>\n    <book>\n        <title>Jurassic Park</title>\n    </book>\n    <book>\n        <title>Pride and Prejudice</title>\n    </book>\n</bookstore>\n\"\"\") == 0\n\nassert solution(stdin=\"\"\"\n<bookstore>\n    <book>\n        <title>The Hunger Games</title>\n    </book>\n    <book>\n        <title>To Kill a Mockingbird</title>\n    </book>\n    <book>\n        <title>The Great Gatsby</title>\n    </book>\n    <book>\n        <title>Ozzy Osbourne</title>\n    </book>\n    <book>\n        <title>Jurassic Park</title>\n    </book>\n    <book>\n        <title>Pride and Prejudice</title>\n    </book>\n    <book>\n        <title>Amadeus</title>\n    </book>\n</bookstore>\n\"\"\") == 1\n\nassert solution(stdin=\"\"\"\n\"\"\") == 0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><a><b><c/></b></a></root>') == 3\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><a><b><c/><d/></b></a></root>') == 3\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><a><b/><c/></b></a></root>') == 2\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><a><b><c/></b></a></root>') == 2\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><a><b><c/><d/></b></a></root>') == 2",
        "num_ids_2": 78,
        "num_ids_4": 154
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<books>\\n  <book>\\n    <title>XML</title>\\n    <author>John Doe</author>\\n  </book>\\n</books>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <a>hello</a>\\n    </grandchild1>\\n  </child1>\\n</root>\") == 2",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123456\") == \"YES\"\nassert solution(\"76543210\") == \"YES\"\nassert solution(\"91012345\") == \"YES\"\nassert solution(\"0987654321\") == \"YES\"\nassert solution(\"12345678901234567890\") == \"NO\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"YES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n7890123456\") == \"NO\"  # 7890123456 is not a valid mobile number\nassert solution(\"1\\n123456789012\") == \"YES\"  # 123456789012 is a valid mobile number\nassert solution(\"1\\n78901234567\") == \"NO\"  # 78901234567 is not a valid mobile number\nassert solution(\"1\\n12345678901\") == \"YES\"  # 12345678901 is a valid mobile number\nassert solution(\"1\\n12345678901234567890\") == \"NO\"  # 12345678901234567890 is not a valid mobile number",
        "num_ids_2": 85,
        "num_ids_4": 170
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\n'\nassert solution('1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+91987654321\\n1\\n+9198765432",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567891\") == \"NO\"\nassert solution(\"12345678910\") == \"YES\"\nassert solution(\"12345678911\") == \"YES\"\nassert solution(\"12345678912\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n234567890\\n\") == \"YES\"\nassert solution(\"2\\n12345678901\\n\") == \"YES\"\nassert solution(\"3\\n9876543210\\n\") == \"YES\"\nassert solution(\"4\\n1234567890\\n\") == \"NO\"\nassert solution(\"5\\n1234567890\\n\") == \"NO\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"123456789\") == \"YES\"\nassert solution(\"12345678\") == \"YES\"\nassert solution(\"1234567\") == \"YES\"\nassert solution(\"123456\") == \"YES\"\nassert solution(\"12345\") == \"YES\"\nassert solution(\"1234\") == \"YES\"\nassert solution(\"123\") == \"YES\"\nassert solution(\"12\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"\") == \"YES\"",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"123456789\") == \"YES\"\nassert solution(\"12345678\") == \"YES\"\nassert solution(\"1234567\") == \"YES\"\nassert solution(\"123456\") == \"YES\"\nassert solution(\"12345\") == \"YES\"\nassert solution(\"1234\") == \"YES\"\nassert solution(\"123\") == \"YES\"\nassert solution(\"12\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0123456789\") == \"YES\"\nassert solution(\"012345678\") == \"YES\"\nassert solution(\"01234567\") == \"YES\"\nassert solution(\"0123456\") == \"YES\"\nassert solution(\"012345\") == \"YES\"\nassert solution(\"01234\") == \"YES\"\nassert solution(\"0123\") == \"YES\"\nassert solution(\"012\") == \"YES\"\nassert solution(\"01\") == \"YES\"\nassert solution(\"0\") == \"YES\"\nassert solution(\"-1234567890\") == \"NO\"\nassert solution(\"-123456789\") == \"NO\"\nassert solution(\"-12345678\") == \"NO\"\nassert solution(\"-1234567\") == \"NO\"\nassert solution(\"-123456\") == \"NO\"\nassert solution(\"-12345\") == \"NO\"\nassert solution(\"-1234\") == \"NO\"\nassert solution(\"-123\") == \"NO\"\nassert solution(\"-12\") == \"NO\"\nassert solution(\"-1\") == \"NO\"\nassert solution(\"-0123456789\") == \"NO\"\nassert solution(\"-012345678\") == \"NO\"\nassert solution(\"-01234567\") == \"NO\"\nassert solution(\"-0123456\") == \"NO\"\nassert solution(\"-012345\") == \"NO\"\nassert solution(\"-01234\") == \"NO\"\nassert solution(\"-0123\") == \"NO\"\nassert solution(\"-012\") == \"NO\"\nassert solution(\"-01\") == \"NO\"\nassert solution(\"-0\") == \"NO\"",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('123\\n456\\n789\\n1234\\n56789\\n') == 'NO\\nNO\\nYES\\nNO\\nYES'\nassert solution('1234\\n5678\\n9123\\n123456\\n') == 'NO\\nYES\\nNO\\nYES\\nYES'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 83,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456789123\") == \"NO\"  # Not a valid mobile number\nassert solution(\"1234567891234\") == \"NO\"  # Not a valid mobile number\nassert solution(\"12345678912345\") == \"YES\"  # Valid mobile number\nassert solution(\"123456789123456\") == \"YES\"  # Valid mobile number",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 1 5 2\") == \"1 4 2 5 3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''\n[5, 4, 3, 2]\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"5\\n\") == []\nassert solution(\"5\\n10\\n\") == []\nassert solution(\"5\\n10\\n15\\n\") == []\nassert solution(\"5\\n10\\n15\\n20\\n\") == []\nassert solution(\"10\\n5\\n15\\n20\\n\") == []",
        "num_ids_2": 16,
        "num_ids_4": 48
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n5 4 3 2\n\"\"\") == \"1 3 5 7\\n1 2 4 6\\n1 2 5 7\\n\"\nassert solution(r\"\"\"\n5\n2 3 4\n\"\"\") == \"1 4\\n1 3\\n\"\nassert solution(r\"\"\"\n3\n1 2 3\n\"\"\") == \"2 3\\n1 3\\n\"\nassert solution(r\"\"\"\n1\n5 4\n\"\"\") == \"5 4\\n\"\nassert solution(r\"\"\"\n5\n5 5 5 5\n\"\"\") == \"5\\n\"\nassert solution(r\"\"\"\n1\n1 1 1 1\n\"\"\") == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n4\\n3\\n2\\n') == '1\\n2\\n3\\n4\\n'\nassert solution('5\\n4\\n3\\n2\\n6\\n') == '1\\n2\\n3\\n4\\n6\\n'\nassert solution('5\\n6\\n3\\n7\\n8\\n9\\n10\\n') == '1\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n'\nassert solution('5\\n6\\n3\\n7\\n8\\n9\\n10\\n11\\n') == '1\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n'\nassert solution('5\\n6\\n3\\n7\\n8\\n9\\n10\\n11\\n12\\n') == '1\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n'\nassert solution('5\\n6\\n3\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n') == '1\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n'",
        "num_ids_2": 70,
        "num_ids_4": 194
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(10)) == [5]\nassert solution(str(10) +'' + str(5) +'' + str(6) +'' + str(1) +'' + str(2) +'' + str(3)) == [5, 6]\nassert solution(str(1) +'' + str(2) +'' + str(3) +'' + str(4) +'' + str(5) +'' + str(6) +'' + str(7) +'' + str(8) +'' + str(9)) == [5, 6, 7, 8, 9]\nassert solution(str(1) +'' + str(2) +'' + str(3) +'' + str(4) +'' + str(5) +'' + str(6) +'' + str(7) +'' + str(8) +'' + str(9) +'' + str(10)) == [5, 6, 7, 8, 9, 10]",
        "num_ids_2": 64,
        "num_ids_4": 236
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\\n1 2\\n3 4\\n6 7\") == \"2 1 5 6 4 7 3\"\nassert solution(\"5\\n1 2\\n3 4\\n6 7\\n8\\n9\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1 2 3 4 5\"",
        "num_ids_2": 88,
        "num_ids_4": 118
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the symmetric difference integers in ascending order, one per line.\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3\\n4\\n5\\n') == '2 4 5\\n'\nassert solution('5\\n10\\n3 6 8 12\\n4 13\\n') == '11 13\\n'\nassert solution('5\\n1 3 5\\n') == '5\\n'\nassert solution('5\\n\\n') == ''",
        "num_ids_2": 67,
        "num_ids_4": 100
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, Received: {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\nID,Marks,Class,Name\nABC,85,Math,John\nDEF,75,Science,Jane\nGHI,90,English,Sarah\n''') == '33.33'\nassert solution('''\n4\nID,Marks,Class,Name\nABC,85,Math,John\nDEF,75,Science,Jane\nGHI,90,English,Sarah\n''') == '27.5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\nA5,95,C,Alex\nA6,90,C,Emily\nA7,95,C,Amy\nA8,80,C,Brian\nA9,90,C,Sara\nA10,95,C,Sarah\n''') == '''\n35.00\n'''\n\nassert solution('''\n5\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\nA5,95,C,Alex\n''') == '''\n42.50\n'''\n\nassert solution('''\n1\nID,Marks,Class,Name\nA1,80,C,John\n''') == '''\n80.00\n'''\n\nassert solution('''\n2\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\n''') == '''\n75.00\n'''\n\nassert solution('''\n3\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\n''') == '''\n85.00\n'''\n\nassert solution('''\n4\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\n''') == '''\n80.00\n'''\n\nassert solution('''\n5\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\nA5,95,C,Alex\n''') == '''\n90.00\n'''\n\nassert solution('''\n1\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\nA5,95,C,Alex\nA6,90,C,Emily\nA7,95,C,Amy\nA8,80,C,Brian\nA9,90,C,Sara\nA10,95,C,Sarah\n''') == '''\n75.00\n'''\n\nassert solution('''\n5\nID,Marks,Class,Name\nA1,80,C,John\nA2,75,C,Jane\nA3,90,C,Mark\nA4,85,C,David\nA5,95,C,Alex\n''') == '''\n90.00\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'3\nName,Marks,Class,Name\nAlice,80,Highschool,Human\nBob,90,College,Robot\nCharlie,70,Highschool,Animal\nDavid,95,College,Spider') == '92.50'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nID,MARKS,CLASS,NAME\\n123,45.67,C,John\\n678,12.34,B,Jane\\n901,56.78,A,Mike\\n\") == \"38.33\"\nassert solution(\"2\\nID,MARKS,CLASS,NAME\\n123,45.67,C,John\\n678,12.34,B,Jane\\n901,56.78,A,Mike\\n\") == \"38.33\"\nassert solution(\"2\\nID,MARKS,CLASS,NAME\\n123,45.67,C,John\\n678,12.34,B,Jane\\n901,56.78,A,Mike\\n\") == \"38.33\"\nassert solution(\"2\\nID,MARKS,CLASS,NAME\\n123,45.67,C,John\\n678,12.34,B,Jane\\n901,56.78,A,Mike\\n\") == \"38.33\"",
        "num_ids_2": 146,
        "num_ids_4": 292
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5\\nJohn 80 200 C 1001\\nJane 60 400 D 1002\\nSarah 90 300 B 1003\\n'.splitlines()) == '1100.0'\nassert solution('1 2 3 4 5",
        "num_ids_2": 156,
        "num_ids_4": 312
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\nID,Marks,Class,Name\n1,80,C,John\n2,75,D,Jane\n3,90,B,Alice\n4,85,A,Bob\n5,95,C,Sara\n''') == '85.00'\nassert solution('''\n5\nID,Marks,Class,Name\n1,80,C,John\n2,75,D,Jane\n3,90,B,Alice\n4,85,A,Bob\n5,95,C,Sara\n''') == '85.00'\nassert solution('''\n5\nID,Marks,Class,Name\n1,80,C,John\n2,75,D,Jane\n3,90,B,Alice\n4,85,A,Bob\n5,95,C,Sara\n''') == '85.00'\nassert solution('''\n5\nID,Marks,Class,Name\n1,80,C,John\n2,75,D,Jane\n3,90,B,Alice\n4,85,A,Bob\n5,95,C,Sara\n''') == '85.00'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\nID,Marks,Class,Name\n1,50,Homework,John\n2,60,Lecture,Jane\n3,70,Homework,Mary\n''') == '80.0'\n\nassert solution('''\n3\nID,Marks,Class,Name\n1,50,Homework,John\n2,60,Lecture,Jane\n3,70,Homework,Mary\n''') == '85.0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nN: 5\nA, B, C, D, E\n100, 90, 80, 70, 60\n101, 91, 81, 71, 61\n102, 92, 82, 72, 62\n103, 93, 83, 73, 63\n104, 94, 84, 74, 64\n\"\"\") == \"57.2\"\n\nassert solution(\"\"\"\nN: 7\nA, B, C, D, E, F\n100, 90, 80, 70, 60, 50, 40\n101, 91, 81, 71, 61, 51, 41\n102, 92, 82, 72, 62, 52, 42\n103, 93, 83, 73, 63, 53, 43\n104, 94, 84, 74, 64, 54, 44\n105, 95, 85, 75, 65, 55, 45\n106, 96, 86, 76, 66, 56, 46\n107, 97, 87, 77, 67, 57, 47\n\"\"\") == \"57.2\"\n\nassert solution(\"\"\"\nN: 4\nA, B, C, D\n100, 90, 80, 70\n101, 91, 81, 71\n102, 92, 82, 72\n103, 93, 83, 73\n\"\"\") == \"57.0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(0)<N\u2264100, \"Input should have N<=100\"\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Weird\"\nassert solution(\"15\") == \"Not Weird\"\nassert solution(\"6\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"22\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"Not Weird\", \"Expected Not Weird, got {}\".format(solution(4))\nassert solution(6) == \"Not Weird\", \"Expected Not Weird, got {}\".format(solution(6))\nassert solution(25) == \"Weird\", \"Expected Weird, got {}\".format(solution(25))\nassert solution(21) == \"Not Weird\", \"Expected Not Weird, got {}\".format(solution(21))\nassert solution(15) == \"Not Weird\", \"Expected Not Weird, got {}\".format(solution(15))",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Not Weird\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"30\") == \"Weird\"\nassert solution(\"50\") == \"Weird\"\nassert solution(\"20\") == \"Not Weird\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"15\") == \"Not Weird\"\nassert solution(\"13\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"22\") == \"Weird\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5') == 'Not Weird', \"Error: Incorrect output\"\nassert solution('25') == 'Not Weird', \"Error: Incorrect output\"\nassert solution('30') == 'Weird', \"Error: Incorrect output\"\nassert solution('40') == 'Not Weird', \"Error: Incorrect output\"\nassert solution('50') == 'Not Weird', \"Error: Incorrect output\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 'Weird'\nassert solution(7) == 'Not Weird'\nassert solution(15) == 'Weird'\nassert solution(22) == 'Not Weird'\nassert solution(25) == 'Weird'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"Weird\"\nassert solution(\"22\") == \"Not Weird\"\nassert solution(\"33\") == \"Weird\"\nassert solution(\"55\") == \"Not Weird\"\nassert solution(\"77\") == \"Weird\"\nassert solution(\"88\") == \"Not Weird\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"Weird\"\nassert solution(\"345\") == \"Not Weird\"\nassert solution(\"678\") == \"Weird\"\nassert solution(\"234\") == \"Not Weird\"\nassert solution(\"235\") == \"Weird\"\nassert solution(\"456\") == \"Not Weird\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Weird\"\nassert solution(input()) == \"Not Weird\"\nassert solution(input()) == \"Weird\"\nassert solution(input()) == \"Not Weird\"\nassert solution(input()) == \"Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n  <a>1</a>\\n  <b>2</b>\\n  <c>\\n    <d>3</d>\\n    <e>\\n      <f>4</f>\\n    </e>\\n  </c>\\n</root>\") == 25, \"Your code is not working as expected.\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.xml').read()) == 10",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n<root><a attr1=\\\"1\\\" attr2=\\\"2\\\" attr3=\\\"3\\\"></a><b attr1=\\\"4\\\" attr2=\\\"5\\\" attr3=\\\"6\\\"></b><c attr1=\\\"7\\\" attr2=\\\"8\\\" attr3=\\\"9\\\"></c></root>\") == 60\nassert solution(\"2\\n<root><a attr1=\\\"1\\\" attr2=\\\"2\\\"></a><b attr1=\\\"4\\\" attr2=\\\"5\\\"></b><c attr1=\\\"7\\\" attr2=\\\"8\\\"></c></root>\") == 12\nassert solution(\"3\\n<root><a attr1=\\\"1\\\" attr2=\\\"2\\\"></a><b attr1=\\\"4\\\" attr2=\\\"5\\\"></b><c attr1=\\\"7\\\" attr2=\\\"8\\\"></c></root>\") == 12\nassert solution(\"4\\n<root><a attr1=\\\"1\\\" attr2=\\\"2\\\"></a><b attr1=\\\"4\\\" attr2=\\\"5\\\"></b><c attr1=\\\"7\\\" attr2=\\\"8\\\"></c></root>\") == 12\nassert solution(\"5\\n<root><a attr1=\\\"1\\\" attr2=\\\"2\\\"></a><b attr1=\\\"4\\\" attr2=\\\"5\\\"></b><c attr1=\\\"7\\\" attr2=\\\"8\\\"></c></root>\") == 12",
        "num_ids_2": 125,
        "num_ids_4": 235
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n<bookstore>\n  <book id=\"123\" title=\"The Catcher in the Rye\">\n    <author>J.D. Salinger</author>\n  </book>\n  <book id=\"456\" title=\"The Lord of the Rings\">\n    <author>J.R.R. Tolkien</author>\n  </book>\n</bookstore>\n\"\"\") == \"5\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person><name>John</name><age>25</age><city>New York</city></person><person><name>Jane</name><age>30</age><city>San Francisco</city></person></root>\") == 20, \"The XML document is not well-formed\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person><name>John</name><age>25</age><city>New York</city></person><person><name>Jane</name><age>30</age><city>San Francisco</city></person><person><name>Mary</name><age>40</age><city>Los Angeles</city></person></root>\") == 20, \"The XML document is not well-formed\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person><name>John</name><age>25</age><city>New York</city></person><person><name>Jane</name><age>30</age><city>San Francisco</city></person><person><name>Mary</name><age>40</age><city>Los Angeles</city></person><person><name>Tom</name><age>50</age><city>Chicago</city></person></root>\") == 20, \"The XML document is not well-formed\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person><name>John</name><age>25</age><city>New York</city></person><person><name>Jane</name><age>30</age><city>San Francisco</city></person><person><name>Mary</name><age>40</age><city>Los Angeles</city></person><person><name>Tom</name><age>50</age><city>Chicago</city></person><person><name>Mike</name><age>60</age><city>Houston</city></person></root>\") == 20, \"The XML document is not well-formed\"",
        "num_ids_2": 206,
        "num_ids_4": 512
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /></person></root>\") == 10\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /></person><person name=\\\"Mike\\\" age=\\\"25\\\"><address city=\\\"Los Angeles\\\" /></person></root>\") == 12\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /></person><person name=\\\"Mike\\\" age=\\\"25\\\"><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /></person></root>\") == 16\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /></person><person name=\\\"Mike\\\" age=\\\"25\\\"><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person></root>\") == 20\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /><address city=\\\"Los Angeles\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person><person name=\\\"Mike\\\" age=\\\"25\\\"><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person></root>\") == 24\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person name=\\\"John\\\" age=\\\"30\\\"><address city=\\\"New York\\\" /><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person><person name=\\\"Jane\\\" age=\\\"25\\\"><address city=\\\"San Francisco\\\" /><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person><person name=\\\"Mike\\\" age=\\\"25\\\"><address city=\\\"Los Angeles\\\" /><address city=\\\"San Diego\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /><address city=\\\"New York\\\" /></person></root>\") == 28",
        "num_ids_2": 159,
        "num_ids_4": 392
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>1984</title>\\n<author>Harper Lee</author>\\n<publisher>HarperCollins</publisher>\\n<publication-date>1984</publication-date>\\n</book>') == 26",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>The Hitchhiker\\'s Guide to the Galaxy</title>\\n<author>J.D. Salinger</author>\\n<genre>Fiction</genre>\\n<pages>360</pages>\\n</book>') == 578\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>To Kill a Mockingbird</title>\\n<author>J.D. Salinger</author>\\n<genre>Fiction</genre>\\n<pages>360</pages>\\n<price>14.95</price>\\n</book>') == 112.5\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>To Kill a Mockingbird</title>\\n<author>J.D. Salinger</author>\\n<genre>Fiction</genre>\\n<pages>360</pages>\\n<price>14.95</price>\\n<summary>An investigation into the origins of the rebels and their plans to kill the mockingbird.</summary>\\n</book>') == 115.6\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>To Kill a Mockingbird</title>\\n<author>J.D. Salinger</author>\\n<genre>Fiction</genre>\\n<pages>360</pages>\\n<price>14.95</price>\\n<summary>An investigation into the origins of the rebels and their plans to kill the mockingbird.</summary>\\n<characters>\\n<character name=\"George Washington\">\\n<age>25</age>\\n<occupation>Teacher</occupation>\\n</character>\\n<character name=\"J.D. Salinger\">\\n<age>28</age>\\n<occupation>Doctor</occupation>\\n</character>\\n</characters>\\n</book>') == 248.75\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>To Kill a Mockingbird</title>\\n<author>J.D. Salinger</author>\\n<genre>Fiction</genre>\\n<pages>360</pages>\\n<price>14.95</price>\\n<summary>An investigation into the origins of the rebels and their plans to kill the mockingbird.</summary>\\n<characters>\\n<character name=\"George Washington\">\\n<age>25</age>\\n<occupation>Teacher</occupation>\\n</character>\\n<character name=\"J.D. Salinger\">\\n<age>28</age>\\n<occupation>Doctor</occupation>\\n</character>\\n</characters>\\n<publisher>HarperCollins</publisher>\\n</book>') == 435.75",
        "num_ids_2": 173,
        "num_ids_4": 486
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n<title>The Hobbit</title>\\n<author>J.R.R. Tolkien</author>\\n<price>34.99</price>\\n<publisher>Scribner's Studios</publisher>\\n</book>\") == 212",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n</root>\") == 13 # Correct score\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n<person name=\\\"Tom\\\" age=\\\"40\\\"/>\\n</root>\") == 15 # Correct score\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n<person name=\\\"Tom\\\" age=\\\"40\\\"/>\\n<person name=\\\"Jane\\\" age=\\\"29\\\"/>\\n</root>\") == 17 # Correct score\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n<person name=\\\"Tom\\\" age=\\\"40\\\"/>\\n<person name=\\\"Jane\\\" age=\\\"29\\\"/>\\n<person name=\\\"Bob\\\" age=\\\"45\\\"/>\\n</root>\") == 19 # Correct score\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n<person name=\\\"Tom\\\" age=\\\"40\\\"/>\\n<person name=\\\"Jane\\\" age=\\\"29\\\"/>\\n<person name=\\\"Bob\\\" age=\\\"45\\\"/>\\n<person name=\\\"Alice\\\" age=\\\"22\\\"/>\\n</root>\") == 21 # Correct score\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<person name=\\\"John\\\" age=\\\"30\\\"/>\\n<person name=\\\"Mary\\\" age=\\\"25\\\"/>\\n<person name=\\\"Tom\\\" age=\\\"40\\\"/>\\n<person name=\\\"Jane\\\" age=\\\"29\\\"/>\\n<person name=\\\"Bob\\\" age=\\\"45\\\"/>\\n<person name=\\\"Alice\\\" age=\\\"22\\\"/>\\n<person name=\\\"David\\\" age=\\\"35\\\"/>\\n</root>\") == 23 # Correct score",
        "num_ids_2": 142,
        "num_ids_4": 342
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3.1 4.2 5.3 6.4 1 2 3 4') == '35.13', \"Test Case 1\"\nassert solution('5.1 6.2 7.3 8.4 10 20 30 40') == '33.57', \"Test Case 2\"\nassert solution('7.1 8.2 9.3 10.4 20 40 60 80') == '67.90', \"Test Case 3\"\nassert solution('10.1 11.2 12.3 13.4 30 50 70 90') == '180.00', \"Test Case 4\"\nassert solution('15.1 16.2 17.3 18.4 25 45 65 85') == '287.59', \"Test Case 5\"",
        "num_ids_2": 88,
        "num_ids_4": 186
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1.2 -3.4 5.6 7.8') == '65.0'\nassert solution('2.2 3.4 4.6 5.8') == '43.1'\nassert solution('1.2 -3.4 5.6 7.8') == '65.0'\nassert solution('2.2 3.4 4.6 5.8') == '43.1'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1.0 1.0 1.0') == '0.0', \"Expected output 0.0 but got {}\".format(solution('1.0 1.0 1.0'))\nassert solution('2.0 3.0 4.0') == '180.0', \"Expected output 180.0 but got {}\".format(solution('2.0 3.0 4.0'))\nassert solution('1.0 2.0 3.0') == '103.125', \"Expected output 103.125 but got {}\".format(solution('1.0 2.0 3.0'))\nassert solution('0.0 0.0 0.0') == '0.0', \"Expected output 0.0 but got {}\".format(solution('0.0 0.0 0.0'))",
        "num_ids_2": 100,
        "num_ids_4": 204
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"10.0\", \"Invalid output\"\nassert solution(\"1 -2 3 4 5 6 7 8 9\") == \"180.0\", \"Invalid output\"\nassert solution(\"-1 2 3 4 5 6 7 8 9\") == \"0.0\", \"Invalid output\"\nassert solution(\"1 2 -3 4 5 6 7 8 9\") == \"360.0\", \"Invalid output\"\nassert solution(\"1 2 3 -4 5 6 7 8 9\") == \"270.0\", \"Invalid output\"\nassert solution(\"1 2 3 4 -5 6 7 8 9\") == \"90.0\", \"Invalid output\"",
        "num_ids_2": 67,
        "num_ids_4": 133
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 -2 4 5\") == 90.0\nassert solution(\"1 2 3 4\") == 45.0\nassert solution(\"2 3 4 5\") == 135.0\nassert solution(\"2 3 4 -5\") == 225.0",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0 0\\n0 3 0 0\\n0 0 3 0\\n0 0 0 3') == '45.00'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1.5707963267948966\", \"Test case 1 failed\"\nassert solution(\"2 3 4 5 6\") == \"1.5707963267948966\", \"Test case 2 failed\"\nassert solution(\"3 4 5 6 7\") == \"1.5707963267948966\", \"Test case 3 failed\"\nassert solution(\"4 5 6 7 8\") == \"1.5707963267948966\", \"Test case 4 failed\"\nassert solution(\"5 6 7 8 9\") == \"1.5707963267948966\", \"Test case 5 failed\"\n\nfrom typing import List\nimport math",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"66.66666666666666\", \"Solution should return the correct angle in degrees.\"\nassert solution(\"2 3 4 5 6\") == \"22.222222222222223\", \"Solution should return the correct angle in degrees.\"\nassert solution(\"7 8 9 10 11\") == \"21.111111111111111\", \"Solution should return the correct angle in degrees.\"\nassert solution(\"12 13 14 15 16\") == \"33.333333333333334\", \"Solution should return the correct angle in degrees.\"",
        "num_ids_2": 89,
        "num_ids_4": 186
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3.0 4.0 -2.0\") == 36.0511, \"Test Case 1 failed\"\nassert solution(\"1.0 -2.0 3.0\") == 45.0857, \"Test Case 2 failed\"\nassert solution(\"4.0 -1.0 0.0\") == 180.0, \"Test Case 3 failed\"\nassert solution(\"-1.0 2.0 3.0\") == 135.16, \"Test Case 4 failed\"\nassert solution(\"-1.0 3.0 2.0\") == 180.0, \"Test Case 5 failed\"\nassert solution(\"1.0 -1.0 3.0\") == 225.49, \"Test Case 6 failed\"",
        "num_ids_2": 66,
        "num_ids_4": 129
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4 5\\n6 7 8 9\") == \"68.22\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\napple\\norange\\nbanana\\ngrape') == 8\nassert solution('3\\ncat\\ndog\\nmonkey') == 1\nassert solution('1\\n') == 1\n\nfrom typing import List",
        "num_ids_2": 41,
        "num_ids_4": 52
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nevery\\ncomputer\\n1\\nprogram\\nyour\\nworld\\n1\\nthis\\ncode\\n\") == 13\nassert solution(\"2\\napple\\nbanana\\norange\\nostrich\\ntangerine\\n\") == 16\nassert solution(\"3\\ncat\\ndog\\nelephant\\nhorse\\nmonkey\\n\") == 30\nassert solution(\"4\\nhello\\nworld\\npython\\n1\\nlisp\\n\") == 12\nassert solution(\"5\\nthe\\nquick\\nbrown\\nbird\\njumps\\nover\\n\") == 16",
        "num_ids_2": 69,
        "num_ids_4": 125
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2\napple\nbanana\norange\npineapple\n''') == '''\n3\napple\nbanana\norange\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\npineapple\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(n)) == expected_output, f\"Function score_words should return {expected_output} but returned {solution(str(n))}\"\n\nfor i in range(1, n+1):\n    assert score_words([f\"word{i}\"]) == expected_output, f\"Function score_words should return {expected_output} but returned {score_words([f\"word{i}\"])}\"\n\nassert score_words([]) == 0, f\"Function score_words should return 0 but returned {score_words([])}\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\napple\\nbanana\\norange\\ngrape\\n\") == \"2\\n2\\n1\\n2\\n2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nhello\\nworld\\n') == 6\nassert solution('3\\napple\\nbanana\\n') == 10\nassert solution('4\\ncat\\ndog\\n') == 8\nassert solution('5\\nmonkey\\nzebra\\n') == 10\nassert solution('6\\n123\\n456\\n789\\n') == 33\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\napple\\nbanana\\npopcorn\\n') == 11\nassert solution('3\\ncherry\\nberry\\nbanana\\n') == 8\nassert solution('4\\ngrape\\ncherry\\nbanana\\n') == 12\nassert solution('5\\napple\\nbanana\\nbanana\\n') == 12",
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\neverything\\n1\\napple\\ny\\n') == '2\\n3\\n'\nassert solution('2\\napple\\ny\\norange\\nbanana\\n') == '3\\n2\\n'\nassert solution('3\\napple\\nbanana\\ny\\norange\\n') == '2\\n1\\n'\nassert solution('1\\ny\\n') == '1\\n'\nassert solution('2\\ny\\n') == '1\\n'\nassert solution('3\\ny\\n') == '1\\n'\nassert solution('4\\ny\\n') == '0\\n'\nassert solution('1\\nn\\n') == '1\\n'\nassert solution('2\\nn\\n') == '1\\n'\nassert solution('3\\nn\\n') == '1\\n'\nassert solution('4\\nn\\n') == '0\\n'\nassert solution('5\\nn\\n') == '1\\n'",
        "num_ids_2": 58,
        "num_ids_4": 103
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Debug the given function score_words such that it returns a correct score.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\napple\\nbanana\\ncherry\\ndate\\n\") == \"5\"\nassert solution(\"2\\nhello\\nworld\\npython\\n\") == \"0\"\nassert solution(\"3\\nabc\\ndef\\nghi\\njkl\\nmno\\n\") == \"0\"\nassert solution(\"4\\namazing\\napple\\nbanana\\ncherry\\ndate\\n\") == \"4\"\nassert solution(\"5\\napple\\nbanana\\ncherry\\ndate\\ny\\n\") == \"4\"",
        "num_ids_2": 47,
        "num_ids_4": 103
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"III\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"L\") == True\nassert solution(\"CMXCIV\") == True\nassert solution(\"MDCCXXXVIII\") == True\nassert solution(\"MCMXCIX\") == True\nassert solution(\"D\") == True\nassert solution(\"CD\") == True\nassert solution(\"CM\") == True\nassert solution(\"XC\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"LVIII\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MMXCIV\") == True\nassert solution(\"MMXVIII\") == True\nassert solution(\"MMMCMXCIX\") == True\nassert solution(\"MMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCMXCIX\") == True\nassert solution(\"MMMMCM",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"MMMCMXCIX\") == True\nassert solution(\"MCMXCIV\") == False\nassert solution(\"MMM\") == True\nassert solution(\"MM\") == False\nassert solution(\"MMMCC\") == False\nassert solution(\"MMMCCC\") == True",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"IV\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MMIX\") == False\nassert solution(\"LXXVIIII\") == False\nassert solution(\"XLIX\") == False\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"IV\") == \"True\"\nassert solution(\"IX\") == \"True\"\nassert solution(\"XL\") == \"True\"\nassert solution(\"XC\") == \"True\"\nassert solution(\"MCMXCIV\") == \"True\"\nassert solution(\"MCMXCIX\") == \"True\"\nassert solution(\"MMMCMXCIV\") == \"True\"\nassert solution(\"MMMCMXCIX\") == \"False\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('MCMXCIV') == True\nassert solution('MMMIV') == True\nassert solution('MMXX') == False\nassert solution('MMCMXCIX') == False",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"XL\") == True\nassert solution(\"XC\") == True\nassert solution(\"CMX\") == True\n\nassert solution(\"D\") == False\nassert solution(\"CD\") == False\nassert solution(\"MCMXCIX\") == False\n\nassert solution(\"M\") == False\nassert solution(\"MM\") == False\nassert solution(\"MMX\") == False\n\nassert solution(\"L\") == False\nassert solution(\"LL\") == False\nassert solution(\"LXX\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"MCMXC\") == \"True\"\nassert solution(\"MDCCCLXXXI\") == \"True\"\nassert solution(\"MMXXI\") == \"False\"\nassert solution(\"MCMLXXXIX\") == \"False\"\nassert solution(\"MMCMXCIV\") == \"False\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"MCMXCIV\") == True, \"Invalid Roman numeral: MCMXCIV\"\nassert solution(\"LXIV\") == False, \"Invalid Roman numeral: LXIV\"\nassert solution(\"MCMLXXXIX\") == True, \"Invalid Roman numeral: MCMLXXXIX\"\nassert solution(\"MMIX\") == False, \"Invalid Roman numeral: MMXIX\"\nassert solution(\"MCMXCIV\") == False, \"Invalid Roman numeral: MCMXCIV\"",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('III') == True\nassert solution('IV') == True\nassert solution('IX') == True\nassert solution('LVIII') == True\nassert solution('MCMXCIV') == True\nassert solution('MDCCCLXXVII') == False\nassert solution('XII') == False\nassert solution('XXXI') == False",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"IV\") == True, \"IV is not a valid Roman numeral.\"\nassert solution(\"IX\") == True, \"IX is not a valid Roman numeral.\"\nassert solution(\"XL\") == True, \"XL is not a valid Roman numeral.\"\nassert solution(\"CM\") == True, \"CM is not a valid Roman numeral.\"\nassert solution(\"M\") == False, \"M is a valid Roman numeral.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"91 91 1234567890 91 1234567890\") == \"+91 1234567890 1234567890\", \"Invalid output: +91 1234567890 1234567890\"\nassert solution(\"91 91 1234567890\") == \"+91 1234567890\", \"Invalid output: +91 1234567890\"\nassert solution(\"91 911234567890 91 1234567890\") == \"+91 1234567890\", \"Invalid output: +91 1234567890\"\nassert solution(\"911234567890\") == \"+91 1234567890\", \"Invalid output: +91 1234567890\"\nassert solution(\"1234567890\") == \"+1234567890\", \"Invalid output: +1234567890\"",
        "num_ids_2": 148,
        "num_ids_4": 269
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"91 1234567890 6543210987 54321098765 32109876543\") == \"+91 32109876543 54321098765 6543210987 91 1234567890\"\nassert solution(\"123 456 7890 6543210987 54321098765 32109876543\") == \"+91 32109876543 54321098765 6543210987 91 1234567890\"\nassert solution(\"091 1234567890 6543210987 54321098765 32109876543\") == \"+91 32109876543 54321098765 6543210987 91 1234567890\"\nassert solution(\"\") == \"No mobile numbers found\"\n",
        "num_ids_2": 213,
        "num_ids_4": 332
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9176543210\") == \"+91 76543210\"\nassert solution(\"+9176543210\") == \"+91 76543210\"\nassert solution(\"09176543210\") == \"+91 76543210\"\nassert solution(\"91765432\") == \"91765432\"\nassert solution(\"+91765432\") == \"+91 765432\"\nassert solution(\"091765432\") == \"091765432\"\nassert solution(\"91765432101\") == \"9176543210\"\nassert solution(\"917654321011\") == \"9176543210\"\nassert solution(\"9176543210111\") == \"9176543210\"\nassert solution(\"91765432101111\") == \"9176543210\"\nassert solution(\"917654321011111\") == \"9176543210\"\nassert solution(\"9176543210111111\") == \"9176543210\"",
        "num_ids_2": 58,
        "num_ids_4": 112
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '+91 1234567890 9876543210 0987654321 1234567890'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'x1234567890\\nx9876543210\\nx1234567890\\nx9876543210\\nx1234567890'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"91234567890\") == \"91234567890\\n\"\nassert solution(\"1234567890\") == \"1234567890\\n\"\nassert solution(\"91234567890123456789\") == \"91234567890123456789\\n\"\nassert solution(\"91234567890 01234567890\") == \"91234567890 01234567890\\n\"\nassert solution(\"+91234567890\") == \"+91234567890\\n\"\nassert solution(\"91234567890\") == \"91234567890\\n\"\nassert solution(\"91234567890123456789\") == \"91234567890123456789\\n\"\nassert solution(\"+91234567890\") == \"+91234567890\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 168
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n+91 1234567890\\n+91 9876543210\\n+91 0987654321\\n91 1234567890\\n') == '+91 1234567890\\n+91 9876543210\\n+91 0987654321\\n91 1234567890'",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"91 xxxxx xxxxx\\n91 1234567890 xxxxx\\n1234567890 xxxxx\\n234567890 xxxxx\\n\"\n\nassert solution(\"0\\n1\\n2\\n3\\n4\") == \"0123456789\\n0123456789\\n0123456789\\n0123456789\\n0123456789\\n\"\n\nassert solution(\"5\\n6\\n7\") == \"91 xxxxx xxxxx\\n91 1234567890 xxxxx\\n1234567890 xxxxx\\n234567890 xxxxx\\n34567890 xxxxx\\n4567890 xxxxx\\n\"\n\nassert solution(\"8\\n9\\n10\\n11\\n12\") == \"91 xxxxx xxxxx\\n91 1234567890 xxxxx\\n1234567890 xxxxx\\n234567890 xxxxx\\n34567890 xxxxx\\n4567890 xxxxx\\n567890 xxxxx\\n\"",
        "num_ids_2": 148,
        "num_ids_4": 347
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n+9191919191\\n+919123456789') == '+919123456789\\n+9191919191\\n+919191234567'\nassert solution('3\\n9191919191\\n+919123456789\\n12345678901') == '+919123456789\\n+9191919191\\n+919191234567\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9191919191\\n+9",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n9123456789\n9876543210\n0987654321\n1234567890\n9876543210\n0987654321\n1234567890\n''') == '''\n0987654321\n1234567890\n9876543210\n9123456789\n''', \"Input: \\n9123456789\\n9876543210\\n0987654321\\n1234567890\\n9876543210\\n0987654321\\n1234567890\\n\\nOutput: \\n0987654321\\n1234567890\\n9876543210\\n9123456789\\n\"\n\nassert solution('''\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n''') == '''\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n''', \"Input: \\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n\\nOutput: \\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n\"\n\nassert solution('''\n1234567890\n9876543210\n9876543210\n9876543210\n9876543210\n''') == '''\n9876543210\n9876543210\n9876543210\n9876543210\n9876543210\n''', \"Input: \\n1234567890\\n9876543210\\n9876543210\\n9876543210\\n9876543210\\n\\nOutput: \\n9876543210\\n9876543210\\n9876543210\\n9876543210\\n9876543210\\n\"\n\nassert solution('''\n1234567890\n1234567890\n1234567890\n9876543210\n9876543210\n''') == '''\n1234567890\n1234567890\n1234567890\n9876543210\n9876543210\n''', \"Input: \\n1234567890\\n1234567890\\n1234567890\\n9876543210\\n9876543210\\n\\nOutput: \\n1234567890\\n1234567890\\n1234567890\\n9876543210",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name\\nbeta\\n\") == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n50\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n'\n'alpha 20\\nbeta 30\\n'\n'gamma 50\\n'\n'query_name gamma\\n') == '50.00\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = beta\\n') == '50.00\\n'\n\nassert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = gamma\\n') == '50.00\\n'\n\nassert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = alpha\\n') == '20.00\\n'",
        "num_ids_2": 102,
        "num_ids_4": 153
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"50.00\", \"The average of the marks obtained by the particular student correct to 2 decimal places.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'The average of the marks obtained by the particular student correct to 2 decimal places.\\n', f'The solution({input()}) should return \"The average of the marks obtained by the particular student correct to 2 decimal places.\" but returned \"{solution(input())}.\"'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nalpha 20\\nbeta 30\\nbeta 50\\nbeta 70\\nbeta 90\\nquery_name beta\\n\") == \"50.00\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"50\", \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    alpha 20 30 40\n    beta 30 50 70\n    query_name beta\n    \"\"\"\n) == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n50.00\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    alpha 20 30 40\n    beta 30 50 70\n    query_name alpha\n    \"\"\"\n) == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n20.00\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\\n\") == \"50.00\\n\"\nassert solution(\"3\\njohn 85\\nmary 90\\nquery_name john\\n\") == \"85.00\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nalpha 20\\nbeta 30\\nbeta 40\\nbeta 50\\n\") == \"50\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\nJohn Doe 30 M\nJane Smith 28 F\nMark Brown 25 M\"\"\") == \"Mr. John Doe\\nMr. Jane Smith\\nMs. Mark Brown\"\nassert solution(\"\"\"2\nAlice John 27 F\nBob Smith 30 M\nCharlie John 26 M\"\"\") == \"Ms. Alice John\\nMs. Bob Smith\\nMr. Charlie John\"\nassert solution(\"\"\"3\nAlice Smith 25 F\nBob John 29 M\nCharlie Smith 29 M\"\"\") == \"Ms. Alice Smith\\nMr. Bob John\\nMs. Charlie Smith\"\nassert solution(\"\"\"4\nBrian Johnson 30 M\nChris Rogers 25 F\nDavid Salinger 28 M\"\"\") == \"Mr. Brian Johnson\\nMr. Chris Rogers\\nMs. David Salinger\"\nassert solution(\"\"\"5\nJohn Davis 28 F\nMichael George 30 M\nSarah Baker 29 F\"\"\") == \"Ms. John Davis\\nMr. Michael George\\nMr. Sarah Baker\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nJohn Doe 25 M\\nJane Smith 30 F\\nPeter Johnson 28 F\\nMike Smith 30 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\\nJohn\\tDoe\\t25\\tM\\nJane\\tDoe\\t22\\tM\\n\\nAdam\\tSmith\\t30\\tF\\n\\n\\nMary\\tJohnson\\t35\\tM\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nHenry\\nDavids\\n4\\nMary\\nGeorge\\n10\\nAlice\\nBob\\n12\\nEve\\nMary\\nJohn\\n1\\n\") == \"Mr. Henry Davids\\nMr. Mary George\\nMs. Alice Bob\\nMs. Eve Mary John\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nJohn Doe 25\\nJane Doe 25\\nJudy Doe 23\\nPeter John 30\\n\\n') == 'Mr. Henry Davids\\nMs. Mary George\\n'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1  Harry Potter 35  M\\n2  Alice Wonderland 25  F\\n3  Bob Johnson 42  M\\n4  Charlie Davis 29  F\\n5  David Salinger 32  M\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"1  Jane Smith 30  M\\n2  Bob Johnson 45  F\\n3  Charlie Davis 35  M\\n4  David Salinger 25  F\\n5  Eve Davis 30  M\") == \"Ms. Eve Davis\\nMr. Jane Smith\\n\"",
        "num_ids_2": 169,
        "num_ids_4": 169
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nMr. Henry Davids\\nMs. Mary George\\nJohn\\nMary\\nJohn\\n') == 'Mr. Henry Davids\\nMs. Mary George\\nJohn\\nMary\\n'\nassert solution('3\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n') == 'Alice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n'\nassert solution('4\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n') == 'Alice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n'\nassert solution('5\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n') == 'Alice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n'\nassert solution('6\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n') == 'Alice\\nBob\\nCharlie\\nDavid\\nEve\\nFrank\\n'",
        "num_ids_2": 115,
        "num_ids_4": 221
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nHenry\\n17\\nF\\nMary\\n22\\nM\\n\") == \"Mr. Henry\\nMr. Mary\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nHenry\\n22\\nGeorge\\n18\\nAlice\\n19\\nJohn\\n25\\n\") == \"Mr. Henry\\nMs. Mary George\\nMr. John\\n\"\nassert solution(\"3\\nAlice\\n28\\nBob\\n25\\nCharlie\\n30\\nDavid\\n\") == \"Mr. Alice\\nMr. Bob\\nMr. Charlie\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n') == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"2\\n2\\n2\\n3\\n\") == [[1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution(\"3\\n3\\n3\\n\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution(\"4\\n4\\n4\\n\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2]]\nassert solution(\"5\\n5\\n5\\n\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 2]]\n",
        "num_ids_2": 234,
        "num_ids_4": 651
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n1\\n1\\n3\\n\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"3\\n1\\n2\\n4\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n2\\n3\\n4\") == []\nassert solution(\"2\\n3\\n4\\n5\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 248,
        "num_ids_4": 389
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"1 1 3 2\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"2 2 1 3\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"3 1 3 2\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"4 2 3 1\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"5 1 2 3\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"\nassert solution(\"1 1 3 2\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n\"",
        "num_ids_2": 245,
        "num_ids_4": 490
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"0.00+0.00i\"\nassert solution(\"0 1\") == \"-0.00+1.00i\"\nassert solution(\"1 1\") == \"2+0.00i\"\nassert solution(\"3 1\") == \"3.00+1.00i\"\nassert solution(\"-3 2\") == \"-1.00+1.00i\"",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.2+3.4i\") == \"1.2-3.4i\"\nassert solution(\"-1.2+3.4i\") == \"1.2+3.4i\"\nassert solution(\"1.2-3.4i\") == \"0.6-0.8i\"\nassert solution(\"1.2*3.4i\") == \"2.8+1.6i\"\nassert solution(\"1.2/3.4i\") == \"0.6+1.6i\"\nassert solution(\"1.2%3.4i\") == \"1.0+2.0i\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5+3i\") == \"5+3i\", \"Test failed\"\nassert solution(\"2+3i\") == \"2-3i\", \"Test failed\"\nassert solution(\"3-2i\") == \"3+2i\", \"Test failed\"\nassert solution(\"4/2i\") == \"0.5+0.5i\", \"Test failed\"\nassert solution(\"7/2i\") == \"3.00+2.00i\", \"Test failed\"\nassert solution(\"123+456i\") == \"132+408i\", \"Test failed\"\nassert solution(\"7+8i\") == \"7+8i\", \"Test failed\"\nassert solution(\"9i\") == \"9i\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1+3i\") == \"1-3i\"\nassert solution(\"1-2i\") == \"1+2i\"\nassert solution(\"5*2i\") == \"5+2i\"\nassert solution(\"3/2i\") == \"1+1i\"\nassert solution(\"10%2\") == \"1+0i\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"C+D\\nC-D\\nC*D\\nC/D\\nmod(C)\\nmod(D)\\n\", \"Test Case 1 Failed\"\n\nassert solution(\"1+2i\") == \"1.00+2.00i\\n-1.00-2.00i\\n-1.00+2.00i\\n1.00-2.00i\\n0\\n0\\n\", \"Test Case 2 Failed\"\n\nassert solution(\"1+0i\") == \"1.00+0.00i\\n1.00+0.00i\\n1.00+0.00i\\n1.00+0.00i\\n0\\n0\\n\", \"Test Case 3 Failed\"\n\nassert solution(\"0+2i\") == \"0.00+2.00i\\n0.00+2.00i\\n0.00+2.00i\\n0.00+2.00i\\n0\\n0\\n\", \"Test Case 4 Failed\"\n\nassert solution(\"0-2i\") == \"0.00-2.00i\\n0.00-2.00i\\n0.00-2.00i\\n0.00-2.00i\\n0\\n0\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 121,
        "num_ids_4": 267
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3+4i\") == \"3+4i\\n-3-4i\\n4*3i\\n4/3i\\n2\\n\"\nassert solution(\"0+0i\") == \"0+0i\\n0+0i\\n0+0i\\n0+0i\\n\"\nassert solution(\"1+0i\") == \"1+0i\\n1+0i\\n1+0i\\n1+0i\\n\"\nassert solution(\"4+4i\") == \"4+4i\\n-4-4i\\n8+4i\\n4/4i\\n2\\n\"\nassert solution(\"-4-4i\") == \"4+4i\\n-4-4i\\n4+4i\\n-4-4i\\n2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 - 4i + 1 + 5i\") == \"1.00+1.00i\"\nassert solution(\"5 - 1i\") == \"5.00+0.00i\"\nassert solution(\"6i + 7i\") == \"14.00+2.00i\"\nassert solution(\"2i - 5i\") == \"1.00-4.00i\"\nassert solution(\"5 - 2i\") == \"2.00+2.00i\"\n",
        "num_ids_2": 53,
        "num_ids_4": 102
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2+3i\") == \"2+3i\\n2-3i\\n2*3i\\n2/3i\\n2\\n2\"\nassert solution(\"1+0i\") == \"1+0i\\n1+0i\\n1+0i\\n1+0i\\n1\"\nassert solution(\"0+0i\") == \"0.00+0.00i\"\nassert solution(\"5-1i\") == \"5-1i\\n4+2i\\n-2+4i\\n1/3i\\n1/3\"\nassert solution(\"1+2i\") == \"1+2i\\n3+4i\\n5+6i\\n7+8i\\n-2i\"\n\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 77,
        "num_ids_4": 139
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 -1 2') == '3-12i'\nassert solution('3 4 2 0') == '3+4i'\nassert solution('-3 4 -1 2') == '-3-12i'\nassert solution('3 -4 2 0') == '3-4i'\nassert solution('3 4 0 -2') == '-3+4i'",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3i\") == \"2+3i\"\nassert solution(\"2+-3i\") == \"2+3i\"\nassert solution(\"2*3i\") == \"2*3i\"\nassert solution(\"2/3i\") == \"2/3i\"\nassert solution(\"5/3i\") == \"1.333333333333333i\"\nassert solution(\"2+0i\") == \"2+0i\"\nassert solution(\"2+0+0i\") == \"2+0+0i\"\nassert solution(\"2+0+0-0i\") == \"2+0i\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\\n\", \"Test 1 failed.\"\nassert solution(\"xyz\\n\") == \"xyz\\n\", \"Test 2 failed.\"\nassert solution(\"xyz\\n\") == \"xyz\\n\", \"Test 3 failed.\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\", \"Incorrect output\"\nassert solution(\"xyz\\nabc\") == \"xaybzc\", \"Incorrect output\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"The original password is xaybzc.\"\nassert solution(\"abc\") == \"xaybzc\", \"The original password is xaybzc.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"xyz\\nabc\\n\") == \"xaybzc\"\nassert solution(\"abc\\nxyz\\n\") == \"xaybzc\"\nassert solution(\"def\\nefg\\n\") == \"defg\"\nassert solution(\"abc\\ndef\\n\") == \"abc\"\nassert solution(\"xyz\\nxyz\\n\") == \"xyz\"",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('01B0') == '00', 'The correct string is not displayed in the editor.'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00', \"Expected '00', but got '{}'.\".format(solution('01B0'))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct string should be '00'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"02B1\") == \"010\"\nassert solution(\"1B0\") == \"0\"\nassert solution(\"\") == \"\"\nassert solution(\"B0\") == \"B\"",
        "num_ids_2": 29,
        "num_ids_4": 47
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\", \"Incorrect output for '01B0'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\", \"The solution should return the string '00'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 0 1 0 1 2\") == \"4\"\nassert solution(\"5\\n2 1 1 1 1\") == \"0\"\nassert solution(\"5\\n2 0 0 0 0\") == \"4\"\nassert solution(\"5\\n2 0 0 0 0 1\") == \"4\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n3 2 4 1 0\") == \"4\"\nassert solution(\"5\\n2 0 5 4 3\") == \"4\"\nassert solution(\"5\\n3 2 1 0 4\") == \"4\"\nassert solution(\"5\\n2 1 5 4 0\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n3 2 1 4 5\") == \"1\"\nassert solution(\"5\\n1 0 2 1 2\") == \"2\"\nassert solution(\"5\\n2 2 2 2 2\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 0\") == \"0\"\nassert solution(\"5\\n0 1 1 1 1\") == \"0\"\nassert solution(\"5\\n0 0 0 0 0\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"5\\n2 1 5 4 3\\n4 5 6 7 8\") == \"4\\n\"\nassert solution(\"5\\n2 1 5 4 3\\n4 5 6 7 8\\n9 10 11 12 13\") == \"9\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 106
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4\\n' # Sample Output\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"5\\n2 1 5 4 3 0\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3 0\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aca\\naccc\\nca\\n\") == \"A\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"A\"\nassert solution(\"b\") == \"B\"\nassert solution(\"c\") == \"C\"\n\nassert solution(\"a\") == \"A\"\nassert solution(\"b\") == \"B\"\nassert solution(\"c\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aca\\naccc\\nc\") == \"A\"\nassert solution(\"aca\\naca\\naca\") == \"B\"\nassert solution(\"aca\\naca\\naca\\naca\\naca\") == \"C\"\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"A\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"\n\nassert solution(\"abb\\naaa\\nccc\") == \"B\"\n\nassert solution(\"aaa\\nbbb\\nccc\") == \"C\"\n\nassert solution(\"aaa\\nbbb\\naaa\") == \"C\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aca\\naccc\\nc\\n\") == \"A\\n\"\nassert solution(\"acb\\nb\\na\\n\") == \"B\\n\"\nassert solution(\"acd\\nca\\na\\n\") == \"C\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\", \"Solution should be YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"11\", \"The 5-th Lucas number should be 11.\"\n\nprint(\"All test cases pass.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"11\\n\", \"5-th Lucas number is not correct\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '11\\n', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"1040\"\nassert solution(\"100\") == \"10405400\"\nassert solution(\"10000\") == \"1040540011277400\"\nassert solution(\"100000\") == \"1040540011277400113500825522392000\"",
        "num_ids_2": 25,
        "num_ids_4": 73
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\\n\", \"Test Failed: Incorrect output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"11\\n\"\n\nimport math",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"11\\n\", \"Test failed for solution(5)\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '11'\nassert solution(10) == '17'\nassert solution(15) == '25'\nassert solution(20) == '35'\nassert solution(30) == '55'\nassert solution(35) == '89'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '11\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\", \"Incorrect output\"\nassert solution(input()) == \"7\", \"Incorrect output\"\nassert solution(input()) == \"7\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"\nassert solution(\"1\\n5\\n3\") == \"10\"\nassert solution(\"2\\n6\\n4\") == \"12\"\nassert solution(\"5\\n7\\n8\") == \"15\"\nassert solution(\"3\\n8\\n6\") == \"20\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\\n\"\n\na, b, h = map(int, stdin.split())\nassert a >= 1 and a <= 100\nassert b >= 1 and b <= 100\nassert h >= 1 and h <= 100\nassert h % 2 == 0\n\narea = (a + b) * (h / 2)\nprint(area)",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\\n\", \"Your code is missing the input() function.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4\\n2\\n') == '7'\nassert solution('6\\n4\\n2\\n') == '24'\nassert solution('8\\n5\\n2\\n') == '36'\nassert solution('6\\n4\\n2\\n') == '24'\nassert solution('8\\n5\\n2\\n') == '36'\nassert solution('3\\n4\\n2\\n') == '7'",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 7\nassert solution('3\\n4\\n2\\n') == 7",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\\n\", \"Sample Output does not match the expected output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"24\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"45\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"70\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"101\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"134\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"169\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"202\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"243\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"11\\n\"\nassert solution(\"1\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n10000",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '11'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"11\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '11\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 4 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('3 6 8') == 'YES'\nassert solution('5 10 15') == 'NO'\nassert solution('3 3 2') == 'YES'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 3 2\") == \"NO\"\nassert solution(\"3 3 2\") == \"NO\"\nassert solution(\"6 3 2\") == \"YES\"\nassert solution(\"2 3 2\") == \"NO\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"4 3 1\") == \"YES\"\nassert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 3 4\") == \"NO\"\nassert solution(\"4 3 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 2 3\") == \"YES\"\nassert solution(\"5 5 5\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"5 6 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 2 2\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"7 1 4\") == \"YES\"\nassert solution(\"2 5 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3 2') == 'YES', \"Function should return YES\"\nassert solution('4 5 6') == 'NO', \"Function should return NO\"\nassert solution('9 8 7') == 'NO', \"Function should return NO\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 4 2\") == \"NO\"\nassert solution(\"3 4 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 5 6\") == \"NO\"\nassert solution(\"1 2 4\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"1 2 3\\n4\") == \"18\"\nassert solution(\"4 6 8\\n2\") == \"20\"\nassert solution(\"10 5 2\\n3\") == \"30\"\nassert solution(\"5 3 11\\n0\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"1 2 3\\n4\\n\") == \"6\"\nassert solution(\"1 1 1\\n5\\n\") == \"10\"\nassert solution(\"1 2 3\\n5\\n\") == \"30\"\nassert solution(\"1 2 3\\n10\\n\") == \"60\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\", \"Incorrect output\"\nassert solution(\"5 4 6\\n2\\n\") == \"13\", \"Incorrect output\"\nassert solution(\"1 2 3\\n4\\n\") == \"27\", \"Incorrect output\"\nassert solution(\"7 8 9\\n5\\n\") == \"60\", \"Incorrect output\"\nassert solution(\"3 5 7\\n9\\n\") == \"175\", \"Incorrect output\"\n",
        "num_ids_2": 49,
        "num_ids_4": 97
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11 1\\n\") == \"30\"\nassert solution(\"5 3 11 2\\n\") == \"32\"\nassert solution(\"5 3 11 3\\n\") == \"35\"\nassert solution(\"5 3 11 4\\n\") == \"38\"\nassert solution(\"5 3 11 5\\n\") == \"41\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"5 3 11\\n2\\n\") == \"60\"\nassert solution(\"5 3 11\\n3\\n\") == \"120\"\nassert solution(\"5 3 11\\n4\\n\") == \"200\"\nassert solution(\"5 3 11\\n5\\n\") == \"300\"\nassert solution(\"5 3 11\\n6\\n\") == \"400\"\nassert solution(\"5 3 11\\n7\\n\") == \"500\"\nassert solution(\"5 3 11\\n8\\n\") == \"600\"\nassert solution(\"5 3 11\\n9\\n\") == \"700\"\nassert solution(\"5 3 11\\n10\\n\") == \"800\"\nassert solution(\"5 3 11\\n11\\n\") == \"900\"\nassert solution(\"5 3 11\\n12\\n\") == \"1000\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"10 10 10\\n1\\n\") == \"20\"\nassert solution(\"1 1 1\\n1\\n\") == \"2\"\nassert solution(\"2 2 2\\n1\\n\") == \"4\"\nassert solution(\"3 3 3\\n1\\n\") == \"6\"",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"\nassert solution(\"5 3 10\\n1\\n\") == \"15\\n\"\nassert solution(\"10 20 30\\n5\\n\") == \"100\\n\"\nassert solution(\"5 10 30\\n2\\n\") == \"70\\n\"\nassert solution(\"5 10 30\\n0\\n\") == \"0\\n\"\nassert solution(\"5 10 30\\n5\\n\") == \"100\\n\"\nassert solution(\"5 10 30\\n20\\n\") == \"100\\n\"\n\nassert solution(\"5 10 30\\n-1\\n\") == \"Invalid input. Please provide valid integers.\\n\"\nassert solution(\"5 10 30\\n50\\n\") == \"Invalid input. Please provide valid integers.\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"5 3 10\\n2\\n\") == \"28\"\nassert solution(\"5 3 5\\n3\\n\") == \"25\"\nassert solution(\"5 3 15\\n3\\n\") == \"35\"\nassert solution(\"5 3 25\\n4\\n\") == \"65\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes', \"The solution should return 'Yes' for the given input.\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n\nprint(\"No\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\\n\", \"Test Failed\"\nassert solution(\"abcd\") == \"No\\n\", \"Test Failed\"\nassert solution(\"hello\") == \"Yes\\n\", \"Test Failed\"\nassert solution(\"world\") == \"Yes\\n\", \"Test Failed\"\nassert solution(\"abcdef\") == \"Yes\\n\", \"Test Failed\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes', \"Test failed\"\nassert solution('abc') == 'No', \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abcabcabc\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"xyz\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaccaba\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"abcd\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"abc\") == \"No\\n\", \"Test case 3 failed\"\nassert solution(\"abcdefg\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"ghijklmnop\") == \"No\\n\", \"Test case 5 failed\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abcdef\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abcdefgh\") == \"No\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"abccba\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3\\n'\nassert solution('2 3\\n4 4\\n') == '4\\n'\nassert solution('2 3\\n4 5\\n') == '4\\n'\nassert solution('1 1\\n') == '1\\n'\nassert solution('') == ''",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3', 'Expected output: 3, but got:'+ solution(input())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3', 'Incorrect output'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\nprint(\"All test cases pass\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3') == '3\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n",
        "num_ids_2": 58,
        "num_ids_4": 1027
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"10 5\") == \"2\"\nassert solution(\"1000 1000\") == \"9349827464320\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"3 4\\n\") == \"12\\n\"\nassert solution(\"4 6\\n\") == \"210\\n\"\nassert solution(\"5 8\\n\") == \"6610\\n\"\nassert solution(\"6 10\\n\") == \"32210\\n\"\nassert solution(\"7 12\\n\") == \"184320\\n\"\nassert solution(\"8 14\\n\") == \"917600\\n\"\nassert solution(\"9 16\\n\") == \"4294967290\\n\"\nassert solution(\"10 18\\n\") == \"167772160000\\n\"\nassert solution(\"11 20\\n\") == \"6710886400000\\n\"\nassert solution(\"12 22\\n\") == \"268435456000000\\n\"\nassert solution(\"13 24\\n\") == \"1073741824000000\\n\"\nassert solution(\"14 26\\n\") == \"4611686018427387840\\n\"\nassert solution(\"15 28\\n\") == \"2097152057600000000\\n\"\nassert solution(\"16 30\\n\") == \"8589934592000000000\\n\"\nassert solution(\"17 32\\n\") == \"34359738368547758080\\n\"\nassert solution(\"18 34\\n\") == \"134217728000000000000\\n\"\nassert solution(\"19 36\\n\") == \"536870912000000000000\\n\"\nassert solution(\"20 38\\n\") == \"2684354560000000000000\\n\"\nassert solution(\"21 40\\n\") == \"13421772800000000000000\\n\"\nassert solution(\"22 42\\n\") == \"67108864000000000000000\\n\"\nassert solution(\"23 44\\n\") == \"34359738368547758080000\\n\"\nassert solution(\"24 46\\n\") == \"171798691842643370656000\\n\"\nassert solution(\"25 48\\n\") == \"85899345920000000000000\\n\"\nassert solution(\"26 50\\n\") == \"429496729600000000000000\\n\"\nassert solution(\"27 52\\n\") == \"2147483648000000000000000\\n\"\nassert solution(\"28 54\\n\") == \"1048576000000000000000000\\n\"\nassert solution(\"29 56\\n\") == \"5242880000000000000000000\\n\"\nassert solution(\"30 58\\n\") == \"2621440000000000000000000\\n\"\nassert solution(\"31 60\\n\") == \"13107200000000000000000000\\n\"\nassert solution(\"32 62\\n\") == \"655360000000000",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"5 2\") == \"7\"\nassert solution(\"6 2\") == \"10\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"The code for solution is incorrect\"\nprint(\"The code for solution is correct\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Error: invalid input\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\\n\", \"The output must be '2\\n'.\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"10 2\\n\") == \"5768\\n\", \"Test Case 2\"\nassert solution(\"5 3\\n\") == \"625\\n\", \"Test Case 3\"\nassert solution(\"10 1\\n\") == \"15625\\n\", \"Test Case 4\"\nassert solution(\"7 1\\n\") == \"2097152\\n\", \"Test Case 5\"",
        "num_ids_2": 48,
        "num_ids_4": 99
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nprint(\"All tests passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"25 2\\n10 20\") == \"15\"\nassert solution(\"25 2\\n10 20\") == \"15\"\nassert solution(\"25 2\\n10 20\") == \"15\"\nassert solution(\"25 2\\n10 20\") == \"15\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the number of houses: \")) == 10, \"Invalid input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 3\\n5 10 15') == '10'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 3\\n5 10 15\\n') == '10'\nassert solution('10 10\\n30 10\\n100 20\\n') == '60'\nassert solution('20 3\\n1000 20\\n') == '9999'",
        "num_ids_2": 57,
        "num_ids_4": 84
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3\\n5 10 15\\n\") == \"10\"\nassert solution(\"2 2\\n3 1\\n5 7\\n\") == \"1\"\nassert solution(\"10 100\\n1 2 3 4 5\\n\") == \"50\"\nassert solution(\"20 1000\\n10 50 30 20 15\\n\") == \"5000\"\nassert solution(\"200000 100000\\n50000 50000\\n\") == \"500000\"\n",
        "num_ids_2": 49,
        "num_ids_4": 115
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 3\\n5 10 15') == '10\\n'\nassert solution('20 3\\n5 10 15') == '10\\n'\nassert solution('20 3\\n5 10 15') == '10\\n'\nassert solution('20 3\\n5 10 15') == '10\\n'\nassert solution('20 3\\n5 10 15') == '10\\n'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '15', \"Your code is not correct. Please check the constraints and input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Incorrect output\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"1 1 1 1 1\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"1 1 1 1 2\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"1 2 2 2 3\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"1 2 3 3 4\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"1 1 1 1 1\") == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Incorrect output\"\nassert solution(\"6 4 5 3\") == \"10\", \"Incorrect output\"\nassert solution(\"1 1 1 1\") == \"1\", \"Incorrect output\"\nassert solution(\"3 3 3 3\") == \"9\", \"Incorrect output\"\nassert solution(\"1 2 3 4 5\") == \"15\", \"Incorrect output\"\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test 1\"\nassert solution(\"4 2 8 6\") == \"12\\n\", \"Test 2\"\nassert solution(\"2 3 1 2\") == \"1\\n\", \"Test 3\"\nassert solution(\"3 2 1 4\") == \"12\\n\", \"Test 4\"\nassert solution(\"2 2 2 2\") == \"4\\n\", \"Test 5\"\nassert solution(\"1 1 1 1\") == \"1\\n\", \"Test 6\"\nassert solution(\"4 4 4 4\") == \"16\\n\", \"Test 7\"\nassert solution(\"1 1 2 2\") == \"3\\n\", \"Test 8\"\nassert solution(\"1 1 1 1\") == \"1\\n\", \"Test 9\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The first rectangle has an area of 3\u00d75=15, and the second rectangle has an area of 2\u00d77=14. Thus, the output should be 15, the larger area.\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test case 1 failed.\"\nassert solution(\"5 7 3 9\") == \"15\\n\", \"Test case 2 failed.\"\nassert solution(\"10 10 10 10\") == \"1000000000\\n\", \"Test case 3 failed.\"\nassert solution(\"1 1 1 1\") == \"1\\n\", \"Test case 4 failed.\"\nassert solution(\"1 1 2 2\") == \"2\\n\", \"Test case 5 failed.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 52,
        "num_ids_4": 115
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Test Failed\"\nassert solution(\"5 3 4 6\") == \"12\", \"Test Failed\"\nassert solution(\"10 10 10 10\") == \"100\", \"Test Failed\"\nassert solution(\"1 1 1 1\") == \"1\", \"Test Failed\"\nassert solution(\"5 5 5 5\") == \"25\", \"Test Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter A B C D: \")) == \"15\", \"Test 1\"\nassert solution(input(\"Enter A B C D: \")) == \"14\", \"Test 2\"\nassert solution(input(\"Enter A B C D: \")) == \"15\", \"Test 3\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('test_input.txt', 'r')) == '''\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n'''\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"AC x 3\\nA x 2\\n\"\nassert solution(input()) == \"WA x 1\\n\"\nassert solution(input()) == \"TLE x 2\\n\"\nassert solution(input()) == \"RE x 0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\"\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\"\nprint(\"Test Passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"21\") == \"27\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(21) == \"27\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='21') == '27'\n\nWe can use the built-in `datetime` module to get the current date and time and then subtract the given number of hours from it to get the time until New Year. We can then format the time as a string in the desired format and print it using the `print()` function.\n\nHere's the code:\n\n```python\nimport datetime",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(21) == 27, \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"21\") == \"27\", \"Test failed.\"\nprint(\"Test passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(21) == 27, \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"21\\n\") == \"27\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"27\", \"Solution should return 27\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"5 6\") == \"error\"\nassert solution(\"10 7\") == \"error\"\nassert solution(\"11 10\") == \"error\"\nassert solution(\"12 11\") == \"error\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\\n\", \"Test failed: Expected output 9, received: %s\" % solution(\"6 3\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 5\") == \"error\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3') == '9', \"The output is not correct\"\nassert solution('10 2') == 'error', \"The output is not correct\"\nassert solution('1 2') == '3', \"The output is not correct\"\nassert solution('0 3') == '3', \"The output is not correct\"\nassert solution('5 -3') == 'error', \"The output is not correct\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\" # Pass\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"4 2\") == \"error\\n\"\nassert solution(\"10 5\") == \"error\\n\"\nassert solution(\"2 3\") == \"error\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3') == '9'\nassert solution('8 10') == 'error'\nassert solution('10 10') == 'error'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of houses: \")) == 7, \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\\n\") == \"7\\n\", \"The minimum distance to be traveled is 7.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\") == \"3\\n\"\nassert solution(\"4\\n2 3 4 5 6\") == \"3\\n\"\nassert solution(\"1\\n0 0 0\") == \"0\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\"\nassert solution(\"5\\na_1 a_2... a_N\") == \"10\"\nassert solution(\"6\\na_1 a_2... a_N\") == \"12\"\nassert solution(\"7\\na_1 a_2... a_N\") == \"15\"\nassert solution(\"8\\na_1 a_2... a_N\") == \"17\"\nassert solution(\"9\\na_1 a_2... a_N\") == \"19\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\na_1 a_2... a_N\") == \"7\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"4 7\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"10 12\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"\nassert solution(\"2 3\\n\") == \"No\"\nassert solution(\"4 3\\n\") == \"No\"\nassert solution(\"1 12\\n\") == \"Yes\"\nassert solution(\"12 12\\n\") == \"Yes\"\nassert solution(\"11 12\\n\") == \"No\"\nassert solution(\"13 12\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"The given condition is not satisfied\"\nassert solution(\"2 4\") == \"No\", \"The given condition is not satisfied\"\nassert solution(\"12 10\") == \"Yes\", \"The given condition is not satisfied\"\nassert solution(\"11 11\") == \"Yes\", \"The given condition is not satisfied\"\nassert solution(\"1 12\") == \"No\", \"The given condition is not satisfied\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\\n\"\nassert solution(\"4 5\\n\") == \"No\\n\"\nassert solution(\"1 12\\n\") == \"Yes\\n\"\nassert solution(\"10 12\\n\") == \"No\\n\"\nassert solution(\"10 11\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 12') == 'Yes'\nassert solution('13 12') == 'No'\nassert solution('14 12') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1 3\\n\") == \"Yes\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"5 7\") == \"No\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"11 12\") == \"No\"\nassert solution(\"1 12\") == \"No\"\nassert solution(\"1000 1000\") == \"No\"\nassert solution(\"1000 1000\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Incorrect solution\"\nassert solution(\"1 2\") == \"Odd\", \"Incorrect solution\"\nassert solution(\"7 4\") == \"Even\", \"Incorrect solution\"\nassert solution(\"2 3\") == \"Odd\", \"Incorrect solution\"\nassert solution(\"5 6\") == \"Odd\", \"Incorrect solution\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Even\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Even', \"Test case 1 failed.\"\nassert solution(input()) == 'Odd', \"Test case 2 failed.\"\nassert solution(input()) == 'Even', \"Test case 3 failed.\"\nassert solution(input()) == 'Odd', \"Test case 4 failed.\"\nassert solution(input()) == 'Even', \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Please test the correctness of your solution using the sample input and expected output.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Incorrect Output. Expected: Even, Actual: \" + solution(\"3 4\")\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Even\"\nprint(\"Odd\")\n\nassert solution(\"10 3\") == \"Odd\"\nprint(\"Even\")\n\nassert solution(\"5 7\") == \"Even\"\nprint(\"Odd\")\n\nassert solution(\"2 3\") == \"Odd\"\nprint(\"Even\")",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Input: 3 4, Output: Even\"\nassert solution(\"5 6\") == \"Odd\", \"Input: 5 6, Output: Odd\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,4) == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Odd\"\nassert solution(\"1 3\") == \"Odd\"\nassert solution(\"2 3\") == \"Even\"\nassert solution(\"4 5\") == \"Even\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\nassert solution(\"1 5\") == \"1\\n\"\nassert solution(\"1 3\") == \"0\\n\"\nassert solution(\"2 4\") == \"2\\n\"\nassert solution(\"3 4\") == \"2\\n\"\nassert solution(\"5 6\") == \"3\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\" # expected output: 2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\nassert solution(\"2 4\") == \"4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 6') == '2\\n', \"Failed for input 1 6\"\nassert solution('2 6') == '4\\n', \"Failed for input 2 6\"\nassert solution('3 6') == '8\\n', \"Failed for input 3 6\"\nassert solution('4 6') == '16\\n', \"Failed for input 4 6\"\nassert solution('5 6') == '32\\n', \"Failed for input 5 6\"\nassert solution('6 6') == '64\\n', \"Failed for input 6 6\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 6\") == \"2\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"5 4\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"\nassert solution(\"5\\n10 20 30\\n15\\n1 10\\n2 30\\n\") == \"15\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"1\\n100\\n2\\n1000\\n1000\") == \"500\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3\n''') == '''6\n9\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n9\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2 1 4\n    2\n    1 1\n    2 3\n\"\"\") == \"\"\"\n    6\n    9\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5\n    5 5 5 5\n    3\n    1 2\n    2 3\n    4 5\n    6 7\n    8 9\n\"\"\") == \"\"\"\n    26\n    63\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"6\\n9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2000, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"2000 9\\n0 2 4 6 8\") == \"2000\"\nassert solution(\"1000 5\\n1 3 4 5 6\") == \"1000\"\nassert solution(\"1000 9\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 7\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 6\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 9\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 10\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 11\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 12\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n\") == \"2000\\n\"\nassert solution(\"500 3\\n7 8 9\\n\") == \"2000\\n\"\nassert solution(\"10000 4\\n10 20 30 40\\n\") == \"3000\\n\"\nassert solution(\"1000 100\\n1 2 3 4 5 6 7 8 9\\n\") == \"5000\\n\"\nassert solution(\"10000 100\\n1 2 3 4 5 6 7 8 9\\n\") == \"5000\\n\"\nassert solution(\"1000 100\\n1 2 3 4 5 6 7 8 9\\n\") == \"5000\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 9\\n1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"5000 10\\n1 2 3 4 5 6 7 8 9 0\") == \"5000\"\nassert solution(\"1000 10\\n0 2 3 4 5 6 7 8 9 0\") == \"0\"\nassert solution(\"1000 0\\n0 0 0 0 0 0 0 0 0 0\") == \"0\"",
        "num_ids_2": 69,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 9\\n1 2 3 4 5 6 7 8\") == \"0\"\nassert solution(\"1000 9\\n1 2 3 4 5 6 7 8\") == \"0\"\nassert solution(\"1000 9\\n1 2 3 4 5 6 7 8\") == \"0\"",
        "num_ids_2": 70,
        "num_ids_4": 134
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 1\") == \"1000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 0\") == \"0\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 2\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 2 0\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 2 1\") == \"1000\"",
        "num_ids_2": 72,
        "num_ids_4": 143
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n2 4 6 8 10 12 14 16\") == \"0\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n\") == \"0\"",
        "num_ids_2": 71,
        "num_ids_4": 105
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"2 3\\n4 5\\n3 4\\n\") == \"0\"\nassert solution(\"2 3\\n4 5\\n3 4\\n6 7\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"2 3\\n4 5\\n3 4\\n\") == \"0\"\nassert solution(\"2 3\\n4 5\\n3 4\\n6 7\\n\") == \"2\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2', \"Please implement the solution function\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"3 4\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"\n\nsolution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") # Your code here",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Testcase failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '10'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\") == \"10\", \"Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: - Operation A: The displayed value is doubled. - Operation B: The displayed value increases by K. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\", \"Test failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\"\nprint(\"All test cases passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\", \"Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: - Operation A: The displayed value is doubled. - Operation B: The displayed value increases by K. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations. \"\n\nprint(\"The value will be minimized when the operations are performed in the following order: A, A, B, B.\")",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4\\n3\") == \"10\\n\", \"Test case 1 failed\"\nassert solution(stdin=\"5\\n4\") == \"7\\n\", \"Test case 2 failed\"\nassert solution(stdin=\"6\\n3\") == \"10\\n\", \"Test case 3 failed\"\nassert solution(stdin=\"7\\n5\") == \"10\\n\", \"Test case 4 failed\"\nassert solution(stdin=\"8\\n6\") == \"10\\n\", \"Test case 5 failed\"\n",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3') == '10', \"The value should be minimized when the operations are performed in the following order: A, A, B, B.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3') == '10\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3') == '10', 'The value should be 10'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\", \"Output should be 0\"\nassert solution(\"2\") == \"1\", \"Output should be 1\"\nassert solution(\"3\") == \"1\", \"Output should be 1\"\nassert solution(\"4\") == \"0\", \"Output should be 0\"\nassert solution(\"5\") == \"0\", \"Output should be 0\"\nassert solution(\"6\") == \"0\", \"Output should be 0\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1, \"Test failed\"\nassert solution(0) == 0, \"Test failed\"\nassert solution(2) == 0, \"Test failed\"\nassert solution(3) == 0, \"Test failed\"\nassert solution(4) == 1, \"Test failed\"\nassert solution(5) == 1, \"Test failed\"\nassert solution(6) == 1, \"Test failed\"\nassert solution(7) == 1, \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('2') == '0'\nassert solution('-1') == '1'\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(0) == '0'\nassert solution(0.5) == '1'\nassert solution(-1) == '0'\nassert solution(1.5) == '1'\n\nprint('All tests passed!')",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"1 should be equal to 1\"\nassert solution(0) == 0, \"0 should be equal to 0\"\nassert solution(0.5) == 1, \"0.5 should be equal to 1\"",
        "num_ids_2": 38,
        "num_ids_4": 61
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"112\") == \"122\"\nassert solution(\"231\") == \"241\"\nassert solution(\"1010\") == \"1010\"\nassert solution(\"10100\") == \"10100\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"150\") == \"300\"\nassert solution(\"105\") == \"155\"\nassert solution(\"121\") == \"179\"\nassert solution(\"115\") == \"165\"\nassert solution(\"111\") == \"161\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"15\"\nassert solution(\"6\") == \"21\"\nassert solution(\"7\") == \"28\"\nassert solution(\"8\") == \"36\"\nassert solution(\"9\") == \"45\"\nassert solution(\"10\") == \"55\"\nassert solution(\"11\") == \"66\"\nassert solution(\"12\") == \"78\"\nassert solution(\"13\") == \"91\"\nassert solution(\"14\") == \"105\"\nassert solution(\"15\") == \"121\"\nassert solution(\"16\") == \"138\"\nassert solution(\"17\") == \"156\"\nassert solution(\"18\") == \"175\"\nassert solution(\"19\") == \"196\"\nassert solution(\"20\") == \"218\"\nassert solution(\"21\") == \"242\"\nassert solution(\"22\") == \"268\"\nassert solution(\"23\") == \"296\"\nassert solution(\"24\") == \"325\"\nassert solution(\"25\") == \"356\"\nassert solution(\"26\") == \"389\"\nassert solution(\"27\") == \"424\"\nassert solution(\"28\") == \"461\"\nassert solution(\"29\") == \"500\"\nassert solution(\"30\") == \"541\"\nassert solution(\"31\") == \"584\"\nassert solution(\"32\") == \"629\"\nassert solution(\"33\") == \"676\"\nassert solution(\"34\") == \"725\"\nassert solution(\"35\") == \"776\"\nassert solution(\"36\") == \"829\"\nassert solution(\"37\") == \"884\"\nassert solution(\"38\") == \"941\"\nassert solution(\"39\") == \"1000\"\nassert solution(\"40\") == \"1061\"\nassert solution(\"41\") == \"1124\"\nassert solution(\"42\") == \"1189\"\nassert solution(\"43\") == \"1256\"\nassert solution(\"44\") == \"1325\"\nassert solution(\"45\") == \"1396\"\nassert solution(\"46\") == \"1469\"\nassert solution(\"47\") == \"1544\"\nassert solution(\"48\") == \"1621\"\nassert solution(\"49\") == \"1700\"\nassert solution(\"50\") == \"1781\"\nassert solution(\"51\") == \"1864\"\nassert solution(\"52\") == \"1949\"\nassert solution(\"53\") == \"2036\"\nassert solution(\"54\") == \"2125\"\nassert solution(\"55\") == \"2216\"\nassert solution(\"56\") == \"2309\"\nassert solution(\"57\") == \"2404\"\nassert solution(\"58\") == \"2501\"\nassert solution(\"59\") == \"2600\"\nassert solution(\"60\") == \"2701\"\nassert solution(\"61\") == \"2804\"\nassert solution(\"62\") == \"2909\"\nassert solution(\"63\") == \"3016\"\nassert solution(\"64\") == \"3125\"\nassert solution(\"65\") == \"3236\"\nassert solution(\"66\") == \"3349\"\nassert solution(\"67\") == \"3464\"\nassert solution(\"68\") == \"3581\"\nassert solution(\"69\") == \"3700\"\nassert solution(\"70\") == \"3821\"\nassert solution(\"71\") == \"3944\"\nassert solution(\"72\") == \"4069\"\nassert solution(\"73\") == \"4196\"\nassert solution(\"74\") == \"4325\"\nassert solution(\"75\") == \"4456\"\nassert solution(\"76\") == \"4589\"\nassert solution(\"77\") == \"4724\"\nassert solution(\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\", \"Test 1 Failed\"\nassert solution(\"345\") == \"577\", \"Test 2 Failed\"\nassert solution(\"102\") == \"113\", \"Test 3 Failed\"\nassert solution(\"312\") == \"324\", \"Test 4 Failed\"\nassert solution(\"153\") == \"167\", \"Test 5 Failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\", \"125\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\nassert solution(\"7\") == \"7\"\nassert solution(\"8\") == \"8\"\nassert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\nassert solution(\"12\") == \"12\"\nassert solution(\"13\") == \"13\"\nassert solution(\"14\") == \"14\"\nassert solution(\"15\") == \"15\"\nassert solution(\"16\") == \"16\"\nassert solution(\"17\") == \"17\"\nassert solution(\"18\") == \"18\"\nassert solution(\"19\") == \"19\"\nassert solution(\"20\") == \"20\"\nassert solution(\"21\") == \"21\"\nassert solution(\"22\") == \"22\"\nassert solution(\"23\") == \"23\"\nassert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"25\"\nassert solution(\"26\") == \"26\"\nassert solution(\"27\") == \"27\"\nassert solution(\"28\") == \"28\"\nassert solution(\"29\") == \"29\"\nassert solution(\"30\") == \"30\"\nassert solution(\"31\") == \"31\"\nassert solution(\"32\") == \"32\"\nassert solution(\"33\") == \"33\"\nassert solution(\"34\") == \"34\"\nassert solution(\"35\") == \"35\"\nassert solution(\"36\") == \"36\"\nassert solution(\"37\") == \"37\"\nassert solution(\"38\") == \"38\"\nassert solution(\"39\") == \"39\"\nassert solution(\"40\") == \"40\"\nassert solution(\"41\") == \"41\"\nassert solution(\"42\") == \"42\"\nassert solution(\"43\") == \"43\"\nassert solution(\"44\") == \"44\"\nassert solution(\"45\") == \"45\"\nassert solution(\"46\") == \"46\"\nassert solution(\"47\") == \"47\"\nassert solution(\"48\") == \"48\"\nassert solution(\"49\") == \"49\"\nassert solution(\"50\") == \"50\"\nassert solution(\"51\") == \"51\"\nassert solution(\"52\") == \"52\"\nassert solution(\"53\") == \"53\"\nassert solution(\"54\") == \"54\"\nassert solution(\"55\") == \"55\"\nassert solution(\"56\") == \"56\"\nassert solution(\"57\") == \"57\"\nassert solution(\"58\") == \"58\"\nassert solution(\"59\") == \"59\"\nassert solution(\"60\") == \"60\"\nassert solution(\"61\") == \"61\"\nassert solution(\"62\") == \"62\"\nassert solution(\"63\") == \"63\"\nassert solution(\"64\") == \"64\"\nassert solution(\"65\") == \"65\"\nassert solution(\"66\") == \"66\"\nassert solution(\"67\") == \"67\"\nassert solution(\"68\") == \"68\"\nassert solution(\"69\") == \"69\"\nassert solution(\"70\") == \"70\"\nassert solution(\"71\") == \"71\"\nassert solution(\"72\") == \"72\"\nassert solution(\"73\") == \"73\"\nassert solution(\"74\") == \"74\"\nassert solution(\"75\") == \"75\"\nassert solution(\"76\") == \"76\"\nassert solution(\"77\") == \"77\"\nassert solution(\"78\") == \"78\"\nassert solution(\"79\") == \"79\"\nassert solution(\"80\") == \"80\"\nassert solution(\"81\") == \"81\"\nassert solution(\"82\") == \"82\"\nassert solution(\"83\") == \"83\"\nassert solution(\"84\") == \"84\"\nassert solution(\"85\") == \"85\"\nassert solution(\"86\") == \"86\"\nassert solution(\"8",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"2\\n1 2\") == \"1\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"0\\n\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\na_1 a_2... a_{N}\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 7\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 7\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 8\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 8\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='6\\n1 2 3 4 5 6\\n') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"6\\n2 3 4 5 6 7\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"6\\n2 3 4 5 6 7\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"6\\n2 3 4 5 6 7\") == \"0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 85
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '15800', \"Incorrect Answer\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '15800'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"15800\"\nprint(\"Correct\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20\") == \"15800\", \"Invalid input\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"15800\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20\") == \"15800\", \"The correct answer is 15800.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '15800', \"Incorrect output for the given constraints\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '15800', 'Incorrect Answer'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"Solution should return abc.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\", \"Test case failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"\nassert solution(\"beet\\noca\\r\") == \"bca\"\nassert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\", \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\", \"Test Case Failed\"\nprint(\"Test Case Passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\", \"The solution is incorrect\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\", \"Incorrect output\"\nassert solution(\"hello\") == \"h\", \"Incorrect output\"\nassert solution(\"abcde\") == \"abc\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\\n\", \"The output should be 2.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"The output is not as expected.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"1101\") == \"2\"\nassert solution(\"1110\") == \"1\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"1001\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"110\") == \"3\"\nassert solution(\"1011\") == \"3\"\nassert solution(\"01010\") == \"3\"\nassert solution(\"1111111111111111\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\", \"Solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"48000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '48000\\n', \"Error: The solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '48000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"48000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"\nassert solution(\"4\\n3\\n10000\\n9000\") == \"48000\\n\"\nassert solution(\"5\\n5\\n10000\\n9000\") == \"96000\\n\"\nassert solution(\"5\\n4\\n10000\\n9000\") == \"84000\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"48000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Error: Test 1 failed\"\nassert solution(\"-2 * 3 + 4 / 5\") == \"24\", \"Error: Test 2 failed\"\nassert solution(\"5 - 2 * 3\") == \"10\", \"Error: Test 3 failed\"\nassert solution(\"5 / 2 - 3\") == \"-3\", \"Error: Test 4 failed\"\nassert solution(\"2 + 1 * 2\") == \"6\", \"Error: Test 5 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Test case 1\"\nassert solution(\"2 - 1\") == \"1\", \"Test case 2\"\nassert solution(\"10 / 3\") == \"3\", \"Test case 3\"\nassert solution(\"5 * 3\") == \"15\", \"Test case 4\"\nassert solution(\"5 + 3\") == \"8\", \"Test case 5\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('5 - 2') == '7'\nassert solution('2 * 3') == '6'\nassert solution('1 / 0') == 'Infinity'\nassert solution('2 ^ 3') == '8'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Solution does not return the correct answer\"\nprint(\"Test passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Evaluation error\"\nassert solution(\"-1 + 2\") == \"-3\", \"Evaluation error\"\nassert solution(\"1 * 2\") == \"2\", \"Evaluation error\"\nassert solution(\"1 / 0\") == \"Infinity\", \"Evaluation error\"\nassert solution(\"-1 / 0\") == \"-Infinity\", \"Evaluation error\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Solution 1 is incorrect.\"\nassert solution(\"1 - 2\") == \"1\", \"Solution 2 is incorrect.\"\nassert solution(\"1 * 2\") == \"2\", \"Solution 3 is incorrect.\"\nassert solution(\"1 / 2\") == \"0.5\", \"Solution 4 is incorrect.\"\nassert solution(\"1 % 2\") == \"1\", \"Solution 5 is incorrect.\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"5 - 3\") == \"8\"\nassert solution(\"10 * 2\") == \"20\"\nassert solution(\"10 / 2\") == \"5\"\nassert solution(\"5 + 5\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'ABC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"ABC\\n\", \"Function should return 'ABC' if Smeke will participate in ABC, and 'ARC' otherwise.\"\nassert solution(\"5000\") == \"ARC\\n\", \"Function should return 'ARC' if Smeke will participate in ARC, and 'ABC' otherwise.\"\nassert solution(\"3000\") == \"ABC\\n\", \"Function should return 'ABC' if Smeke will participate in ARC, and 'ARC' otherwise.\"\nassert solution(\"2000\") == \"ABC\\n\", \"Function should return 'ABC' if Smeke will participate in ARC, and 'ABC' otherwise.\"\nassert solution(\"1001\") == \"ABC\\n\", \"Function should return 'ABC' if Smeke will participate in ABC, and 'ARC' otherwise.\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1000) == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC', \"Your implementation is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"400 300 200\") == \"1000\"\nassert solution(\"1000 500 200\") == \"800\"\nassert solution(\"200 400 500\") == \"1200\"\nassert solution(\"500 100 300\") == \"1000\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('700 600 780') == '1300', \"Incorrect output\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\", \"Expected output is 1300 but got: \" + solution(\"700 600 780\")",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1300\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\", \"Your code is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\", \"The minimum total price of two different bells is 1300 yen.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1300\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, f\"Test case failed for input: {input_string}, output: {output_string}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''\n#####\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\nabc\\narc\\n') == '''\n#####\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\\n#####\\n#abc#\\n#arc#\\n#####\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"5\\nDDDD\") == \"2\\n\"\nassert solution(\"5\\nDDDDD\") == \"3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'5\\nIIDID') == '2\\n'\nassert solution(b'6\\nIDDA') == '3\\n'\nassert solution(b'7\\nAADD') == '4\\n'\nassert solution(b'8\\nAADD') == '4\\n'\nassert solution(b'9\\nAADD') == '4\\n'",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n\nassert solution(\"1\\nIDID\") == \"1\"\n\nassert solution(\"1\\nDIID\") == \"2\"\n\nassert solution(\"1\\nID\") == \"2\"\n\nassert solution(\"1\\nIDD\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"Test case failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"12345 23456\") == \"0\"\nassert solution(\"11000 99999\") == \"0\"\nassert solution(\"10000 99999\") == \"0\"\nassert solution(\"11000 10000\") == \"0\"\nassert solution(\"10000 99999\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1000 10000\") == \"1\\n\"\nassert solution(\"10001 100000\") == \"1\\n\"\nassert solution(\"1 10000\") == \"1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4\\n', \"Your solution is incorrect.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"11011 11111\") == \"1\"\nassert solution(\"11211 11311\") == \"2\"\nassert solution
        "num_ids_2": 40,
        "num_ids_4": 1027
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The output is incorrect\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"3 4 5\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"3 1 3\") == \"3\\n\", \"Test case 3 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\" # Pass the test",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 1 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nprint(\"Three different colors: 1, 3, and 4.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 1 4\") == \"3\"\nassert solution(stdin=\"1 2 3\") == \"2\"\nassert solution(stdin=\"4 5 6\") == \"4\"\nassert solution(stdin=\"1 4 7\") == \"2\"\nassert solution(stdin=\"2 5 8\") == \"3\"\nassert solution(stdin=\"3 6 9\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The solution should return the correct number of different colors.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\", \"Test failed for the given constraints.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nprint(\"Test passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\\n\"\nassert solution(\"10 10\\n5 7\\n\") == \"16\\n\"\nassert solution(\"2 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"1 2\\n1 1\\n\") == \"3\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '12'\nprint('Test Passed!')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\\n\") == \"25\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n\") == \"25\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n\") == \"42\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\") == \"42\"",
        "num_ids_2": 64,
        "num_ids_4": 188
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 6\\n1 2 3 4 5 6 7\") == \"17\"\nassert solution(\"5 10\\n1 2 3 4 5 6 7 8 9\") == \"36\"\nassert solution(\"5 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"55\"\nassert solution(\"5 20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"80\"",
        "num_ids_2": 52,
        "num_ids_4": 136
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'B'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"B\"\nassert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 3\") == \"A\"\nassert solution(\"1 3 2\") == \"B\"\nassert solution(\"5 2 6\") == \"B\"",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 7') == 'B'\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"B\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2018/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07a\") == \"2017/01/07\"\nassert solution(\"2018/01/07b\") == \"2018/01/07\"",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2018/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/01\") == \"2018/01/01\"\nassert solution(\"2017/01/32\") == \"2018/01/31\"\nassert solution(\"2017/02/12\") == \"2018/02/12\"\nassert solution(\"2017/05/25\") == \"2018/05/25\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2017/01/07') == '2018/01/07'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/12/31\") == \"2019/01/01\"\nassert solution(\"1234567890\") == \"1234567890\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\", \"Expected: 2018/01/07, got: \" + solution(\"2017/01/07\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"aac\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nassert solution(\"5\\nabcde\\nxyz\\nyz\\nuvwxyz\\n\") == \"uvwxyz\"\nassert solution(\"5\\nabcde\\nxyz\\nyz\\nuvwxyz\\n1\\n\") == \"xyz\"\nassert solution(\"5\\nabcde\\nxyz\\nyz\\nuvwxyz\\n1\\n2\\n\") == \"yz\"\nassert solution(\"5\\nabcde\\nxyz\\nyz\\nuvwxyz\\n1\\n2\\n3\\n\") == \"abcde\"",
        "num_ids_2": 51,
        "num_ids_4": 112
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cbaa\\ndaac\\nacacac\") == \"aac\"\nassert solution(\"abcde\") == \"\"\nassert solution(\"aa\") == \"aa\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\\n\"\nassert solution(\"1\\nabcd\\n12345\") == \"abcd\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac\\n'\nassert solution('1\\napple\\nbanana\\nbanana\\n') == 'banana\\n'\nassert solution('1\\nbanana\\nbanana\\nbanana\\n') == 'banana\\n'\nassert solution('3\\nn\\na\\nb\\nc\\nd\\ne') == 'aa\\n'\nassert solution('1\\nabcdefg\\nhijklmn\\nopqrstuvwxyz\\n') =='mnopqrstuvwxyz\\n'",
        "num_ids_2": 50,
        "num_ids_4": 101
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nassert solution(\"acba\\nacb\\nbaca\\n\") == \"aab\"\nassert solution(\"azbc\\nabc\\nxyz\\n\") == \"xyz\"\nassert solution(\"azbc\\nabc\\nxyz\\nxyzzy\\n\") == \"xyz\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\ncaba\\ndeaba\\n\") == \"aac\"\nassert solution(\"5\\nabc\\ndef\\nghi\\nklm\\nnop\\n\") == \"nlm\"\nassert solution(\"1\\n\") == \"\"",
        "num_ids_2": 46,
        "num_ids_4": 56
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'aac', \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n30 35\\n\") == \"12\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n24 30\\n') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n24 30') == '7\\n'\nassert solution('2\\n24\\n30') == '7\\n'\nassert solution('3\\n24 30') == '7\\n'\nassert solution('4\\n24 30 30 30 30 30') == '7\\n'\nassert solution('5\\n24 30 30 30 30 30 30 30 30 30 30') == '7\\n'\nassert solution('6\\n24 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30') == '7\\n'",
        "num_ids_2": 39,
        "num_ids_4": 89
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"2\\n42\\n\") == \"4\\n\"\nassert solution(\"3\\n55 60\\n\") == \"11\\n\"\nassert solution(\"4\\n75\\n\") == \"2\\n\"\nassert solution(\"5\\n1000 990\\n\") == \"10\\n\"\nassert solution(\"6\\n125 100\\n\") == \"8\\n\"\nassert solution(\"7\\n150\\n\") == \"0\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\\n\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\\n\", \"No input given\"\nassert solution(\"1\\n\") == \"0\\n\", \"Input is empty\"\nassert solution(\"1\\n24\\n30\\n\") == \"7\\n\", \"No people sitting at the theater\"\nassert solution(\"2\\n24\\n30\\n\") == \"7\\n\", \"One person sitting at Seat 24\"\nassert solution(\"1\\n100000\\n25\\n25\\n\") == \"4\\n\", \"Seats are occupied\"\nassert solution(\"1\\n100000\\n1\\n100000\\n\") == \"0\\n\", \"Seats are not occupied\"\nassert solution(\"1\\n25\\n25\\n\") == \"0\\n\", \"Seat 25 is empty\"\nassert solution(\"1\\n24\\n30\\n25\\n25\\n30\\n\") == \"4\\n\", \"Seat 25 is occupied\"",
        "num_ids_2": 34,
        "num_ids_4": 100
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == 6\nprint(\"All assertions pass!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"6\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3,4) == 6, \"6 blocks in K-city\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 4) == \"6\\n\" # output: 6\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 4\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"6\", \"The output should be 6 but it is {}\".format(solution(\"3 4\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"9 6\") == \"Impossible\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"7 6\") == \"Impossible\"\nassert solution(\"3 4\") == \"Impossible\"\nassert solution(\"1 2\") == \"Impossible\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"10 20\") == \"Impossible\"\nassert solution(\"5 10\") == \"Possible\"\nassert solution(\"15 20\") == \"Impossible\"\nassert solution(\"10 25\") == \"Impossible\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Possible\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 4\") == \"Possible\"\nassert solution(\"1 2\") == \"Possible\"\nassert solution(\"3 3\") == \"Possible\"\nassert solution(\"4 3\") == \"Possible\"\nassert solution(\"5 2\") == \"Possible\"\nassert solution(\"1 1\") == \"Impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Possible'\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"bananas\") == \"UNRESTORABLE\"\nassert solution(\"abc\") == \"UNRESTORABLE\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('?abc') == 'UNRESTORABLE'\nassert solution('abc') == 'UNRESTORABLE'\nassert solution('?def') == 'UNRESTORABLE'\nassert solution('def') == 'UNRESTORABLE'\nassert solution('?ghi') == 'UNRESTORABLE'\nassert solution('ghi') == 'UNRESTORABLE'\nassert solution('?jkl') == 'UNRESTORABLE'\nassert solution('jkl') == 'UNRESTORABLE'\nassert solution('?mno') == 'UNRESTORABLE'\nassert solution('mno') == 'UNRESTORABLE'\nassert solution('?pqr') == 'UNRESTORABLE'\nassert solution('pqr') == 'UNRESTORABLE'\nassert solution('?stu') == 'UNRESTORABLE'\nassert solution('stu') == 'UNRESTORABLE'\nassert solution('?vwxy') == 'UNRESTORABLE'\nassert solution('vwxy') == 'UNRESTORABLE'\nassert solution('?z') == 'UNRESTORABLE'\nassert solution('z') == 'UNRESTORABLE'",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"asac\") == \"UNRESTORABLE\"\nassert solution(\"abcabcabc\") == \"UNRESTORABLE\"\nassert solution(\"abcabc\") == \"UNRESTORABLE\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"aa\") == \"UNRESTORABLE\"\nassert solution(\"aa?bbb\") == \"UNRESTORABLE\"\nassert solution(\"aa?cddd\") == \"atcoder\"\nassert solution(\"aa?ee\") == \"atcoder\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"UNRESTORABLE\"\nassert solution(\"?abc????\") == \"UNRESTORABLE\"\nassert solution(\"abc\") == \"UNRESTORABLE\"\nassert solution(\"?atc????\") == \"atcoder\"\nassert solution(\"atc\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'atcoder'\nassert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"?tc????\\ncoder\\n\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"?t????\\ncoder\") == \"atcoder\"\nassert solution(\"?tc????\\ncoder?\") == \"UNRESTORABLE\"\nassert solution(\"?t????\\ncoder?\") == \"UNRESTORABLE\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tct????\\ncoder') == 'atcoder'\nassert solution('?tca????\\ncoder') == 'atcoder'\nassert solution('?tcat????\\ncoder') == 'atcoder'\nassert solution('?tcc????\\ncoder') == 'atcoder'\nassert solution('?tcz????\\ncoder') == 'atcoder'\nassert solution('?tcd????\\ncoder') == 'atcoder'\nassert solution('?tcg????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcid????\\ncoder') == 'atcoder'\nassert solution('?tcid????\\ncoder') == 'atcoder'\nassert solution('?tciq????\\ncoder') == 'atcoder'\nassert solution('?tciq????\\ncoder') == 'atcoder'\nassert solution('?tciq????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?tcir????\\ncoder') == 'atcoder'\nassert solution('?",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2002\\n2017') == '2032'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"2000\\n2010\") == \"1015\"\nassert solution(\"1500\\n2000\") == \"2005\"\nassert solution(\"2000\\n1999\") == \"2000\"\nassert solution(\"4500\\n4500\") == \"8000\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2032'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the rating of Takahashi: \")) == \"2032\", \"The performance required to achieve the objective is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"R\\n2002\\n\") == \"2032\\n\"\nassert solution(\"G\\n2017\\n\") == \"2032\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter R: \")) == \"2032\\n\", \"Test case 1\"\nassert solution(input(\"Enter R: \")) == \"2032\\n\", \"Test case 2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'2002\\n2017') == b'2032\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"500\\n1000\") == \"2500\"\nassert solution(\"1000\\n500\") == \"500\"\nassert solution(\"4500\\n4500\") == \"4500\"\nassert solution(\"0\\n4500\") == \"4500\"\nassert solution(\"500\\n500\") == \"1000\"\nassert solution(\"1000\\n1000\") == \"2000\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"string\") == 4, \"Test 1 failed.\"\nassert solution(\"letter\") == 2, \"Test 2 failed.\"\nassert solution(\"aaaaaa\") == 0, \"Test 3 failed.\"\nassert solution(\"uncopyrightable\") == 13, \"Test 4 failed.\"\nassert solution(\"ambidextrously\") == 12, \"Test 5 failed.\"\nassert solution(\"assesses\") == 1, \"Test 6 failed.\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('string') == 4, \"Expected output 4, got {}\".format(solution('string'))\nassert solution('letter') == 2, \"Expected output 2, got {}\".format(solution('letter'))\nassert solution('aaaaaa') == 0, \"Expected output 0, got {}\".format(solution('aaaaaa'))\nassert solution('uncopyrightable') == 13, \"Expected output 13, got {}\".format(solution('uncopyrightable'))\nassert solution('ambidextrously') == 12, \"Expected output 12, got {}\".format(solution('ambidextrously'))\nassert solution('assesses') == 1, \"Expected output 1, got {}\".format(solution('assesses'))",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 4, \"Expected 4, got {}\".format(solution(\"string\"))\nassert solution(\"letter\") == 2, \"Expected 2, got {}\".format(solution(\"letter\"))\nassert solution(\"aaaaaa\") == 0, \"Expected 0, got {}\".format(solution(\"aaaaaa\"))\nassert solution(\"uncopyrightable\") == 13, \"Expected 13, got {}\".format(solution(\"uncopyrightable\"))\nassert solution(\"ambidextrously\") == 12, \"Expected 12, got {}\".format(solution(\"ambidextrously\"))\nassert solution(\"assesses\") == 1, \"Expected 1, got {}\".format(solution(\"assesses\"))",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"AC\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"100000000 500 3\") == \"TLE\"\nassert solution(r\"100000000 50 3\") == \"AC\"\nassert solution(r\"100000000 10001 5\") == \"TLE\"\nassert solution(r\"100000000 10000 5\") == \"AC\"\nassert solution(r\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"AC\" or solution(input()) == \"TLE\", \"Invalid input\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\", \"Test 1 failed\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\", \"Test 2 failed\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\", \"Test 3 failed\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\", \"Test 4 failed\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\", \"Test 5 failed\"\n",
        "num_ids_2": 211,
        "num_ids_4": 422
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n2\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n0\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n0\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n0\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 208,
        "num_ids_4": 413
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''.strip()\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''.strip()\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''.strip()\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '''\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''.strip()\n\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '''\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''.strip()",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n1\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n''') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n''') == '''\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n''') == '''\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''\n\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n''') == '''\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H 2\\nO\\nSample Output 1: 0\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\nSample Output 2: 6\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\nSample Output 3: 1\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\nSample Output 4: 0\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\nSample Output 5: 12\\n\") == \"12\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 131
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1:C6H6OCH2O 10\\nHCN\\nSample Output 4:0\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\nSample Input 2:C2H6 10\\nC3H8\\nSample Output 2:6\\nSample Input 3:CH3OH 1\\nCH4\\nSample Output 3:1\\nSample Input 4:C6H6OCH2O 10\\nHCN\\nSample Output 4:0\\nSample Input 5:C6H14 10\\nC5H10\\nSample Output 5:12\") == \"6\\n1\\n0\\n12\\n\"",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H 2\\nO\\n') == '0\\n'\nassert solution('C2H6 10\\nC3H8\\n') == '6\\n'\nassert solution('CH3OH 1\\nCH4\\n') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0\\n'\nassert solution('C6H14 10\\nC5H10\\n') == '12\\n'",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"H 2\\nO\\n\")) == \"0\\n\"\nassert solution(input(\"C2H6 10\\nC3H8\\n\")) == \"6\\n\"\nassert solution(input(\"CH3OH 1\\nCH4\\n\")) == \"1\\n\"\nassert solution(input(\"C6H6OCH2O 10\\nHCN\\n\")) == \"0\\n\"\nassert solution(input(\"C6H14 10\\nC5H10\\n\")) == \"12\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\\nSample Input 4\\nSample Output 4\\nSample Input 5\\nSample Output 5\") == [\"0\", \"6\", \"12\"]",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"input4.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"input5.txt\", \"r\")) == \"12\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('H 2\\nO\\n') == '0\\n'\nassert solution('C2H6 10\\nC3H8\\n') == '6\\n'\nassert solution('CH3OH 1\\nCH4\\n') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0\\n'\nassert solution('C6H14 10\\nC5H10\\n') == '12\\n'",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution(r'ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution(r'ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution(r'SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Sample Input 1\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Sample Input 2\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Sample Input 3\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Sample Input 4\"",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Invalid output\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Invalid output\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Invalid output\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Invalid output\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed: Expected output: {}\\nActual output: {}\".format(output, solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test.in').read()) == \"] 7\"\nassert solution(open('test.in').read()) == \"ok so far\"\nassert solution(open('test.in').read()) == \"] 20\"\nassert solution(open('test.in').read()) == \"ok so far\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for solution, input, output in [(solution1, input1, output1), (solution2, input2, output2), (solution3, input3, output3), (solution4, input4, output4)]:\n    assert solution(input()) == output()",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n([] [] ]\") == \"] 7\\n\"\nassert solution(\"13\\n(([] [[]] ())\") == \"ok so far\\n\"\nassert solution(\"21\\n[ { { () () () } ]\") == \"] 20\\n\"\nassert solution(\"27\\n[ { [[()]] (({})) } ] () {}\") == \"ok so far\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 109
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('[] [] ]') == (']', 7)\nassert solution('(([] [[]] ())') == ('ok so far',)\nassert solution('[ { { () () () } ] ] () {}') == (']', 20)",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"([] [] ]\") == \"] 7\\n\")\nassert solution(\"(([] [[]] ())\") == \"ok so far\\n\")\nassert solution(\"[ { { () () () } ]\") == \"] 20\\n\"\nassert solution(\"[ { [[()]] (({})) } ] () {}\") == \"ok so far\\n\"\nassert solution(\"[]\") == \"ok so far\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 78
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())[]\") == \"]\"\nassert solution(\"[[])]]\") == \"]\"\nassert solution(\"(((())))\") == \"]\"\nassert solution(\"([())()])\") == \"]\"\nassert solution(\"()([)]\") == \"]\"\nassert solution(\"(())\") == \"ok so far\"\nassert solution(\"([])\") == \"ok so far\"\nassert solution(\"([])([])\") == \"ok so far\"\nassert solution(\"((()()))\") == \"]\"\nassert solution(\"({(())})\") == \"]\"\nassert solution(\"([()]])\") == \"]\"\nassert solution(\"([()])([])\") == \"]\"\nassert solution(\"(())([])([])\") == \"ok so far\"\nassert solution(\"([{}])\") == \"]\"\nassert solution(\"({})\") == \"ok so far\"\nassert solution(\"([()])([])([])([])\") == \"ok so far\"\nassert solution(\"([{}])({})({})\") == \"]\"\nassert solution(\"({([])})\") == \"]\"\nassert solution(\"([()])([])([])([])\") == \"ok so far\"\nassert solution(\"([{}])({})({})({})\") == \"]\"\nassert solution(\"([{}])({})({[])}\") == \"]\"\nassert solution(\"([{}])([])([])([])([])\") == \"ok so far\"\nassert solution(\"([{}])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"({[])})\") == \"]\"\nassert solution(\"([()])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]])([])([])([])([])([])()\") == \"ok so far\"\nassert solution(\"([[]",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"8\n([] [] ]\nSample Output 1:\n] 7\n\"\"\") == \"\"\"ok so far\n\"\"\"\n\nassert solution(\"\"\"13\n(([] [[]] ())\nSample Output 2:\nok so far\n\"\"\") == \"\"\"ok so far\n\"\"\"\n\nassert solution(\"\"\"21\n[ { { () () () () } ]\nSample Output 3:\n] 20\n\"\"\") == \"\"\"ok so far\n\"\"\"\n\nassert solution(\"\"\"27\n[ { [[()]] (({})) } ] () {}\nSample Output 4:\nok so far\n",
        "num_ids_2": 11,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Output {input()} should be '{expected}'\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(([] [[]] (()))') == ']'\nassert solution('([] [] []))') == ']'\nassert solution('(([] [[]] () ()))') == ']'\nassert solution('[(({}))] () {}') == ']'",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'''\n8\n([] [] ]\n''') == b']\\n\\n'\n\nassert solution(b'''\n13\n(([] [[]] ())\n''') == b'ok so far\\n'\n\nassert solution(b'''\n21\n[ { { () () () () } ] ]\n''') == b']\\n'\n\nassert solution(b'''\n27\n[ { [[()]] (({})) } ] () {}\n''') == b'ok so far\\n'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output '{expected_output}', but got '{solution(input())}'\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"Fair Game\"\nassert solution(\"apple extra\") == \"Player 1 lost\"\nassert solution(\"neat\") == \"Player 2 lost\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"Fair Game\"\nassert solution(sample_input_2) == \"Player 1 lost\"\nassert solution(sample_input_3) == \"Player 2 lost\"",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"Player 2 lost\"\nassert solution(5) == \"Player 2 lost\"\nassert solution(5) == \"Player 1 lost\"\nassert solution(7) == \"Player 1 lost\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    apple\n    ear\n    real\n    letters\n    style\n    \"\"\"\n) == \"Fair Game\"\n\nassert solution(\n    \"\"\"\n    3\n    apple\n    extra\n    apple\n    \"\"\"\n) == \"Player 1 lost\"\n\nassert solution(\n    \"\"\"\n    2\n    apple\n    neat\n    \"\"\"\n) == \"Player 2 lost\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Player 1 lost\", \"Expected output: Player 1 lost\"\n\nfor _ in range(int(input())):\n    N = int(input())\n    words = []\n    for i in range(N):\n        word = input()\n        words.append(word)\n    \n    first_player_won = False\n    second_player_won = False\n    for i in range(N):\n        last_letter = words[i][-1]\n        for j in range(i+1, N):\n            next_letter = words[j][-1]\n            if last_letter == next_letter:\n                if i == j:\n                    second_player_won = True\n                else:\n                    first_player_won = True\n                    break\n    \n    if first_player_won:\n        print(\"Fair Game\")\n    elif second_player_won:\n        print(\"Player 2 lost\")\n    else:\n        print(\"Player 1 lost\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"Fair Game\"\nassert solution(sample_input_2) == \"Player 1 lost\"\nassert solution(sample_input_3) == \"Player 2 lost\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\near\\nextra\\napple') == 'Player 1 lost'\nassert solution('2\\napple\\neat') == 'Player 2 lost'",
        "num_ids_2": 50,
        "num_ids_4": 69
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\near\\nextra\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\neat\") == \"Player 2 lost\"",
        "num_ids_2": 50,
        "num_ids_4": 69
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\") == \"Player 2 lost\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"100000\", \"Test case 1\"\nassert solution(\"10000\") == \"10010\", \"Test case 2\"\nassert solution(\"10\") == \"1010\", \"Test case 3\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '100000'\nassert solution(open('input.txt', 'r')) == '10010'\nassert solution(open('input.txt', 'r')) == '1010'",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\\n*\\n100\") == \"100000\", \"Expected '100000', got '{0}'.\".format(solution(\"1000\\n*\\n100\"))\n\nassert solution(\"10000\\n+\\n10\") == \"10010\", \"Expected '10010', got '{0}'.\".format(solution(\"10000\\n+\\n10\"))\n\nassert solution(\"10\\n+\\n1000\") == \"1010\", \"Expected '1010', got '{0}'.\".format(solution(\"10\\n+\\n1000\"))\n\nfrom typing import List",
        "num_ids_2": 110,
        "num_ids_4": 160
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output the result of the operation.', \"The solution for the problem statement is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\\n* 100 100\") == \"100000\"\nassert solution(\"10000\\n+ 10 1000\") == \"10010\"\nassert solution(\"10\\n+ 1000\") == \"1010\"",
        "num_ids_2": 58,
        "num_ids_4": 80
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"100000\", \"Input 1 is incorrect\"\nassert solution(input()) == \"10010\", \"Input 2 is incorrect\"\nassert solution(input()) == \"1010\", \"Input 3 is incorrect\"",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000\\n*\\n100\") == \"100000\"\nassert solution(\"10000\\n+\\n10\") == \"10010\"\nassert solution(\"10\\n+\\n1000\") == \"1010\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(in1) == out1, \"Test 1 failed\"\nassert solution(in2) == out2, \"Test 2 failed\"\nassert solution(in3) == out3, \"Test 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Test case 1 failed.\"\nassert solution(\"8 in\") == \"6\\n\", \"Test case 2 failed.\"\nassert solution(\"52 out\") == \"8\\n\", \"Test case 3 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 out') == '3', \"Solution 1 incorrect.\"\nassert solution('8 in') == '6', \"Solution 2 incorrect.\"\nassert solution('52 out') == '8', \"Solution 3 incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 out\") == \"3\", \"Your solution is incorrect\"\nassert solution(\"8 in\") == \"6\", \"Your solution is incorrect\"\nassert solution(\"52 out\") == \"8\", \"Your solution is incorrect\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\", \"Test case 1 failed\"\nassert solution(\"8 in\") == \"6\", \"Test case 2 failed\"\nassert solution(\"52 out\") == \"8\", \"Test case 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '3\\n', 'Sample Input 1'\nassert solution(sample_input_2) == '6\\n', 'Sample Input 2'\nassert solution(sample_input_3) == '8\\n', 'Sample Input 3'",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 out\") == \"3\\n\"\nassert solution(\"8 in\") == \"6\\n\"\nassert solution(\"52 out\") == \"8\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected {output()}, but got {solution(input())}.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, but got {solution(input())}\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Test 1 failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Test 2 failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Test 3 failed\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Sample Input 1\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Sample Input 2\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Sample Input 3\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Test 1 failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Test 2 failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Test 3 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2018\\n2019\\n2020\") == \"yes\\nno\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=sample_input_1) == sample_output_1\nassert solution(stdin=sample_input_2) == sample_output_2\nassert solution(stdin=sample_input_3) == sample_output_3\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} should be {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2018) == \"yes\", \"Sample Input 1: Expected output: yes\"\nassert solution(2019) == \"no\", \"Sample Input 2: Expected output: no\"\nassert solution(2020) == \"yes\", \"Sample Input 3: Expected output: yes\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '64', 'Expected output: 64, actual output:'+ solution(stdin)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 64\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\\n\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\\n\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 115
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"The function should return the expected output.\"\nassert solution(sample_input_2) == sample_output_2, \"The function should return the expected output.\"\nassert solution(sample_input_3) == sample_output_3, \"The function should return the expected output.\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"The output for {stdin} is incorrect. Expected: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='4 0 0 0 4 0 0 0 0 4 0 0 0 0 4') == '64'\nassert solution(stdin='4 0 0 0 4 0 0 0 0 4 0 0 0 0 4') == '0'\nassert solution(stdin='10 10 10 20 0 10 10 10 10 10') == '1820000'",
        "num_ids_2": 81,
        "num_ids_4": 126
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\", \"Output incorrect\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\", \"Output incorrect\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\", \"Output incorrect\"",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Function should return the expected output\"\nassert solution(sample_input_2) == sample_output_2, \"Function should return the expected output\"\nassert solution(sample_input_3) == sample_output_3, \"Function should return the expected output\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330', 'Test 1 failed'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570', 'Test 2 failed'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0', 'Test 3 failed'",
        "num_ids_2": 100,
        "num_ids_4": 148
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 330\\n2 570\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 330\\n2 570\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2 330\\n2 570'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 330\"\nassert solution() == \"2 570\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected, f\"Test failed: \\nExpected: {expected}\\nGot: {solution()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(data) == expected, f\"Got {solution(data)}, expected {expected}\"\nfor data, expected in [\n    (\"7 0\\n30 270 995 996 997 998 999\", \"2 330\"),\n    (\"7 1\\n30 270 995 996 997 998 999\", \"2 570\"),\n    (\"7 2\\n30 270 995 996 997 998 999\", \"0 0\"),\n]:\n    assert solution(data) == expected, f\"Got {solution(data)}, expected {expected}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\", \"Test Case 1\"\nassert solution(\"abbaabbaabba\") == \"2\", \"Test Case 2\"\nassert solution(\"abcdef\") == \"6\", \"Test Case 3\"",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\", \"Sample Input 1 should be 1.\"\nassert solution(\"abbaabbaabba\") == \"2\", \"Sample Input 2 should be 2.\"\nassert solution(\"abcdef\") == \"6\", \"Sample Input 3 should be 6.\"",
        "num_ids_2": 45,
        "num_ids_4": 65
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == '1', 'Test case 1 failed'\nassert solution('abbaabbaabba') == '2', 'Test case 2 failed'\nassert solution('abcdef') == '6', 'Test case 3 failed'",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:\\n2\\n1 2\\n') == '2\\n1 2\\n'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0\\n' + '1\\n' + '1\\n') == '0\\n1\\n1\\n'",
        "num_ids_2": 144,
        "num_ids_4": 213
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:2\\n\\nSample Input 2:5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:1\\n\\nSample Input 3:3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:0') == '2\\n1\\n1\\n'",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"2\\n1 2\\n\"\nassert solution(sample_input_2) == \"1\\n1\\n\"\nassert solution(sample_input_3) == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\\n5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\n\\n') == '2\\n1 2\\n'",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\n\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1'\n\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '0'",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5551212\") == 1, \"Test 1 failed\"\nassert solution(\"5519876\") == 0, \"Test 2 failed\"\nassert solution(\"5055555\") == 0, \"Test 3 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5551212') == 1, \"5551212 is not routed to the directory information operator\"\nassert solution('5519876') == 0, \"5519876 is routed to the directory information operator\"\nassert solution('5055555') == 0, \"5055555 is not routed to the directory information operator\"\n",
        "num_ids_2": 67,
        "num_ids_4": 101
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5551212) == 1, \"The number 5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"The number 5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"The number 5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 75,
        "num_ids_4": 113
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5551212) == 1, \"Expected: 1, Actual: {}\".format(solution(5551212))\nassert solution(5519876) == 0, \"Expected: 0, Actual: {}\".format(solution(5519876))\nassert solution(5055555) == 0, \"Expected: 0, Actual: {}\".format(solution(5055555))",
        "num_ids_2": 74,
        "num_ids_4": 111
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5551212) == 1, \"Expected output: 1\"\nassert solution(5519876) == 0, \"Expected output: 0\"\nassert solution(5055555) == 0, \"Expected output: 0\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {case} failed. Expected output: '{expected}', got: '{solution(input())}'\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\nfrom collections import defaultdict\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {input()} -> {output()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(32/1) == '0/1'\nassert solution(33/1) == '5/9'\nassert solution(-40/1) == '-40/1'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32/1\\n\") == \"0/1\"\nassert solution(\"33/1\\n\") == \"5/9\"\nassert solution(\"-40/1\\n\") == \"-40/1\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, \"C E G\", \"D F# A\") == \"Transposition\"\nassert solution(7, \"C C G G A A G\", \"C C F F D# D# F\") == \"Inversion\"\nassert solution(7, \"A B C D E F G\", \"G F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"Transposition\"\nassert solution(7) == \"Inversion\"\nassert solution(7) == \"Retrograde\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Nonsense\", \"The code is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\nC E G\nD F# A\n''') == 'Transposition'\n\nassert solution('''\n7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n\nassert solution('''\n7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"Transposition\"\nassert solution(7) == \"Inversion\"\nassert solution(7) == \"Retrograde\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition\\n'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion\\n'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\\n\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\\n\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"\n",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"sample test case 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"sample test case 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"sample test case 3\"",
        "num_ids_2": 55,
        "num_ids_4": 85
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Sample Input 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Sample Input 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Sample Input 3\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"14\"\nassert solution(4) == \"16\"\nassert solution(1) == \"6\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 16\nassert solution(3) == 14\nassert solution(1) == 6\nassert solution(5) == 20",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"16\"\nassert solution(3) == \"14\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 16, \"Incorrect solution\"\nassert solution(3) == 14, \"Incorrect solution\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed: expected output '{expected_output}', got '{solution(stdin)}'\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 14",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '14'\nassert solution(4) == '16'\nassert solution(1) == '6'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"16\"\nassert solution(3) == \"14\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2'\nassert solution('4 10\\n1 3 1 7\\n') == '4'",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\n\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2'\n\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n4\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\") == \"4\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 122
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3\\n'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2\\n'\nassert solution('4 10\\n1 3 1 7\\n') == '4\\n'",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\", \"your implementation is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\n",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string=\"1 2\\n0 1 1\\n1 0 0\\n1 2\\n0 1 0\\n1 0 1\") == \"possible\"\nassert solution(input_string=\"1 2\\n1 0 0\\n0 1 0\\n1 2\\n0 1 1\") == \"impossible\"\nassert solution(input_string=\"1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 1\") == \"impossible\"\n",
        "num_ids_2": 92,
        "num_ids_4": 135
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1 2\\n0 1 1\\n1 0 0\\n2 1 0\\n3 0 1\\n4 1 0\\n5 0 1\\n6 1 0\\n7 0 1\\n8 1 0\\n9 0 1\\n10 1 0\\n11 0 1\\n12 1 0\\n13 0 1\\n14 1 0\\n15 0 1\\n16 1 0\\n17 0 1\\n18 1 0\\n19 0 1\\n20 1 0\\n21 0 1\\n22 1 0\\n23 0 1\\n24 1 0\\n25 0 1\\n26 1 0\\n27 0 1\\n28 1 0\\n29 0 1\\n30 1 0\\n31 0 1\\n32 1 0\\n33 0 1\\n34 1 0\\n35 0 1\\n36 1 0\\n37 0 1\\n38 1 0\\n39 0 1\\n40 1 0\\n41 0 1\\n42 1 0\\n43 0 1\\n44 1 0\\n45 0 1\\n46 1 0\\n47 0 1\\n48 1 0\\n49 0 1\\n50 1 0\\n51 0 1\\n52 1 0\\n53 0 1\\n54 1 0\\n55 0 1\\n56 1 0\\n57 0 1\\n58 1 0\\n59 0 1\\n60 1 0\\n61 0 1\\n62 1 0\\n63 0 1\\n64 1 0\\n65 0 1\\n66 1 0\\n67 0 1\\n68 1 0\\n69 0 1\\n70 1 0\\n71 0 1\\n72 1 0\\n73 0 1\\n74 1 0\\n75 0 1\\n76 1 0\\n77 0 1\\n78 1 0\\n79 0 1\\n80 1 0\\n81 0 1\\n82 1 0\\n83 0 1\\n84 1 0\\n85 0 1\\n86 1 0\\n87 0 1\\n88 1 0\\n89 0 1\\n90 1 0\\n91 0 1\\n92 1 0\\n93 0 1\\n94 1 0\\n95 0 1\\n96 1 0\\n97 0 1\\n98 1 0\\n99 0 1\\n100 1 0\\n101 0 1\\n102 1 0\\n103 0 1\\n104 1 0\\n105 0 1\\n106 1 0\\n107 0 1\\n108 1 0\\n109 0 1\\n110 1 0\\n111 0 1\\n112 1 0\\n113 0 1\\n114 1 0\\n115 0 1\\n116 1 0\\n117 0 1\\n118 1 0\\n119 0 1\\n120 1 0\\n121 0 1\\n122 1 0\\n123 0 1\\n124 1 0\\n1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'possible'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    # Sample Input 1:\n    1 2\n    # Sample Output 1:\n    possible\n    # Sample Input 2:\n    1 2\n    # Sample Output 2:\n    impossible\n    # Sample Input 3:\n    1 2\n    # Sample Output 3:\n    impossible\n    '''\n) == 'possible\\n'\n\nassert solution(\n    '''\n    # Sample Input 1:\n    1 2\n    # Sample Output 1:\n    possible\n    # Sample Input 2:\n    1 0 0\n    # Sample Output 2:\n    impossible\n    # Sample Input 3:\n    1 0 0\n    # Sample Output 3:\n    impossible\n    '''\n) == 'impossible\\n'\n\nassert solution(\n    '''\n    # Sample Input 1:\n    1 2\n    # Sample Output 1:\n    possible\n    # Sample Input 2:\n    1 0 0\n    # Sample Output 2:\n    impossible\n    # Sample Input 3:\n    1 0 0\n    # Sample Output 3:\n    impossible\n    '''\n) == 'impossible\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got {solution(input())}, expected {expected}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == 'possible'\n\nassert solution(\nr\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == 'impossible'\n\nassert solution(\nr\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == 'impossible'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n2 0 1\\n3 2 0\\n4 1 1\\n5 1 0\\n6 2 1\\n7 0 1\\n8 1 0\\n9 1 0\\n10 1 0\\n11 0 1\\n12 1 0\\n13 1 1\\n14 1 1\\n15 1 0\\n16 1 1\\n17 0 1\\n18 1 0\\n19 1 1\\n20 1 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n2 0 1\\n3 2 0\\n4 1 1\\n5 1 0\\n6 2 1\\n7 0 1\\n8 1 0\\n9 1 0\\n10 1 0\\n11 0 1\\n12 1 0\\n13 1 1\\n14 1 1\\n15 1 0\\n16 1 1\\n17 0 1\\n18 1 0\\n19 1 1\\n20 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 1\\n1 0 0\\n2 0 1\\n3 2 0\\n4 1 1\\n5 1 0\\n6 2 1\\n7 0 1\\n8 1 0\\n9 1 0\\n10 1 0\\n11 0 1\\n12 1 0\\n13 1 1\\n14 1 1\\n15 1 0\\n16 1 1\\n17 0 1\\n18 1 0\\n19 1 1\\n20 1 0\\n21 0 1\") == \"impossible\"",
        "num_ids_2": 341,
        "num_ids_4": 520
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"2 3\") == \"1.875\\n\"\nassert solution(\"6 2\") == \"4.25\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 1') == '1\\n'\nassert solution(stdin='2 3') == '1.875\\n'\nassert solution(stdin='6 2') == '4.25\\n'",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n2 3\\n6 2\") == \"1.875\"\nassert solution(\"100 100\\n1 100\") == \"100.0\"\nassert solution(\"100000 100000\\n1 100000\") == \"100000.0\"",
        "num_ids_2": 53,
        "num_ids_4": 92
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1 1\\n2 3\\n6 2\") == \"1.875\"\nassert solution(stdin=\"10 5\") == \"1.125\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 1') == '1\\n'\nassert solution(stdin='2 3') == '1.875\\n'\nassert solution(stdin='6 2') == '4.25\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"2 3\") == \"1.875\\n\", \"Incorrect output\"\nassert solution(\"6 2\") == \"4.25\\n\", \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"The expected output is 1, but it is: \" + solution(\"1 1\")\nassert solution(\"2 3\") == \"1.875\\n\", \"The expected output is 1.875, but it is: \" + solution(\"2 3\")\nassert solution(\"6 2\") == \"4.25\\n\", \"The expected output is 4.25, but it is: \" + solution(\"6 2\")\n",
        "num_ids_2": 76,
        "num_ids_4": 116
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1 6\", \"Your solution is incorrect. Please check the sample inputs and explain the expected output.\"\nassert solution(4) == \"1 4\", \"Your solution is incorrect. Please check the sample inputs and explain the expected output.\"\nassert solution(1) == \"0 0\", \"Your solution is incorrect. Please check the sample inputs and explain the expected output.\"\nassert solution(2) == \"0 0\", \"Your solution is incorrect. Please check the sample inputs and explain the expected output.\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 0\\n1 4\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input().strip()) + '\\n') == str(input().strip()) + '\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\" # Solution1\nassert solution(stdin) == \"1\\n\" # Solution2\nassert solution(stdin) == \"0\\n\" # Solution3\nassert solution(stdin) == \"0\\n\" # Solution4\nassert solution(stdin) == \"0\\n\" # Solution5\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\", \"First Example\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\", \"Second Example\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\", \"Third Example\"",
        "num_ids_2": 70,
        "num_ids_4": 119
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str=\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"1\\n\"\nassert solution(input_str=\"4\\nBWWB\\nBWBW\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(input_str=\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 119
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBW\\n\") == \"0\\n\"\nassert solution(\"4\\nBWWB\\nBWBW\\n\") == \"0\\n\"\nassert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\n\") == \"0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 102
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n2 1\n3 4\n3 2\n1 2\n3 7\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test failed for example\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\\n\\nInput: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\\n\\nInput: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\\nConstraints:\\n\\nThe number of the nodes in the list is in the range [0, 104].\\n-105 <= Node.val <= 105\\npos is -1 or a valid index in the linked-list.\") == \"true\\n\"",
        "num_ids_2": 195,
        "num_ids_4": 195
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'false'\nassert solution([3,2,0,-4], 1) == 'true'\nassert solution([1,2], 0) == 'true'\nassert solution([1], -1) == 'false'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3,2,0,-4]) == True\nassert solution([1,2]) == True\nassert solution([1]) == False\nassert solution([-1]) == False",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('[3,2,0,-4]') == 'true'\nassert solution('[1,2]') == 'true'\nassert solution('[1]') == 'false'\nassert solution('[]') == 'false'",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3,2,0,-4,1\") == True\nassert solution(\"1,2\") == True\nassert solution(\"1\") == True\nassert solution(\"-1,-1\") == False\n",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 2, 0, -4]) == True\nassert solution([1, 2]) == True\nassert solution([1]) == False\nassert solution([-1, -1]) == True",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 2, 0, -4], 1) == True\nassert solution([1, 2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 34,
        "num_ids_4": 45
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\nprint(\"Test passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2,7,11,15\") == [0, 1]\nassert solution(\"2,3,4,5\") == [-1, -1]\nassert solution(\"2,3,4,6\") == [-1, -1]\nassert solution(\"1,2,3,4,5\") == [-1, -1]\nassert solution(\"1,2,3,4,6\") == [-1, -1]",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == [0, 1]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\n\nassert solution([2, 3, 4, 5, 6, 7], 9) == [0, 2]",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"[]\") == [] # empty input\nassert solution(stdin=\"[1,2]\") == [0] # single element input\nassert solution(stdin=\"[1,2,3]\") == [0] # single element input\nassert solution(stdin=\"[1,2,3,4]\") == [0] # single element input\nassert solution(stdin=\"[1,5,10,15]\") == [0] # single element input\nassert solution(stdin=\"[-10, -5, -2, 0, 5, 10, 15]\") == [0] # all negative inputs\nassert solution(stdin=\"[-10, -5, -2, 0, 5, 10, 15, 1, 2, 3]\") == [0, 4] # multiple elements\nassert solution(stdin=\"[-10, -5, -2, 0, 5, 10, 15, 1, 2, 3, 4]\") == [0, 4] # multiple elements\nassert solution(stdin=\"[-10, -5, -2, 0, 5, 10, 15, 1, 2, 3, 4, -1]\") == [0, 4] # multiple elements and negative target",
        "num_ids_2": 31,
        "num_ids_4": 73
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 7, 11, 15) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output the number of intersections on a single line.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n\") == \"0\"\nassert solution(\"10\\n5\\n6\\n\") == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == 0\nassert solution('4') == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Invalid Output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n\") == \"0\\n\"\nassert solution(\"5\\n6\\n\") == \"1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"impossible\"\nassert solution(1) == \"impossible\"\nassert solution(1) == \"impossible\"\nassert solution(1) == \"impossible\"\nassert solution(1) == \"impossible\"\nassert solution(1) == \"impossible\"\nassert solution(1) == \"impossible\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"1\\n3 7\\n\") == \"impossible\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2 2 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\" # test case for impossible output",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"4\\n\"\nassert solution(sample_input2) == \"impossible\\n\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test case {i+1} failed: Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, \"Test case failed\"\nfor i in range(2, 11):\n    n = i\n    a = [int(x) for x in stdin.readline().split()]\n    assert solution(stdin) == output, f\"Test case failed for input: {n} {a}\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"184 1\\n123450995 1\") == \"180\"\nassert solution(\"184 2\\n123450995 2\") == \"182\"\nassert solution(\"184 3\\n123450995 3\") == \"184\"\nassert solution(\"184 4\\n123450995 4\") == \"186\"\nassert solution(\"184 5\\n123450995 5\") == \"188\"\nassert solution(\"184 6\\n123450995 6\") == \"190\"\nassert solution(\"184 7\\n123450995 7\") == \"192\"\nassert solution(\"184 8\\n123450995 8\") == \"194\"\nassert solution(\"184 9\\n123450995 9\") == \"196\"\nassert solution(\"184 10\\n123450995 10\") == \"198\"\nassert solution(\"184 11\\n123450995 11\") == \"200\"\nassert solution(\"184 12\\n123450995 12\") == \"202\"\nassert solution(\"184 13\\n123450995 13\") == \"204\"\nassert solution(\"184 14\\n123450995 14\") == \"206\"\nassert solution(\"184 15\\n123450995 15\") == \"208\"\nassert solution(\"184 16\\n123450995 16\") == \"210\"\nassert solution(\"184 17\\n123450995 17\") == \"212\"\nassert solution(\"184 18\\n123450995 18\") == \"214\"\nassert solution(\"184 19\\n123450995 19\") == \"216\"\nassert solution(\"184 20\\n123450995 20\") == \"218\"\nassert solution(\"184 21\\n123450995 21\") == \"220\"\nassert solution(\"184 22\\n123450995 22\") == \"222\"\nassert solution(\"184 23\\n123450995 23\") == \"224\"\nassert solution(\"184 24\\n123450995 24\") == \"226\"\nassert solution(\"184 25\\n123450995 25\") == \"228\"\nassert solution(\"184 26\\n123450995 26\") == \"230\"\nassert solution(\"184 27\\n123450995 27\") == \"232\"\nassert solution(\"184 28\\n123450995 28\") == \"234\"\nassert solution(\"184 29\\n123450995 29\") == \"236\"\nassert solution(\"184 30\\n123450995 30\") == \"238\"\nassert solution(\"184 31\\n123450995 31\") == \"240\"\nassert solution(\"184 32\\n123450995 32\") == \"242\"\nassert solution(\"184 33\\n123450995 33\") == \"244\"\nassert solution(\"184 34\\n123450995 ",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution is {solution(input())}, but expected {expected}\"\n\nfrom typing import TextIO, List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.readline().strip()) == solution(stdin.readline().strip())\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, got: {solution(sample_input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"184 1\\n123450995 1\\n\") == \"180\\n123451000\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input {input()} failed, expected {output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1\n    2 2\n    3 3\n    \"\"\"\n) == \"0.000000\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"0.000000\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == \"0.000000\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.000000\", \"Solution should return 0.000000.\"\nassert solution() == \"0.000000\", \"Solution should return 0.000000.\"\nassert solution() == \"0.000000\", \"Solution should return 0.000000.\"\nassert solution() == \"0.000000\", \"Solution should return 0.000000.\"\nassert solution() == \"0.000000\", \"Solution should return 0.000000.\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.000000\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\\n\"\n\nsolution(\"1\\n1 1\\n2 2\\n3 3\\n\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n4\\n6\\n8\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, Received output: {solution()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n2\\n4\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''1\n2\n4\n'''\n\nassert solution(stdin) == '''1\n2\n6\n8\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == ['1', '2', '4']\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == ['1', '2', '6', '8']",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    4\n    3\n    2 1 2\n    3 2 3 4\n    3 4 2 1\n    '''\n) == '1\\n2\\n4\\n'\n\nassert solution(\n    '''\n    8\n    5\n    4 1 3 5 6\n    2 5 6\n    3 6 7 8\n    2 6 2\n    4 2 6 8 1\n    '''\n) == '1\\n2\\n6\\n8\\n'\n\nassert solution(\n    '''\n    3\n    2\n    1 3\n    1 4 1\n    2 3\n    3 4 1 2\n    4 5 2 3\n    '''\n) == '1\\n3\\n4\\n5\\n'\n\nassert solution(\n    '''\n    4\n    3\n    1 2\n    2 1 4\n    2 4 1 3\n    3 4 2 1\n    4 3 2 1\n    '''\n) == '1\\n3\\n4\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1''') == ['1', '2', '4']\n\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1''') == ['1', '2', '6', '8']",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\", \"Test 1\"\nassert solution(\"2 2 2\") == \"8\\n\", \"Test 2\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"60\", \"Incorrect output\"\nassert solution(\"2 2 2\") == \"8\", \"Incorrect output\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"60\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '60\\n', 'The output is not correct.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"60\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"60\\n\", \"Your solution is incorrect\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '60\\n', \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n1 -1 4') == '2.5'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 2\\n\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\\n\") == 2.5",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == '1.6666666666666667', 'Output should be 1.6666666666666667'\nassert solution(input2) == '2.5', 'Output should be 2.5'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.6666666666666667\\n\", \"Your code is incorrect. Please check the problem statement for the correctness of the solution.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\", \"Test 1 failed\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\", \"Test 2 failed\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\", \"Your solution is incorrect.\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\", \"Your solution is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 2\\n') == '1.6666666666666667\\n', \"Output 1\"\nassert solution('3\\n1 -1 4\\n') == '2.5\\n', \"Output 2\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\\n\", \"Sample Input 1\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\\n\", \"Sample Input 2\"\n\nfrom typing import List",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0 2\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\") == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"The function should return {expected_output}, but it returned {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"6\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"7\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 6, \"The correct output should be 6.\"\nassert solution(10) == 12, \"The correct output should be 12.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7, 3) == 6\nassert solution(15, 12) == 7",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed\"\nelse:\n    print(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7, 3) == 6\nassert solution(15, 12) == 7",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(output), \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\") == \"6\", \"Sample Input 1\"\nassert solution(\"15 12\") == \"7\", \"Sample Input 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"There should be only one possible combination for the given input.\"\n\nsolution = lambda: 1\n\nassert solution() == \"1\", \"There should be only one possible combination for the given input.\"\n\nsolution = lambda: 1\n\nassert solution() == \"1\", \"There should be only one possible combination for the given input.\"\n\nsolution = lambda: 1\n\nassert solution() == \"1\", \"There should be only one possible combination for the given input.\"\n\nsolution = lambda: 1\n\nassert solution() == \"1\", \"There should be only one possible combination for the given input.\"\n\nsolution = lambda: 1\n\nassert solution() == \"1\", \"There should be only one possible combination for the given input.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"0\"\n\nL, H = list(map(int, input().split()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\", \"Your code is incorrect.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    123864 123865\n    198765 198769\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2147483648 2147483647\n    2147483647 2147483647\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543210\n    9876543210 9876543210\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543211\n    9876543210 9876543211\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543212\n    9876543210 9876543212\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543213\n    9876543210 9876543213\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543214\n    9876543210 9876543214\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543215\n    9876543210 9876543215\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543216\n    9876543210 9876543216\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543217\n    9876543210 9876543217\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543218\n    9876543210 9876543218\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543219\n    9876543210 9876543219\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543220\n    9876543210 9876543220\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543221\n    9876543210 9876543221\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543222\n    9876543210 9876543222\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543223\n    9876543210 9876543223\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    9876543210 9876543224\n    9876543210 9876543224\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').readline()) == '1', \"The solution is incorrect\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\nimport random\nimport string",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\"\nassert solution(\"198765 198769\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == '0.50000000'\nassert solution('') == '0.50000000'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0.5\nassert solution(10) == 0.15039304098689088\nassert solution(100) == 0.00014007503988869031\nassert solution(1000) == 0.00000330745314101113\nassert solution(10000) == 0.00000015210695593995\nassert solution(100000) == 0.0000000002367341411",
        "num_ids_2": 39,
        "num_ids_4": 104
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.66666667\", \"Solution should return 0.66666667, but returned: \" + solution(stdin)",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.50000000\", \"Your solution is not correct\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} should output {output} but it actually outputs {solution(input())}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '0.66666667', 'Testcase 2 failed'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 0.5\nassert solution(2) == 0.66666667\n\nfrom random import random",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.50000000'\n\nsolution(stdin)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\") == \"0.66666667\\n\"\n\nSolution:\n\nThe solution to this problem is to simulate the process of Secret Santa. We need to take $N$ names from a hat and give them back to the same hat. To simulate this process, we will first shuffle the names and then give them back to the same hat. \n\nTo simulate the process of shuffling the names, we will first generate a random permutation of the names. We can then shuffle the names one by one and give them back to the same hat. We will repeat this process for $N$ times to generate a list of shuffled names.\n\nHere's the implementation of the solution:\n\n```python\nimport random",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"triple 20\\ntriple 20\\ntriple 20\", \"The function should return the expected output.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"36\"\nassert solution(6) == \"168\"\nassert solution(20) == \"1845\"\nassert solution(25) == \"35125\"\nassert solution(50) == \"123750\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"168\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '168\\n', \"Please provide the correct input\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '168', \"Expected output: '168', got: '{}'.\".format(solution(sample_input1))\nassert solution(sample_input2) == '36', \"Expected output: '36', got: '{}'.\".format(solution(sample_input2))\n\nsample_input1 = '''\n10 4 7\n'''\n\nsample_input2 = '''\n5 2 2\n'''",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\", \"Test 1\"\nassert solution(\"5 2 2\") == \"36\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 7\\n5 2 2\") == 168",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"168\"\nassert solution(sample_input_2) == \"36\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 10\\nSample Input 1:1\\n1\\n2\\n3 8\\n5 8\\nSample Input 2:2\\n1\\n2\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10\\n10 10\\n11 10\\n12 10\\n13 10\\n14 10\\n15 10\\n16 10\\n17 10\\n18 10\\n19 10\\n20 10\\n21 10\\n22 10\\n23 10\\n24 10\\n25 10\\n26 10\\n27 10\\n28 10\\n29 10\\n30 10\\nSample Output 1:7\\nSample Output 2:1\") == \"7\\n\"\nassert solution(\"2\\n3 8\\n5 8\\nSample Input 2:2\\n1\\n2\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10\\n10 10\\n11 10\\n12 10\\n13 10\\n14 10\\n15 10\\n16 10\\n17 10\\n18 10\\n19 10\\n20 10\\n21 10\\n22 10\\n23 10\\n24 10\\n25 10\\n26 10\\n27 10\\n28 10\\n29 10\\n30 10\\nSample Output 1:1\\nSample Output 2:1\") == \"1\\n\"",
        "num_ids_2": 502,
        "num_ids_4": 502
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\\n\", \"Incorrect output. Please see the example.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == expected",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 10\") == \"7\\n\"\nassert solution(\"2\\n3 8 5 8\") == \"1\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\", \"Invalid Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n1\n3 10\n2\n5 8\n3 6\n4 6\n5 5\n6 5\n7 4\n8 4\n9 4\n10 3\n11 3\n12 3\n13 2\n14 2\n15 2\n16 1\n17 1\n18 1\n19 1\n20 1\n\"\"\") == \"7\"\n\nassert solution(r\"\"\"\n1\n2 5\n2 3\n2 4\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n1\n1 2\n1 3\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n1\n1 1\n1 3\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n1\n1 3\n1 5\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n1\n1 3\n2 4\n\"\"\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 10\\n\") == 7\nassert solution(\"2\\n3 8\\n5 8\\n\") == 1",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n') =='raise your right hand. raise your left hand.'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\" smile. \"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. Lower your right hand. raise your left hand.\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"  \") == \"\"\nassert solution(\"Simon says smile.\") == \" smile.\"\nassert solution(\"Simon says raise your right hand.\") == \" raise your right hand.\"\nassert solution(\"Simon says raise your left hand.\") == \" raise your left hand.\"\nassert solution(\"  Simon says smile.\") == \" smile.\"\nassert solution(\"  Simon says raise your right hand.\") == \" raise your right hand.\"\nassert solution(\"  Simon says raise your left hand.\") == \" raise your left hand.\"",
        "num_ids_2": 14,
        "num_ids_4": 48
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Sample Input 1\") == \" smile.\\n\"\nassert solution(\"Sample Input 2\") == \" raise your right hand. lower your right hand. raise your left hand.\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == solution(input())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5', 'Expected \"5\", but got \"{}\"'.format(solution('0 0 4 6 10 12 16 18'))\nassert solution('1 2 4 6 10 12 16 18') == '0', 'Expected \"0\", but got \"{}\"'.format(solution('1 2 4 6 10 12 16 18'))",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\", \"Test Case 1 Failed\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\", \"Test Case 2 Failed\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\", \"Expected '5', but got '{}'\".format(solution(\"0 0 4 6 10 12 16 18\"))\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\", \"Expected '0', but got '{}'\".format(solution(\"1 2 4 6 10 12 16 18\"))",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5', \"Output should be '5', but got '{}'.\".format(solution())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5, \"Sample Input 1\"\nassert solution(\"1 2 4 6 10 12 16 18\") == 0, \"Sample Input 2\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\nA\\nAT\\nTT\\nTC\\n') == '3\\n0 1\\n1 2\\n2 3\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num + 1} failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample1) == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(sample2) == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n0 1\\n1 2\\n2 3'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC\\n') == '3\\n0 1\\n1 2\\n2 3\\n'\nassert solution('4 1\\nA\\nA\\nG\\nT\\n') == '2\\n0 1\\n0 2\\n0 3\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\nAA\\nAT\\nTT\\nTC\\n') == '3\\n0 1\\n1 2\\n2 3\\n'\nassert solution('4 1\\nA\\nA\\nG\\nT\\n') == '2\\n0 1\\n0 2\\n0 3\\n'\nassert solution('4 1\\nA\\nA\\nG\\nT\\n') == '2\\n0 1\\n0 2\\n0 3\\n'",
        "num_ids_2": 84,
        "num_ids_4": 125
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nA\\nAT\\nTT\\nTC\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: {output} is not equal to the output of the solution\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\", \"The first solution is incorrect\"\nassert solution(\"ab\") == -1, \"The second solution is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(read_input()) == expected",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}, expected output {expected}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'Dr. Chaz will have 80 pieces of chicken left over!\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(20, 100) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(2, 3) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(1, 1) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(5, 3) == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\nassert solution(10, 2) == \"Dr. Chaz needs 3 more piece[s] of chicken!\"\n\nfrom typing import List\n",
        "num_ids_2": 56,
        "num_ids_4": 109
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test cases are not matching.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"20 100\\n\"\n) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\n\nassert solution(\n    \"2 3\\n\"\n) == \"Dr. Chaz needs 1 more piece of chicken!\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(\"20 100\")) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(solution(\"2 3\")) == \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(3)) == \"-2\"\nassert solution(str(10)) == \"0\"\nassert solution(str(30)) == \"20\"\nassert solution(str(1000)) == \"20\"\nassert solution(str(980)) == \"20\"\nassert solution(str(100)) == \"20\"\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\nassert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\\n# Test case 2\\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n'",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"-2\\n0\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\", \"Please fix the code and submit again.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2\\n'\n\nassert solution(\n'''\n3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"kala\", \"Your solution should return 'kala' for sample input 1.\"\nassert solution(sample_input2) == \"as\", \"Your solution should return 'as' for sample input 2.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"kala\"\nassert solution(sample_input2) == \"as\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1: Wrong output\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2: Wrong output\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(sample_input(1))) == solution(sample_input(2)) == \"kala\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='WNEENWEENEENE') == 10\nassert solution(stdin='NSEW') == 4\n\nfrom typing import List\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('WNEENWEENEENE') == 10, \"Test case 1 failed\"\nassert solution('NSEW') == 4, \"Test case 2 failed\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"Expected '10' got '{}'\".format(solution(\"WNEENWEENEENE\"))\nassert solution(\"NSEW\") == \"4\", \"Expected '4' got '{}'\".format(solution(\"NSEW\"))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WNMWMME\") == 10, \"The solution should return 10.\"\nassert solution(\"NSEW\") == 4, \"The solution should return 4.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"10\", \"The solution is incorrect.\"\nassert solution(sample_input2) == \"4\", \"The solution is incorrect.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"The correct output is: 10\"\nassert solution(\"NSEW\") == \"4\", \"The correct output is: 4\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution should return 10 characters.\"\nassert solution(\"NSEW\") == 4, \"Solution should return 4 characters.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"WNEENWEENEENE\"\"\"\nsample_output1 = 10\nsample_input2 = \"\"\"NSEW\"\"\"\nsample_output2 = 4",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution 1 failed.\"\nassert solution(\"NSEW\") == 4, \"Solution 2 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Incorrect solution for sample input 1.\"\nassert solution(\"NSEW\") == 4, \"Incorrect solution for sample input 2.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"4 2 3 0\") == \"4 - 2 = 3 - 0\\n4 / 2 = 3 / 0\"\nassert solution(\"1 3 4 5\") == \"1 + 3 = 4 - 5\\n1 / 3 = 4 / 5\"\nassert solution(\"1 10 0 1\") == \"problems ahead\"\nassert solution(\"5 2 1 0\") == \"5 - 2 = 1 - 0\\n5 / 2 = 1 / 0\"\n",
        "num_ids_2": 98,
        "num_ids_4": 172
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n1 / 2 = 3 / 4\\n1 - 2 = 3 - 4\\n'\n\nimport math",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"4 2 4 1\") == \"1 * 4 = 2 - 1\\n1 + 2 = 3 * 1\\n1 + 2 = 3 + 1\\n1 / 4 = 2 - 1\"\nassert solution(\"5 6 3 2\") == \"1 / 3 = 2 / 3\\n1 + 2 = 2 + 2\\n1 + 2 = 2 + 2\"\nassert solution(\"5 6 3 2 0\") == \"1 / 3 = 2 / 3\\n1 + 2 = 2 + 2\\n1 + 2 = 2 + 2\"\nassert solution(\"5 6 3 2 2 4\") == \"1 / 3 = 2 / 3\\n1 + 2 = 2 + 2\\n1 + 2 = 2 + 2\"\nassert solution(\"4 2 4 1 1\") == \"1 * 4 = 2 - 1\\n1 + 2 = 3 * 1\\n1 + 2 = 3 + 1\\n1 / 4 = 2 - 1\"\nassert solution(\"4 2 4 1 0\") == \"1 * 4 = 2 - 1\\n1 + 2 = 3 * 1\\n1 + 2 = 3 + 1\\n1 / 4 = 2 - 1\"\n\nfrom typing import List",
        "num_ids_2": 98,
        "num_ids_4": 208
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution('0 4 2 2') == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"\nassert solution('1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 0 -0') == \"problems ahead\\n\"\nassert solution('1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 0 / 1') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 1 0 / 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 1 0 -0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 1 0 * 0') == \"problems ahead\\n\"\nassert solution('1 1 1 1 1 1 1 1 1 1 0 / 1') == \"problems",
        "num_ids_2": 102,
        "num_ids_4": 137
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    1 2 3 4\n    1 - 2 = 3 - 4\n    1 / 2 = 3 / 4\n    0 4 2 2\n    0 * 4 = 2 - 2\n    0 + 4 = 2 * 2\n    0 + 4 = 2 + 2\n    0 / 4 = 2 - 2\n    \"\"\"\n) == \"\"\"\n    problems ahead\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    1 - 2 = 3 - 4\n    1 / 2 = 3 / 4\n    0 4 2 2\n    0 * 4 = 2 - 2\n    0 + 4 = 2 * 2\n    0 + 4 = 2 + 2\n    1 / 4 = 2 - 2\n    \"\"\"\n) == \"\"\"\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / 2 = 3 / 4\n    - 2 = 3 - 4\n    / ",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '''\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n'''\n\nassert solution('MAMA TATA') == '''\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\\n.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \"\\n.T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"P....I....D....Z....BANANA.M....A...\"\nassert solution(\"MAMA TATA\") == \".T..MAMA.T..A..def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(Solution().crossword(str(\"BANANA PIDZAMA\"), str(\"CCBB\"))) == '.C..\nassert solution(Solution().crossword(str(\"MAMA TATA\"), str(\"ABBA\"))) == '.T..MAMA.T..A..'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('BANANA PIDZAMA') == 'P...D...A.M..M.A.N.A.N.A.'\nassert solution('MAMA TATA') == '.T..MAMA.T..A..def solution(stdin: str) -> str: pass'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..\\n.A..def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\nassert solution('MAMA TATA') == '.T..MAMA\\n.T..\\n.A..def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_file) == expected_output, f\"Test case {i+1} failed. Output:\\n{solution(input_file)}\\nExpected output:\\n{expected_output}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\\n\"\nassert solution(stdin) == \"365\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '10', \"The expected output for the problem is 10, but it's: \" + solution(sample_input1)\nassert solution(sample_input2) == '365', \"The expected output for the problem is 365, but it's: \" + solution(sample_input2)",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '10\\n'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\\n\") == \"10\"\nassert solution(\"2\\n1 365\\n20 28\\n\") == \"365\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\\n3\\n10 14\\n13 17\\n25 26\\nSample Output 1\\n10\\n\") == \"10\\n\"\nassert solution(\"Sample Input 2\\n2\\n1 365\\n20 28\\nSample Output 2\\n365\\n\") == \"365\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed with input '{input()}' and output '{output()}'\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == 10\nassert solution('''2\n1 365\n20 28''') == 365",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\", \"Your solution is incorrect. Please check your code.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. The output is: {solution(input())}, but the expected output is: {output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n\") == \"0 1\\n\"\nassert solution(stdin=\"4\\n\") == \"2 3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0 1\\n', \"Incorrect output\"\nassert solution('4\\n') == '2 3\\n', \"Incorrect output\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Testcase {i+1} failed. Expected: {expected}, got: {solution(stdin)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0 1'\nprint(1, 1)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1\\n') == '0 1\\n'\nassert solution(stdin='4\\n') == '2 3\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"The output is {output}, but the solution is {solution(stdin)}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed for solution({solution_input}) and expected output({solution_output})\"\nprint(\"All test cases passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\"\n) == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\n\nassert solution(\n    \"\"\"\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\"\n) == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Solution returned {solution(stdin)}, but expected {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 3\n    1 100 200\n    2 100 99\n    3 100 50\n    3 100 50\n    2 100 98\n    ''') == '''\nB 100 49\nA 1 197\nA 49 100\n0.1965897693\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n5\\n\") == \"168\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test Case Failed: {solution(input())}!= {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abc\") == \"\"\n\nfor _ in range(int(stdin)):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    if n!= len(a):\n        print(\"Error: Input must have the same number of elements as the problem statement\")\n        break\n    max_num = float('-inf')\n    for i in range(n):\n        num = (a[i]**2) * (a[i+1] + a[i+2])\n        if num > max_num:\n            max_num = num\n    print(max_num)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '168'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == 168\nassert solution(\"2\\n1\\n1\\n\") == 1\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2\\n1\\n4\\n3\\n5\\n') == '168'\nassert solution('2\\n1\\n1\\n') == '1'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"output_value\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = solution(str(a))\n    assert result == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, got: {solution(input())}\"\n\nn = int(input())\na = [int(x) for x in input().split()]\nmax_val = 0\n\nfor i in range(n):\n    for j in range(i+1, n):\n        max_val = max(max_val, a[i]**2 + a[j]**2)\n\nprint(max_val)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'CDBEAF', 'Incorrect output'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"CBADEF\"\nassert solution(input2) == \"CDBEAF\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\\n\", \"Test 1 failed\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2 failed\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF\\n', \"The solution should be 'CBADEF'.\"\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF\\n', \"The solution should be 'CDBEAF'.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\\n\") == \"CBADEF\\n\", \"Incorrect output\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\\n\") == \"CDBEAF\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"The function should return '{expected}', but it returns '{solution(stdin)}'.\"\nfor i in range(len(test_cases)):\n    test_cases[i] = test_cases[i].strip()\n    assert solution(test_cases[i]) == test_cases[i], f\"Test case {i+1} should return '{test_cases[i]}', but it returns '{solution(test_cases[i])}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"CDBEAF\", \"Output mismatch\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\\n\", \"Incorrect output for sample input 1\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\\n\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(stdin: str) -> str:\n    pass\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '5\\n'\nprint('Test Passed')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\nassert solution(stdin=\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '5\\n'\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n') == '4\\n'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '5\\n'\nassert solution(open('input2.txt', 'r')) == '4\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\\n\", \"Solution 1\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\\n\", \"Solution 2\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\", \"Incorrect output for sample input 1.\"\nassert solution(stdin) == \"4\", \"Incorrect output for sample input 2.\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\", \"Test 1 failed\"\nassert solution(stdin=\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\", \"Test 2 failed\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6', 'Test 1 failed'\nassert solution('6 8') == '22', 'Test 2 failed'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1, \"Sample Input 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Sample Input 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\", \"The expected output is not obtained.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin), \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"22\", \"Incorrect output for sample 2.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output 2\", \"Incorrect solution!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3') == '6\\n'\nassert solution('6 8') == '22\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Received: {solution(stdin)}\"\nfor i in range(5):\n    assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1\\n'\nassert solution('1 4\\n4 3 2 1') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    6 5 4\n    7 8 9\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 4\n    4 3 2 1\n    \"\"\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\n\nsolution = lambda: 1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input2.txt', 'r')) == '0'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(stdin=\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Your solution is incorrect. Expected: {expected_solution}, Received: {solution}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 6, 2) == 28, \"Expected 28, got {}\".format(solution(3, 4, 6, 2))\nassert solution(10, 3, 10, 2) == 16, \"Expected 16, got {}\".format(solution(10, 3, 10, 2))",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10, 3, 4, 6, 2) == 28\nassert solution(10, 3, 10, 2, 12) == 16",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10, 3, 4, 6, 2) == 28\nassert solution(10, 3, 10, 2, 12) == 16",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the integer X: \")) == \"28\\n\", \"The output should be 28\"\n\nassert solution(input(\"Enter the integer X: \")) == \"16\\n\", \"The output should be 16\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\"\nassert solution(\"10\\n3\\n10\\n2\\n12\\n\") == \"16\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, \"Test failed. Output: \" + str(output) + \". Expected output: \" + str(output)\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\", \"Please implement the solution function correctly.\"\nassert solution(\"10\\n3\\n10\\n2\\n12\\n\") == \"16\", \"Please implement the solution function correctly.\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Invalid input\"\nassert solution(\"octopuses\") == \"no hiss\", \"Invalid input\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('amiss') == 'hiss', \"Test failed\"\nassert solution('octopuses') == 'no hiss', \"Test failed\"\n\nsolution = '''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test failed: 'amiss' should output 'hiss'\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test failed: 'octopuses' should output 'no hiss'\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Incorrect output for 'amiss'.\"\nassert solution(\"octopuses\") == \"no hiss\", \"Incorrect output for 'octopuses'.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Your code is not correct.\"\nassert solution(\"octopuses\") == \"no hiss\", \"Your code is not correct.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Solution should output 'hiss'\"\nassert solution(\"octopuses\") == \"no hiss\", \"Solution should output 'no hiss'\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '3\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '5\\n'\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"c++\") == \"3\"\nassert solution(\"cryptography\") == \"5\"\nassert solution(\"blockchain\") == \"2\"\nassert solution(\"Artificial intelligence\") == \"1\"\nassert solution(\"Machine-Learning\") == \"1\"\nassert solution(\"Linux\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('c++') == '3', 'Expected \"3\", but got \"{}\"'.format(solution('c++'))\nassert solution('c#') == '2', 'Expected \"2\", but got \"{}\"'.format(solution('c#'))\nassert solution('cryptography') == '4', 'Expected \"4\", but got \"{}\"'.format(solution('cryptography'))\nassert solution('blockchain') == '3', 'Expected \"3\", but got \"{}\"'.format(solution('blockchain'))\nassert solution('Artificial intelligence') == '4', 'Expected \"4\", but got \"{}\"'.format(solution('Artificial intelligence'))\nassert solution('Machine-Learning') == '3', 'Expected \"3\", but got \"{}\"'.format(solution('Machine-Learning'))\nassert solution('Linux') == '5', 'Expected \"5\", but got \"{}\"'.format(solution('Linux'))",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test {t+1} failed. Expected: {expected}, Got: {solution(input())}\"\nfor t, (input, expected) in enumerate(tests):\n    assert solution(input) == expected, f\"Test {t+1} failed. Expected: {expected}, Got: {solution(input)}\"\nprint(\"All test cases passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"The solution should return '21'\"\nassert solution(\"CCC\") == \"9\", \"The solution should return '9'\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Input 1 test failed\"\nassert solution(\"CCC\") == 9, \"Input 2 test failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"The solution should be 21, but it is {}\".format(solution(\"TCGTTC\"))\nassert solution(\"CCC\") == \"9\", \"The solution should be 9, but it is {}\".format(solution(\"CCC\"))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case} failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Input 1 is incorrect\"\nassert solution(\"CCC\") == 9, \"Input 2 is incorrect\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Output should be 21\"\nassert solution(\"CCC\") == 9, \"Output should be 9\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Solution 1 is incorrect\"\nassert solution(\"CCC\") == 9, \"Solution 2 is incorrect\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"315\\n45\") == \"90\\n\", \"Input 1\"\nassert solution(\"180\\n270\") == \"90\\n\", \"Input 2\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == expected_output(1)\nassert solution(sample_input(2)) == expected_output(2)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '90'\nassert solution(stdin) == '90'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\"\nassert solution(\"180\\n270\\n\") == \"90\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please check the function signature and implement it.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 90\nassert solution(2) == 90\nassert solution(1, 2) == 180\nassert solution(0, 360) == 0\nassert solution(360, 0) == 0\nassert solution(359, 360) == 0\nassert solution(180, 360) == 0\nassert solution(0, 0) == 0",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('315\\n45') == '90\\n', \"Test 1 failed\"\nassert solution('180\\n270') == '90\\n', \"Test 2 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()})!= {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"1\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Expected output: 3, received {}\".format(solution())\nassert solution() == 1, \"Expected output: 1, received {}\".format(solution())",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n\nsolution(stdin)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99\\n') == '3\\n', \"The solution should be 3\"\nassert solution('5\\n11\\n20\\n33\\n40\\n55\\n') == '1\\n', \"The solution should be 1\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Expected '3', got '{}' instead\".format(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Your code is not correct!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\\n\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\\n\") == \"1\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WWBWBB\") == \"1\\n\", \"Sample Input 1: WWBWBB\"\nassert solution(\"WWWWBBW\") == \"0\\n\", \"Sample Input 2: WWWWBBW\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test 1\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Testcase failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('WWBWBB') == 1, \"Test 1 failed\"\nassert solution('WWWWBBW') == 0, \"Test 2 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test 1\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('WWBWBB') == 1, 'Sample Input 1: WWBWBB'\nassert solution('WWWWBBW') == 0, 'Sample Input 2: WWWWBBW'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 3, 3, 3]) == 9\nassert solution([1, 2, 1, 1]) == 1.299038105676658",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.299038105676658\\n\", \"Please fix the given code to get the correct result.\"\nassert solution(\"3 3 3 3\") == \"9\\n\", \"Please fix the input to get the correct result.\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\\n1.299038105676658\\n\", \"Test 1 failed\"\n\nassert solution(stdin) == \"9\\n1.299038105676658\\n\", \"Test 2 failed\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Your code is wrong!\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\", \"The compact version of robert is robert.\"\nassert solution(\"rooobert\") == \"robert\", \"The compact version of rooobert is robert.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"rrrooobbbert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Error: {expected_output}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 9 7\\n1000 900 7\") == \"Impossible\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\\n\", \"Sample Input 1\"\nassert solution(\"1000 900 7\") == \"Impossible\\n\", \"Sample Input 2\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    1000 9 7\n    '''\n) == '''\n108 4\n'''\n\nassert solution(\n    '''\n    1000 900 7\n    '''\n) == '''\nImpossible\n'''\n\nassert solution(\n    '''\n    1000 900 8\n    '''\n) == '''\nImpossible\n'''\n\nassert solution(\n    '''\n    1000 9 1\n    '''\n) == '''\nImpossible\n'''\n\nassert solution(\n    '''\n    1000 900 1\n    '''\n) == '''\nImpossible\n'''\n\nassert solution(\n    '''\n    1000 900 2\n    '''\n) == '''\nImpossible\n'''\n\nassert solution(\n    '''\n    1000 900 9\n    '''\n) == '''\nImpossible\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nassert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Sample Input: {}, Sample Output: {}, Output: {}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4\\n'\nassert solution('1000 900 7') == 'Impossible\\n'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n1\\n2\\n1\\n0\"\nassert solution() == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected output '{expected_output}', but got '{solution(input())}'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())} expected {expected_output}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Error in solution: {solution(input_str)} should be {expected_output}.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\", \"Mirko got his driver's license! To celebrate that joyous occasion, his parents bought him his first car: a monster truck! Mirko found out that even though having a car that can squash all other cars is nice in traffic jams, parking a car that is the size of $4$ normal cars can be a bit tricky. Their friend, Slavko, works part time in the city parking company. He periodically sends Mirko a map of the city with occupied parking spaces marked. The map can be represented as a table with $R$ rows, $C$ columns each. Each cell can contain a building (symbol \u2018#\u2019), a parked car (symbol \u2018X\u2019) or a free parking space (symbol \u2018.\u2019). A monster truck is quite huge, $2$ by $2$ cells to be exact. Their friend, Slavko, is very grateful for their help. They have calculated the number of possible parking spaces grouped by the number of cars they will need to squash to park in them. They are very grateful for their help. They are only interested in the number of cars they will need to squash to park in them. However, they cannot park on a building. Not even a monster truck is large enough to squash buildings!\"",
        "num_ids_2": 330,
        "num_ids_4": 330
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n#..#\\n..X. \\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 78,
        "num_ids_4": 86
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Output: {output}, Input: {input}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str=\"4 4\\n#..#\\n..X. \\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(input_str=\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str: pass\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1953566\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1953566\\n\", \"Incorrect output.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == \"1953566\", \"Test failed\" # Solution 1\nassert solution(5) == \"102\", \"Test failed\" # Solution 2",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\", \"Solution does not match the expected output\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\", \"Solution does not match the expected output\"\nassert solution(\"2\\n212\\n1253\\n1\\n\") == \"1953566\\n\", \"Solution does not match the expected output\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n1\\n\") == \"102\\n\", \"Solution does not match the expected output\"\nassert solution(\"2\\n212\\n1253\\n1\\n2\\n\") == \"1953566\\n\", \"Solution does not match the expected output\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n1\\n2\\n\") == \"102\\n\", \"Solution does not match the expected output\"",
        "num_ids_2": 85,
        "num_ids_4": 176
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1953566', \"Your code is missing the return statement at the end.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n212\\n1253\\n') == '1953566\\n'\nassert solution('5\\n23\\n17\\n43\\n52\\n22\\n') == '102\\n'\n\nfrom typing import List",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1953566', \"Expected output: '1953566', but got: {}\".format(solution(stdin))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1953566, \"Incorrect output for sample input 1\"\nassert solution(5) == 102, \"Incorrect output for sample input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1953566\", \"Solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.000000 0.000000 0.000000\", \"Your solution is incorrect.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\", \"Your solution is incorrect\"\n\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\" for input, output in [\n    (\"10 10 10\", \"0.000000 0.000000 0.000000\"),\n    (\"9 9 9\", \"0.000000 3.000000 6.000000\"),\n]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0.000000 0.000000 0.000000', \"Incorrect output for sample input 1\"\n\nassert solution(input()) == '0.000000 0.000000 0.000000', \"Incorrect output for sample input 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect: expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\", \"The given solution is incorrect.\"\n\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\", \"The given solution is incorrect.\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor test in [(10, 10, 10), (9, 9, 9), (3, 3, 3), (3, 2, 1)]:\n    assert round(solution(*test), 4) == round(output(*test), 4), f\"Test case {test} failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"forritun\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a<bc<') == 'b', \"Test Case 1 failed\"\nassert solution('foss<<rritun') == 'forritun', \"Test Case 2 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\nfrom typing import IO",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Mirko-Slavko') == 'MS'\nprint(solution('Knuth-Morris-Pratt')) # should output 'KMP'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'KMP', 'Sample Input 1 failed.'\nassert solution(input()) == 'MS', 'Sample Input 2 failed.'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"Expected 'KMP', got: {}\".format(solution('Knuth-Morris-Pratt'))\nassert solution('Mirko-Slavko') == 'MS', \"Expected 'MS', got: {}\".format(solution('Mirko-Slavko'))",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"Knuth-Morris-Pratt\") == \"KMP\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"Estate or Copper\"\nassert solution(6) == \"Province or Gold\"\nassert solution(10) == \"Estate or Copper\"",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n\nsolution = \"\"\"\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\") == \"Province or Gold\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Estate or Copper\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, \"Expected Output: {}, Received Output: {}\".format(expected_output, solution(sample_input))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Estate or Copper\"\nassert solution(2) == \"Province or Gold\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Input: {stdin}\\nExpected Output: {expected_output}\\nOutput: {solution(stdin)}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"90.00\", \"Please provide the correct input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"90.00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output(), \"Your code is incorrect. Please check the sample test cases and the problem statement.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"90.00\", \"Incorrect output for the first example.\"\n\nassert solution(stdin) == \"75.7142857\", \"Incorrect output for the second example.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"90.00\", \"Sample Output 1\"\n\nassert solution(stdin) == \"75.7142857\", \"Sample Output 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output the length of the GIS of the given permutation A.\\n\" + \\\n            \"Then, output the elements of the GIS.\\n\"\n\nprint(solution(stdin))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please check the expected output and the provided output.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '''4\n2 3 5 7'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output', 'Your code is not correct.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == solution()",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n4\n2 3 5 7\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Expected '9 25', but got '{}'\".format(solution(\"10 10\"))\nassert solution(\"0 30\") == \"23 45\", \"Expected '23 45', but got '{}'\".format(solution(\"0 30\"))",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 10\\n0 30') == '9 25'\nassert solution('0 30\\n0 15') == '23 45'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\"\nassert solution(\"0 30\") == \"23 45\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Expected: {}, Received: {}\".format(expected_output, solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected output: {expected}, but got: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.414214\", \"Output: 1.414214\"\nassert solution(input()) == \"1.000000\", \"Output: 1.000000\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2.000000') == '1.414214', \"Output should be '1.414214', but got '{}'.\".format(solution(stdin='2.000000'))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.414214\\n\", \"Your solution is incorrect. Please check the code and try again.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2.000000') == '1.414214\\n', \"Sample Input 1\"\nassert solution(stdin='1.000000') == '1.000000\\n', \"Sample Input 2\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '1.414214\\n', \"Your solution should return '1.414214'.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1.414214\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.000000\") == \"1.414214\\n\", \"Sample Input 1\"\nassert solution(\"1.000000\") == \"1.000000\\n\", \"Sample Input 2\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.414214\"\nassert solution(open(\"input.txt\", \"r\")) == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.000000\\n\") == \"1.414214\\n\"\nassert solution(\"1.000000\\n\") == \"1.000000\\n\"\n\nimport math",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3:\"\nassert solution(50) == \"50:\"\nassert solution(1) == \"1,2\"\nassert solution(32767) == \"32767:\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3:2,1\\n3:2,2\\n3:2,2\\n3:2,1\\n3:2,1\\n\"\nassert solution(50) == \"50:2,1\\n50:2,2\\n50:2,2\\n50:2,1\\n50:2,1\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\", \"The solution is incorrect\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"3:\\n2,1\\n\"\nassert solution(\"50\\n\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3:2,1\\n\"\nassert solution(50) == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3:2,1\\n\"\nassert solution(50) == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3:\" + \"\\n\".join([str(2) + \",\" + str(1) for _ in range(2)]) + \"\\n\"\nassert solution(50) == \"50:\" + \"\\n\".join([str(2) + \",\" + str(1) for _ in range(2)]) + \"\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3:2,1\\n\"\nassert solution(\"50\") == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3:2,1\\n3:3,2\\n3:5,4\\n3:6,5\\n\"\nassert solution(50) == \"50:2,1\\n50:3,2\\n50:5,4\\n50:6,5\\n50:10,10\\n50:13,12\\n50:17,16\\n50:25,25\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3:2,1\\n\"\nassert solution(50) == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test case 1 failed\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test case 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The given phrase has no repeats\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The given phrase repeats THE\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\", \"The given phrase repeats THE and IN\"",
        "num_ids_2": 49,
        "num_ids_4": 79
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test 1\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The first test case should pass.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The second test case should pass.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\", \"The third test case should pass.\"\nassert solution(\"I LOVE THE WOOD AND THE BRICK\") == \"no\", \"The fourth test case should pass.\"\nassert solution(\"THE RAIN IN SPAIN I LOVE THE WOOD AND THE BRICK\") == \"no\", \"The fifth test case should pass.\"",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS','sample test case 1 failed'\nassert solution('RBLLLBRR') == 'CHCS','sample test case 2 failed'\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"The solution should return the expected output.\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"The solution should return the expected output.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"The solution is not correct.\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"The solution is not correct.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'RRBBBLLR') == b'SSKKKHHS'\nassert solution(b'RBLLLBRR') == b'CHCS'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Your solution is incorrect.\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Your solution is incorrect.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 Failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.stdin) == solution.stdout",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"The solution is incorrect.\"\n\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"The solution is incorrect.\"\n\nassert solution(\"1 1 10\") == \"1\\n1\\nFizz\\n4\\nBuzz\\nFizz\\n7\\n8\\nFizz\\nBuzz\\n11\\nFizz\\n13\\n15\\nFizz\\n16\\n19\\nBuzz\\nFizz\\n22\\nFizz\\n25\\n28\\n1\\n3\\nFizzBuzz\\n6\\n7\\n8\\nFizz\\nBuzz\\n13\\n14\\n15\\nFizz\\n16\\n17\\n18\\nFizzBuzz\\n23\\n24\\n25\\nFizz\\n26\\n27\\n28\\nFizz\\n29\\n30\\nFizzBuzz\\n31\\n32\\n33\\nFizz\\n34\\n35\\n36\\nFizz\\n37\\n38\\n39\\nFizzBuzz\\n40\\n41\\n42\\nFizz\\n43\\n44\\n45\\nFizz\\n46\\n47\\n48\\nFizzBuzz\\n49\\n50\\n51\\nFizz\\n52\\n53\\n54\\nFizz\\n55\\n56\\n57\\nFizzBuzz\\n58\\n59\\n60\\nFizz\\n61\\n62\\n63\\nFizz\\n64\\n65\\n66\\nFizz\\n67\\n68\\n69\\nFizzBuzz\\n70\\n71\\n72\\nFizz\\n73\\n74\\n75\\nFizz\\n76\\n77\\n78\\nFizzBuzz\\n79\\n80\\n81\\nFizz\\n82\\n83\\n84\\nFizz\\n85\\n86\\n87\\nFizzBuzz\\n88\\n89\\n90\\nFizz\\n91\\n92\\n93\\nFizz\\n94\\n95\\n96\\nFizzBuzz\\n97\\n98\\n99\\nFizz\\n100\\n100\\n100\\nFizzBuzz\\n101\\n101\\n101\\nFizz\\n102\\n102\\n102\\nFizzBuzz\\n103\\n103\\n103\\nFizz\\n104\\n104\\n104\\nFizzBuzz\\n105\\n105\\n105\\nFizz\\n106\\n106\\n106\\nFizzBuzz\\n107\\n107\\n107\\nFizz\\n108\\n108\\n108\\nFizzBuzz\\n109\\n109\\n109\\nFizz\\n110\\n110\\n110\\nFizzBuzz\\n111\\n111\\n111\\nFizz\\n112\\n112\\n112\\nFizzBuzz\\n113\\n113\\n113\\nFizz\\n114\\n114\\n114\\nFizzBuzz\\n115\\n115\\n115\\nFizz\\n116\\n116\\n116\\nFizzBuzz\\n11",
        "num_ids_2": 91,
        "num_ids_4": 1025
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test case 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test case 2\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\\n\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\\n\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Sample Input 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Sample Input 2\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '2 3 7\\n'\n) == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n\nassert solution(\n    '2 4 7\\n'\n) == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Sample Output {i+1} does not match the expected output\" for i, (input, output) in enumerate(zip(input_list, output_list))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test case 2 failed\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n\nassert solution(\"1 3 7\") == \"1\\nFizz\\nBuzz\\n1\\nFizz\\nBuzz\\n1\\n\"\nassert solution(\"1 4 7\") == \"1\\nFizz\\n3\\n1\\nFizz\\n3\\n1\\n\"\n\nassert solution(\"1 3 5\") == \"1\\nFizz\\nBuzz\\nFizz\\nBuzz\\n\"\nassert solution(\"1 4 5\") == \"1\\nFizz\\nBuzz\\nFizz\\nBuzz\\n\"\n\nassert solution(\"1 3 1\") == \"1\\nFizz\\nBuzz\\n\"\nassert solution(\"1 4 1\") == \"1\\nFizz\\nBuzz\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 153
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"5 7\") == \"FizzBuzz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 99
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 2\\n3 3 3 2\\n2 10\\n0 100') == 'It hadn\\'t snowed this early in 3 years!\\n'\n\nassert solution(stdin='2 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == 'It hadn\\'t snowed this early in 3 years!'\nassert solution(sample_input2) == 'It hadn\\'t snowed this early in 0 years!'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin.split('\\n'), output.split('\\n')):\n    assert solution(input_) == output, f\"For input {input_}, expected output {output}, but got: {solution(input_)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2', \"Expected output 2, but got '{}'.\".format(solution(stdin))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"2\"\nassert solution(stdin=input()) == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == \"2\\n\"\nassert solution(\"10 10\") == \"7\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Incorrect output 1\"\nassert solution() == \"7\", \"Incorrect output 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"The output is {solution(stdin)} but it should be {expected}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10, 2) == 2\nassert solution(10, 10) == 7",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'bok') == b'bok'\nassert solution(b'koaski') == b'kakosi'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test 1 failed\"\nassert solution(\"koaski\") == \"kakosi\", \"Test 2 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(6)) == \"8 2\"\nassert solution(str(7)) == \"8 3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"8 2\"\nassert solution(7) == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n\") == \"8 2\\n\"\nassert solution(\"7\\n\") == \"8 3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"8 2\n8 3\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '8 2'\nassert solution(2) == '8 2'\nassert solution(3) == '8 3'\nassert solution(4) == '8 4'\nassert solution(5) == '8 6'\nassert solution(6) == '8 8'\nassert solution(7) == '8 10'\nassert solution(8) == '8 12'\nassert solution(9) == '8 14'\nassert solution(10) == '8 16'\nassert solution(11) == '8 18'\nassert solution(12) == '8 20'\nassert solution(13) == '8 22'\nassert solution(14) == '8 24'\nassert solution(15) == '8 26'\nassert solution(16) == '8 28'\nassert solution(17) == '8 30'\nassert solution(18) == '8 32'\nassert solution(19) == '8 34'\nassert solution(20) == '8 36'\nassert solution(21) == '8 38'\nassert solution(22) == '8 40'\nassert solution(23) == '8 42'\nassert solution(24) == '8 44'\nassert solution(25) == '8 46'\nassert solution(26) == '8 48'\nassert solution(27) == '8 50'\nassert solution(28) == '8 52'\nassert solution(29) == '8 54'\nassert solution(30) == '8 56'\nassert solution(31) == '8 58'\nassert solution(32) == '8 60'\nassert solution(33) == '8 62'\nassert solution(34) == '8 64'\nassert solution(35) == '8 66'\nassert solution(36) == '8 68'\nassert solution(37) == '8 70'\nassert solution(38) == '8 72'\nassert solution(39) == '8 74'\nassert solution(40) == '8 76'\nassert solution(41) == '8 78'\nassert solution(42) == '8 80'\nassert solution(43) == '8 82'\nassert solution(44) == '8 84'\nassert solution(45) == '8 86'\nassert solution(46) == '8 88'\nassert solution(47) == '8 90'\nassert solution(48) == '8 92'\nassert solution(49) == '8 94'\nassert solution(50) == '8 96'\nassert solution(51) == '8 98'\nassert solution(52) == '8 100'\nassert solution(53) == '8 102'\nassert solution(54) == '8 104'\nassert solution(55) == '8 106'\nassert solution(56) == '8 108'\nassert solution(57) == '8 110'\nassert solution(58) == '8 112'\nassert solution(59) == '8 114'\nassert solution(60) == '8 116'\nassert solution(61) == '8 118'\nassert solution(62) == '8 120'\nassert solution(63) == '8 122'\nassert solution(64) == '8 124'\nassert solution(65) == '8 126'\nassert solution(66) == '8 128'\nassert solution(67) == '8 130'\nassert solution(68) == '8 132'\nassert solution(69) == '8 134'\nassert solution(70) == '8 136'\nassert solution(71) == '8 138'\nassert solution(72) == '8 140'\nassert solution(73) == '8 14",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"8 2\", \"The minimum number of breaks should be 8.\"\nassert solution(7) == \"8 3\", \"The minimum number of breaks should be 8.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == '8 2', \"The given input 6 is incorrect.\"\nassert solution(7) == '8 3', \"The given input 7 is incorrect.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"\nassert solution(\"difficult route\") == \"YES\"\nassert solution(\"aught ought\") == \"YES\"\nassert solution(\"aught ought aut acht\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napplles and pears\\nplates of meat\\n') == 'YES\\nYES\\nYES\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('drought\\n2\\naught ought aut acht\\nownt oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napplles and pears\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"difficult\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('stairs', 2, 'erres airs ears ares aires', 'eet eat', 2, 'apples and pears', 5, 'tasty sprout', 'difficult route', 'worried and fraught', 'forever in doubt', 'apples and pears') == 'YES\\nNO\\n'\nassert solution('drought', 2, 'aught ought aut acht', 'ought oubt outte out oute', 5, 'tasty sprout', 'difficult route', 'worried and fraught', 'forever in doubt', 'apples and pears') == 'YES\\nYES\\nYES\\nYES\\nNO\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 181,
        "num_ids_4": 181
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=stdin) == expected_output for stdin, expected_output in test_cases\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('stairs', '2', 'erres airs ears ares aires', 'eet eat') == ['YES']\nassert solution('stairs', '2', 'apples and pears', 'plates of meat') == ['YES']\nassert solution('stairs', '2', 'rotten', 'bales of cotton') == ['YES']",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES', \"The phrase stairs should be rhyming slang.\"\nassert solution('rotten') == 'NO', \"The phrase rotten should not be rhyming slang.\"\nassert solution('apples and pears') == 'YES', \"The phrase apples and pears should be rhyming slang.\"",
        "num_ids_2": 50,
        "num_ids_4": 82
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nfor _ in range(test_cases):\n    test_case = input()\n    test_cases -= 1\n    assert solution(test_case) == output[test_cases]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('stairs') == 'NO'\n\nfor _ in range(int(input())):\n    words = list(map(str.lower, input().split()))\n    lists = input().split()\n    phrases = []\n    for _ in range(int(input())):\n        phrase = input().split()\n        phrases.append(phrase)\n    \n    for word in words:\n        for list in lists:\n            if word in list:\n                rhymes = True\n                for ending in list.split():\n                    if word.endswith(ending):\n                        rhymes = False\n                        break\n                if rhymes:\n                    print('YES')\n                else:\n                    print('NO')\n                break\n    \n    print()\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Expected output: WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Expected output: LOSE\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Incorrect output for sample input 1\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Incorrect output for sample input 2\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', \"HANGMAN\"\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', \"BANANA\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Output {solution(input())} is not correct\"\nfor _ in range(10):\n    assert solution(input()) == expected, f\"Output {solution(input())} is not correct after {_}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Expected 'WIN', got {}\".format(solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Expected 'LOSE', got {}\".format(solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Sample Input 1\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Sample Input 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HANGMAN') == 'WIN', \"The expected output is 'WIN', but it is '\"+solution('HANGMAN')+\"'\"\nassert solution('BANANA') == 'LOSE', \"The expected output is 'LOSE', but it is '\"+solution('BANANA')+\"'\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == \"WIN\", \"Your implementation of Hangman does not work correctly.\"\nassert solution(input2) == \"LOSE\", \"Your implementation of Hangman does not work correctly.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', \"Output should be WIN\"\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', \"Output should be LOSE\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\\n\", \"Solution does not match.\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\\n\", \"Solution does not match.\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\\n5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\nassert solution(\"Sample Input 2\\n11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(Sample Input 1) == 'DECREASING', \"Test case 1 failed.\"\nassert solution(Sample Input 2) == 'NEITHER', \"Test case 2 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'DECREASING', 'Input 1'\n\nassert solution(open('input_2.txt', 'r')) == 'NEITHER', 'Input 2'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\n\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'DECREASING'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"DECREASING\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('JOE\\nBOB\\nANDY\\nAL\\nADAM') == 'DECREASING'\nassert solution('HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"George wins!\\n\"\nassert solution(sample_input2) == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == '''George wins!\n'''\n\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == '''Nina wins!\nJess wins!\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n    \"\"\") == \"George wins!\"\n\nassert solution(\"\"\"\n    4 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    \"\"\") == \"Nina wins! Jess wins!\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\n\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n').strip() == 'George wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n').strip() == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 227,
        "num_ids_4": 227
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"George wins!\\nJess wins!\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '2.0\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution for {input()} and expected output {output} is incorrect\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\\n\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin.read()) == output, f\"Expected {output}, got {solution(stdin.read())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    7 3 0 0 5 4\n    \"\"\"\n) == \"2.0\\n\"\n\nassert solution(\n    \"\"\"\n    6 0 0 2 7 6\n    \"\"\"\n) == \"2.0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"165\", \"Expected Output: 165\"\nassert solution(input()) == \"0\", \"Expected Output: 0\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output the result on a single line. If there is no such number, output 0.\\n\", f\"Test case failed: {solution(input())}\"\nprint(solution(input()))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(156) == 165, \"Test 1\"\nassert solution(330) == 0, \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('156') == '165', \"156 should be equal to 165.\"\nassert solution('330') == '0', \"330 should be equal to 0.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"156\") == \"165\", \"Test failed\"\nassert solution(\"330\") == \"0\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Your code is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\\n\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\\n\"\n",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 210,
        "num_ids_4": 210
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'\nassert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'",
        "num_ids_2": 147,
        "num_ids_4": 294
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\", \"Test case 1 failed\"\nassert solution() == \"4\\n\", \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: Input '{input()}' did not produce expected output '{output}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed: {input}!= {expected}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed with input: {input_str}, expected output: {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output consists of a single line containing a single integer indicating the number of tasks that Zac can accomplish from his list during this first week.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\", \"Sample Input 1 failed\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\", \"Sample Input 2 failed\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nfor i, (a, b) in enumerate(sample_input):\n    assert solution(a, b) == output(i+1)\n\nsample_input = [\n    (\"1\", \"2\"),\n    (\"2\", \"\"),\n    (\"3\", \"39 40 41 0 1 2 40 41 0\"),\n    (\"4\", \"420\")\n]\n\nsample_output = [\"10\", \"1\", \"6\"]\n\nfor i, (a, b) in enumerate(sample_input):\n    assert solution(a, b) == sample_output[i]\n\nprint(\"All test cases passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 10\nassert solution(\"2\") == 0\nassert solution(\"3\") == 6\nassert solution(\"42\") == 1\nassert solution(\"84\") == 1\nassert solution(\"252\") == 1\nassert solution(\"420\") == 1\nassert solution(\"840\") == 1\nassert solution(\"126\") == 1",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\", \"Solution 1 is incorrect.\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\") == \"1\\n\", \"Solution 2 is incorrect.\"\nassert solution(\"39\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\") == \"6\\n\", \"Solution 3 is incorrect.\"",
        "num_ids_2": 92,
        "num_ids_4": 157
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '0'\nassert solution('3') == '6'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '1'\nassert solution('7') == '1'\nassert solution('8') == '0'\nassert solution('9') == '0'\nassert solution('10') == '10'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '10\\n', \"Expected '10', got '{}'\".format(solution('1'))\nassert solution('2') == '0\\n', \"Expected '0', got '{}'\".format(solution('2'))\nassert solution('3') == '6\\n', \"Expected '6', got '{}'\".format(solution('3'))\nassert solution('4') == '6\\n', \"Expected '6', got '{}'\".format(solution('4'))\nassert solution('5') == '6\\n', \"Expected '6', got '{}'\".format(solution('5'))\nassert solution('6') == '6\\n', \"Expected '6', got '{}'\".format(solution('6'))\nassert solution('7') == '10\\n', \"Expected '10', got '{}'\".format(solution('7'))\nassert solution('8') == '10\\n', \"Expected '10', got '{}'\".format(solution('8'))\nassert solution('9') == '10\\n', \"Expected '10', got '{}'\".format(solution('9'))\nassert solution('10') == '10\\n', \"Expected '10', got '{}'\".format(solution('10'))\n\nsolution('1') # should print '10'\nsolution('2') # should print '0'\nsolution('3') # should print '6'\nsolution('4') # should print '6'\nsolution('5') # should print '6'\nsolution('6') # should print '6'\nsolution('7') # should print '10'\nsolution('8') # should print '10'\nsolution('9') # should print '10'\nsolution('10') # should print '10'",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Expected output '{expected1}', got '{solution(input1)}'.\"\nassert solution(input2) == expected2, f\"Expected output '{expected2}', got '{solution(input2)}'.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"no\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\" or solution(stdin) == \"no\", \"Expected either 'yes' or 'no', but got '\"+solution(stdin)+\"'.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"yes\", \"Please provide the correct input and output for this problem.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Test failed: Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Test failed: Expected {output2}, got {solution(input2)}\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '12 12 11 13'\nprint(\"GRESKA\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Test 1 failed\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Test 2 failed\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '12 12 11 13\\n'\nassert solution('P01K02H03H04\\nH02H10P11H02\\n') == '12 12 11 13\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == [\"12 12 11 13\"], \"Your function is incorrect\"\nassert solution(\"H02H10P11H02\") == [\"GRESKA\"], \"Your function is incorrect\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Actual Output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"The output should be '12 12 11 13'.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\nassert solution(\"P01K02H03H04\") == \"12 12 11 13\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 71
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == [\"12\", \"12\", \"11\", \"13\"], \"The solution should return the expected output.\"\nassert solution(\"H02H10P11H02\") == [\"GRESKA\"], \"The solution should return the expected output.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n.----.\\n+--+..\\n|*|.*\\n|.*|..\\n+--+..\\n*....*\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n+-+..\\n|*|*.\\n+-+..\\n'\nassert solution(open('input.txt', 'r')) == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected output: {expected_output1}\\nGot output: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Expected output: {expected_output2}\\nGot output: {solution(sample_input2)}\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n3 5 3\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\"\n\nfrom typing import List",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"Test Case 1 Failed\"\nassert solution(input()) == \"2\", \"Test Case 2 Failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"Expected 4, got {}\".format(solution(\"AC AD AH AS KD\"))\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"Expected 3, got {}\".format(solution(\"2C 4D 4H 2D 2H\"))",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Expected output: 4, got: {}\".format(solution(\"AC AD AH AS KD\"))\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Expected output: 3, got: {}\".format(solution(\"2C 4D 4H 2D 2H\"))",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Test 1 failed\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Test 2 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == '4', \"The correct answer is 4\"\nassert solution('2C 4D 4H 2D 2H') == '3', \"The correct answer is 3\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"Solution should return 4.\"\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"Solution should return 3.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Invalid output\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Invalid output\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"AC AD AH AS KD\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"2C 4D 4H 2D 2H\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5\\n'\nassert solution('5 1\\n0 0 0 0 0') == '7\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\", \"The given solution is incorrect.\"\nassert solution() == \"7\", \"The given solution is incorrect.\"\nassert solution() == \"7\", \"The given solution is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6, 5) == 5, \"Test failed for the given input.\"\nassert solution(5, 1) == 7, \"Test failed for the given input.\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"5\", \"The solution is incorrect\"\nassert solution(sample_input2) == \"7\", \"The solution is incorrect\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed\" for i, (C, P) in enumerate(input().split()) for expected in [5, 7]\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n5') == '5\\n7'\nassert solution('5 1\\n0 0 0 0 0') == '7'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == open(\"output.txt\", \"w\").read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\\\[][]\\\\[]3']['[-]?\\\\\\/\\/\")",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 `']['0 |_|$.'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@`[''$ ']['`[-]3 #|Z3(,)|_|3[][](`/, `<3[]\\\\[][]\\\\[]3]['`[-]?",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$. \\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[](`/, |<3[]\\\\[][]\\\\[]3']['[-]? \\n\"\nassert solution(\"Python is the best programming language ever.\") == \"def solution(stdin: str) -> str: \\n\"",
        "num_ids_2": 103,
        "num_ids_4": 130
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1, f\"Test Input 1: {input_1}\\nTest Output 1: {output_1}\"\nassert solution(input_2) == output_2, f\"Test Input 2: {input_2}\\nTest Output 2: {output_2}\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\") == \"[-]3110 \\/\\/0|Z1|)!All your base are belong to us.\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?What's the Frequency, Kenneth?\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution for the given test cases is incorrect. \\nExpected: {solution_output}\\nActual: {solution(solution_input)}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\nWhat's the Frequency, Kenneth?\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\nWhat's the Frequency, Kenneth?\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \\/\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? def solution(stdin: str) -> str: pass\")\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? def solution(stdin: str) -> str: pass\")\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"[-]0210110101010011100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`220010101010101010110101010100|Z1|)`2200101010101010101",
        "num_ids_2": 159,
        "num_ids_4": 1026
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Alice\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Alice\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n\") == \"Alice\\n\"\nassert solution(\"2\\n1\\n\") == \"Bob\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Alice\\n\"\nassert solution(\"2\") == \"Bob\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1), \"Alice\"\nassert solution(2), \"Bob\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == 'Alice\\n'\nassert solution('2\\n1\\n') == 'Bob\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(Solution().min_valid_number(\"thissentencehas$letters\")) == \"this sentence has thirtyone letters\"\nassert solution(Solution().min_valid_number(\"isthenumberofletters\")) == \"thirty is the number of letters here\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5\\nthis\\nsentence\\nhas\\n$letters\\nSample Output 1:\\nthis sentence has thirtyone letters\\n\") == \"this sentence has thirtyone letters \"\n\nassert solution(stdin=\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\nSample Output 2:\\nthirty is the number of letters here\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution.input) == solution.output, \"Test Failed\"\n\nclass Solution:\n    def solution(self, N: int) -> str:\n        words = []\n        for _ in range(N):\n            word = input()\n            if word!= \"$\":\n                words.append(word)\n        return \" \".join(words)",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'this sentence has thirtyone letters'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this sentence has $ letters\") == \"this sentence has thirtyone letters \"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\nassert solution(\"1\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"2\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"3\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"4\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"5\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"6\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"8\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"9\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"10\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"11\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"12\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"13\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"14\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"15\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"16\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"17\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"18\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"19\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"20\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"21\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"22\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"23\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"24\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"25\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"26\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"27\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"28\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"the number of letters here\"\nassert solution(\"29\\n$is\\nthe\\nnumber\\n",
        "num_ids_2": 65,
        "num_ids_4": 129
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\nassert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\\nSample Input 2\\n7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\nSample Output 2\\nthirty is the number of letters here\") == \"thirty is the number of letters here\"",
        "num_ids_2": 65,
        "num_ids_4": 138
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'this sentence has thirtyone letters\\n'\nassert solution(open('input2.txt', 'r')) == 'thirty is the number of letters here\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'thirty is the number of letters here\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == str(0), \"Expected result 0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"F\") == 0\nassert solution(\"G\") == 1\nassert solution(\"H\") == 2\nassert solution(\"I\") == 3\nassert solution(\"J\") == 4\nassert solution(\"K\") == 5\nassert solution(\"L\") == 6\nassert solution(\"M\") == 7\nassert solution(\"N\") == 8\nassert solution(\"O\") == 9\nassert solution(\"P\") == 10\nassert solution(\"Q\") == 11\nassert solution(\"R\") == 12\nassert solution(\"S\") == 13\nassert solution(\"T\") == 14\nassert solution(\"U\") == 15\nassert solution(\"V\") == 16\nassert solution(\"W\") == 17\nassert solution(\"X\") == 18\nassert solution(\"Y\") == 19\nassert solution(\"Z\") == 20\n",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5def\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\", \"Sample Input 1\"\nassert solution(\"EaEbFabG\") == \"5\", \"Sample Input 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == \"0\", \"Test 1\"\nassert solution(\"EaEbFabG\") == \"5def\", \"Test 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1, \"Expected: {}, Actual: {}\".format(output_1, solution(input_1))\nassert solution(input_2) == output_2, \"Expected: {}, Actual: {}\".format(output_2, solution(input_2))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"sample 1\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"sample 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\"\nassert solution(\"3 3\") == \"Even 6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\"\nassert solution(\"3 3\") == \"Even 6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n\nsolution(stdin.readline().strip())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"\n\ninput1 = [2, 3]\ninput2 = [3, 3]\nexpected_output = [\"Odd 6\", \"Even 6\"]\n\nassert solution(input1) == expected_output[0], f\"Test failed for input1: {input1}, expected output1: {expected_output[0]}\"\nassert solution(input2) == expected_output[1], f\"Test failed for input2: {input2}, expected output2: {expected_output[1]}\"",
        "num_ids_2": 66,
        "num_ids_4": 103
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == \"1\\n\"\nassert solution(\"2\\nja\\nla\\n52\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '1\\n'\nassert solution('2') == '2\\n'\nassert solution('52') == '2\\n'\nassert solution('123') == '1\\n'\nassert solution('123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\ntomo\\nmono\\ndak\\n6666\\n') == 1\nassert solution(stdin='2\\nja\\nla\\n52\\n') == 2",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n'\nassert solution(open('input2.txt', 'r')) == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666') == 1, \"Expected output 1, got {}\".format(solution('3\\ntomo\\nmono\\ndak\\n6666'))\nassert solution('2\\nja\\nla\\n52') == 2, \"Expected output 2, got {}\".format(solution('2\\nja\\nla\\n52'))",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\nassert solution(\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == \"1\\n\"\nassert solution(\"2\\nja\\nla\\n52\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\nassert solution(\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A') == '..#..','sample test case 1'\nassert solution('DOG') == '..#...#...*..','sample test case 2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"sample input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"sample input 2\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\nA.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n\\tpass\", \"Sample Input 2\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\nA..#\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\nA.#.O.*.G.*\\n.#.#.#.#.*.*.\\nA..#...#...*..\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"Sample Input 2\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.A.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.D.#.O.*.G.*\\n.#.#.#.#.*.*.D.#.O.*.G.*\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Sample Input 2\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\", \"Sample Input 2\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3.141593\\n2.000000\"\nassert solution(21) == \"1385.442360\\n882.000000\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.141593\\n2.000000\"\nassert solution(stdin) == \"1385.442360\\n882.000000\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3.141593\\n2.000000\\n\", \"Sample Input 1: Expected Output 1: 3.141593\\nSample Output 1: 2.000000\\n\"\nassert solution(stdin) == \"1385.442360\\n882.000000\\n\", \"Sample Input 2: Expected Output 2: 1385.442360\\nSample Output 2: 882.000000\\n\"\n\nfrom typing import List",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == solution(open('sample_input.txt', 'r'))\nassert solution(open('input.txt', 'r')) == solution(open('sample_output.txt', 'r'))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"3.141593\\n2.000000\\n\"\nassert solution(\"21\\n\") == \"1385.442360\\n882.000000\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '3.141593\\n2.000000'\nassert solution(open('input2.txt', 'r')) == '1385.442360\\n882.000000'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == (output1, output2) for input1, output1, input2, output2 in [\n    ('1', '3.141593', '2.0', '2.0'),\n    ('21', '1385.442360', '882.0', '882.0'),\n]",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {output()!= input()} | input() = {input()}, output() = {output()}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\n1 -2 3\\n') == 2\nassert solution(stdin='5\\n129 44 394 253 147\\n') == 0",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Test Failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"Sample Output 1\"\nassert solution(5) == 0, \"Sample Output 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 -2 3\\n') == '2\\n'\nassert solution('5\\n129 44 394 253 147\\n') == '0\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 -2 3\") == 2\nassert solution(\"5\\n129 44 394 253 147\") == 0",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output the sum of all the expenses Robin has paid for the last month.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(5) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Output: {solution(input())}, Expected Output: {expected_output}\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output should be 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"8\\n\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 2 2\\n3\\n4 1 2') == '6'\nassert solution('3\\n4 1 2\\n1\\n4 2 1') == '8'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 6, \"Sample Input 1\"\nassert solution(3) == 8, \"Sample Input 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\", \"Example 1 failed\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\", \"Example 2 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', but got '{solution(stdin)}'.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'The answer is: 8'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\", \"Test 2 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\"\n\nSolution:\nWe can solve this problem by using dynamic programming. We will store the minimum time required for each team to complete one algorithm in a list. We will also keep track of the minimum time required by each team for each algorithm.\n\nLet's start with the base case: If we have no teams, or if we have only one team, we can return the same minimum time as the given time.\n\nThen, we can use dynamic programming to solve the problem. We will initialize the first row with a fixed value of 0. We will then fill in the rest of the rows with the minimum time required for each team to complete one algorithm.\n\nFor each team, we will update the minimum time required by each algorithm to be the minimum of the minimum time required by each algorithm for the previous team and the minimum time required for the team to complete the algorithm in that algorithm. We will also update the minimum time required by each algorithm for the current team to be the minimum of the minimum time required by each algorithm for the previous team and the minimum time required for the current team to complete the algorithm in that algorithm.\n\nFinally, we will return the minimum value among the rows.\n\nLet's implement this solution in the code below:\n\n```python\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6', \"Invalid output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\") == \"8\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"NOT POSSIBLE\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n') == '2\\n'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n') == 'NOT POSSIBLE\\n'\n\nfrom typing import List",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == 'NOT POSSIBLE'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 4 4\n    1111\n    1S01\n    1011\n    0U11\n''') == '2\\n'\n\nassert solution('''\n    2 4 4\n    1111\n    1S01\n    1011\n    0L11\n''') == 'NOT POSSIBLE\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"\n\nassert solution(\"5 10\\n3 1 2 1 1\") == \"0\\n\"\nassert solution(\"7 10\\n1 5 4 3 2 1 1\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Expected '{output1}', got '{solution(input1)}'.\"\nassert solution(input2) == output2, f\"Expected '{output2}', got '{solution(input2)}'.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"Output\", \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"4\n3\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"5 5\\n3 1 2 1 1\", \"4\"),\n    (\"7 5\\n1 5 4 3 2 1 1\", \"3\"),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\\n\") == \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\\n\") == \"3\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4\\n'\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"The function is not correct\"\nassert solution(sample_input_2) == expected_output_2, \"The function is not correct\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n10\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SSPPR\\n1\\nSSPPR\\nSample Input 2:5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\nSample Output 2:10\\n15\") == \"10\\n15\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\\n15\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n10\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n', \"Expected output '5\\n10\\n', but got '{}'.\".format(solution('5\\nSSPPR\\n1\\nSSPPR\\n'))\n\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n', \"Expected output '10\\n15\\n', but got '{}'.\".format(solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n'))",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) =='still running'\n\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"still running\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'2\\n7\\n11\\n') == '4\\n'\nassert solution(r'5\\n2\\n5\\n9\\n10\\n17\\n') =='still running\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7\\n11\") == \"4\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\") == \"still running\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'5\\n2\\n5\\n9\\n10\\n17') =='still running'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(2)) == \"4\"\nassert solution(str(5)) == \"still running\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) =='still running'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"still running\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"still running\", \"Write the code to test the correctness of solution\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n6 1 3 2 2 3\"\"\") == \"0.6\"\nassert solution(\"\"\"2\n2 2\"\"\") == \"impossible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6\n6 1 3 2 2 3''') == '0.6'\nassert solution('''2\n2 2''') == 'impossible'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"6\n6 1 3 2 2 3\"\"\"\n) == \"0.6\"\n\nassert solution(\n    \"\"\"2\n2 2\"\"\"\n) == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"0.6\"\nassert solution(sample_input_2) == \"impossible\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'impossible' # Remove this line to test the function with sample inputs",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"\n\nfrom typing import List",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n6 1 3 2 2 3\\n2\\n2 2\\n') == '0.6\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '0.6'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Gunnar\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Gunnar\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\\n\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\\n\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Emma\", \"Your implementation is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\n\nfrom typing import List",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Gunnar'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"something is fishy\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) =='makes sense'\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\", \"Expected output:'makes sense', got: {}\".format(solution(\"5\\n1 2 3 mumble 5\"))\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\", \"Expected output:'something is fishy', got: {}\".format(solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\"))",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 mumble 5\\n') =='makes sense\\n'\n\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8\\n') =='something is fishy\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\", \"Example 1\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\", \"Example 2\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"makes sense\"\nassert solution(input()) == \"something is fishy\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Test 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Test 2 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 121\\n\", \"Test Failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18', 'Sample Input 1'\nassert solution('4 9 25 49 81') == '2 121', 'Sample Input 2'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 18\", \"Test 1 failed\"\nassert solution(stdin) == \"2 121\", \"Test 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18', 'Incorrect output'\nassert solution('4 9 25 49 81') == '2 121', 'Incorrect output'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Your solution is incorrect.\"\nassert solution(sample_input_2) == sample_output_2, \"Your solution is incorrect.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1 18\"\nassert solution(2) == \"2 121\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"The expected output is: 1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"The expected output is: 2 121\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [\"1\", \"18\"]\nassert solution() == [\"2\", \"121\"]\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(8) == \"CORRECT\" # test case 1\n\nsolution(123) # test case 2",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"CORRECT\"\nassert solution(sample_input_2) == \"CORRECT\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input1.txt\").read()) == \"CORRECT\"\nassert solution(open(\"input2.txt\").read()) == \"CORRECT\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got: {solution(sample_input)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"CORRECT\", \"Invalid output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == ['1 1 1', '1 1 1']\nassert solution(open('input1.txt', 'r')) == ['1 1 1', '1 1 1']\nassert solution(open('input2.txt', 'r')) == ['1 2 3 1 11']",
        "num_ids_2": 57,
        "num_ids_4": 84
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == ['1', '1', '1']",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == [\"1 1 1\"]\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == [\"1 2 3 1 11\"]",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1 1 1\n1 1 1\n1 1 1\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f\"\"\"3\n0 1 1\n1 0 1\n1 1 0\"\"\") == \"1 1 1\\n\"\n\nassert solution(f\"\"\"5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\"\"\") == \"1 2 3 1 11\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 1 1', 'Your solution is incorrect'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == [\"1 1 1\"]\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == [\"1 2 3 1 11\"]",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 1 1\", \"Expected output 1\"\nassert solution(stdin) == \"1 2 3 1 11\", \"Expected output 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"Thursday\"\nassert solution(\"17 1\\n\") == \"Saturday\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n17 1\\n\") == \"Thursday\\nSaturday\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution did not return the expected output. Expected: {output()}, Actual: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected output: {}, but got: {}\".format(output(), solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test cases not matching.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Incorrect output for sample input 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Test case 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Test case 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1\n    100\n    4\n    \"\"\"\n) == \"\"\"\n    4\n    40\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    100\n    500\n    12\n    \"\"\"\n) == \"\"\"\n    129\n    480\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1), \"Solution for problem 1 not found\"\nassert solution(100), \"Solution for problem 2 not found\"\nassert solution(4), \"Solution for problem 3 not found\"\nassert solution(129), \"Solution for problem 4 not found\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'1\\n100\\n4\\n') == '4\\n40\\n'\nassert solution(b'100\\n500\\n12\\n') == '129\\n480\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40\\n'\nassert solution('100\\n500\\n12\\n') == '129\\n480\\n'\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n40\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n40\"\nassert solution(input()) == \"129\\n480\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\\n6.0\\n3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Input1 Test Failed\"\nassert solution(input2) == output2, \"Input2 Test Failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Expected Output {expected1}, but got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected Output {expected2}, but got {solution(input2)}\"\n\ninput1 = \"\"\"1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\"\"\"\n\nexpected1 = \"4.0\"\ninput2 = \"\"\"3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\"\"\"\n\nexpected2 = \"6.0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\", \"The output of the function is incorrect.\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\", \"The output of the function is incorrect.\"\nassert solution(\"1 1\\n\") == \"0.0\\n0\\n\", \"The output of the function is incorrect.\"",
        "num_ids_2": 117,
        "num_ids_4": 147
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Ante bought a piece of land.\\nThe land contains N apple trees, but his piece is triangular and it is not easy for him to determine which apple trees belong to him.\\n\\nEnter the coordinates of the vertices of the triangle forming Ante's piece: \")) == \"4.0\\n3\\n\", \"The solution is incorrect.\"\nassert solution(input(\"Ante bought a piece of land.\\nThe land contains N apple trees, but his piece is triangular and it is not easy for him to determine which apple trees belong to him.\\n\\nEnter the coordinates of the vertices of the triangle forming Ante's piece: \")) == \"6.0\\n3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0\\n3'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0\\n3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4.0\\n3\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\", \"Test 1 failed.\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\", \"Test 2 failed.\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2, \"The solution should be 2\"\nassert solution(30) == 7, \"The solution should be 7\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == 2\nassert solution(\"30\") == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == [1]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\", \"Sample Input 1 incorrect\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\", \"Sample Input 2 incorrect\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\nN-FBI1\n9A-USKOK\nI-INTERPOL\nG-MI6\nRF-KGB1\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\nN321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n\"\"\"\n) == \"HE GOT AWAY!\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: expected output '{output1}', got '{solution(input1)}'\"\nassert solution(input2) == output2, f\"Test 2 failed: expected output '{output2}', got '{solution(input2)}'\"\n\ninput1 = '''\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n'''\n\ninput2 = '''\nN321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n'''\n\noutput1 = '''\n1\n'''\n\noutput2 = '''\nHE GOT AWAY!\n'''",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\\n\", \"The solution should output the correct answer\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\\n\", \"The solution should output the correct answer\"\n\nfrom typing import List",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1\\n', \"The first line should contain '1'\"\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!\\n', \"The second line should contain 'HE GOT AWAY!'\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"The solution is not correct. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin) # test case",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"8.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0\\n'\nassert solution('2\\n3 3 3\\n4 5 4\\n') == '6.843530573929037\\n'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6.843530573929037\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 8.0\nassert solution(2) == 6.843530573929037",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i + 1} failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(24) == \"24\"\nassert solution(25) == \"27\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=24) == 24\nassert solution(stdin=25) == 27",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for sample input: {input()} Output: {solution(input())} Expected Output: {expected_output}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(24) == \"24\"\nassert solution(25) == \"27\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\") == \"24\"  # Solution 1\nassert solution(\"25\") == \"27\"  # Solution 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"1+9+8+4\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"1+2+3+4+5+6+7+8+9\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test case 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test case 2 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1+9+8+4') == '7', \"Test 1 failed\"\nassert solution('1+2+3+4+5+6+7+8+9') == '188', \"Test 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect solution\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect solution\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+9+8+4-4\") == \"8\"\nassert solution(\"1+2+3+4+5+6+7+8+9-9\") == \"24\"\nassert solution(\"1+2+3+4+5+6+7+8+9+10\") == \"11\"\nassert solution(\"1+2+3+4+5+6+7+8+9-10\") == \"12\"\nassert solution(\"1+2+3+4+5+6+7+8+9-11\") == \"12\"\nassert solution(\"1+2+3+4+5+6+7+8+9+10-10\") == \"11\"",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1+9+8+4') == '7', \"Test 1 failed\"\nassert solution('1+2+3+4+5+6+7+8+9') == '188', \"Test 2 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test failed: expected result to be 7, but got '{}'\".format(solution(\"1+9+8+4\"))\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test failed: expected result to be 188, but got '{}'\".format(solution(\"1+2+3+4+5+6+7+8+9\"))\nassert solution(\"5\") == \"5\", \"Test failed: expected result to be 5, but got '{}'\".format(solution(\"5\"))\nassert solution(\"3+4+5\") == \"3+4+5\", \"Test failed: expected result to be 3+4+5, but got '{}'\".format(solution(\"3+4+5\"))\n\nsolution(\"1+2+3+4+5+6+7+8+9\") # Output: 188",
        "num_ids_2": 110,
        "num_ids_4": 188
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"2 5\\n\", \"Input 1\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\\n\", \"Input 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nActual output: {solution(stdin)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\\n\") == \"2 5\\n5 -2 4\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Testcase not passed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"2 5\\n\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''1 5 2\n2 2 -4 5'''\n) == '2 5\\n5 -2 4'\n\nassert solution(\n    '''2 2 -4 5'''\n) == '5 -2 4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 5, 2) == \"2 5\"\nassert solution(2, 2, -4, 5) == \"5 -2 4\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nprint(expected)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''2 5'''\nassert solution() == '''5 -2 4'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == [\"2\", \"2\", \"2\", \"1\", \"1\"]",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1\\n') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '''2 2 2 1 1'''\n\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '''1 1 1 3 3 3 2 2 2'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n5 2\n2 1 2 1 2\n\"\"\") == [2, 2, 2, 1, 1]\n\nassert solution(r\"\"\"\n9 3\n1 3 3 3 2 2 2 1 1\n\"\"\") == [1, 1, 1, 3, 3, 3, 2, 2, 2]",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1\\n'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2\\n'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"38 24\") == 875, \"Incorrect output\"\nassert solution(\"1 100\") == 100, \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"38 24\\n1 100\") == \"875\\n\"\nassert solution(\"1 100\") == \"100\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"38 24\") == 875, \"Incorrect output\"\nassert solution(\"1 100\") == 100, \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"875\", \"Please provide a valid input.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(38, 24) == 875\nassert solution(1, 100) == 100",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"875\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"875\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"38 24\") == \"875\\n\", \"Incorrect output.\"\nassert solution(\"1 100\") == \"100\\n\", \"Incorrect output.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"734 893\") == \"437\", \"Your code is not correct.\"\nassert solution(\"221 231\") == \"132\", \"Your code is not correct.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"734 893\") == \"437\", \"Incorrect solution. The expected output is: 437. The actual output is: {actual}\"\nassert solution(\"221 231\") == \"132\", \"Incorrect solution. The expected output is: 132. The actual output is: {actual}\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"734 893\") == \"437\\n\", \"Test Case 1\"\nassert solution(\"221 231\") == \"132\\n\", \"Test Case 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\", \"Solution 1 incorrect\"\nassert solution(\"221 231\") == \"132\", \"Solution 2 incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test 1 failed\"\nassert solution(\"221 231\") == \"132\", \"Test 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([11, 131]) == 'programming'\nassert solution([7, 96]) == 'contest'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\\n\", \"Test Case 1 Failed\"\nassert solution(\"7 96\") == \"contest\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 2 Failed\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11, 131) == \"programming\"\nassert solution(7, 96) == \"contest\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == '.^', \"Expected '.' but got '{}'\".format(solution(\"2 2 'X'\"))\nassert solution(\"3 12 'A'\") == 'BBABABABABAC', \"Expected 'BBABABABABAC' but got '{}'\".format(solution(\"3 12 'A'\"))\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 X\\nX^--\\n\\n.X--\\n--\\n\\n3 12 A\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\nBBABABABABAB\\nBAB",
        "num_ids_2": 970,
        "num_ids_4": 970
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBAABAABAABA\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAC\"\n",
        "num_ids_2": 33,
        "num_ids_4": 54
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAB'\nassert solution(\"4 1 'X'\") == '.^'\nassert solution(\"5 1 'A'\") == 'BBABABABABAB'",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\nassert solution(\"2 2",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \"\"\".^\"\"\"\nassert solution(\"3 12 'A'\") == \"\"\"BBABABABABAC\"\"\"\nassert solution(\"2 2 'X'\") == \"\"\".^\"\"\"\nassert solution(\"3 12 'A'\") == \"\"\"BBABABABABAC\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\"\n.^\n--\n\"\"\"\n\nassert solution(\n\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"\"\"\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAC\"\nassert solution(\"2 3 'X'\") == \".^\"\nassert solution(\"2 1 'X'\") == \".^\"\nassert solution(\"2 2 'O'\") == \"XX\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\n\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n0 0 4\\n0 3 0\\n1 1 1\\n0 0 4\\n0 3 0'\n\nassert solution('100 100 100 100') == 'impossible'",
        "num_ids_2": 159,
        "num_ids_4": 184
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1'\nassert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0'\nassert solution('10 0 0 5') == 'impossible'\n",
        "num_ids_2": 82,
        "num_ids_4": 100
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test failed!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n0 0 0\\n0 3 0\\n0 0 3\\n1 0 0\\n1 0 0\\n3 1 0\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input {sample_input} should produce sample output {sample_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n0 0 0\\n0 0 1\\n0 0 0\\n0 0 1\\n0 0 0'",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\", \"Your solution is incorrect. The output is: \" + solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\")",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == 'Good job.\\n1\\n3\\n6\\n12'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"1\"\nassert solution(\"9\\n1\\n2\\n3\\n4\") == \"1\\n2\\n3\"\nassert solution(\"9\\n3\\n1\\n10\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 77,
        "num_ids_4": 166
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Good job!'\nassert solution() == '1\\n3\\n6\\n12'\nassert solution() == '2\\n4\\n11'\nassert solution() == '1000'\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"1\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"1\\n3\\n6\\n12\"\nassert solution(\"9\\n11\\n13\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\") == \"1\"",
        "num_ids_2": 106,
        "num_ids_4": 227
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'good job', 'Your solution is incorrect.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"good job\\n\", \"The output should be 'good job'.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 8.9 40075000 272.1\\n') == '157079.04857106 15.598261092309\\n'\nassert solution('5 5 10 1000000000 2500\\n') == '5.000000000000 5.000000000000\\n'",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"The expected output does not match the actual output.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"157079.04857106 15.598261092309\"\nprint(\"Test Passed\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input {input()} and output {output} are not equal.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_result, f\"Expected result: {expected_result}, Received: {solution}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 8.9 40075000 272.1\\n\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 272.1\\n10 8.9 40075000 27",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Solution {input} does not match expected output {output}\" for input, output in zip(sample_inputs, sample_outputs)",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 0, \"Solution should return 0\"\nassert solution(5) == 1, \"Solution should return 1\"\nassert solution(6) == 3, \"Solution should return 3\"\nassert solution(10) == 14, \"Solution should return 14\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(3) == \"4\"\nassert solution(4) == \"4\"\nassert solution(5) == \"4\"\nassert solution(6) == \"20\"\nassert solution(7) == \"20\"\nassert solution(8) == \"20\"\nassert solution(9) == \"20\"\nassert solution(10) == \"144\"\nassert solution(11) == \"144\"\nassert solution(12) == \"144\"\nassert solution(13) == \"144\"\nassert solution(14) == \"218\"\nassert solution(15) == \"218\"\nassert solution(16) == \"218\"\nassert solution(17) == \"218\"\nassert solution(18) == \"354\"\nassert solution(19) == \"354\"\nassert solution(20) == \"354\"\nassert solution(21) == \"354\"\nassert solution(22) == \"708\"\nassert solution(23) == \"708\"\nassert solution(24) == \"708\"\nassert solution(25) == \"708\"\nassert solution(26) == \"1362\"\nassert solution(27) == \"1362\"\nassert solution(28) == \"1362\"\nassert solution(29) == \"1362\"\nassert solution(30) == \"2880\"\nassert solution(31) == \"2880\"\nassert solution(32) == \"2880\"\nassert solution(33) == \"2880\"\nassert solution(34) == \"5848\"\nassert solution(35) == \"5848\"\nassert solution(36) == \"5848\"\nassert solution(37) == \"5848\"\nassert solution(38) == \"12736\"\nassert solution(39) == \"12736\"\nassert solution(40) == \"12736\"\nassert solution(41) == \"12736\"\nassert solution(42) == \"26560\"\nassert solution(43) == \"26560\"\nassert solution(44) == \"26560\"\nassert solution(45) == \"26560\"\nassert solution(46) == \"50720\"\nassert solution(47) == \"50720\"\nassert solution(48) == \"50720\"\nassert solution(49) == \"50720\"\nassert solution(50) == \"101440\"\nassert solution(51) == \"101440\"\nassert solution(52) == \"101440\"\nassert solution(53) == \"101440\"\nassert solution(54) == \"202880\"\nassert solution(55) == \"202880\"\nassert solution(56) == \"202880\"\nassert solution(57) == \"202880\"\nassert solution(58) == \"405760\"\nassert solution(59) == \"405760\"\nassert solution(60) == \"405760\"\nassert solution(61) == \"405760\"\nassert solution(62) == \"811520\"\nassert solution(63) == \"811520\"\nassert solution(64) == \"811520\"\nassert solution(65) == \"811520\"\nassert solution(66) == \"1623040\"\nassert solution(67) == \"1623040\"\nassert solution(68) == \"1623040\"\nassert solution(69) == \"1623040\"\nassert solution(70) == \"3246080\"\nassert solution(71) == \"3246080\"\nassert solution(72) == \"3246080\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n\") == 0, \"The solution should return 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"3\") == 4\nassert solution(\"4\") == 6\nassert solution(\"5\") == 10",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"1\"\nassert solution(3) == \"4\"\nassert solution(4) == \"8\"\nassert solution(5) == \"16\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0, \"Incorrect solution for input 1.\"\nassert solution(2) == 0, \"Incorrect solution for input 2.\"\nassert solution(3) == 1, \"Incorrect solution for input 3.\"\nassert solution(4) == 4, \"Incorrect solution for input 4.\"\nassert solution(5) == 12, \"Incorrect solution for input 5.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0', \"The solution for the given problem is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"The solution provided is not correct. Expected output: 3, but got: {}\".format(solution())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3, \"Your solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\\ndef solution(stdin: str) -> str: pass\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 3, \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 3, \"Hanh's final score is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"The output is {solution(sample_input)}, which is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4\n        A\n        A\n        A\n        A\n    ''') == '3'\n\nassert solution('''\n    1\n        B\n        A\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        A\n        C\n        B\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        B\n        C\n    ''') == '3'\n\nassert solution('''\n    1\n        A\n        C\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        B\n        B\n        C\n    ''') == '3'\n\nassert solution('''\n    1\n        B\n        C\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        C\n        B\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        C\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        B\n        B\n        C\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        C\n        B\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        A\n        B\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        C\n        A\n        B\n    ''') == '2'\n\nassert solution('''\n    1\n        C\n        A\n        A\n        B\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        C\n        A\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        B\n        A\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        B\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        C\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        B\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        C\n        B\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        C\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'\n\nassert solution('''\n    1\n        B\n        A\n        C\n        B\n    ''') == '3'\n\nassert solution('''\n    1\n        C\n        A\n        B\n        A\n    ''') == '2'\n\nassert solution('''\n    1\n        A\n        B\n        A\n        C\n    ''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x.\\n.x.\") == \"..xx..\\nxx..xx\\n..xx..\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"..xx..\nxx..xx\n..xx..\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '..xx..\\nx.xx.\\n..xx..', 'Test case 1 failed'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.') == '.....x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..x..xx..x..x..xx..x..x..xx..x..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..x..x..xx..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"..xx..\nxx..xx\n..xx..\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('F 60 13 20') == '14 20'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\nF 60 13 20\\n') == '14 20'\nassert solution('2\\nB 120 18 30\\n') == '18 30'\nassert solution('3\\nB 120 18 30\\n') == '18 30'\nassert solution('4\\nB 120 18 30\\n') == '18 30'\nassert solution('5\\nB 120 18 30\\n') == '18 30'",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"14 20\\n\", \"Please implement the solution function\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\nF 60 13 20') == '14 20'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"14 20\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14 20\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nF 60 13 20\") == \"14 20\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"The solution should return 'yup' when the input is 'OCT 31'.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"The solution should return 'yup' for the given input.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'\n\nclass Solution:\n    def isHalloween(self, date: str) -> str:\n        month = date[:3].lower()\n        day = int(date[4:])\n        \n        if month == 'october' and day >= 31:\n            return 'yup'\n        elif month == 'december' and day <= 25:\n            return 'yup'\n        else:\n            return 'nope'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    # Write your code here\")\nprint(\"    # You can assume that stdin is a valid input\")\nprint(\"    pass\")\n\nprint(\"if __name__ == '__main__':\")\nprint(\"    # Read input from standard input\")\nprint(\"    stdin = input().strip()\")\nprint(\"    # Convert input date to datetime object\")\nprint(\"    datetime = datetime.strptime(stdin, '%B %d, %Y')\")\nprint(\"    # Check if the date is October 31 or December 25\")\nprint(\"    if datetime.month in ['OCT', 'DEC']:\")\nprint(\"        print('yup')\")\nprint(\"    else:\")\nprint(\"        print('nope')\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'nope'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"The solution should be 'yup', but it is 'def solution(stdin: str) -> str: pass'\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\", \"Solution should return 'yup\\n'\"\n\nimport datetime",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhnio\\noker\\nnera\\nirak') == '#.#.#.#. \\n.#.#.#.# \\n#.honi#. \\n.#oker.# \\n#.nera#. \\n.#irak.# \\n#.#.#.#. \\n.#.#.#.# \\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\\n\") == \"\\n#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 2\\n# The frame should be 4 x 4 wide and top left fields should be # characters.\\n# It should consist of characters #,., #,., and #.\\n# The resulting frame should be:\\n# #.#.#.#\\n#.e.e.e\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 3\\n# The frame should be 4 x 3 wide and top left fields should be # characters.\\n# It should consist of characters #,., #,., #, and #.\\n# The resulting frame should be:\\n# #.#.#.#\\n#.e.e.e\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 4\\n# The frame should be 3 x 4 wide and top left fields should be # characters.\\n# It should consist of characters #,., #,., and #.\\n# The resulting frame should be:\\n# #.#.#.#\\n#.e.e.e\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 5\\n# The frame should be 3 x 3 wide and top left fields should be # characters.\\n# It should consist of characters #,., #,., and #.\\n# The resulting frame should be:\\n# #.#.#.#\\n#.e.e.e\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\n# #.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\") == True",
        "num_ids_2": 551,
        "num_ids_4": 551
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    2 2 2 2\n    honi\n    oker\n    nera\n    irak\n    \"\"\"\n) == \"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\") == \"#######\\n#honi#\\n#oker#\\n#nera#\\n#irak#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\") == \"#######\\n#honi#\\n#oker#\\n#nera#\\n#irak#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\") == \"#######\\n#honi#\\n#oker#\\n#nera#\\n#irak#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\") == \"#######\\n#honi#\\n#oker#\\n#nera#\\n#irak#\"",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nWhite: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"KQkq.Qrrr.RrbB.B..R..K..Q....R\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"KQkq.Qrrr.RrbB.B..R..K..Q....R\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"KQkq.Qrrr.RrbB.B..R..K..Q....R\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"KQkq.Qrrr.RrbB.B..R..K..Q....R\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"KQkq.Qrrr.RrbB.B..R..K..Q....R\"\n",
        "num_ids_2": 254,
        "num_ids_4": 508
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\\") == \\\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\\") == \\\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+",
        "num_ids_2": 1041,
        "num_ids_4": 1041
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 358,
        "num_ids_4": 358
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(1.000000)) == \"Diablo is happy!\"\nassert solution(str(4.000000)) == \"Need more materials!\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!\\n'\nassert solution('0.999999 4.000001') == 'Need more materials!\\n'\nassert solution('1.000001 4.000000') == 'Need more materials!\\n'\nassert solution('1.000000 5.000000') == 'Need more materials!\\n'\nassert solution('1.000000 0.999999') == 'Need more materials!\\n'",
        "num_ids_2": 61,
        "num_ids_4": 121
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1.000000 4.000000') == \"Diablo is happy!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Diablo is happy!\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\nassert solution(stdin=\"2.000000 5.000000\") == \"Need more materials!\\n\"\nassert solution(stdin=\"0.999999 4.000001\") == \"Need more materials!\\n\"\nassert solution(stdin=\"1.000001 4.000000\") == \"Diablo is happy!\\n\"\nassert solution(stdin=\"0.999999 4.000000\") == \"Diablo is happy!\\n\"\nassert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 3 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 1 10 2 10\") == \"6\"\nassert solution(\"10 1 10 2 11\") == \"6\"\nassert solution(\"10 1 10 2 2\") == \"use the stairs\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"5 5 5 5 5\") == \"use the stairs\\n\"\nassert solution(\"10 1 1 1 1\") == \"6\\n\"\nassert solution(\"10 1 10 1 1\") == \"6\\n\"\nassert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 1 10 2 2\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 2 0\") == \"6\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('5 1 10 2 2') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == '6'\nassert solution('10 1",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"9 1 10 3 1\") == \"6\"\nassert solution(\"8 1 10 3 1\") == \"6\"\nassert solution(\"7 1 10 3 1\") == \"6\"\nassert solution(\"6 1 10 3 1\") == \"6\"\nassert solution(\"5 1 10 3 1\") == \"6\"\nassert solution(\"4 1 10 3 1\") == \"6\"\nassert solution(\"3 1 10 3 1\") == \"6\"\nassert solution(\"2 1 10 3 1\") == \"6\"\nassert solution(\"1 1 10 3 1\") == \"6\"\nassert solution(\"100 1 10 3 1\") == \"use the stairs\"\nassert solution(\"0 1 10 3 1\") == \"use the stairs\"\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(f\"Test case {i+1} passed\") for i, (input, output) in enumerate(zip(input_list, output_list))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 1 10 2 1') == '6' # Correct answer: 6\nassert solution('11 1 10 2 1') == '6' # Correct answer: 6\nassert solution('10 11 10 2 1') == '6' # Correct answer: 6\nassert solution('10 1 11 2 1') == '6' # Correct answer: 6\nassert solution('10 1 10 11 1') == '6' # Correct answer: 6\nassert solution('10 1 10 2 10') == '6' # Correct answer: 6\nassert solution('10 1 10 2 11') == '6' # Correct answer: 6\nassert solution('10 1 10 2 0') == 'use the stairs' # Correct answer: 6",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"5 1 10 2 1\") == \"6\\n\"\nassert solution(\"1 1 10 2 1\") == \"6\\n\"\nassert solution(\"3 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 11 10 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"6\\n\"\nassert solution(\"10 11 11 2 1\") == \"6\\n\"\nassert solution(\"5 1 11 2 1\") == \"6\\n\"\nassert solution(\"1 1 11 2 1\") == \"6\\n\"\nassert solution(\"3 1 11 2 1\") == \"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\nassert solution(\"1 1 1 1 1\") == \"use the stairs\"\nassert solution(\"100 1 100 2 1\") == \"use the stairs\"\nassert solution(\"1 1 1 1 2\") == 5\nassert solution(\"1 1 1 1 3\") == \"use the stairs\"\nassert solution(\"1 1 1 1 10\") == 2\nassert solution(\"1 1 1 10 1\") == 1",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=open('input.txt').read()) == '128.8\\n89.06666666666666'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"89.06666666666666\"\nassert solution() == \"89.06666666666666\"\nassert solution() == \"89.06666666666666\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"89.06666666666666\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution() == '128.8\\n89.06666666666666'\nassert solution()",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'\nprint('All tests pass')",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '128.8\\n89.06666666666666', 'Please implement the solution function'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 45 65 84 346') == 4\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5\\n1 45 65 84 346\") == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"4\\n1 50 365 70 180\") == \"3\"\nassert solution(\"2\\n1 100 200 100 50\") == \"4\"\nassert solution(\"1\\n1 1\") == \"1\"",
        "num_ids_2": 53,
        "num_ids_4": 96
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"5\\n1 45 65 84 345\\n1 45 65 84 344\") == \"3\"\nassert solution(\"5\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\") == \"2\"\nassert solution(\"5\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 346\") == \"1\"\nassert solution(\"5\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 346\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45 65 84 344\\n1 45 65 84 345\\n1 45",
        "num_ids_2": 68,
        "num_ids_4": 200
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4\\ndef solution(stdin: str) -> str:\\npass\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"2\\n345\\n1 2\") == \"5\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\") == \"3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 183
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == 4, \"Expected output: 4\"\nassert solution(\"6\\n1 45 65 84 345\") == 4, \"Expected output: 4\"\nassert solution(\"10\\n1 45 65 84 340\") == 5, \"Expected output: 5\"\nassert solution(\"15\\n1 45 65 84 325\") == 5, \"Expected output: 5\"\nassert solution(\"20\\n1 45 65 84 300\") == 6, \"Expected output: 6\"",
        "num_ids_2": 66,
        "num_ids_4": 134
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1' # your output should be correct",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('10 10\\n#######\\n#####T#####\\n######..#..\\n#########\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('15 10\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n#######\\n",
        "num_ids_2": 96,
        "num_ids_4": 1025
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\", \"Expected output: 1, got: \" + solution(input())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please see the problem statement for more details.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == 1\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    7 4\n    ######\n    #P.GTG#\n    #..TGG#\n    ######\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5 7\n    #...P\n    #....G\n    #....T\n    #...P\n    \"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == 1, \"Expected 1, got {}.\".format(solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\"))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\\n\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\\n\"",
        "num_ids_2": 571,
        "num_ids_4": 571
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5, \"Test failed\"\nprint(\"Test passed\")\n",
        "num_ids_2": 288,
        "num_ids_4": 288
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\"",
        "num_ids_2": 284,
        "num_ids_4": 284
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"The output is incorrect.\"",
        "num_ids_2": 290,
        "num_ids_4": 290
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 1 should return 5.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 2 should return 5.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 3 should return 5.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___",
        "num_ids_2": 587,
        "num_ids_4": 1024
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"The solution should return 5.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Incorrect output\"",
        "num_ids_2": 288,
        "num_ids_4": 288
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 1 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 2 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 3 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______",
        "num_ids_2": 581,
        "num_ids_4": 1023
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 299,
        "num_ids_4": 299
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nassert solution(\"you yay eay inay\") == \"oyay eay inay\"\n\nassert solution(\"and ordinary yay\") == \"andyay ordinaryyay\"\n\nassert solution(\"Frustrated friends write pig latin\") == \"trfrstay frstay frstray frstay frstray fstray fstray eay\"\n\nfrom typing import List",
        "num_ids_2": 49,
        "num_ids_4": 107
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nprint(\"All tests passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'iyay antcay eakspay igpay atinlay', 'Input does not match the expected output.'\n\nsolution = '''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"iyay antcay eakspay igpay atinlay\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\npass\\n\"\nassert solution(input()) == \"Dear friend, your friend is frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay? Would you be so kind to do it?\"\nassert solution(input()) == \"Eekay oday enay ooyay ityay oyay oyyay. \"\nassert solution(input()) == \"Yayay ebay otay oday etay etay oday etay. \"",
        "num_ids_2": 46,
        "num_ids_4": 149
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nimport sys",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"i cant speak pig latin\"\n) == \"iyay antcay eakspay igpay atinlay\"\n\nassert solution(\n    \"there is no way to do it\"\n) == \"erethay nayay ebay osay indkay otay oday ityay\"\n\nassert solution(\n    \"kylo paly garp\"\n) == \"kylo paly garpaly garp\"\n\nassert solution(\n    \"LADIES DANCE ALWAYS\"\n) == \"LADIES DANCE ALWAYSAY ALWAYSAYAYAY\"\n\nassert solution(\n    \"nayay ebay osay indkay otay oday ityay\"\n) == \"yayay ebay osay indkay otay oday ityay\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i cannot speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i am playing with fire\") == \"iay am ynplaying with ynfire\"\nassert solution(\"hello world\") == \"hay llo wolrd\"\nassert solution(\"a new beginning\") == \"anew beginningay\"",
        "num_ids_2": 56,
        "num_ids_4": 95
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"i cant speak pig latin\\n\"\n\"ordinary english\\n\"\n\"downtown pig\\n\"\n\"happy birthday\\n\"\n\"ordinary pig latin\\n\"\n\"i don't understand pig latin\\n\"\n) == \"iyay antcay eakspay igpay atinlay\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\n\") == \"nymble\"\nassert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\n\") == \"nymble\"",
        "num_ids_2": 95,
        "num_ids_4": 143
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\nq\\npan\\npancakes\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan\\npancakes\\npan",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\nq\\npizza\\npancakes\\npizza\\npancakes\\npizza\\npizza\\nAnywhere is fine I guess') == 'nymble'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\nq\\npan\\nch\\n3\\nneble\\npancakes\\npea soup\\npunsch\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\nq\\npancakes\\npancakes\\n\") == \"nymble\\n\"\nassert solution(\"2\\n2\\n\") == \"Anywhere is fine I guess\\n\"\nassert solution(\"2\\n2\\npancakes\\npancakes\\n3\\nnymble\\npancakes\\npancakes\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\\n\"\nassert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\nq\\npizza\\nchips\\npizza\\npizza\\nsteak\\nchips\\n') == 'nymble'\n\nassert solution('2\\n2\\nq\\npizza\\nchips\\npizza\\npizza\\nsteak\\nchips\\n') == 'Anywhere is fine I guess'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'Anywhere is fine I guess'\nassert solution('4\\n2\\npizza\\nbread\\nbirch\\n') == 'Anywhere is fine I guess'",
        "num_ids_2": 109,
        "num_ids_4": 139
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 0 15') == '3\\n', \"Test failed\"\nassert solution('10 10 100') == '10\\n', \"Test failed\"\nassert solution('100 100 1000') == '30\\n', \"Test failed\"\nassert solution('0 10 1000') == '1\\n', \"Test failed\"\nassert solution('10 100 1000') == '3\\n', \"Test failed\"",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed. Expected output: {}, Actual output: {}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 0 15') == '3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test Failed. Input: {input()}, Output: {output}, Solution: {solution(input())}\"\n\na, b, h = map(int, input().split())\n\ntimes_crawled = 0\n\nfor _ in range(1, h + 1):\n    times_crawled += a\n    print(times_crawled)\n\nprint(times_crawled)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 0 15\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    10 100 20\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 20\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10 100 0\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 100 -20\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    100 100 100\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    0 0 100000\n    \"\"\"\n) == \"1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 0 15\") == 3",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 0, 15) == 3",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 0 15\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11 15') == '19', \"The output should be 19.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 15\") == \"19\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\", \"Incorrect Output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 15\") == \"19\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 15\") == \"19\\n\", \"Incorrect solution\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 15\") == \"19\", \"The output should be 19.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 15\") == \"19\", \"Incorrect output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"Yes\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"East West North\") == \"No\"\nassert solution(\"West North South\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Solution should return 'Yes'\"\n\nprint(\"No\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North South East\") == \"Yes\"\nassert solution(\"South East North\") == \"No\"\nassert solution(\"South East West\") == \"No\"\nassert solution(\"North East South\") == \"No\"\nassert solution(\"East North South\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 16\n    again\n    pirpumsemoystoal\n''') =='marywasnosyagain'\n\nassert solution('''\n    3 16\n    abcd\n    zyx\n''') == 'def'\n\nassert solution('''\n    5 10\n    qwertyuiop\n    asdfghjkl\n    zxcvbnm\n    mnopeqrst\n''') =='mnopeqrst'\n\nassert solution('''\n    3 25\n    abc\n    zyx\n''') == 'abc'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 16\n    again\n        ''') =='marywasnosyagain'\n\nassert solution('''\n    5 16\nagain\npirpumsemoystoal\n    ''') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('''\n    5 16\nagain\n    ''') == ''\n\nassert solution('''\n    5 16\n        ''') == ''\n\nassert solution('''\n    5 16\nagain\n    ''') == ''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"marywasnosyagain\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 16\n    again\n    pirpumsemoystoal\n    ''') =='marywasnosyagain'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"marywasnosyagain\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 16\\na\" * 16) == \"again\"\nassert solution(\"pirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"3 1\\nb\") == \"c\"\nassert solution(\"1 1\\n\") == \"\"\nassert solution(\"3 2\\nabcdefg\") == \"xyz\"\n",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Either\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Even\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"5\") == \"Odd\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Even'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(5) == 'Even'\nassert solution(10) == 'Odd'\nassert solution(11) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Either'\nassert solution(5) == 'Even'\nassert solution(25) == 'Odd'\nassert solution(101) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Either', 'Your code is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Even'\nassert solution(5) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Even'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Either'\nassert solution(4) == 'Even'\nassert solution(5) == 'Either'\nassert solution(6) == 'Odd'\nassert solution(7) == 'Even'\nassert solution(8) == 'Either'\nassert solution(9) == 'Odd'\nassert solution(10) == 'Even'\nassert solution(11) == 'Odd'\nassert solution(12) == 'Even'\nassert solution(13) == 'Odd'\nassert solution(14) == 'Even'\nassert solution(15) == 'Odd'\nassert solution(16) == 'Even'\nassert solution(17) == 'Odd'\nassert solution(18) == 'Even'\nassert solution(19) == 'Odd'\nassert solution(20) == 'Even'\nassert solution(21) == 'Odd'\nassert solution(22) == 'Even'\nassert solution(23) == 'Odd'\nassert solution(24) == 'Even'\nassert solution(25) == 'Odd'\nassert solution(26) == 'Even'\nassert solution(27) == 'Odd'\nassert solution(28) == 'Even'\nassert solution(29) == 'Odd'\nassert solution(30) == 'Even'\nassert solution(31) == 'Odd'\nassert solution(32) == 'Even'\nassert solution(33) == 'Odd'\nassert solution(34) == 'Even'\nassert solution(35) == 'Odd'\nassert solution(36) == 'Even'\nassert solution(37) == 'Odd'\nassert solution(38) == 'Even'\nassert solution(39) == 'Odd'\nassert solution(40) == 'Even'\nassert solution(41) == 'Odd'\nassert solution(42) == 'Even'\nassert solution(43) == 'Odd'\nassert solution(44) == 'Even'\nassert solution(45) == 'Odd'\nassert solution(46) == 'Even'\nassert solution(47) == 'Odd'\nassert solution(48) == 'Even'\nassert solution(49) == 'Odd'\nassert solution(50) == 'Even'\nassert solution(51) == 'Odd'\nassert solution(52) == 'Even'\nassert solution(53) == 'Odd'\nassert solution(54) == 'Even'\nassert solution(55) == 'Odd'\nassert solution(56) == 'Even'\nassert solution(57) == 'Odd'\nassert solution(58) == 'Even'\nassert solution(59) == 'Odd'\nassert solution(60) == 'Even'\nassert solution(61) == 'Odd'\nassert solution(62) == 'Even'\nassert solution(63) == 'Odd'\nassert solution(64) == 'Even'\nassert solution(65) == 'Odd'\nassert solution(66) == 'Even'\nassert solution(67) == 'Odd'\nassert solution(68) == 'Even'\nassert solution(69) == 'Odd'\nassert solution(70) == 'Even'\nassert solution(71) == 'Odd'\nassert solution(72) == 'Even'\nassert solution(73) == 'Odd'\nassert solution(74) == 'Even'\nassert solution(75) == 'Odd'\nassert solution(76) == 'Even'\nassert solution(77) == 'Odd'\nassert solution(78) == 'Even'\nassert solution(79) == 'Odd'\nassert solution(80) == 'Even'\nassert solution(81) == 'Odd'\nassert solution(82) == 'Even'\nassert solution(83) == 'Odd'\nassert solution(84) == 'Even'\nassert solution(85) == 'Odd'\nassert solution(86) == 'Even'\nassert solution(87) == 'Odd'\nassert solution(88) == 'Even'\nassert solution(89) == 'Odd'\nassert solution(90) == 'Even'\nassert solution(91) == 'Odd'\nassert solution(92) == 'Even'\nassert solution(93) == 'Odd'\nassert solution(94) == 'Even'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Either', 'Expected \"Either\", got \"{}\"'.format(solution(1))\nassert solution(2) == 'Even', 'Expected \"Even\", got \"{}\"'.format(solution(2))\nassert solution(3) == 'Even', 'Expected \"Even\", got \"{}\"'.format(solution(3))\nassert solution(4) == 'Odd', 'Expected \"Odd\", got \"{}\"'.format(solution(4))\nassert solution(5) == 'Odd', 'Expected \"Odd\", got \"{}\"'.format(solution(5))",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Even'\nassert solution(5) == 'Even'\nassert solution(6) == 'Either'\nassert solution(7) == 'Even'\nassert solution(8) == 'Odd'\nassert solution(9) == 'Even'\nassert solution(10) == 'Even'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(5)) == \"3\\n1\\n4\\n1\\n5\\n\"\nassert solution(str(500)) == \"5\\n1\\n5\\n2\\n\"\nassert solution(str(1000)) == \"6\\n1\\n7\\n3\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 77
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3\\n1\\n4\\n1\\n5'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test 1\"\n\nassert solution(\"5\\n
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n1\\n4\\n1\\n5\\n\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 1 failed\"\n\nprint(\"Test case 1 passed\")\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 2 failed\"\n\nprint(\"Test case 2 passed\")\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 3 failed\"\n\nprint(\"Test case 3 passed\")\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 4 failed\"\n\nprint(\"Test case 4 passed\")\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 5 failed\"\n\nprint(\"Test case 5 passed\")",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897\\n') == '3\\n1\\n4\\n1\\n5\\n', \"Test Failed\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution())\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"yes\\nno\\nno\\nyes\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Function not implemented\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(stdin='c t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\ne we\\ncan the\\nwork people\\nit of\\nout the') == 'no\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'yes'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\ne we\\ncn can the\\nwok wrk peopl\\nof out the\\n\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\n# print(solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\ne we\\ncn can the\\nwok wrk peopl\\nof out the\\n'))\\n\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"yes\" or solution(stdin=input()) == \"no\", \"Invalid input\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    9 5\n        c t\n        i r\n        k p\n        o c\n        r o\n        t e\n        t f\n        u h\n        w p\n        we we\n        can the\n        work people\n        it of\n        out the\n        ''') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n    9 5\n        c t\n        i r\n        k p\n        o c\n        r o\n        t e\n        t f\n        u h\n        w p\n        we we\n        can the\n        work people\n        it of\n        out the\n        ''') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n    9 5\n        c t\n        i r\n        k p\n        o c\n        r o\n        t e\n        t f\n        u h\n        w p\n        we we\n        can the\n        work people\n        it of\n        out the\n        ''') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n    9 5\n        c t\n        i r\n        k p\n        o c\n        r o\n        t e\n        t f\n        u h\n        w p\n        we we\n        can the\n        work people\n        it of\n        out the\n        ''') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'yes\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'yes\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'\nassert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\n'",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\tt f\\nu h\\wp w\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\tt f\\nu h\\wp w\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 1\nassert solution(input()) == 1\nassert solution(input()) == 1\nassert solution(input()) == 1\nassert solution(input()) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 1\\ncarrots?\\nbunnies') == 1\nassert solution(stdin='2 1\\ndogs\\nsnakes') == 0\nassert solution(stdin='2 1\\n1 year olds\\nhuffle-puff problems') == 1\nassert solution(stdin='2 1\\nsleepy time\\n') == 0\nassert solution(stdin='2 1\\n15 years olds\\ndeep learning') == 2\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input_string)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1\\ndef solution(stdin: str) -> str:\\npass'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1', 'Test Case 1'\nassert solution(stdin) == '1', 'Test Case 2'\nassert solution(stdin) == '1', 'Test Case 3'\nassert solution(stdin) == '1', 'Test Case 4'\nassert solution(stdin) == '1', 'Test Case 5'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\nassert solution(\"2 1\\nbunnies\\ncarrots?\") == 1\nassert solution(\"2 2\\nbunnies\\ncarrots?\") == 2\nassert solution(\"2 3\\nbunnies\\ncarrots?\") == 3\nassert solution(\"2 4\\nbunnies\\ncarrots?\") == 4\nassert solution(\"2 5\\nbunnies\\ncarrots?\") == 5\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Your code is wrong. The output is {output}, but your code is {solution(input())}.\\nThe input is: {input()}\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\", \"Expected 1, got: {}\".format(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|+\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|+\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|+\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|+\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|+\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|+\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|+\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:.|:K:.|.B.|:::|.R.|+\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"",
        "num_ids_2": 361,
        "num_ids_4": 361
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-------------------------+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"||+|||+|||+|   ||+|||||+||||+|||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||||+|||||+||",
        "num_ids_2": 593,
        "num_ids_4": 593
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"::::.::::.::::::.::::.::::::::\") == \"White: ::::.::::.::::::.::::.::::::\\nBlack: ::::.::::.::::::.::::.::::::::\"\nassert solution(\"..::::.::::.::::.::..::::.::::.::::.::\") == \"White:..::::.::::.::::.::..::::.::::.::::.::::.::\\nBlack:..::::.::::.::::.::..::::.::::.::::.::\"\nassert solution(\"...::::.::::.::::.:::...::::.::::.::::.:::...\") == \"White:...::::.::::.::::.:::...::::.::::.::::.:::...\\nBlack:...::::.::::.::::.:::...::::.::::.::::.:::...\"\nassert solution(\"...::::.::::.::::.:::...::::.::::.::::.:::...\") == \"White:...::::.::::.::::.:::...::::.::::.::::.:::...\\nBlack:...::::.::::.::::.:::...::::.::::.::::.:::...\"",
        "num_ids_2": 159,
        "num_ids_4": 285
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input:\\n+---+---+---+---+---+---+---+---++\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|+\\n+---+---+---+---+---+---+---+---++\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|+\\n+---+---+---+---+---+---+---+---++\\n|...|:::|.n.|:::|...|:::|...|:p:|+\\n+---+---+---+---+---+---+---+---++\\n|:::|...|:::|...|:::|...|:::|...|+\\n+---+---+---+---+---+---+---+---++\\n|...|:::|...|:::|.P.|:::|...|:::|+\\n+---+---+---+---+---+---+---+---++\\n|:P:|...|:::|...|:::|...|:::|...|+\\n+---+---+---+---+---+---+---+---++\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|+\\n+---+---+---+---+---+---+---+---++\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|+\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\", \"Test the correctness of solution\")",
        "num_ids_2": 381,
        "num_ids_4": 381
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-------------------+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+-------------------+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+-------------------+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4",
        "num_ids_2": 730,
        "num_ids_4": 1045
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"....|.r.|...|:::|...|:::|...|:::|.P.|:::|...|:::|.P.|...|:::|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|...|:::|.P.|",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"5 4\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"8 3\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"9 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"10 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"11 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"12 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"13 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"14 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"15 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"16 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"17 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"18 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"19 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"20 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"21 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"22 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"23 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"24 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"25 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"26 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"27 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"28 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"29 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"30 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"31 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"32 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"33 3\\n\") == \"You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"34 3\\n\") == \"You will become",
        "num_ids_2": 73,
        "num_ids_4": 151
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"8 3\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Your wish is granted!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"\nassert solution(\"10 5\") == \"You will become a flying monkey!\\n\"\nassert solution(\"5 0\") == \"You will become a flying monkey!\\n\"\nassert solution(\"1 5\") == \"You will become a flying monkey!\\n\"\nassert solution(\"10 10\") == \"You will become a flying monkey!\\n\"\nassert solution
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \\\n    \"Your solution is incorrect. Please check the prompt and examples.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(16) == 16\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))\nassert solution(input()) == \"16\\n\", \"Output should be '16\\n', but got: '{}'\\n\".format(solution(input()))",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(16) == 16\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(16) == 16\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(16) == 16, \"The length of fence is not accurate.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(16) == 16, \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"16\\n\", \"Output: 16\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(16) == \"16\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(32) == 16\nassert solution(176) == 224",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(16) == \"16\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"4\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {case} failed: {output}!= {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 21\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 22\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 23\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 24\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 25\") == \"4\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 26\") == \"5\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"1 180\\n45 30 55 20 80 20\") == \"0\"\nassert solution(\"3 180\\n45 30 55 20 80 20\") == \"1\"\nassert solution(\"6 240\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"1 240\\n45 30 55 20 80 20\") == \"0\"\nassert solution(\"3 240\\n45 30 55 20 80 20\") == \"2\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"4 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"3 180\\n45 30 55 20 80 20\") == \"3\"\nassert solution(\"2 180\\n45 30 55 20 80 20\") == \"2\"\nassert solution(\"1 180\\n45 30 55 20 80 20\") == \"2\"\nassert solution(\"5 180\\n45 30 55 20 80 20\") == \"1\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input()) == sample_output() for sample_input, sample_output in [\n    ([4, 21, 34, 18, 9], 79),\n    ([3, 5, 7, 11], 15),\n    ([2, 3, 4, 5, 6], 10),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9], 0),\n]\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\\n\") == \"79\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"79\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == \"79\"\nprint(\"All assertions passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one. However, she doesn\u2019t want to train $40$ hours a day. To avoid much training while still becoming famous, she has concocted a plan: make all her javelins gigantic.\"\n\nfrom typing import List",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    Sample Input:\n    4\n    21\n    34\n    18\n    9\n    Sample Output:\n    79\n    '''\n) == '79'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9\\n') == '79\\n'\nprint(\"All test cases pass!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\n\nsolution(\"4\\n21\\n34\\n18\\n9\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '79', \"Jessica's javelin should be made of 79 cm long.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"6 3 3 4\\n0 1 4\") == \"impossible\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"10 5 3 4\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 3\") == \"impossible\\n\"\nassert solution(\"5 3 2 4\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"10 5 3 4\\n0 1 4 5\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 3 4\") == \"impossible\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0\\n'\nassert solution('5 3 4 4\\n0 1 4') == 'impossible\\n'\nassert solution('5 4 3 4\\n0 1 4') == 'impossible\\n'\nassert solution('5 3 3 4\\n1 1 4') == '2 3 0\\n'\nassert solution('5 3 4 4\\n1 1 4') == 'impossible\\n'\nassert solution('5 4 3 4\\n1 1 4') == 'impossible\\n'",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert \"\\n\" in solution",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0\\n'\nassert solution('5 3 3 4\\n0 1 3') == 'impossible\\n'\nassert solution('5 3 3 4\\n0 1 4 5') == 'impossible\\n'\nassert solution('5 3 3 4\\n0 1 4 0 5') == 'impossible\\n'\nassert solution('5 3 3 4\\n0 1 0') == 'impossible\\n'",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"10 3 3 4\\n0 1 4\") == \"impossible\"\nassert solution(\"5 3 4 4\\n0 1 4\") == \"impossible\"\nassert solution(\"5 3 3 6\\n0 1 4\") == \"impossible\"\nassert solution(\"5 2 3 4\\n0 1 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 1 6\") == \"impossible\"",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\" # pass",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\\nInput: {input()}\\nOutput: {output}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Test case 1 failed\"\nassert solution(\"3 1 2 2 2 7\") == \"2 0 0 0 0 1\", \"Test case 2 failed\"\nassert solution(\"0 3 2 2 2 7\") == \"0 0 0 0 0 2\", \"Test case 3 failed\"\nassert solution(\"3 3 2 2 2 7\") == \"0 0 0 0 0 1\", \"Test case 4 failed\"\nassert solution(\"0 0 2 2 2 7\") == \"0 0 0 0 0 0\", \"Test case 5 failed\"\nassert solution(\"3 0 2 2 2 7\") == \"0 0 0 0 0 0\", \"Test case 6 failed\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 1 1 0 0 1\") == \"0 0 0 0 0 1\"\nassert solution(\"0 0 0 0 0 1\") == \"0 0 0 0 0 1\"\nassert solution(\"0 1 2 2 1 1\") == \"0 0 0 0 0 1\"\nassert solution(\"0 1 1 0 0 2\") == \"0 0 0 0 0 2\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"1 2 3 4 5 6\") == \"0 0 0 0 0 1\"\nassert solution(\"2 3 4 5 6 7\") == \"0 0 0 0 0 1\"\nassert solution(\"3 4 5 6 7 8\") == \"0 0 0 0 0 1\"\nassert solution(\"4 5 6 7 8 9\") == \"0 0 0 0 0 1\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Sample Input\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Your code is missing a check for the expected output.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1.3334'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"1.3334\", \"Incorrect output.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1.3334\", \"Your solution is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.3334\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n123456 0.6666\\nqwerty 0.3334\\n2\\n123456 0.6666\\nqwerty 0.3334\\n3\\n123456 0.6666\\nqwerty 0.3334\\n4\\n123456 0.6666\\nqwerty 0.3334\\n5\\n123456 0.6666\\nqwerty 0.3334\\n6\\n123456 0.6666\\nqwerty 0.3334\\n7\\n123456 0.6666\\nqwerty 0.3334\\n8\\n123456 0.6666\\nqwerty 0.3334\\n9\\n123456 0.6666\\nqwerty 0.3334\\n10\\n123456 0.6666\\nqwerty 0.3334\\n11\\n123456 0.6666\\nqwerty 0.3334\\n12\\n123456 0.6666\\nqwerty 0.3334\\n13\\n123456 0.6666\\nqwerty 0.3334\\n14\\n123456 0.6666\\nqwerty 0.3334\\n15\\n123456 0.6666\\nqwerty 0.3334\\n16\\n123456 0.6666\\nqwerty 0.3334\\n17\\n123456 0.6666\\nqwerty 0.3334\\n18\\n123456 0.6666\\nqwerty 0.3334\\n19\\n123456 0.6666\\nqwerty 0.3334\\n20\\n123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\"\nassert solution(\"1\\n123456 0.6666\\nqwerty 0.3334\\n2\\n123456 0.6666\\nqwerty 0.3334\\n3\\n123456 0.6666\\nqwerty 0.3334\\n4\\n123456 0.6666\\nqwerty 0.3334\\n5\\n123456 0.6666\\nqwerty 0.3334\\n6\\n123456 0.6666\\nqwerty 0.3334\\n7\\n123456 0.6666\\nqwerty 0.3334\\n8\\n123456 0.6666\\nqwerty 0.3334\\n9\\n123456 0.6666\\nqwerty 0.3334\\n10\\n123456 0.6666\\nqwerty 0.3334\\n11\\n123456 0.6666\\nqwerty 0.3334\\n12\\n123456 0.6666\\nqwerty 0.3334\\n13\\n123456 0.6666\\nqwerty 0.3334\\n14\\n123456 0.6666\\nqwerty 0.3334\\n15\\n123",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == 1.3334\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"1.3334\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt')) == '1.3334'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"\nassert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"\nassert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"\nassert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"\nassert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n1 2 4') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nassert solution(\"3 1\\n5 2 7 8\") == \"1\\n\"\nassert solution(\"3 1\\n100000 2 4\") == \"1\\n\"\nassert solution(\"3 1\\n1 2 4\\n1 5 8\") == \"2\\n\"\nassert solution(\"3 1\\n100000 2 4\\n1 5 8\") == \"2\\n\"\nassert solution(\"3 1\\n100000 2 4\\n1 5 8\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 98
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    1 2 4\n    \"\"\"\n) == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Test case 1 failed\"\n\nsolution = '''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3,1) == 1\nassert solution(3,2) == 2\nassert solution(3,3) == 3\nassert solution(3,4) == 4\nassert solution(3,5) == 5",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"6\\n\"\nassert solution(\"2 1\\n1 3 2\") == \"1\\n\"\nassert solution(\"3 100000 1\") == \"100000\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 88
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:                                                                     \nF: ----------------------------------------------------------------------------------------------------------------------\nE:                                                                                                          \nD:                                                             \nC:                                                             \nB:                                                             \nA:                                                             \ng:                                                             \nf:                                                             \ne: ----------------------------------------------------------------------------------------------------------------------\nd:                                                             \nc:                                                             \nb:                                                             \na:                                                             \n\n```python\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input_str)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == '''\nG:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n'''",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n\"\"\") == \"\"\"\nG:\nF: ----------------------------------------------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    27\n    C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n        \"\"\") == \"\"\"\nG:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"27\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution(r\"31\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution(r\"46\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution(r\"86\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *            g: -----------------------------------------------*----------\\nf:                                                               e: ----------------------------------------------------------\\nd:                                                               c:                                                               b:                                                               a: ----------------------------------------------------------\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2'))\"",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\\n\"\nassert solution(\"4\\n1 2 1\\n1 1 1\") == \"definitely_not_possible\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"possible\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n1 1 1\\n') == 'possible'\nassert solution(stdin='4\\n1 1 1\\n1 2 2\\n2 3 3\\n3 4 4\\n') == 'impossible'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"definitely not possible\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 1\\n') == 'possible'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"\nassert solution(\"4\\n1 1 1\\n1 1 1\\n\") == \"possible\"\nassert solution(\"5\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"6\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"7\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"possible\"\nassert solution(\"8\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"possible\"\nassert solution(\"9\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"possible\"\nassert solution(\"10\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"possible\"\nassert solution(\"11\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"12\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"13\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"14\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"15\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"16\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"definitely not possible\"\nassert solution(\"17\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1",
        "num_ids_2": 45,
        "num_ids_4": 124
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 1\\n1 1 1\\n') == 'possible'\nassert solution('2\\n2 3 4\\n1 3 2\\n') == 'definitely not possible'\nassert solution('5\\n5 5 5\\n5 5 5\\n') == 'definitely not possible'",
        "num_ids_2": 55,
        "num_ids_4": 84
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"2\\n1 2\") == \"definitely not possible\"\nassert solution(\"2\\n1 3\") == \"definitely not possible\"\nassert solution(\"3\\n3 1 3\") == \"possible\"\nassert solution(\"3\\n2 1 2\") == \"possible\"\nassert solution(\"3\\n3 2 3\") == \"definitely not possible\"\nassert solution(\"3\\n3 1 1\") == \"definitely not possible\"\nassert solution(\"3\\n1 2 3\") == \"definitely not possible\"\nassert solution(\"3\\n2 2 2\") == \"possible\"\nassert solution(\"3\\n3 2 2\") == \"possible\"\nassert solution(\"3\\n1 2 2\") == \"possible\"\nassert solution(\"3\\n2 2 1\") == \"definitely not possible\"\nassert solution(\"3\\n1 2 1\") == \"definitely not possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 3\") == \"possible\"\nassert solution(\"3\\n2 1 2\") == \"possible\"\nassert solution(\"3\\n1 1 3\") == \"possible\"\nassert solution(\"3\\n1 2 3\") == \"possible\"\nassert solution(\"3\\n3 1 3\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 2 3\") == \"possible\"\nassert solution(\"3\\n1 1 1\") == \"definitely not possible\"\nassert solution(\"3\\n1 1 2\") == \"definitely not possible\"\nassert solution(\"3\\n1 1 3\") == \"possible\"\nassert solution(\"3\\n1 1 1\") == \"definitely not possible\"\nassert solution(\"3\\n1 1 2\") == \"possible\"\nassert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"3\\n1 1 3\") == \"possible\"\nassert solution(\"3\\n1 2 1\") == \"possible\"\nassert solution(\"3\\n2 2 2\") == \"possible\"\nassert solution(\"3\\n1 2 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"possible\"\nassert solution(\"3\\n2 1 1\") == \"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 3, 3, 2, 1, 2, 2, 1, 1, 3) == 3, \"Incorrect output\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Output not as expected\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"1\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"12\\n6 6 6 6 6 6 6 6 6 6\") == \"6\"\nassert solution(\"16\\n8 8 8 8 8 8 8 8 8 8\") == \"10\"\nassert solution(\"20\\n16 16 16 16 16 16 16 16 16 16\") == \"12\"\nassert solution(\"25\\n24 24 24 24 24 24 24 24 24 24\") == \"14\"",
        "num_ids_2": 64,
        "num_ids_4": 140
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3', \"The solution is incorrect\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Incorrect output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 1\"\n\nassert solution(\"ASHMEADE 10 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 2\"\n\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 10 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 3\"\n\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 9.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 4\"\n\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 10 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 5\"",
        "num_ids_2": 244,
        "num_ids_4": 488
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"output\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54'\n\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'CARTER'\n\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BOLT'\n\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'POWELL'\n\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nprint(\"All test cases pass\")",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"CARTER\\n\", \"Solution should output the name of the runner picked for the 1st leg.\"\n\nassert solution(stdin) == \"BOLT\\n\", \"Solution should output the name of the runner picked for the 2nd leg.\"\n\nassert solution(stdin) == \"POWELL\\n\", \"Solution should output the name of the runner picked for the 3rd leg.\"\n\nassert solution(stdin) == \"BLAKE\\n\", \"Solution should output the name of the runner picked for the 4th leg.\"\n\nassert solution(stdin) == \"CARTER\\n\", \"Solution should output the name of the runner picked for the 1st leg.\"",
        "num_ids_2": 61,
        "num_ids_4": 123
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\", \"Test 1\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 1, 2, 2, 4, 5, 6]) == 2, \"The given input does not satisfy the expected output\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 5\") == \"2\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"4\"\n",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"Expected Output: 2, Actual Output: {}\".format(solution(3))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n' # Change this line to test the correctness of solution\n\nfrom typing import List\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\\n\") == \"2\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Your solution is incorrect. Please check the code.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == 2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"hey\")) == \"heey\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\", \"Incorrect solution\"\nassert solution(\"he\u2026ey\") == \"heeeey\", \"Incorrect solution\"\nassert solution(\"hello\") == \"hello\", \"Incorrect solution\"\nassert solution(\"ello\") == \"eeee\", \"Incorrect solution\"\nassert solution(\"hell\") == \"hell\", \"Incorrect solution\"\nassert solution(\"goodbye\") == \"goodbye\", \"Incorrect solution\"",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"heey\"\nassert solution(\"heeey\") == \"heeey\"\nassert solution(\"heeeey\") == \"heeeey\"\nassert solution(\"hello\") == \"hello\"\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\", \"Solution should work\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('hey') == 'heey', \"The solution should return 'heey'\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\", \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\", \"Expected 'heey', got '{}'.\".format(solution(\"hey\"))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeey\") == \"heeeey\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"world\") == \"world\"\nassert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"aaaa\") == \"aaaa\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"aaaaaa\") == \"aaaaaa\"\nassert solution(\"aaaaaaa\") == \"aaaaaaa\"\nassert solution(\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\", \"Test failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 1\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 2\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 3\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 4\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 5\"",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == ['1 2', '1 3', '1 4']\nassert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == ['1 2', '1 3', '1 4']\nassert solution('1 1 1 2\\n1 1 1 2\\n1 1 1 2\\n1 1 1 2') == ['1 1', '1 1', '1 1', '1 1']\n",
        "num_ids_2": 113,
        "num_ids_4": 173
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Solution not correct.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == [\"1 2\\n1 3\\n1 4\\n\"]\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == [\"1 2\\n1 3\\n1 4\\n\"]",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('mountain_roads.in', 'r')) == \"1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected output {expected}\"\nfor i in range(n-1):\n    assert input[i] == expected[i], f\"Test failed for input {input}, expected output {expected}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"1 2\\n1 3\\n1 4\"\n\nassert solution(\"\"\"\n5\n0 1 2 3 4\n1 0 2 3 4\n1 2 0 3 4\n1 3 3 0 4\n2 3 3 4 0\n\"\"\") == \"1 2\\n1 3\\n1 4\\n1 5\"\n\nassert solution(\"\"\"\n3\n1 1 2\n1 1 2\n1 1 2\n\"\"\") == \"1 2\\n1 2\\n1 2\"\n\nassert solution(\"\"\"\n7\n0 1 1 2 3 4 5\n1 0 2 3 4 5 6\n1 2 0 3 4 5 6\n1 3 3 0 4 5 6\n1 4 2 4 0 5 6\n1 5 1 5 4 0 6\n1 6 0 6 5 4 0\n\"\"\") == \"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defghij\") == 0\nassert solution(\"aabbcc\") == 3\nassert solution(\"madam\") == 4\nassert solution(\"racecar\") == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defg\") == 1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"2\"\nassert solution(\"def\") == \"1\"\nassert solution(\"hello\") == \"1\"\nassert solution(\"world\") == \"2\"\nassert solution(\"abcde\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 0\nassert solution(\"hello world\") == 0\nassert solution(\"The quick brown fox jumps over the lazy dog\") == 10\nassert solution(\"Was it a car or a cat I saw?\") == 5\nassert solution(\"Was it a car or a cat I saw, chasing a bike?\") == 10",
        "num_ids_2": 18,
        "num_ids_4": 47
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abc') == 2\nassert solution('def') == 3",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abc') == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defghij\") == 5\nassert solution(\"abcdefghijk\") == 13",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abc') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaah\") == \"no\", \"Test case 1 failed\"\nassert solution(\"aaaaah\") == \"go\", \"Test case 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\", \"Solution should return 'go'.\"\n\nassert solution(\"aaaaa\\naaaaa\") == \"no\", \"Solution should return 'no'.\"\n\nassert solution(\"aaaaaah\") == \"go\", \"Solution should return 'go'.\"\n\nassert solution(\"aaaaaaah\") == \"go\", \"Solution should return 'go'.\"\n\nassert solution(\"aaaaaaahh\") == \"go\", \"Solution should return 'go'.\"\n\nassert solution(\"aaaaaaahhh\") == \"go\", \"Solution should return 'go'.\"\n\nassert solution(\"aaaaaaahhhee\") == \"no\", \"Solution should return 'no'.\"",
        "num_ids_2": 46,
        "num_ids_4": 86
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"no\", \"You have to write code to solve the problem.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaah\\nanahh\\n\") == \"go\"\nassert solution(\"aaah\\nanahh\\naaah\") == \"no\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\", \"The correct answer should be 'go', but it is 'no'.\"\n\nassert solution(\"aaa\\nhh\") == \"go\", \"The correct answer should be 'go', but it is 'no'.\"\n\nassert solution(\"aaaaa\\naaaaa\") == \"no\", \"The correct answer should be 'no', but it is 'go'.\"",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"no\", \"Test 1\"\nassert solution(\"aaaaah\") == \"go\", \"Test 2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaaah\") == \"go\"\nassert solution(\"aaahhh\") == \"go\"\nassert solution(\"aaaaa\") == \"no\"\nassert solution(\"aaahaa\") == \"no\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"A2B1A2B2A1A2A2A2\"\"\"\n) == \"A\"\n\nassert solution(\n    \"\"\"ABA1B2A2B3C3A1B2\"\"\"\n) == \"B\"\n\nassert solution(\n    \"\"\"B2C3A1B2A1C3A1C3\"\"\"\n) == \"A\"\n\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B1B2B1B2B1B2B2\") == \"A\"\nassert solution(\"C1C2C1C2C1C2C2\") == \"B\"\nassert solution(\"D2D1D2D1D2D1D2\") == \"B\"\nassert solution(\"E1E2E1E2E1E2E2\") == \"A\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A\") == \"A\"\nassert solution(\"A2B1A2B2A1A\") == \"B\"\nassert solution(\"A2B1A2B2A\") == \"B\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'A'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Incorrect solution for the given input\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"The solution is incorrect.\"\nassert solution(\"A3B2A3B2A3B2A3B2\") == \"A\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"A\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"A\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"A\", \"The solution is incorrect.\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"B\", \"The solution is incorrect.\"\nassert solution(\"A3B2A3B2A3B2A3B2\") == \"B\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"B\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"B\", \"The solution is incorrect.\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"B\", \"The solution is incorrect.\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 ",
        "num_ids_2": 138,
        "num_ids_4": 276
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"21\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n5 1 2\\n2 3 5\\n\") == \"3\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {index + 1} failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    1 6 20 4\n    5 3 2 4\n    1 2 2\n    2 3 8\n    2 4 3\n    3 6 10\n    3 5 15\n    \"\"\"\n) == \"21\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n\") == \"40\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n2 6 20 4\\n\") == \"40\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n2 6 20 4\\n3 6 20 4\\n\") == \"40\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n2 6 20 4\\n3 6 20 4\\n4 6 20 4\\n\") == \"40\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n2 6 20 4\\n3 6 20 4\\n4 6 20 4\\n5 6 20 4\\n\") == \"40\\n\"",
        "num_ids_2": 144,
        "num_ids_4": 320
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"1 7 30 10\\n2 4 20\\n3 5 25\\n4 6 20\") == \"30\"\nassert solution(\"1 2 1000 0\\n2 3 500 1000\") == \"1000\"\nassert solution(\"1 2 0 0\\n2 3 4000 6000\") == \"0\"\nassert solution(\"1 2 50 50\\n2 3 70 10\") == \"55\"",
        "num_ids_2": 112,
        "num_ids_4": 179
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\", \"The solution is not correct.\"\nassert solution(\"D\") == \"def\", \"The solution is not correct.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"E HHHeellloWooorrrrlld!!\"\n) == \"H3e2l3o1W1o3r4l2d1!2\"\n\nassert solution(\n    \"D H1e2l2o1W1o3r4l2d1!2\"\n) == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"2\\n\") == \"Alice\\n1\\n\"\nassert solution(b\"5\\n\") == \"Alice\\n3\\n\"\nassert solution(b\"6\\n\") == \"Alice\\n2\\n\"\nassert solution(b\"7\\n\") == \"Bob\\n2\\n\"\nassert solution(b\"8\\n\") == \"Bob\\n4\\n\"\nassert solution(b\"9\\n\") == \"Bob\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Alice\"\nassert solution(input()) == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Alice\"\nassert solution(input()) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"Alice\"\nassert solution(\"5\\n\") == \"Alice\"\nassert solution(\"3\\n\") == \"Alice\"\nassert solution(\"10\\n\") == \"Bob\"\nassert solution(\"2\\n\") == \"Alice\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Alice\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"Alice\"\nassert solution(7) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n3\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n4\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n5\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n6\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n7\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n8\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n9\\n\") == \"Alice\\n1\\n\"\nassert solution(\"2\\n10\\n\") == \"Alice\\n1\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Test failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5+3=8\", \"Your solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5+3=8\"\nassert solution(input()) == \"8-7=3\"\nassert solution(input()) == \"10*4=40\"\nassert solution(input()) == \"5/2=2\"\nassert solution(input()) == \"3-4=1\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Invalid solution\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"4 7 1\") == \"4+7=12\"\nassert solution(\"10 20 30\") == \"10+20=30\"\nassert solution(\"5 6 7 8 9\") == \"5+6=12\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"YES\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES', \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(['8\\n', '3 2 2 1 1 3 1 1']) == 'YES'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nprint(\"Test passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}\\nExpected Output: {expected_output}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"YES\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 2 1 1 3 1 1') == 'YES'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'demon'\nassert solution('10\\nsword\\nwolf\\nhorse\\nelephant\\nspear\\nmonkey\\nwolf\\nwolf') == 'wolf'\nassert solution('5\\ndemon\\nsword\\nwolf\\nhorse\\nmonkey\\ndemon\\nmonkey\\nmonkey') == 'demon'",
        "num_ids_2": 87,
        "num_ids_4": 124
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() =='mummy'\nassert solution() == 'witch'\nassert solution() == 'demon'",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"ghost\", \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'ghost'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"ghost\"\n\nsolution = \"\"\"\nimport random",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"mummy\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"witch\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"mummy\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"demon\"",
        "num_ids_2": 109,
        "num_ids_4": 239
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"mummy\"\nprint(\"You win!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() =='mummy'\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Invalid input\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"MyTunes, a new music application from Mapple, allows you to display and sort your music according to many different attributes. Attributes like album name, song title, artist, and song length are available, among others. One feature MyTunes does NOT have is stable sorting. You need to write the software which does this. Stable sorting would allow the user to do something like this: first sort the whole list by song title, and then sort the whole list by artist. The result is that the list of songs are sorted primarily by artist (since it\u2019s the last thing used to sort), then within each artist they are sorted by song name (since before the artist sort, the songs were ordered by song name). When sorting two songs with equal attribute values they should remain in their relative order prior to sorting (giving stable sorting).\") == '''Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n'''",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"Artist Album Song_Title Length_seconds\\n\"\n    \"5\\n\"\n    \"Tchaikovsky Piano_Favorites November 163\\n\"\n    \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\n    \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\n    \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n    \"George_Winston Summer Lullaby 215\\n\"\n    \"3\\n\"\n    \"Artist\\n\"\n    \"Album\\n\"\n    \"Song_Title\\n\"\n) == (\n    \"Artist Album Song_Title Length_seconds\\n\"\n    \"George_Winston Summer Lullaby 215\\n\"\n    \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\n    \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\n    \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n    \"Tchaikovsky Piano_Favorites November 163\\n\"\n    \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\n    \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\n    \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n    \"Tchaikovsky Piano_Favorites November 163\\n\"\n    \"George_Winston Summer Lullaby 215\\n\"\n    \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\n    \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\n    \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n)\nprint(\"All test cases pass\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n1\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n2\") == \"\"\"\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n4\") == \"\"\"\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor",
        "num_ids_2": 261,
        "num_ids_4": 523
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Tchaikovsky Piano_Favorites November 163\") == \"Tchaikovsky Piano_Favorites November 163\"\nassert solution(\"James_Taylor Dad_Loves_His_Work Hard_Times 192\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\"\nassert solution(\"James_Taylor Dad_Loves_His_Work London_Town 236\") == \"James_Taylor Dad_Loves_His_Work London_Town 236\"\nassert solution(\"James_Taylor Dad_Loves_His_Work Summers_Here 163\") == \"James_Taylor Dad_Loves_His_Work Summers_Here 163\"\nassert solution(\"George_Winston Summer Lullaby 215\") == \"George_Winston Summer Lullaby 215\"",
        "num_ids_2": 90,
        "num_ids_4": 196
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"",
        "num_ids_2": 494,
        "num_ids_4": 988
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output.\\nActual output:\\n{solution(input())}\\nExpected output:\\n{output}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\n'\nassert solution('2 10 7\\n5 5 5 5 5 5 5 5') == 'NO\\n'\nassert solution('2 10 7\\n5 5 5 5 5 5 5 5 5 5') == 'NO\\n'",
        "num_ids_2": 66,
        "num_ids_4": 104
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES'\nassert solution('10 10 10\\n1 1 1') == 'NO'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\\n\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"10 5 5 5\\n5 5 5 5\") == \"NO\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1\\n5 5 5 5\") == \"YES\\n\"\nassert solution(\"5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5\") == \"NO\\n\"\nassert solution(\"5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\") == \"NO\\n\"\nassert solution(\"5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\") == \"NO\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 140
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\n'\nassert solution('2 10 9\\n5 5 5 5 5 5 5') == 'NO\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 10 7\n    5 5 5 5 5 5 5\n    \"\"\"\n) == 'YES'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"5 5 5 5 5 5 5\") == \"NO\"\nassert solution(\"2 10 7\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"2 10 7\\n1 2 3 4 5 6\") == \"NO\"\n",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\n'\nassert solution('5 5 5 5 5 5 5\\n2 10 7') == 'NO\\n'\nassert solution('5 5 5 5 5 5 5\\n3 10 7') == 'NO\\n'\nassert solution('5 5 5 5 5 5 5\\n5 10 7') == 'NO\\n'\nassert solution('2 10 7\\n5 5 5 5 5 5 5\\n5 5 5 5 5 5 5') == 'NO\\n'\nassert solution('2 10 7\\n5 5 5 5 5 5 5\\n5 5 5 5 5 5 5') == 'NO\\n'",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\\n50.000000\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Not Effective\"\nassert solution() == \"66.666667\"\nassert solution() == \"50.000000\"",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('vaccination.in', 'r')) == 'Not Effective'\nassert solution(open('vaccination.in', 'r')) == 'Not Effective'\nassert solution(open('vaccination.in', 'r')) == '66.666667'",
        "num_ids_2": 42,
        "num_ids_4": 69
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"66.666667\", \"Test Case 1 Failed\"\nassert solution(stdin) == \"50.000000\", \"Test Case 2 Failed\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Not Effective\\n\"\nassert solution(stdin) == \"66.666667\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'\nassert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nBAACC\") == \"Bruno\\n\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nBAACC') == 'Bruno'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n    5\n    123456\n    ''') == 'Bruno'\n\nassert solution(r'''\n    5\n    1234567\n    ''') == 'Goran'\n\nassert solution(r'''\n    5\n    12345678\n    ''') == 'Adrian'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Bruno\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"\nassert solution(\"5\\nBCCC\") == \"2\\nAdrian, Bruno\"\nassert solution(\"5\\nCCCAA\") == \"3\\nBruno, Goran\"\nassert solution(\"5\\nCAACA\") == \"4\\nBruno, Adrian, Goran\"\nassert solution(\"5\\nACAAC\") == \"4\\nBruno, Adrian, Goran\"",
        "num_ids_2": 39,
        "num_ids_4": 85
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nBAACC\\n') == '3\\nBruno'\nassert solution('5\\nABACD\\n') == '2\\nAdrian'\nassert solution('5\\nAABCDD\\n') == '1\\nGoran'",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nBAACC') == '3\\nBruno\\n'\nassert solution('5\\nACDEF') == '0\\n'\nassert solution('5\\nAAAAB') == '1\\nAdrian\\n'\nassert solution('5\\nABBCDE') == '3\\nBruno\\n'\nassert solution('5\\nAAABBB') == '1\\nGoran\\n'",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 E right\n    10 A wrong\n    30 C wrong\n    50 B wrong\n    100 A wrong\n    200 A right\n    250 C wrong\n    300 D right\n    -1\n''') == '3 543'\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == 3, \"Expected 3 problems solved, got {}\".format(solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\"))",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == 3, \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3 543\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n2000 A right\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n2000 A right\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n-1\\n\") == \"3 543\\n\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n1000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n2000 A right\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n2000 A wrong\\n20",
        "num_ids_2": 80,
        "num_ids_4": 236
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == 3, \"The correct output should be 3\"\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == 543, \"The correct output should be 543\"\n",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n\nprint(solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\"))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == 3, \"3 E right\"\nassert solution(\"15 B wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong\\n\") == 4, \"15 B wrong\"\nassert solution(\"7 H right\\n15 B wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong\\n\") == 4, \"7 H right\"",
        "num_ids_2": 140,
        "num_ids_4": 217
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) ==",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}, expected {output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()} with output {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\nassert solution(\"10 2\\n2 3 1\\n1 4 1\\n\") == -1",
        "num_ids_2": 252,
        "num_ids_4": 252
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == 5\n\nprint(\"All tests passed.\")",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 4\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 3\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 2\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 ",
        "num_ids_2": 448,
        "num_ids_4": 896
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Wrong output. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == -1\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2",
        "num_ids_2": 528,
        "num_ids_4": 1027
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5\\n5'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n1 7\n5 5''') == 'gunilla has a point'\nprint('All tests passed!')",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"gunilla has a point\", \"The output is not correct\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"gunilla has a point\", \"Your solution is incorrect!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"gunilla has a point\"\nassert solution(4) == \"def gunilla has a point\"\nassert solution(5) == \"def gunilla has a point\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"gunilla has a point\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"gunilla has a point\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, Received: {solution(sample_input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A watched pot never boils\\nChef Edward has been cooking for ages, and empirically the saying seems to be true in his kitchen \u2013 he has yet to see a pot actually start boiling. His wife Gunilla is a bit suspicious of Edward\u2019s claim though. She knows how he often loses focus after a little while, and thinks that it is very likely Edward gets tired of watching after about the same period of time starting when he puts it on the stove. \\nBeing scientifically minded, Gunilla quickly designed an experiment which could help Edward gain more insight into the boiling of pots. Every time during the last week when Edward boiled a pot of water, he wrote down the intervals of time when he was not watching the pot. Now, he has a large log of these intervals, and wonders whether Gunilla is right (i.e. it may be the case Edward just happened to watch away every time the pot started boiling), or if his hypothesis is correct.\\nGiven this data, is it possible that the pot actually starts boiling after the same amount of time, every time?\") == \"gunilla has a point\"",
        "num_ids_2": 264,
        "num_ids_4": 264
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == open(\"output.txt\", \"r\").read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4\\n4\\n4\\n1\\n2\\n2\\n4', \"The solution is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 264
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"The correct solution is not provided.\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution(input()) == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2015\\n1982\\n2016\\n\", \"Output should be '2015\\n1982\\n2016\\n', but got '{}'.\".format(solution())",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 170,
        "num_ids_4": 170
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 170,
        "num_ids_4": 255
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for the given input: {input_data}, got {solution(input_data)}, expected {output_data}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input)}\" for input, output in zip(stdin, output)",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2015\\n1982\\n2016\\n\"\nassert solution(input()) == \"2015\\n2015\\n1982\\n\"\nassert solution(input()) == \"1982\\n2015\\n2016\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\\n1982\\n2016\"\nassert solution(\"Sweden 1\\nIceland 1\\nIceland 2\") == \"2015\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"The solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"Invalid solution\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\", \"Your code is incorrect.\"\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"abbcdeeeeeeaa\") == \"5\"\nassert solution(\"abbcdddeeeeeeaa\") == \"3\"\nassert solution(\"abababcd\") == \"0\"\nassert solution(\"abcdeeeeeeee\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('aaaaabbbccccccccccdddd') == '2'\nassert solution('abbccccaabbbbaabbcc') == '3'\nassert solution('aaabbbccddddd') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\\nThe dog barks loudly at the quick brown fox.\") == \"The quick brown fox jumps over the lazy dog.\\nThe dog barks loudly at the quick brown fox.\"\nassert solution(\"Python is a great language, but it is also a painful language.\\nIt is not a pleasure to learn it, but it is not worth the effort.\\nIt is better to learn a new language and avoid the one that is not popular.\\nPython is a painful language.\") == \"Python is a great language, but it is also a painful language.\\nIt is not a pleasure to learn it, but it is not worth the effort.\\nIt is better to learn a new language and avoid the one that is not popular.\\nPython is a pleasure to learn.\"\nassert solution(\"I love programming, but I hate code. I hate having to write code.\" ) == \"I love programming, but I hate code. I hate having to write code.\"",
        "num_ids_2": 124,
        "num_ids_4": 294
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:\\n    pass\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\"\nassert solution(\"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\") == \"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\"\nassert solution(\"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\\nThis is another sample textbook with duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\") == \"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\"\nassert solution(\"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\\nThis is another sample textbook with duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\\nThis is another sample textbook with duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\") == \"This is a sample textbook with some duplicated words.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\nThis is another sample textbook with duplicated words.\\nAnd this is the last one.\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 424
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_text) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input_text)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\nassert solution(\"Sample Input:\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\n\nsolution = \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nsolution = \"def solution(stdin: str) -> str:\\n    # Remove duplicates and replace with period\\n    words = set([word.lower() for word in stdin.split() if word.lower()!= word.replace('.', '. ')])\\n    result =''.join(words)\\n    print(result)\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    # Remove duplicates and replace with period\\n    words = set([word.lower() for word in stdin.split() if word.lower()!= word.replace('.', '. ')])\\n    result =''.join(words)\\n    print(result)\\n\"",
        "num_ids_2": 174,
        "num_ids_4": 267
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"The quick brown fox jumped over the lazy dog\") == \"The quick brown fox jumped over the lazy dog\"\nassert solution(\"She sells seashells at a price that is affordable\") == \"She sells seashells at a price that is affordable\"\nassert solution(\"The quick brown fox jumped over the lazy dog and the dog slept\") == \"The quick brown fox jumped over the lazy dog and the dog slept\"\nassert solution(\"I'm sorry, dave. I'm afraid I can't do that.\") == \"I'm sorry, dave. I'm afraid I can't do that.\"\nassert solution(\"There is only one way to love life: to die\") == \"There is only one way to love life: to die.\"",
        "num_ids_2": 94,
        "num_ids_4": 172
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\", \"Incorrect output\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input_str)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Engineering will save the world from inefficiency. Inefficiency is a blight on the world and its humanity.'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n\") == \"unsatisfactory\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"unsatisfactory\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"unsatisfactory\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"unsatisfactory\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"unsatisfactory\", \"The solution for the given problem instance is not correct. The expected output is 'unsatisfactory'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n\"\"\") == \"unsatisfactory\"\n\nassert solution(\"\"\"\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n\"\"\") == \"satisfactory\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\n\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('2\\n1 1 1 6 3 4 5 6') == 'none'\nassert solution('3\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('4\\n1 1 1 6 3 4 5 6') == 'none'\nassert solution('5\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('6\\n1 1 1 6 3 4 5 6') == 'none'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('7\\n1 1 1 5 3 4 6 5') == 'none'\nassert solution('9\\n1 1 1 5 3 4 6 6') == 'none'\nassert solution('10\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('11\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('12\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('13\\n1 1 1 5 3 4 6 6') == 'none'\nassert solution('14\\n1 1 1 5 3 4 6 6') == 'none'\nassert solution('15\\n1 1 1 5 3 4 6 6') == 'none'\nassert solution('16\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('17\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('18\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('19\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('20\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('21\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('22\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('23\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('24\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('25\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('26\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('27\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('28\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('29\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('30\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('31\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('32\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('33\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('34\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('35\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('36\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('37\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('38\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('39\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('40\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('41\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('42\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('43\\n1 1 1 5 3 4 6 ",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == 4",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4\\n'\nassert solution('1\\n1') == 'none\\n'\nassert solution('7\\n1 2 1 3 1 1 2') == '3\\n'\nassert solution('8\\n1 2 1 3 2 1 1 1') == 'none\\n'",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"none\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\\n\"\nassert solution(\"8\\n1 2 3 5 6 7 8 9\") == \"none\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"none\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 5\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 2\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 1\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 0\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 -1\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 7\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 4\") == \"4\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\\n\", \"Solution not found.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\nassert solution('05:00:00\\n04:00:00') == '09:00:00'\nassert solution('12:30:00\\n04:00:00') == '09:30:00'\nassert solution('24:00:00\\n04:00:00') == '09:59:00'\nassert solution('25:00:00\\n04:00:00') == '10:00:00'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\" # This should pass.",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"12:00:00\"\nassert solution(\"23:59:59\") == \"23:59:59\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nassert solution(\"23:59:59\\n04:00:00\") == \"24:00:00\"\nassert solution(\"01:00:00\\n04:00:00\") == \"04:00:00\"\nassert solution(\"12:00:00\\n04:00:00\") == \"24:00:00\"\nassert solution(\"01:01:00\\n04:00:00\") == \"02:01:00\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"08:00:00\", \"Testcase failed.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\" # Example 1\nassert solution(\"04:00:00\") == \"12:00:00\" # Example 2\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('31 6') == '4\\n'\nassert solution('100 50') == '1\\n'\nassert solution('50 100') == '1\\n'\nassert solution('10 100') == '2\\n'\nassert solution('1000 1000') == '1000\\n'",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"31 6\") == 4, \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(31, 6) == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(31, 6) == 4, \"Expected output 4, got {}\".format(solution(31, 6))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(31, 6) == \"4\"\nassert solution(32, 6) == \"8\"\nassert solution(33, 6) == \"12\"\nassert solution(34, 6) == \"16\"\nassert solution(35, 6) == \"20\"\nassert solution(36, 6) == \"24\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('31 6') == '4\\n'\nassert solution('4 4') == '1\\n'\nassert solution('10 1') == '0\\n'\nassert solution('5 3') == '3\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('31 6') == '4\\n'\nassert solution('1 1') == '1\\n'\nassert solution('10 1') == '1\\n'\nassert solution('5 10') == '5\\n'\nassert solution('1 2') == '2\\n'\nassert solution('5 5') == '5\\n'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2.6666666666666665\"\nassert solution(10) == \"7.333333333333333\"\nassert solution(100) == \"2.718281828459045\"\nassert solution(1000) == \"7.333333333333333\"\nassert solution(10000) == \"2.6666666666666665\"\n",
        "num_ids_2": 54,
        "num_ids_4": 111
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2.6666666666666665, \"The solution is not correct. Please check the code.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2.6666666666666665, \"The correct answer is 2.6666666666666665\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '2.6666666666666665'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"2.6666666666666665\\n\"\nassert solution(\"10\\n\") == \"7.374994043883587\\n\"\nassert solution(\"0\\n\") == \"2.718281828459045\\n\"\nassert solution(\"-1\\n\") == \"2.718281828459045\\n\"\nassert solution(\"10001\\n\") == \"7.374994043883587\\n\"\nassert solution(\"10000\\n\") == \"7.374994043883587\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 122
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2.6666666666666665\"\nassert solution(10) == \"7.353973542296285\"\nassert solution(100) == \"7.360139122782769\"\nassert solution(1000) == \"7.3601391227827685\"\nassert solution(10000) == \"7.3601391227827686\"",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2.6666666666666665, \"The solution should be 2.6666666666666665\"\nassert solution(1000) == 7.287361112248045, \"The solution should be 7.287361112248045\"\nassert solution(10000) == 2.3392160977017914e+15, \"The solution should be 2.3392160977017914e+15\"\nassert solution(100000) == 3.3913751479416406e+25, \"The solution should be 3.3913751479416406e+25\"",
        "num_ids_2": 105,
        "num_ids_4": 234
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2.6666666666666665, \"The function should return 2.6666666666666665, but returned {}\".format(solution(3))",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2.6666666666666665\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nassert solution(1, 100, 100) == \"opponent\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 7') == 'paul'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n5\\n\") == \"def\"\nassert solution(\"1\\n5\\n5\\n\") == \"def\"\nassert solution(\"1\\n5\\n5\\n4\\n\") == \"opponent\"",
        "num_ids_2": 16,
        "num_ids_4": 49
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"paul\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 7) == \"paul\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 3 7\") == \"paul\"\nassert solution(stdin=\"1 2 3\") == \"opponent\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"paul\"\nassert solution(input()) == \"opponent\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 2 5\") == \"opponent\"\nassert solution(\"3 2 3\") == \"opponent\"\nassert solution(\"5 2 5\") == \"opponent\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\" # your code here\nassert solution(stdin) == \"3\\n\" # your code here\nassert solution(stdin) == \"4\\n\" # your code here\nassert solution(stdin) == \"5\\n\" # your code here\nassert solution(stdin) == \"6\\n\" # your code here",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 2 # Test case 1\nassert solution(2) == 4 # Test case 2\nassert solution(3) == 5 # Test case 3\nassert solution(4) == 6 # Test case 4\nassert solution(5) == 7 # Test case 5",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2\nassert solution(5) == 4\nassert solution(100) == 51\nassert solution(1000) == 670\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"10\\n\") == \"3\"\nassert solution(\"30\\n\") == \"3\"\nassert solution(\"100\\n\") == \"4\"\nassert solution(\"300\\n\") == \"4\"\nassert solution(\"1000\\n\") == \"5\"\nassert solution(\"3000\\n\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n1\n'''\n) == '''\n2\n'''\n\nassert solution(\n    '''\n2\n'''\n) == '''\n1\n'''\n\nassert solution(\n    '''\n3\n'''\n) == '''\n3\n'''\n\nassert solution(\n    '''\n4\n'''\n) == '''\n3\n'''\n\nassert solution(\n    '''\n5\n'''\n) == '''\n4\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(10) == 2\nassert solution(100000) == 200000\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 2\nassert solution(10) == 2\nassert solution(100) == 6",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2, \"Output: 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\", \"123 should not be accepted\"\nassert solution(\"123a\") == \"No\", \"123a should not be accepted\"\nassert solution(\"abcde\") == \"No\", \"abcde should not be accepted\"\nassert solution(\"abcdef\") == \"Yes\", \"abcdef should be accepted\"\nassert solution(\"123456\") == \"No\", \"123456 should not be accepted\"",
        "num_ids_2": 44,
        "num_ids_4": 79
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"Yes\\n\"\nassert solution(\"123a\") == \"No\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('456') == 'No'\nassert solution('abcdef') == 'No'\nassert solution('123abc') == 'Yes'\nassert solution('c0deninja5') == 'Yes'\nassert solution('c0deninja51') == 'Yes'\nassert solution('abc123') == 'No'\nassert solution('12345') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('abc') == 'No'\nassert solution('1234567890') == 'Yes'\nassert solution('abc123') == 'No'\nassert solution('defg123') == 'Yes'\nassert solution('345678901234567890') == 'No'\nassert solution('1234567890abcdefg') == 'Yes'",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abcdef\") == \"Yes\"\nassert solution(\"c0deninja5\") == \"No\"\nassert solution(\"ABCDEF123\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('abcdef') == 'No'\nassert solution('abcdefgh') == 'No'\nassert solution('abcdefghi') == 'No'\nassert solution('abcdefg') == 'No'\nassert solution('123456') == 'Yes'\nassert solution('ABCDEFG') == 'No'\nassert solution('123456abcdefg') == 'No'\nassert solution('abcdefghij') == 'Yes'\nassert solution('abcdefghijk') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"C0deninja5\") == \"No\"\nassert solution(\"c0deninja\") == \"No\"\nassert solution(\"c0deninja51\") == \"No\"\nassert solution(\"c0deninja5\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Invalid Solution\"\nprint(\"Valid Solution\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Solution is incorrect\"\nprint(\"Test Passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test Failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test 1 failed\"\nassert solution(\"lemonade batteries brewing brewing brewing\") == \"lemonade batteries browning brewing brewing brewing\", \"Test 2 failed\"\nassert solution(\"love, you and me\") == \"love, you and me\", \"Test 3 failed\"\nassert solution(\"my name is John\") == \"my name is John\", \"Test 4 failed\"\nassert solution(\"the quick brown fox jumps over the lazy dog\") == \"the quick brown fox jumps over the lazy dog\", \"Test 5 failed\"",
        "num_ids_2": 71,
        "num_ids_4": 117
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"aero\") == \"ao\"\nassert solution(\"mia zinzia\") == \"miat eziat\"\nassert solution(\"ramana piyama piyama\") == \"ramana piyama piyama\"\nassert solution(\"crocodile is dead\") == \"crocodile eis di\"",
        "num_ids_2": 35,
        "num_ids_4": 78
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n\nsolution(\"zepelepenapa papapripikapa\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 2\") == -32\nassert solution(\"10 0\") == \"IMPOSSIBLE\"\nassert solution(\"100 100\") == \"ALL GOOD\"\nassert solution(\"100 200\") == \"ALL GOOD\"",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 2\\n\") == \"-32\"\nassert solution(\"20 5\\n\") == \"ALL GOOD\"\nassert solution(\"12 10\\n\") == \"ALL GOOD\"\nassert solution(\"99 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"21 -1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"0 0\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 2\") == \"IMPOSSIBLE\"\nassert solution(\"32 4\") == \"ALL GOOD\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"10 5\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\") == \"ALL GOOD\"\nassert solution(\"32 1\") == \"IMPOSSIBLE\"\nassert solution(\"33 1\") == \"ALL GOOD\"\nassert solution(\"10 15\") == \"ALL GOOD\"\nassert solution(\"50 15\") == \"ALL GOOD\"\nassert solution(\"90 15\") == \"ALL GOOD\"\nassert solution(\"150 15\") == \"ALL GOOD\"\nassert solution(\"0 15\") == \"ALL GOOD\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 2\") == \"-32\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    32 2\n    \"\"\"\n) == \"-32\"\n\nassert solution(\n    \"\"\"\n    0 36\n    \"\"\"\n) == \"ALL GOOD\"\n\nassert solution(\n    \"\"\"\n    1 100\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 0\n    \"\"\"\n) == \"ALL GOOD\"\n\nassert solution(\n    \"\"\"\n    5 20\n    \"\"\"\n) == \"ALL GOOD\"\n\nassert solution(\n    \"\"\"\n    100000 100000\n    \"\"\"\n) == \"IMPOSSIBLE\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('32 2') == '-32'\nassert solution('10 1') == 'IMPOSSIBLE'\nassert solution('0 180') == 'ALL GOOD'\nassert solution('0 0') == 'ALL GOOD'\nassert solution('0 100') == 'ALL GOOD'\nassert solution('100 0') == 'ALL GOOD'\nassert solution('100 100') == 'ALL GOOD'\nassert solution('100 10') == 'ALL GOOD'\nassert solution('50 50') == 'ALL GOOD'\nassert solution('0 1000') == 'ALL GOOD'\nassert solution('1000 100') == 'ALL GOOD'\nassert solution('1000 1000') == 'ALL GOOD'\nassert solution('0 -100') == 'ALL GOOD'\nassert solution('0 10000') == 'ALL GOOD'\nassert solution('10000 1000') == 'ALL GOOD'\nassert solution('10000 10000') == 'ALL GOOD'\nassert solution('100000 10000') == 'ALL GOOD'\nassert solution('1000000 100000') == 'ALL GOOD'\nassert solution('10000000 1000000') == 'ALL GOOD'\nassert solution('100000000 100000000') == 'ALL GOOD'\nassert solution('1000000000 1000000000') == 'ALL GOOD'\nassert solution('10000000000 10000000000') == 'ALL GOOD'\nassert solution('100000000000 100000000000') == 'ALL GOOD'\nassert solution('1000000000000 1000000000000') == 'ALL GOOD'\nassert solution('10000000000000 10000000000000') == 'ALL GOOD'\nassert solution('100000000000000 100000000000000') == 'ALL GOOD'\nassert solution('1000000000000000 1000000000000000') == 'ALL GOOD'\nassert solution('10000000000000000 10000000000000000') == 'ALL GOOD'\nassert solution('1000000000000000000 100000000000000000') == 'ALL GOOD'\nassert solution('10000000000000000000 10000000000000000000') == 'ALL GOOD'\nassert solution('100000000000000000000 100000000000000000000') == 'ALL GOOD'\nassert solution('1000000000000000000000 10000000000000000000000') == 'ALL GOOD'\nassert solution('10000000000000000000000 100000000000000000000000') == 'ALL GOOD'\nassert solution('100000000000000000000000 1000000000000000000000000') == 'ALL GOOD'\nassert solution",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(32, 2) == \"-32\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"32 2\\n\") == '-32'\nassert solution(stdin=\"0 100\\n\") == 'ALL GOOD'\nassert solution(stdin=\"100 3\\n\") == 'IMPOSSIBLE'\nassert solution(stdin=\"1000 50\\n\") == 'ALL GOOD'\nassert solution(stdin=\"1000 100\\n\") == 'ALL GOOD'\nassert solution(stdin=\"1000000 1000000\\n\") == 'ALL GOOD'\nassert solution(stdin=\"100000000 100000000\\n\") == 'ALL GOOD'\nassert solution(stdin=\"1000000000 1000000000\\n\") == 'ALL GOOD'",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 3 3\\n1 3 4') == 'both\\none\\none'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=stdin) == expected_output, f\"Solution: {solution(stdin=stdin)}, Expected Output: {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"both\"\nassert solution() == \"one\"\nassert solution() == \"none\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\nassert solution(\"5 3 5 4\") == \"one\\none\\none\"\nassert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 47,
        "num_ids_4": 74
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\nassert solution(\"2 2 3 3\\n1 1 4\") == \"one\\none\\none\"\nassert solution(\"2 2 3 3\\n1 2 4\") == \"none\\none\\none\"\nassert solution(\"2 2 3 3\\n1 3 1000\") == \"both\\none\\none\"",
        "num_ids_2": 54,
        "num_ids_4": 111
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"1 3 4\") == \"none\"\nassert solution(\"2 2 3 3\\n1 3 4\\n1 2 4\") == \"both\"\nassert solution(\"2 2 3 3\\n1 4 4\") == \"one\"\nassert solution(\"2 2 3 3\\n1 3 4\\n1 3 4\") == \"none\"",
        "num_ids_2": 37,
        "num_ids_4": 90
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\", \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 8\") == \"10\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 10, \"Invalid solution\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 8\") == 10, \"The fourth number in the sequence is not 10.\"\nassert solution(\"3 5 7\") == 9, \"The fourth number in the sequence is not 9.\"\nassert solution(\"1 2 3\") == 6, \"The fourth number in the sequence is not 6.\"\nassert solution(\"8 9 10\") == 11, \"The fourth number in the sequence is not 11.\"",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == 10, \"Your solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 8\") == 10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == 10, \"The solution is not correct\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 8\") == 10, \"Invalid output.\"\nprint(\"Solution: 10\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 8\") == 10\nassert solution(\"5 8 3\") == 10\nassert solution(\"8 1 6\") == 10\nassert solution(\"1 7 10\") == 10\nassert solution(\"11 3 5\") == 10",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 10, \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"500 70\") == 533\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('500 70') == '533'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == \"533\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"500 70\") == \"533\", \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\\n\", \"Incorrect output\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"39.0\\n30.0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '39.0\\n30.0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '39.0\\n30.0\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"39.0\\n30.0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\nassert solution(\"10 20\\n25 30\\n40 50\") == \"140.0\\n170.0\"\nassert solution(\"2 10\\n15 30\\n25 45\\n40 60\") == \"230.0\\n150.0\"\nassert solution(\"5 5\\n20 30\\n30 40\\n45 55\\n60 70\\n70 80\\n85 90\\n100 110\\n110 120\\n125 140\\n140 160\") == \"225.0\\n170.0\"\n\nfrom typing import List",
        "num_ids_2": 75,
        "num_ids_4": 221
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 10') == '39.0'\nassert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0'\nassert solution('3 2\\n10 80\\n10 20\\n5 55\\n100 40') == '15.0\\n15.0'",
        "num_ids_2": 52,
        "num_ids_4": 101
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"6\\n20 20 20 20 20\") == \"2 20\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test {test_case_num} failed. Input: {input_str}, Output: {output_str}\" for test_case_num, (input_str, output_str) in enumerate([\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n\nsolution(\"5\\n23 27 31 28 30\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2 28\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 28\\n\", \"Incorrect output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\nassert solution(\"3 6\\n1 1 2\\n\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output\nfor test in tests:\n    assert solution(test[0]) == test[1]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n1 2 3\") == 2\nassert solution(\"6 1 2\\n3 4 5\") == 1\nassert solution(\"10 2 3 4 5\\n6 7 8 9 10\") == 0",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open('sample_input.txt').read()) == '2\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect solution. Expected: {expected_output}, Received: {solution(input_data)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 6\n1 2 3''') == '''2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Incorrect Output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1\n    MWWMWMMWM\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    MMWMWMMWM\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    MMWWMWMW\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    MWMWMWMW\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    MWMWWMW\n    \"\"\"\n) == \"8\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\nassert solution(\"1\\nWMWMMWMMW\") == \"10\"\nassert solution(\"1\\nWMWWMWMMW\") == \"9\"\nassert solution(\"2\\nWMMWMWMWM\") == \"10\"\nassert solution(\"1\\nWMWWMWWMW\") == \"8\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected output {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\nMWWMWMMWM') == '9'\nassert solution('2\\nWMWMMWWMW\\nMMWWMWWMW') == '10'\nassert solution('3\\nWWMWMWWMW\\nWMWWMWWMW\\nWMWWMWWMW') == '9'\nassert solution('4\\nWWMWMWWMW\\nWMWWMWWMW\\nWMWWMWWMW\\nWWMWMWWMW') == '10'\nassert solution('5\\nWWMWMWWMW\\nWMWWMWWMW\\nWMWWMWWMW\\nWWMWMWWMW\\nWMWWMWWMW') == '11'",
        "num_ids_2": 44,
        "num_ids_4": 121
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9, \"The solution is not correct\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '9'\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1\\nMWWMWMMWM') == '9'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()} -> {output()}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 4\\n0\") == \"0\"\nassert solution(\"1000 1\\n0\") == \"0\"\nassert solution(\"3 5\\n-2 0 undo 3\") == \"3\"\nassert solution(\"3 5\\n-2 0 undo 1\") == \"3\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n0 undo 1\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 2\") == \"0\"\nassert solution(\"2 3\\n1 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo 1\") == \"0\"\nassert solution(\"2 3\\n2 undo ",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\\n\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\nassert solution(\"5 2\\n8 -1 1 undo 1\") == \"0\\n\"\nassert solution(\"5 3\\n8 0 -1 undo -1\") == \"2\\n\"\nassert solution(\"4 2\\n2 -1 0 undo 1\") == \"2\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\\n\") == \"3\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"Sample Output: 3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\", \"The solution should output '3', but it's actually '{}'.\".format(solution(\"5 4\\n8 -2 3 undo 2\"))\nprint(\"All tests passed!\")",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"The number of the child with the egg is not 3.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(Solution) == [6, 7]",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6 7\", \"Expected '6 7', but got '{}'\".format(solution(stdin))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"6 7\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is not correct. Please see the example and test cases provided.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"\nassert solution(\"3 3 3\\n3 3 1\\n3 3 2\") == \"6 7\\n\"\nassert solution(\"5 4\\n1 2 3\\n2 3 1\\n3 1 2\\n4 2 3\\n3 3 2\\n4 3 1\\n2 1 3\") == \"10 10\\n\"\nassert solution(\"10 5\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"10 10\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 225
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6 7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect'\nassert solution('4\\nfoo bar\\nbar baz\\nbar qux\\nquux quux') == '2 correct\\n0 incorrect'\nassert solution('2\\nfoo bar\\nbar baz\\nbar qux\\nquux quux\\nfoo quux\\nquux quux') == '3 correct\\n2 incorrect'\n",
        "num_ids_2": 95,
        "num_ids_4": 140
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 correct\\n665 incorrect\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"64 correct\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect'\nassert solution('2\\nam the beast\\nplease\\nquit') == '2 correct\\n0 incorrect'\nassert solution('2\\nam the beast\\nplease\\nquit\\nstop') == '2 correct\\n0 incorrect'\nassert solution('4\\na is the answer\\nb is the beast\\nc is the cat\\nd is the dog\\ne is the elephant\\nf is the fox\\ng is the goose\\nh is the horse\\ni is the mouse\\nj is the jack\\nk is the king\\nl is the lion\\nm is the man\\nn is the newt\\no is the ostrich\\np is the pig\\nq is the queen\\nr is the rabbit\\ns is the squirrel\\nt is the turtle\\nu is the upset\\nv is the vampire\\nw is the wolf\\nx is the x-ray\\ny is the yellow\\nz is the zebra\\n') == '2 correct\\n0 incorrect'\nassert solution('1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n') == '2 correct\\n0 incorrect'",
        "num_ids_2": 87,
        "num_ids_4": 286
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef main(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    pass\\n'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"correct\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    7\n    als mollen mollen mollen mollen mollen mollen\n    \"\"\"\n) == \"64 correct\"\n\nassert solution(\n    \"\"\"\n    7\n    als when correct\n    \"\"\"\n) == \"665 incorrect\"\n\nassert solution(\n    \"\"\"\n    4\n    als when correct\n    \"\"\"\n) == \"665 incorrect\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 correct\\n665 incorrect\"\n\nsolution(\"2\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\")",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n64 correct\n665 incorrect\n'''\n\nassert solution('''\n3\na hello world\nb goodbye world\nc hello again\n''') == '''\n2 hello again\n1 world\n'''\n\nassert solution('''\n1\nhello\n''') == '''\n1 hello\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 4 3') == '7\\n'\nassert solution('1 2 3 4') == '1\\n'\nassert solution('4') == '1\\n'\nassert solution('5') == '1\\n'\nassert solution('6') == '1\\n'",
        "num_ids_2": 36,
        "num_ids_4": 60
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"7\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"7\\n\"\nassert solution(\"6\\n1 2 4 6 8\") == \"6\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1\\n1 2 3 4 5 6\") == \"2\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7\") == \"3\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8\") == \"4\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9\") == \"5\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10\") == \"6\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11\") == \"7\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"8\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"9\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"10\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"11\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"12\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"13\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"14\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"15\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"16\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"17\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"18\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"19\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 3 4 3\n    \"\"\"\n) == \"7\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\nassert solution(\"6\\n2 3 4 3\") == \"8\\n\"\nassert solution(\"5\\n2 3 4 3\") == \"9\\n\"\nassert solution(\"7\\n2 3 4 3\") == \"10\\n\"\nassert solution(\"10\\n2 3 4 3\") == \"19\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '7\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\\n\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\", \"Test Failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n5 6\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n5 6\\n7 8\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n5 6\\n7 8\\n9 10\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 106,
        "num_ids_4": 225
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.000 0.000\\n2.000 2.000\\n0.000 4.000\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.000 0.000\\n2.000 2.000\\n0.000 4.000\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.000 0.000\\n2.000 2.000\\n0.000 4.000\"",
        "num_ids_2": 126,
        "num_ids_4": 189
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0.1 0.1\\n1.0 1.0\\n0.0 2.0\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n-1 -2\\n1 3\\n0 4\\n\") == \"-1.0 -2.0\\n1.0 1.0\\n0.0 0.0\\n4.0 4.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 243
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''\n0.0 0.0\n2.0 2.0\n0.0 4.0\n'''\n\nassert solution('''\n3\n0.0 0.0\n1.0 1.0\n0.0 2.0\n4\n''') == '''\n1.0 1.0\n0.0 2.0\n4.0 0.0\n'''\n\nassert solution('''\n3\n0.0001 0.0001\n1.0001 1.0001\n0.0002 2.0002\n4\n''') == '''\n0.9999 1.0000\n2.0000 2.0000\n0.9999 3.9999\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0.2 0.2\\n1.2 1.2\\n0.2 2.2\\n4\\n\") == \"0.2 0.2\\n1.2 1.2\\n0.2 2.2\\n4.0 2.0\\n\"\nassert solution(\"3\\n1.5 -1.5\\n-0.5 -0.5\\n-1.5 -1.5\\n4\\n\") == \"1.5 1.5\\n-0.5 -0.5\\n-1.5 -1.5\\n4.0 2.0\\n\"\n",
        "num_ids_2": 133,
        "num_ids_4": 214
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"10\\n\") == \"1\\n\"\nassert solution(\"100\\n\") == \"2\\n\"\nassert solution(\"1000\\n\") == \"2\\n\"\nassert solution(\"10000\\n\") == \"4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output '{expected_output}', but got '{solution(input())}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10001\") == \"1\"\nassert solution(\"10002\") == \"1\"\nassert solution(\"10003\") == \"1\"\nassert solution(\"10004\") == \"1\"\nassert solution(\"10005\") == \"1\"\nassert solution(\"10006\") == \"1\"\nassert solution(\"10007\") == \"1\"\nassert solution(\"10008\") == \"1\"\nassert solution(\"10009\") == \"1\"\nassert solution(\"10010\") == \"1\"\nassert solution(\"10011\") == \"1\"\nassert solution(\"10012\") == \"1\"\nassert solution(\"10013\") == \"1\"\nassert solution(\"10014\") == \"1\"\nassert solution(\"10015\") == \"1\"\nassert solution(\"10016\") == \"1\"\nassert solution(\"10017\") == \"1\"\nassert solution(\"10018\") == \"1\"\nassert solution(\"10019\") == \"1\"\nassert solution(\"10020\") == \"1\"\nassert solution(\"10021\") == \"1\"\nassert solution(\"10022\") == \"1\"\nassert solution(\"10023\") == \"1\"\nassert solution(\"10024\") == \"1\"\nassert solution(\"10025\") == \"1\"\nassert solution(\"10026\") == \"1\"\nassert solution(\"10027\") == \"1\"\nassert solution(\"10028\") == \"1\"\nassert solution(\"10029\") == \"1\"\nassert solution(\"10030\") == \"1\"\nassert solution(\"10031\") == \"1\"\nassert solution(\"10032\") == \"1\"\nassert solution(\"10033\") == \"1\"\nassert solution(\"10034\") == \"1\"\nassert solution(\"10035\") == \"1\"\nassert solution(\"10036\") == \"1\"\nassert solution(\"10037\") == \"1\"\nassert solution(\"10038\") == \"1\"\nassert solution(\"10039\") == \"1\"\nassert solution(\"10040\") == \"1\"\nassert solution(\"10041\") == \"1\"\nassert solution(\"10042\") == \"1\"\nassert solution(\"10043\") == \"1\"\nassert solution(\"10044\") == \"1\"\nassert solution(\"10045\") == \"1\"\nassert solution(\"10046\") == \"1\"\nassert solution(\"10047\") == \"1\"\nassert solution(\"10048\") == \"1\"\nassert solution(\"10049\") == \"1\"\nassert solution(\"10050\") == \"1\"\nassert solution(\"10051\") == \"1\"\nassert solution(\"10052\") == \"1\"\nassert solution(\"10053\") == \"1\"\nassert solution(\"10054\") == \"1\"\nassert solution(\"10055\") == \"1\"\nassert solution(\"10056\") == \"1\"\nassert solution(\"10057\") == \"1\"\nassert solution(\"10058\") == \"1\"\nassert solution(\"10059\") == \"1\"\nassert solution(\"10060\") == \"1\"\nassert solution(\"10061\") == \"1\"\nassert solution(\"10062\") == \"1\"\nassert solution(\"10063\") == \"1\"\nassert solution(\"10064\") == \"1\"\nassert solution(\"10065\") == \"1\"\nassert solution(\"10066\") == \"1\"\nassert solution(\"10067\") == \"1\"\nassert solution(\"10068\") == \"1\"\nassert solution(\"10069\") == \"1\"\nassert solution(\"10070\") == \"1\"\nassert solution(\"10071\") == \"1\"\nassert solution(\"10072\") == \"1",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution.__code__.co_argcount == 1\nsolution = solution.func_code.co_varnames[0]",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\\n\") == \"34\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    3 1\n    12 16\n    0 0\n    2 2\n    2 3\n    '''\n) == '34'\nassert solution(\n    '''\n    1 1\n    1 2\n    1 3\n    1 4\n    2 2\n    2 3\n    3 4\n    '''\n) == '64'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '34'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"34\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Input:\\n3 1\\n12 16\\nSample Output:\\n34\") == \"34\\n\"\nassert solution(\"3 1\\n2 2\\nSample Input:\\n3 1\\n2 2\\nSample Output:\\n14\") == \"14\\n\"\nassert solution(\"5 1\\n2 2\\nSample Input:\\n5 1\\n2 2\\nSample Output:\\n10\") == \"10\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n12 16') == '34'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\") == \"34\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"3\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 1\\n\") == \"3\"\nassert solution(\"4\\n1 1 2 1\\n\") == \"3\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"4\\n1 2 3 2\\n\") == \"2\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"4\\n1 2 2 2\\n\") == \"1\"\nassert solution(\"4\\n1 2 3 3\\n\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 3\nprint(\"All tests passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nassert solution(\"5\\n2 1 2 3 1\") == 2\nassert solution(\"6\\n3 3 2 1 2\") == 1\nassert solution(\"7\\n1 3 2 1 2 3\") == 1\nassert solution(\"8\\n2 1 1 2 2 2\") == 2\nassert solution(\"9\\n1 1 3 1 2 3\") == 2\nassert solution(\"10\\n1 2 3 2 1 3\") == 3\nassert solution(\"11\\n1 2 2 1 3 3\") == 3\nassert solution(\"12\\n2 2 1 2 1 3\") == 3\nassert solution(\"13\\n2 1 2 1 1 3\") == 3\nassert solution(\"14\\n1 3 1 1 1 3\") == 3\nassert solution(\"15\\n2 2 2 1 1 3\") == 3\nassert solution(\"16\\n2 1 1 1 1 3\") == 3\nassert solution(\"17\\n3 3 1 1 1 3\") == 3\nassert solution(\"18\\n1 2 3 3 1 1\") == 3\nassert solution(\"19\\n3 1 3 1 1 1\") == 3\nassert solution(\"20\\n3 3 3 1 1 1\") == 3\nassert solution(\"21\\n3 3 3 2 1 1\") == 3\nassert solution(\"22\\n3 3 3 2 2 1\") == 3\nassert solution(\"23\\n1 3 3 2 2 1\") == 3\nassert solution(\"24\\n1 3 3 3 1 1\") == 3\nassert solution(\"25\\n2 3 3 3 1 1\") == 3\nassert solution(\"26\\n3 2 3 3 1 1\") == 3\nassert solution(\"27\\n3 3 2 3 1 1\") == 3\nassert solution(\"28\\n1 3 3 2 3 1\") == 3\nassert solution(\"29\\n3 3 3 3 1 1\") == 3\nassert solution(\"30\\n1 3 3 3 2 1\") == 3\nassert solution(\"31\\n2 3 3 3 2 1\") == 3\nassert solution(\"32\\n3 2 3 3 2 1\") == 3\nassert solution(\"33\\n3 3 2 3 2 1\") == 3\nassert solution(\"34\\n1 3 3 3 3 1\") == 3\nassert solution(\"35\\n2 3 3 3 3 1\") == 3\nassert solution(\"36\\n3 2 3 3 3 1\") == 3\nassert solution(\"37\\n3 3 2 3 3 1\") == 3\nassert solution(\"38\\n1 3 3 3 3 2\") == 3\nassert solution(\"39\\n2 3 3 3 3 2\") == 3\nassert solution(\"40\\n3 2 3 3 3 2\") == 3\nassert solution(\"41\\n3 3 2 3 3 2\") == 3\nassert solution(\"42\\n1 3 3 3 3 3\") == 3\nassert solution(\"43\\n2 3 3 3 3 3\") == 3\nassert solution(\"44\\n3 2 3 3 3 3\") == 3\nassert solution(\"45\\n3 3 2 3 3 3\") == 3\nassert solution(\"46\\n1 3 3 3 3 3 1\") == 3\nassert solution(\"47\\n2 3 3 3 3 3 1\") == 3\nassert solution(\"48\\n3 2 3 3 3 3 1\") == 3",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 1') == 3\nassert solution('4\\n2 2 1 3') == 2\nassert solution('4\\n2 2 1 1') == 1\nassert solution('4\\n1 1 1 1') == 0",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 1\") == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 1\\n4\\n1 2 3 1\") == 3\nassert solution(\"5\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\") == 6\nassert solution(\"5\\n1 2 3 1\\n2 3 1 1\\n3 1 1 1\\n4 1 1 1\") == 5\nassert solution(\"5\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\") == 5\nassert solution(\"5\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\") == 4\n",
        "num_ids_2": 72,
        "num_ids_4": 162
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 1\\n\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1.0) == 1088\nprint(1.0)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.0\") == 1088, \"Incorrect output: Should be 1088\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == 1088, \"Solution should return 1088, but it returned {}\".format(solution(\"1.0\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1.0\") == 1088",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1.0) == 1088, \"Test case 1 failed\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.0\") == \"1088\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1.0) == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1.0) == 1088, \"The correct answer is 1088, but it's: {}\".format(solution(1.0))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 4\\nSample Output:25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 4\\n' + '5 10 15 20\\n' + '150 0 0 0\\n' + '200 0 0 0\\n') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\nassert solution('0 4\\n' + '5 10 15 20\\n' + '150 0 0 0\\n' + '200 0 0 0\\n') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\nassert solution('0 4\\n' + '5 10 15 20\\n' + '150 0 0 0\\n' + '200 0 0 0\\n') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\nassert solution('0 4\\n' + '5 10 15 20\\n' + '150 0 0 0\\n' + '200 0 0 0\\n') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\n",
        "num_ids_2": 220,
        "num_ids_4": 440
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n0 4\nSample Output:\n25.000000000\n25.000000000\n25.000000000\n25.000000000\n''') == '25.000000000'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 4\\nSample Input\\nSample Output\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 4\\n1 2 3 4\\n2 5 6 7\\n3 8 9 10\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n', 'Your solution is incorrect.'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 4\\n1 2 3 4\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7') == 'DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ninput = stdin.readlines()\\nN, W, H = map(int, input[0].split())\\nmatches = []\\nfor _ in range(N):\\n    length = int(input[i+1])\\n    if length <= W and length <= H:\\n        matches.append(length)\\nfor i in range(N):\\n    match = int(input[i+1])\\n    if match not in matches:\\n        matches.append(match)\\n\\nfor match in matches:\\n    print(\\\"\\\".join([\\\"DA\\\", \\\"NE\\\" if match not in matches else \\\"NE\\\", \\\"\\\"]))'\n",
        "num_ids_2": 199,
        "num_ids_4": 199
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nprint(solution(\\'5 3 4\\n3\\n4\\n5\\n6\\n7\\n\\'))\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"DA\"\nassert solution(2) == \"DA\"\nassert solution(1) == \"NE\"\nassert solution(2) == \"NE\"\nassert solution(3) == \"NE\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"DA\"\nassert solution(input()) == \"DA\"\nassert solution(input()) == \"NE\"\nassert solution(input()) == \"NE\"\nassert solution(input()) == \"NE\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"DA\"\nassert solution() == \"DA\"\nassert solution() == \"DA\"\nassert solution() == \"NE\"\nassert solution() == \"NE\"\nassert solution() == \"NE\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Your solution is not correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3, 4) == \"DA\\nDA\\nDA\\nNE\\nNE\\n\"\nassert solution(5, 1000, 1000) == \"DA\\nDA\\nDA\\nDA\\nNE\\nNE\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 3, 4) == 'DA'\nassert solution(3) == 'DA'\nassert solution(4) == 'DA'\nassert solution(5) == 'DA'\nassert solution(6) == 'NE'\nassert solution(7) == 'NE'",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 0\\n7 42\\n10 30\\n12 20\\n15 15\\n20 10\\n25 5\\n30 0\\n35 0\\n\") == \"6\"\nassert solution(\"1\\n0 0\\n7 42\\n\") == \"Invalid input\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, \"Test case failed.\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 6, \"Incorrect implementation of the solution.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '6\\n'  # Add your code here",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == 6, \"The output should be 6.\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 6, \"Incorrect Output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == \"6\"\nassert solution(\"2\\n0 0\\n7 42\\n\") == \"6\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"6\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\"\n) == \"correct\"\n\nassert solution(\n    \"3\\n-> ALICE\\n-> BOB\\n-> CARL\\nALICE BOB -> ALICE\"\n) == \"1\"\n\nassert solution(\n    \"3\\n-> ALICE\\n-> BOB\\n-> CARL\\nA BOB -> ALICE\"\n) == \"2\"\n\nassert solution(\n    \"3\\n-> ALICE\\n-> BOB\\n-> CARL\\nA BOB -> BOB\"\n) == \"correct\"\n\nassert solution(\n    \"3\\n-> ALICE\\n-> BOB\\n-> CARL\\nA BOB -> BOB ALICE\"\n) == \"1\"\n\nassert solution(\n    \"3\\n-> ALICE\\n-> BOB\\n-> CARL\\nA BOB -> ALICE BOB\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"correct\"\nassert solution() == \"correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Solution is incorrect. Expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'correct'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"3\\n-> Alice\\n-> Bob\\nALICE Bob -> Carl\\n\") == \"correct\\n1\\n\"\nassert solution(b\"5\\n-> A\\n-> B\\n-> C\\n-> D\\nALICE A B -> C D\\n\") == \"correct\\n5\\n\"\nassert solution(b\"1\\n-> 1\\n-> 1\\n-> 1\\n-> 1\\nALICE 1 1 1 1 1 -> A\\n\") == \"correct\\n1\\n\"\n",
        "num_ids_2": 79,
        "num_ids_4": 134
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"correct\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"correct\", \"The output should be 'correct'\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Connie Froggatt\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Connie Froggatt\"\nassert solution(input()) == \"Runoff!\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nBruce Stanger'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Marti Graham\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Runoff!\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Bruce Stanger\") == \"Runoff!\"\nassert solution(\"Barbara Skinner\") == \"Runoff!\"\nassert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Barbara Skinner\") == \"Runoff!\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''Bruce Stanger\n***''') == 'Runoff!'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Runoff!\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"\nassert solution(\"***\") == \"Runoff!\"\nassert solution(\"Hi John\") == \"Runoff!\"",
        "num_ids_2": 99,
        "num_ids_4": 111
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Please see the example input and the expected output.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '3\\n'\nassert solution(input()) == '5\\n'\nassert solution(input()) == '8\\n'\nassert solution(input()) == '12\\n'\nassert solution(input()) == '13\\n'\nassert solution(input()) == '26\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2', \"Your solution is incorrect.\"\nprint(\"Correct!\")",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\\n\"\nassert solution(\"10\\nAlice-in-wonderland Phoenix\\nEve-mad-Scientist Ernst Wenzel\\nBoba-Fett Basic Huttese\\nCharlie-Galactic-Empire Erika Parker\\nDelta-the-Empire Darth Vader\\nEve-mad-Scientist Ernst Wenzel\\nFran-Galactic-Empire Luke Skywalker\\nGrace-Hopper Elias Kubrick\\nHelios-Galactic-Empire Jedi Knight\\nIan-Galactic-Empire Chewie Gwen\\nIsaac-in-Space Jabba-The-Hutt\\nKenobi-in-Space Padm\u00e9 Ferri\\nLeia-in-Space Obi-Wan Kenobi\\nLuke-in-Space Qui-Gon Jedi Knight\\nMace-in-Space Luke Skywalker\\nNed-in-Space Darth Vader\\nPietro-Galactic-Empire Sarah Naboo\\nQui-Gon Jedi Knight\\nRey-in-Space Leia Organa\\nSam-in-Space Jabba-The-Hutt\\nTarkin-Galactic-Empire Luke Skywalker\\nThe-Empire-Star-Wars Eve\\nTony-in-Space Eve Mad Scientist\\nVader-in-Space Palpatine\\nWedge-in-Space Darth Vader\\nZach-in-Space Chewbacca Hutt\\n\") == \"1\\n\"",
        "num_ids_2": 470,
        "num_ids_4": 470
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\n\"\n\nprint(\"All assertions passed.\")",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The output should be 2.\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\\n\"\n\nassert solution(r\"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\nMara-Ven-Yorith Huttese\nDarth-Vader Shyriiwook\nDarth-Sara Basic\nDarth-Vader Shyriiwook\nDarth-Vader Shyriiwook\nDarth-Vader Shyriiwook\nDarth-Vader Shyriiwook\nDarth-Vader Shyriiwook\n\"\"\") == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input)}\" for input, expected_output in [\n    ('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic', '2'),\n]",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == 900\nprint(\"All tests passed\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"900\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1000, 2, 3) == \"900\"  # Test case 1\nassert solution(3, 1000, 2, 3) == \"stay home\"  # Test case 2\nassert solution(3, 1000, 2, 3) == \"stay home\"  # Test case 3\nassert solution(3, 1000, 2, 3) == \"900\"  # Test case 4\nassert solution(3, 1000, 2, 3) == \"stay home\"  # Test case 5",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"900\" # expected output\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"stay home\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\\n\"\nassert solution(\"10\\nA C C D E F F G A \") == \"A C D E F G A\\n\"\nassert solution(\"10\\nC D F D C D F F F C D \") == \"A# C D# F\\n\"\nassert solution(\"10\\nC C C E F F G A C \") == \"A C C E F G A\\n\"\nassert solution(\"10\\nE F F G A C D D E \") == \"A# B C# D# E\\n\"\nassert solution(\"10\\nC B A F F G B C \") == \"A# C B D E F G A\\n\"\nassert solution(\"10\\nF G A C D D E F \") == \"A# C C# D# E F\\n\"\nassert solution(\"10\\nA# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nE G# A F# G# B A# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nF G# A C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nG# A C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nA# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nC# B A F# G# B C# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nD# C# D F# G# A# A# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nE# D# F# G# A# A# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nF# G# A# C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nG# A# C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nA# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nE# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nF# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nG# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nC# B A F# G# B C# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nD# C# D F# G# A# A# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nE# D# F# G# A# A# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nF# G# A# C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nG# A# C# D# E F# F# \") == \"A# C B D E F G# A#\\n\"\nassert solution(\"10\\nA# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"10\\nE# A# B C# D# E F# F# \") == \"A# B C# D# E F# F#\\n\"\nassert solution(\"1",
        "num_ids_2": 59,
        "num_ids_4": 120
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nC D F D C D F F F C\") == \"A# C D# F\"\nassert solution(\"8\\nC D F D C D F F F C C D E F F F G A A A B A\\nD E F F F G A A A B A\") == \"A# C D# F\"\nassert solution(\"12\\nC D F D C D F F F C D E F F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F G A A A B A C D F G A A A B A C D E G F F",
        "num_ids_2": 80,
        "num_ids_4": 1027
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"A# C D# F\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Error in solution: {solution(sample_input)}!= {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nC D F D C D F F F C') == 'A# C D# F'\nassert solution('15\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F'\nassert solution('20\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('25\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('30\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('35\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('40\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('45\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('50\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('55\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('60\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('65\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('70\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F'\nassert solution('75\\nC D F D C D F F F C') == 'A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A# C D# F G# A",
        "num_ids_2": 64,
        "num_ids_4": 160
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"A# C D# F\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'def solution(stdin: str) -> str:\\n\\tpass\\n', \"The solution is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\", \"Test failed for solution.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"defg hijlmn\") == \"haer talar vi rikssvenska\"\nassert solution(\"takal takal takal\") == \"daare ju talar du rikssvenska\"\nassert solution(\"\u00e4i\u00f6\u00fc\") == \"daare ju talar du rikssvenska\"\nassert solution(\"\u00e5\u00e4\u00f6\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"def\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra s\u00f6\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tra\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6l\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6lig\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6ligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt tal\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt talig\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligt vad\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligt vad\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4v\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6l\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6lig\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6ligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt tal\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt talig\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt taligt\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt taligt vad\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt taligt vad\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt taligta\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4v\u00e4ra ju tr\u00e6rligt taligta vad j\u00e4vju tr\u00e6rligt tal",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"foo bar baz\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4rlig att g\u00e5\") == \"dae ae ju traeligt va\"\nassert solution(\"allas alas i s\u00e5dan\") == \"def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"\u00f6stg\u00f6tska haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00f6stg\u00f6tska haer talar vi\") == \"haer talar vi\"\nassert solution(\"\u00f6stg\u00f6tska haer talar\") == \"haer talar\"\nassert solution(\"\u00f6stg\u00f6tska haer\") == \"haer\"",
        "num_ids_2": 55,
        "num_ids_4": 99
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"def\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e5\u00e4\u00f6\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00fc\u00ef\u00f6\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e5\u00e4\u00f6\u00e4\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e5\u00e4\u00f6\u00e4\u00e4\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 94
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"dae ae ju traeligt va\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == '''\nE..E#.\n..E.#E\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed with input {input()} and output {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"E..E#.\n..E.#E\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#E.E.#E.E#E..E..E..E#E..E..E..E#E..E.E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 6\n    ....#.\n    ....#.\n    #.....\n    ......\n    ##...#\n''') == '''\nE..E#.\n..E.#E\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#\\n..E.#E..E.#E..E.#E..E.#E..E#\\n#..E..#..E..#..E..#..E..#..E..\\n.E...E..E...E..E...E...E..E..\\n##E.E#..##E.E#..##E.E#..##E.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#\\n..E.#E..E.#E..E.#E..E.#E..E#\\n#..E..#..E..#..E..#..E..#..E..\\n.E...E..E...E..E...E...E..E..\\n##E.E#..##E.E#..##E.E#..##E.\\n'",
        "num_ids_2": 277,
        "num_ids_4": 277
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'E..E#.\n..E.#E\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"7 2 6 20 15 18 22 19\") == \"20 19 18 15 12 7\"\nassert solution(\"15 20 10 15 25 15 20 20\") == \"15 20 20 20 15 15\"\nassert solution(\"30 10 40 20 10 30 40 50\") == \"50 40 30 20 10 30\"",
        "num_ids_2": 84,
        "num_ids_4": 180
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '12 10 3 8 4 2', 'Expected \"12 10 3 8 4 2\" but got \"{}\"'.format(solution(input()))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Incorrect output.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 1 failed\"\n\nassert solution(\"25 4 22 17 15 23 4 30 18\") == \"23 15 22 4 2 30 18\", \"Test case 2 failed\"\n\nassert solution(\"19 5 20 21 16 9 12 7 15\") == \"15 12 9 16 5 19 17 15 21\", \"Test case 3 failed\"\n\nassert solution(\"6 12 3 10 8 11 9 5 4\") == \"10 8 5 12 4 6 11 10 11\", \"Test case 4 failed\"\n\nassert solution(\"10 10 10 10 10 10 10 10 10\") == \"10 10 10 10 10 10 10 10 10\", \"Test case 5 failed\"",
        "num_ids_2": 104,
        "num_ids_4": 223
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"The output should be '12 10 3 8 4 2'.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 1 failed\"\nassert solution(\"100 80 50 20 10 30 25 14\") == \"100 100 50 50 10 30\", \"Test case 2 failed\"\nassert solution(\"75 100 50 25 10 35 20 15\") == \"100 100 50 50 10 35\", \"Test case 3 failed\"\nassert solution(\"100 100 100 100 100 100 100 100\") == \"100 100 100 100 100 100\", \"Test case 4 failed\"\nassert solution(\"80 100 70 30 15 25 20 10\") == \"100 100 50 50 10 30\", \"Test case 5 failed\"",
        "num_ids_2": 105,
        "num_ids_4": 232
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test Case 1 Failed\"\n\nassert solution(\"3 5 7 9 11 13 15 17\") == \"15 11 9 5 3 1\", \"Test Case 2 Failed\"\n\nassert solution(\"1 3 5 7 9 11 13 15\") == \"15 11 9 5 3 1\", \"Test Case 3 Failed\"\n\nassert solution(\"2 4 6 8 10 12 14 16\") == \"16 12 10 8 6 4 2 1\", \"Test Case 4 Failed\"\n\nassert solution(\"1 3 5 7 9 11 13 15\") == \"15 11 9 5 3 1\", \"Test Case 5 Failed\"\n\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15 11 9 5 3 1 12 10 8 6 4 2\", \"Test Case 6 Failed\"\n\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15 11 9 5 3 1 12 10 8 6 4 2\", \"Test Case 7 Failed\"\n\nassert solution(\"12 10 3 8 4 2\") == \"12 10 3 8 4 2\", \"Test Case 8 Failed\"\n\nassert solution(\"10 8 6 4 2 1\") == \"10 8 6 4 2 1\", \"Test Case 9 Failed\"\n\nassert solution(\"10 9 7 5 3 1\") == \"10 9 7 5 3 1\", \"Test Case 10 Failed\"",
        "num_ids_2": 94,
        "num_ids_4": 192
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test 1\"\nassert solution(\"2 12 3 4 8 10 5 25\") == \"12 2 4 3 5 8 10\", \"Test 2\"\nassert solution(\"12 12 12 12 12 12 12 12\") == \"12 12 12 12 12 12 12 12\", \"Test 3\"\nassert solution(\"2 2 2 2 2 2 2 2\") == \"2 2 2 2 2 2 2 2\", \"Test 4\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"1 1 1 1 1 1 1 1\", \"Test 5\"",
        "num_ids_2": 91,
        "num_ids_4": 193
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\", \"The correct output should be 4.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 0 3\") == 4",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 0 3\\n\") == \"4\"\nassert solution(\"10 5 7\\n\") == \"11\"\nassert solution(\"15 2 8\\n\") == \"20\"\nassert solution(\"15 20 25\\n\") == \"20\"\nassert solution(\"1000 0 0\\n\") == \"0\"\nassert solution(\"5 500 100\\n\") == \"1500\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 0 3\") == 4, \"Your solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 0 3\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 0 3\") == 4\nassert solution(\"100 0 1\") == 2\nassert solution(\"10 50 50\") == 0\nassert solution(\"50 100 0\") == 2\nassert solution(\"0 100 0\") == 0",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == 12",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1010') == '12'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\", \"The solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko needs to convert binary to octal to verify his results.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1010') == '12'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko is learning about different numeral systems.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 12\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1010') == '12', \"Slavko's solution is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Your solution is incorrect\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"2\", \"Your code is not correct\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\nassert solution(\"3 3\\n..o\\no..\") == \"2\"\nassert solution(\"5 4\\n..o\\no..\") == \"2\"\nassert solution(\"5 5\\n..o\\no..\") == \"3\"\nassert solution(\"1 1\\n..o\\no..\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\\n\", \"The correct answer is 2.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2\n\nprint(\"All tests passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'\nassert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'\nassert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'",
        "num_ids_2": 118,
        "num_ids_4": 177
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"3 3\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Wrong output: {solution(sample_input)}\"\n\nsample_input = \"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\"\nsample_output = \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"LADICA\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input {sample_input}, expected output {sample_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\"\"1 2\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 2\\n\", \"Test case 1 failed.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0\") == \"1\\n2\"\nassert solution(\"3\\n1 2\") == \"1\\n2\\n3\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"5\\n2 3 4 5 6\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"6\\n2 3 4 5 6 7 8 9 10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"7\\n3 4 5 6 7 8 9 10 11 12 13 14\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\"\nassert solution(\"8\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\"\nassert solution(\"9\\n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\"\nassert solution(\"10\\n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\"\nassert solution(\"11\\n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"1\\n2\\n3\\n4",
        "num_ids_2": 37,
        "num_ids_4": 101
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nassert len(solution.splitlines()) == 5\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n0\\n') == '1 2\\n'\nassert solution('2\\n1 2\\n1 2\\n') == '1 2\\n'\nassert solution('3\\n1 3\\n2 1\\n') == '2 3\\n'\nassert solution('4\\n2 1\\n3 1\\n4 2\\n') == '2 3\\n'\nassert solution('5\\n2 3\\n3 1\\n1 4\\n') == '1 4\\n'",
        "num_ids_2": 48,
        "num_ids_4": 105
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''1 2'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0\\n0\") == \"1 2\\n\"\nassert solution(\"3\\n1\\n2\\n3\") == \"1 3 2\\n\"\nassert solution(\"2\\n1\\n1\\n2\") == \"1 2\\n\"\nassert solution(\"4\\n3\\n2\\n1\") == \"1 2 3 4\\n\"\nassert solution(\"6\\n1\\n5\\n3\\n2\\n4\\n6\") == \"1 2 3 4 5 6\\n\"\nassert solution(\"7\\n1\\n6\\n5\\n4\\n3\\n2\\n7\") == \"1 2 3 4 5 6 7\\n\"\nassert solution(\"10\\n1\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n10\") == \"1 2 3 4 5 6 7 8 9 10\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, got {solution(input_string)}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\"\"\"\n) == \"1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed: Expected output: {expected_output}, Received output: {solution(input_string)}\" for input_string, expected_output in [\n    (input_string, expected_output)\n    for input_string, expected_output in [\n        (\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\", \"1\"),\n        (\"5 4 3\\n2 4 5\\n1 3\", \"2\"),\n        (\"2 1 3\\n3 2 4\\n4 3\", \"3\"),\n    ]\n]",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nprint(\"All test cases passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1\\n'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    6 3 5\n    0 5 2\n    0 1\n    1 2\n    4 5\n    3 5\n    0 2\n''') == '1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1\\n'\n\nfrom collections import defaultdict",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed for input '{input}', expected '{output}'.\" for input, output in zip(stdin, output)\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 4 3 2 1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6 5 4 3 2 1\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7 6 5 4 3 2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"11 10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12 11 10 9 8 7 6 5 4 3 2\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"13 12 11 10 9 8 7 6 5 4 3\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14 13 12 11 10 9 8 7 6 5\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15 14 13 12 11 10 9 8 7 6\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"16 15 14 13 12 11 10 9 8 7\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"17 16 15 14 13 12 11 10 9 8\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"18 17 16 15 14 13 12 11 10 9\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"19 18 17 16 15 14 13 12 11 10\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"20 19 18 17 16 15 14 13 ",
        "num_ids_2": 54,
        "num_ids_4": 126
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4 3 1\", \"The solution is incorrect. Please check the solution.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 4') == '4 3 1'\nassert solution('5\\n2 4 5 6') == '6 5 4 2'\nassert solution('7\\n3 4 5 6 7') == '7 6 5 4 3'\nassert solution('8\\n3 5 6 7 8') == '8 7 6 5 3'\nassert solution('9\\n3 6 7 8 9') == '9 8 7 6 3'\nassert solution('10\\n4 5 6 7 8 9') == '10 9 8 7 6 4'\nassert solution('11\\n4 6 7 8 9 10') == '10 9 8 7 6 4'\nassert solution('12\\n4 7 8 9 10 11') == '11 10 9 8 7 4'\nassert solution('13\\n4 8 9 10 11 12') == '12 11 10 9 8 4'\nassert solution('14\\n4 9 10 11 12 13') == '13 12 11 10 9 4'\nassert solution('15\\n5 6 7 8 9 10') == '10 9 8 7 6 5'\nassert solution('16\\n5 7 8 9 10 11') == '11 10 9 8 7 5'\nassert solution('17\\n5 8 9 10 11 12') == '12 11 10 9 8 5'\nassert solution('18\\n5 9 10 11 12 13') == '13 12 11 10 9 5'\nassert solution('19\\n6 7 8 9 10 11') == '11 10 9 8 7 6'\nassert solution('20\\n6 8 9 10 11 12') == '12 11 10 9 8 6'\nassert solution('21\\n6 9 10 11 12 13') == '13 12 11 10 9 6'\nassert solution('22\\n7 8 9 10 11 12') == '12 11 10 9 8 7'\nassert solution('23\\n7 9 10 11 12 13') == '13 12 11 10 9 7'\nassert solution('24\\n7 10 11 12 13 14') == '14 13 12 11 10 7'\nassert solution('25\\n8 9 10 11 12 13') == '13 12 11 10 9 8'\nassert solution('26\\n8 10 11 12 13 14') == '14 13 12 11 10 8'\nassert solution('27\\n8 11 12 13 14 15') == '15 14 13 12 11 8'\nassert solution('28\\n8 12 13 14 15 16') == '16 15 14 13 12 8'\nassert solution('29\\n9 10 11 12 13 14') == '14 13 12 11 10 9'\nassert solution('30\\n9 11 12 13 14 15') == '15 14 13 12 11 9'\nassert solution('31\\n9 12 13 14 15 16') == '16 15 14 13 ",
        "num_ids_2": 46,
        "num_ids_4": 104
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3\\n1 3 4\\n') == '4 3 1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"4 3 1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"18.400\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"18.400\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\n\nfrom functools import reduce",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 20 15\\n3 10') == '18.4'\nassert solution('5 30 100\\n1 20 50') == '480.0'\nassert solution('1 5 200') == '550.0'\nassert solution('1 1 1') == '1.0'\nassert solution('2 2 2') == '2.0'\nassert solution('3 3 3') == '3.0'\nassert solution('4 4 4') == '4.0'\nassert solution('5 5 5') == '5.0'\nassert solution('6 6 6') == '6.0'\nassert solution('7 7 7') == '7.0'\nassert solution('8 8 8') == '8.0'\nassert solution('9 9 9') == '9.0'\nassert solution('10 10 10') == '10.0'\nassert solution('11 11 11') == '11.0'\nassert solution('12 12 12') == '12.0'\nassert solution('13 13 13') == '13.0'\nassert solution('14 14 14') == '14.0'\nassert solution('15 15 15') == '15.0'\nassert solution('16 16 16') == '16.0'\nassert solution('17 17 17') == '17.0'\nassert solution('18 18 18') == '18.0'\nassert solution('19 19 19') == '19.0'\nassert solution('20 20 20') == '20.0'",
        "num_ids_2": 55,
        "num_ids_4": 91
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Your solution here\"\n\nimport math",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 20 15\") == \"18.400\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 20 15\n3 10\n\"\"\") == \"18.400\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Expected output: 5, but got: {}.\".format(solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\"))\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '5\\n'\nassert solution('6\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '5\\n'\nassert solution('7\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '4\\n'\nassert solution('8\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '4\\n'\nassert solution('9\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '4\\n'\nassert solution('10\\n....H\\.....\\nS....\\n....H\\.....\\n.....\\n') == '4\\n'",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"The output is not correct.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n   ....H\n  .....\n    S....\n   ....H\n  .....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    5\n    H...\n    H.H.\n    H.H.\n    H.H.\n    H...\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    5\n    H...\n    H..H\n    H..H\n    H..H\n    H...\n    \"\"\"\n) == 4\n\nassert solution(\n    \"\"\"\n    5\n    H...\n    H..H\n    H..H\n    H..H\n    H..H\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n   ....H\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 6\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    6\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    H....\n    \"\"\"\n) == 5\n\nassert solution(",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Your solution is wrong!\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n\nassert solution(\nr'''\n4 1 2 3\n2 4\n1 3 5\n''') == '0'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '1'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '2'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '2'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '3'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '3'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '3'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '3'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '4'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'\n\nassert solution(\nr'''\n5 2 3\n2 4\n1 3 6\n''') == '5'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0\n\nassert solution(\"1 2 3\\n2 3\") == 1\n\nassert solution(\"5 2 3\\n2 4\\n1 3 5\\n5 6 7\\n3 4 5 6\") == 2\n\nassert solution(\"5 2 3\\n2 4\\n1 3 5\\n5 6 7\\n3 4 5 6\\n5 8 9\\n4 6 7 8 9\") == 4",
        "num_ids_2": 43,
        "num_ids_4": 143
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution failed for input {input()}, expected output {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == 0.000000000\nassert solution(\"1 1\") == 0.000000000\nassert solution(\"1 1\") == 0.000000000\nassert solution(\"1 1\") == 0.000000000\nassert solution(\"1 1\") == 0.000000000",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 1\") == 0.000000000",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1') == 0.000000000\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.000000000\\n\"\nassert solution(\"1 1\") == \"0.000000000\\n\"\nassert solution(\"2 3\") == \"0.000000000\\n\"\nassert solution(\"1 4\") == \"0.000000000\\n\"\nassert solution(\"100 100\") == \"100.000000000\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"\nassert solution(stdin=\"4\\n100 101 102 103 488\\n100 200 300 101 102\\n100 200 300 101 102\\n100 200 300 101 102\\n\") == \"4\\n\"",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\\n\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2', \"Test Case 1 Failed\"\n\nassert solution('5\\n100 101 102 103 104 488\\n100 200 300 400 500\\n103 102 101 104 100\\n100 200 300 400 101\\n102 101 100 104 100') == '3', \"Test Case 2 Failed\"\n\nassert solution('2\\n100 101 102\\n100 200 300\\n103 102 101\\n100 200 300\\n102 101 100') == '3', \"Test Case 3 Failed\"\n\nassert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 200 300 101 102\\n103 102 101 488 100') == '2', \"Test Case 4 Failed\"\n\nassert solution('4\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 200 300 101 102\\n103 102 101 488 100\\n100 200 300 101 102\\n103 102 101 488 100\\n100 200 300 101 102\\n103 102 101 488 100') == '1', \"Test Case 5 Failed\"",
        "num_ids_2": 206,
        "num_ids_4": 410
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2\\n'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, \"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == 2\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1730') == '1729'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1729\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1730\") == \"1729\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1730\") == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1729\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1729\\n\", \"The output is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1730\") == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1730\") == \"1729\\n\", \"Input error\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1729\\n\", \"Test case 1 passed.\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1730\") == \"1729\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(123456) == \"16\", \"Test failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number: \")) == \"Enter the number: 65536\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'\nassert solution('12345') == '0'\nassert solution('0') == '0'\nassert solution('5') == '1'\nassert solution
        "num_ids_2": 29,
        "num_ids_4": 49
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(65536) == '16'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(65536) == '16'\nprint('All tests passed!')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(65536) == 16\nassert solution(1000) == 8\nassert solution(10000000) == 400\nassert solution(1000000000) == 1000000\nassert solution(1000000000000) == 1000000000\n",
        "num_ids_2": 26,
        "num_ids_4": 68
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65536\") == \"16\\n\", \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5000) == \"16\", \"Test Case 1: Solution should return 16.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\ndef solution(stdin: str) -> str:\\n    return '2'\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Actual: {solution(input())}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([4, '....', '....', '....', '...K']) == 2\nprint(solution([4, '....', '....', '....', '...K']))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\" # pass\nassert solution(\"5\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"2\" # pass\nassert solution(\"6\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"4\" # pass\nassert solution(\"7\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"2\" # pass\nassert solution(\"8\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"4\" # pass\nassert solution(\"9\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\") == \"2\" # pass\nassert solution(\"10\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n...K\\n....\\n",
        "num_ids_2": 126,
        "num_ids_4": 520
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example_input.txt').read()) == 2\nassert solution(open('input.txt').read()) == 3\nassert solution(open('example_output.txt').read()) == 2\nassert solution(open('output.txt').read()) == 3\nassert solution(open('example_input.txt').read()) == -1",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example.txt').read()) == '2'\nprint(solution(open('example.txt').read()))  # Output: 2",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"100 5\n42\n3\n2\n99\n1\"\"\") == \"23\\n\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\\n\"\nassert solution(\"100 1\\n1\\n\") == \"too late\\n\"\nassert solution(\"100 1\\n2\\n\") == \"too late\\n\"\nassert solution(\"100 1\\n1\\n1\\n\") == \"too late\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 103
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\nassert solution(\"100 5\\n42\\n101\\n2\\n99\\n1\") == \"too late\"\nassert solution(\"100 5\\n42\\n2\\n99\\n1\") == \"too late\"\nassert solution(\"100 5\\n42\\n100\\n2\\n99\\n1\") == \"too late\"",
        "num_ids_2": 66,
        "num_ids_4": 129
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '23'\nprint('All tests passed!')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '23'\nassert solution() == 'too late'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case failed. Input: {stdin}, Expected Output: {expected_output}, Actual Output: {solution(stdin)}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Expected 'BMNDZBXDKYBEJVDMUIXMMNUVIF' but got '{}'.\".format(solution(\"playfair example\"))\nassert solution(\"hide the gold in the tree stump\") == \"DEFYBMUVJDPHLBXNXQWCKHI\", \"Expected 'DEFYBMUVJDPHLBXNXQWCKHI' but got '{}'.\".format(solution(\"hide the gold in the tree stump\"))\n",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your code is not correct!\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your code is not correct!\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed for playfair example\"\nassert solution(\"hide the gold in the tree stump\") == \"BNDLUCGKRLXLVKWVIOF\", \"Test failed for hide the gold in the tree stump\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF', \"Incorrect solution for 'playfair example'\"\nassert solution('hide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF', \"Incorrect solution for 'hide the gold in the tree stump'\"\nassert solution('playfair') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', \"Incorrect solution for 'playfair'\"\nassert solution('hide the gold in the tree stump') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', \"Incorrect solution for 'hide the gold in the tree stump'\"\nassert solution('playfair example hide the gold in the tree stump') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', \"Incorrect solution for 'playfair example hide the gold in the tree stump'\"",
        "num_ids_2": 78,
        "num_ids_4": 148
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\\nhide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your solution is incorrect\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"playfair example\\nhide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test Case 1\"\nassert solution(\"HELLO WORLD\") == \"BMLHFSBXDYCPQUWYVIXZ\", \"Test Case 2\"\nassert solution(\"THE quick brown fox jumps over the lazy dog\") == \"EKRJWDWGRVLHXQCGTLVFSNHP\", \"Test Case 3\"\nassert solution(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"FGFEDCBAHRDEKMPQRSTVWXYZ\", \"Test Case 4\"\nassert solution(\"ABC123\") == \"ABC123\", \"Test Case 5\"\nassert solution(\"a b c d e f g h i j k l m n o p q r s t u v w x y z 123456789012345678901234567890123456789012345678901234567890\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"Test Case 6\"",
        "num_ids_2": 71,
        "num_ids_4": 163
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n0.500 1.000\\n0.000 0.500\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.000, 1.000).\\nThe gopher can escape through the hole at (0.500, 1.000).\\nThe gopher can escape through the hole at (0.000, 0.500).\\nThe gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.000 2.000\\n1.500 1.500\\n2.500 2.500\") == \"The gopher cannot escape.\\nThe gopher cannot escape.\\nThe gopher can escape through the hole at (1.000, 1.000).\\nThe gopher can escape through the hole at (2.500, 2.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n0.500 1.000\\n0.000 0.500\\n2.500 2.500\") == \"The gopher can escape through the hole at (1.000, 1.000).\\nThe gopher can escape through the hole at (0.500, 1.000).\\nThe gopher can escape through the hole at (0.000, 0.500).\\nThe gopher cannot escape.\\nThe gopher can escape through the hole at (2.500, 2.500).\"",
        "num_ids_2": 220,
        "num_ids_4": 530
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n\")) == \"The gopher cannot escape.\\n\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.000 1.000\\n\")) == \"The gopher can escape through the hole at (1.000,1.000).\\n\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.000 1.000\\n\")) == \"The gopher can escape through the hole at (1.500,1.500).\\n\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.000 1.000\\n\")) == \"The gopher can escape through the hole at (1.500,1.500).\\n\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n\")) == \"The gopher can escape through the hole at (1.500,1.500).\\n\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 1.000 1.000\\n1.000 1.000 ",
        "num_ids_2": 128,
        "num_ids_4": 296
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"0.000 0.000 1.000 1.000\\n2.000 2.000\") == \"The gopher can escape through the hole at (2.000, 2.000).\"\nassert solution(\"0.000 0.000 0.000 0.000\\n0.000 0.000\") == \"The gopher can escape through the hole at (0.000, 0.000).\"\nassert solution(\"1.000 0.500 2.000 0.000\\n0.000 2.000\") == \"The gopher can escape through the hole at (0.000, 2.000).\"\n",
        "num_ids_2": 134,
        "num_ids_4": 268
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1, 1).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n-1.500 -1.500\") == \"The gopher can escape through the hole at (2, 2).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 2.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n-1.500 -1.500\\n1.000 1.000 1.000 1.000\\n1.500 2.500\") == \"The gopher cannot escape.\\nThe gopher can escape through the hole at (2, 2).\\nThe gopher can escape through the hole at (1, 1).\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 300
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher can escape through the hole at (1.5, 1.5).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 -1.500') == 'The gopher can escape through the hole at (1.5, 1.5).'\nassert solution('1.000 1.000 2.000 2.000\\n-1.500 -1.500') == 'The gopher can escape through the hole at (-1.5, -1.5).'\nassert solution('1.000 1.000 2.000 2.000\\n2.500 2.500') == 'The gopher can escape through the hole at (2.5, 2.5).'",
        "num_ids_2": 128,
        "num_ids_4": 257
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 2.500\\n2.000 1.500\\n3.000 2.500\") == \"The gopher can escape through the hole at (2.000, 2.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 2.500\\n2.000 1.500\\n3.000 2.500\\n3.500 2.500\\n\") == \"The gopher can escape through the hole at (2.000, 2.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n2.000 1.500\\n3.000 2.500\\n4.000 2.500\\n\") == \"The gopher cannot escape.\\n\"",
        "num_ids_2": 164,
        "num_ids_4": 326
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1.000 1.000 2.000 2.000\n1.500 1.500\"\"\") == \"The gopher cannot escape.\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(open(\"input.txt\", \"r\").readline().strip())) == \"The gopher cannot escape.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.000 2.000\") == \"The gopher can escape through the hole at (2.000, 2.000).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 2.000\") == \"The gopher can escape through the hole at (1.000, 2.000).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.500 2.500\") == \"The gopher can escape through the hole at (2.500, 2.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n-1.000 -1.000\") == \"The gopher can escape through the hole at (-1.000, -1.000).\"",
        "num_ids_2": 134,
        "num_ids_4": 268
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3,4) == \"Y\"\nassert solution(3,3) == \"N\"\nassert solution(3,3, 3) == \"Y\"\nassert solution(1,1, 2) == \"N\"",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('10 10\\n10 10') == 'N'\nassert solution('5 5\\n5 5') == 'Y'\nassert solution('1 1\\n2 2') == 'N'\nassert solution('0 0\\n0 0') == 'N'",
        "num_ids_2": 41,
        "num_ids_4": 75
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('10 10\\n9 9\\n4') == 'N\\n'\nassert solution('4 4\\n10 10\\n2') == 'N\\n'\nassert solution('0 100\\n100 0\\n10') == 'N\\n'",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"1 2\\n2 2\\n1\") == \"N\"\nassert solution(\"3 4\\n2 3\\n0\") == \"Y\"\nassert solution(\"1 1\\n1 1\\n1\") == \"N\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"4 5\\n1 5\\n2\") == \"N\"\nassert solution(\"0 0\\n10 10\\n1\") == \"N\"\nassert solution(\"2 2\\n3 3\\n1\") == \"Y\"\nassert solution(\"1 1\\n1 1\\n1\") == \"N\"\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"4 5\\n3 4\\n2\") == \"N\"\nassert solution(\"1000 1000\\n1000 1000\\n100\") == \"N\"\nassert solution(\"2 0\\n2 1000\\n10000\") == \"N\"\nassert solution(\"2 1\\n2 0\\n10000\") == \"N\"",
        "num_ids_2": 40,
        "num_ids_4": 101
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('3 4\\n4 3\\n3') == 'N'\nassert solution('5 5\\n5 5\\n0') == 'N'\nassert solution('1 1\\n1 1\\n1') == 'Y'\nassert solution('1 1\\n1 2\\n1') == 'N'\nassert solution('3 3\\n3 3\\n3') == 'Y'\nassert solution('4 4\\n4 4\\n0') == 'Y'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\nN\\nN\"\nassert solution(\"4 2\\n1 1\\n1\") == \"N\\nY\\nN\"\nassert solution(\"1 1\\n4 2\\n1\") == \"N\\nY\\nN\"\nassert solution(\"3 4\\n3 3\\n4\") == \"N\\nY\\nN\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('4 3\\n3 4\\n3') == 'N'\nassert solution('4 4\\n3 4\\n3') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str: \\n    pass\\n'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n....V...\\n.......\\n.......\\n....#\\n..###..\\n\") == \"\\n...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the correctness of solution\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == [\n    \"...V...\",\n    \"...V...\",\n    \"..VVV..\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \"def\",\n]",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"11\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13') == '11'\nassert solution('10') == '10'\nassert solution('20') == '100'\nassert solution('5') == '101'\nassert solution('1000000000') == '1'\nassert solution('1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"11\", \"Your function should return the correct result.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('13') == '11', \"The solution should return 11, but it returns {}\".format(solution('13'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='13') == '11'\nassert solution(stdin='12') == '10'\nassert solution(stdin='15') == '101'\nassert solution(stdin='25') == '10101'\nassert solution(stdin='30') == '101010'",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"11\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 11",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n\") == \"11\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9, \"The output should be 9, not {}\".format(solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\"))",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\npink\\nPInkPink\\nlazerLeMon') == '9'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\nPInkPinkPinK\\nPInkRose\\nlazerlemon\") == 9, \"The output is incorrect.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Input {input_str} should output {output_str}, but got {solution(input_str)}\"\nfor _ in range(2):\n    input_str, output_str = random.choice(input_list), random.choice(output_list)\n    assert solution(input_str) == output_str, f\"Input {input_str} should output {output_str}, but got {solution(input_str)}\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\nPInKpinkPinK\\nPInkrose\\nazerlemon\\n') == 9\n\nfrom typing import List",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == 9, \"Output should be 9\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9, \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\", \"The solution is incorrect.\"\nassert solution(\"1 5 3 abc\") == \"1 3 5\", \"The solution is incorrect.\"\nassert solution(\"1 3 5\") == \"1 3 5\", \"The solution is incorrect.\"\nassert solution(\"5 3 1\") == \"5 3 1\", \"The solution is incorrect.\"\nassert solution(\"2 4 6\") == \"2 4 6\", \"The solution is incorrect.\"",
        "num_ids_2": 49,
        "num_ids_4": 97
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 6 4\\nxyz\") == \"2 4 6\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\\n\"\nassert solution(\"1 5 3 ABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"1 2 3\\nDEF\") == \"1 2 3\"\nassert solution(\"1 3 2\\nGHI\") == \"1 3 2\"\nassert solution(\"1 4 2\\nJKL\") == \"1 4 2\"\nassert solution(\"1 2 3\\n\") == \"1 2 3\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n'''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n'''\n) == '8.00000000'\nassert solution(\n'''\nbuy 2 25\nsell 2 15\nsplit 2\nmerge 4\nsell 3 25\ndie 7\n'''\n) == '25.00000000'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\nassert solution(\"buy 1 5\\nsell 2 10\\nsplit 2\\nsell 2 5\\ndie 4\\ndie 10\\nsplit 2\\nsell 1 3\\nsell 4 6\\ndie 10\\nsell 1 1\\ndie 10\") == \"74.50000000\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 73.8, \"Incorrect output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\ndie 4\") == \"8.00000000\", \"Incorrect output\"\nprint(\"All tests passed!\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"buy 1 15\\n\"\n\"split 3\\nsell 1 5\\n\"\n\"die 4\\n\"\n) == \"8.00000000\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\ndie 4\") == \"8.00000000\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8.00000000\", \"Output should be '8.00000000', but got '{}'.\".format(solution())",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\nsplit 3\\ndie 4\\n') == '8.00000000\\n'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\\n\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(808) == 8, \"The correct output is 8.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(808) == 8, \"Incorrect output for sample input 808\"\nassert solution(2) == 2, \"Incorrect output for sample input 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(808) == 8, \"Invalid solution for 808\"\nassert solution(2) == 2, \"Invalid solution for 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 8\nassert solution(2) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"808\") == \"8\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(808) == 8, \"Expected 8, got {}\".format(solution(808))\nprint(\"Test passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(808) == 8, \"Sample Input 808 should result in 8\"\nassert solution(2) == 2, \"Sample Input 2 should result in 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(808) == 8, \"Incorrect output. Expected 8, but got {}\".format(solution(808))\nassert solution(2) == 2, \"Incorrect output. Expected 2, but got {}\".format(solution(2))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Test 1 passed\"\n\nassert solution(\"4 5\\nLLL\\nWWW\\nLLL\\nWWW\") == 1, \"Test 2 passed\"\n\nassert solution(\"4 5\\nLLLLLLLLLLLLLLLLLLLL\\n
        "num_ids_2": 68,
        "num_ids_4": 1025
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0\\n'\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    4 5\n        CCCCC\n    CCCCC\nCCCCC\nCCCCC''') == 0\n\nassert solution('''\n    4 5\n        CCCCC\n    CCCCC\nCCCCC\nCCCCC''') == 1\n\nassert solution('''\n    4 5\n        CCCCC\n    CCCCC\nCCCCC\nCCCCC''') == 2\n\nassert solution('''\n    4 5\n        CCCCC\n    CCCCC\nCCCCC\nCCCCC''') == 3\n\nassert solution('''\n    4 5\n        CCCCC\n    CCCCC\nCCCCC\nCCCCC''') == 4",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0 #Sample Output: 0",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\\n\") == 0\nassert solution(\"4 5\\nWLLLL\\nCCCCC\\nCCCCC\\nCCCCC\\n\") == 1\nassert solution(\"4 5\\nLLLLL\\nCCCCC\\nCCCCC\\nCCCCC\\n\") == 2\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nCCCCC\\nCCCCC\\n\") == 3\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nCCCCC\\nCCCCC\\n\") == 4\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nCCCCC\\nCCCCC\\n\") == 5\n",
        "num_ids_2": 59,
        "num_ids_4": 120
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0 # sample output for testing",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"The expected output is 0, but the actual output is {}.\".format(solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\"))\n\nfrom collections import defaultdict",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"60\", \"Test case 1 failed\"\n\nsolution(stdin)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"60\", \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 60, \"Your solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == 60\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == 60, \"The output should be 60\"\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '60'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"The output should be 60\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"\nassert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"30\"\nassert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"30\"\nassert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\n\") == \"30\"\nassert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"30\"\nassert solution(\"1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"",
        "num_ids_2": 74,
        "num_ids_4": 154
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"Expected output: 60, but got: {}\".format(solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\"))",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH') == '60'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3'\nprint(\"All test cases passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3, 0, 0, 1, 1, 2) == 3, \"Expected 3, but got {}\".format(solution(3, 3, 0, 0, 1, 1, 2))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2\\n') == '3'\nassert solution('3 2 0\\n0 0 1 1 2\\n') == '2'\nassert solution('3 2 1\\n0 0 1 1 2\\n') == '1'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 2') == '3\\n'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Error: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\"\nassert solution(\"10\\n5\\n6\\n7\\n8\") == \"8\"\nassert solution(\"5\\n10\\n15\\n20\\n25\") == \"25\"",
        "num_ids_2": 48,
        "num_ids_4": 75
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n2\\n6\", \"Test case 1 failed.\"\nassert solution(input()) == \"1\\n2\\n6\", \"Test case 2 failed.\"\nassert solution(input()) == \"1\\n2\\n6\", \"Test case 3 failed.\"\nassert solution(input()) == \"1\\n2\\n6\", \"Test case 4 failed.\"\nassert solution(input()) == \"1\\n2\\n6\", \"Test case 5 failed.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '1'\nassert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\") == \"6\\n5\\n5\\n5\\n5\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\"\nassert solution(\"1000000000\") == \"10\"",
        "num_ids_2": 62,
        "num_ids_4": 152
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\"\nassert solution(\"1\\n10\") == \"6\"\nassert solution(\"1000000000\") == \"999999999\"",
        "num_ids_2": 39,
        "num_ids_4": 66
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2') == '4 2\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\n3 1 2\\n\") == \"4 2\\n\", \"Test failed\"\nassert solution(stdin=\"4\\n2 3 1 4\\n\") == \"6 2\\n\", \"Test failed\"\nassert solution(stdin=\"5\\n1 1 1 1 1\\n\") == \"5 1\\n\", \"Test failed\"\nassert solution(stdin=\"6\\n2 3 4 5 6\\n\") == \"12 4\\n\", \"Test failed\"\nassert solution(stdin=\"7\\n3 3 3 3 3\\n\") == \"9 6\\n\", \"Test failed\"\nassert solution(stdin=\"8\\n3 4 5 6 7\\n\") == \"16 9\\n\", \"Test failed\"\nassert solution(stdin=\"9\\n4 5 6 7 8\\n\") == \"25 12\\n\", \"Test failed\"\nassert solution(stdin=\"10\\n5 6 7 8 9\\n\") == \"36 18\\n\", \"Test failed\"",
        "num_ids_2": 60,
        "num_ids_4": 127
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2\\n') == '4 2\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2\\n') == '4 2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\", \"The solution is not correct.\"\nassert solution(\"1\\n2\") == \"2\", \"The solution is not correct.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 1\") == 2",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 2, \"Expected output: 2, but got: \" + solution(stdin)\nprint(\"All assertions passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\") == 2, \"The correctness of the solution cannot be verified.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\nassert solution(\"4 3 1\") == \"2\\n\"\nassert solution(\"5 3 2\") == \"3\\n\"\nassert solution(\"5 1 3\") == \"3\\n\"\nassert solution(\"4 5 3\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 1') == 2, \"The correct output is 2.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"2\", \"The solution should return 2.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\") == 2, \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == '36', \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"36\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 36, \"The solution is incorrect!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"36\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 36, \"Test failed for input 5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"36\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"36\"\n\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 3 4 1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2 3 4 1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1 2 3 4 5 6 7\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"1 2 3 4 5 6 7 8 9 10 11\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1",
        "num_ids_2": 58,
        "num_ids_4": 132
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2 3 4 5 1\"\nassert solution(\"6\\n3 2 1 4 5 6\") == \"2 4 3 5 1 6\"\nassert solution(\"7\\n5 6 7 4 5 6 1\") == \"2 3 6 1 4 5 7\"\nassert solution(\"8\\n5 6 7 4 5 6 8 2\") == \"2 4 5 3 6 1 7 8\"\nassert solution(\"9\\n5 6 7 4 5 6 8 9 3\") == \"2 3 5 6 1 4 7 8 9\"\nassert solution(\"10\\n5 6 7 4 5 6 8 9 10\") == \"2 3 4 5 6 7 8 9 10\"",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n1 2 2 1 3\") == \"1 3 2 4 3\"\nassert solution(\"5\\n2 3 1 4 1\") == \"2 4 3 1 3\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"1 1 1 1 1 1\"\nassert solution(\"7\\n1 2 2 1 1 2 2 1 1\") == \"1 2 3 4 5 1\"\nassert solution(\"8\\n2 2 1 2 1 2 1 2 2 1\") == \"2 2 3 4 5 1\"\nassert solution(\"9\\n2 2 1 2 1 2 1 2 2 1\") == \"1 2 3 4 5 1\"\nassert solution(\"10\\n2 2 1 2 1 2 1 2 2 1\") == \"2 1 3 4 5 1\"\nassert solution(\"11\\n2 2 1 2 1 2 1 2 2 1\") == \"3 1 4 5 2 1\"\nassert solution(\"12\\n2 2 1 2 1 2 1 2 2 1\") == \"4 1 2 5 3 1\"\nassert solution(\"13\\n2 2 1 2 1 2 1 2 2 1\") == \"5 1 3 1 2 1\"\nassert solution(\"14\\n2 2 1 2 1 2 1 2 2 1\") == \"1 2 3 5 4 1\"\nassert solution(\"15\\n2 2 1 2 1 2 1 2 2 1\") == \"2 3 5 1 4 1\"\nassert solution(\"16\\n2 2 1 2 1 2 1 2 2 1\") == \"3 4 1 5 2 1\"\nassert solution(\"17\\n2 2 1 2 1 2 1 2 2 1\") == \"4 5 2 1 3 1\"\nassert solution(\"18\\n2 2 1 2 1 2 1 2 2 1\") == \"5 1 4 1 2 1\"\nassert solution(\"19\\n2 2 1 2 1 2 1 2 2 1\") == \"1 2 3 5 4 1\"\nassert solution(\"20\\n2 2 1 2 1 2 1 2 2 1\") == \"2 3 5 1 4 1\"\nassert solution(\"21\\n2 2 1 2 1 2 1 2 2 1\") == \"3 4 1 5 2 1\"\nassert solution(\"22\\n2 2 1 2 1 2 1 2 2 1\") == \"4 5 2 1 3 1\"\nassert solution(\"23\\n2 2 1 2 1 2 1 2 2 1\") == \"5 1 4 1 2 1\"\nassert solution(\"24\\n2 2 1 2 1 2 1 2 2 1\") == \"1 2 3 5 4 1\"\nassert solution(\"25\\n2 2 1 2 1 2 1 2 2 1\") == \"2 3 5 1 4 1\"\nassert solution(\"26\\n2 2 1 2 1 2 1 2 2 1\") == \"3 4 1 5 2 1\"\nassert solution(\"27\\n2 2 1 2 1 2 1 2 2 1\") == \"4 5 2 1 3 1\"\nassert solution(\"28\\n2 2 1 2 1 2 1 2 2 1\") == \"5 1 ",
        "num_ids_2": 54,
        "num_ids_4": 116
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 3 4 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\\n\"\nassert solution(\"5\\n2 3 3 1 4\") == \"2 3 4 1\\n2 4 5 1\"\nassert solution(\"10\\n3 2 5 1 4 3 4 1\") == \"2 3 4 1\\n3 4 5 1\\n4 5 6 1\\n5 6 7 1\\n6 7 8 1\\n7 8 9 1\\n8 9 10 1\"",
        "num_ids_2": 63,
        "num_ids_4": 152
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"6\\n2 2 2 3 4 1 4 2 5\") == \"2 3 4 1 5\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4 2 3 1\") == \"2 3 4 1\"\nassert solution(\"5 4 3 1\") == \"2 3 4 1\"\nassert solution(\"1 2 3 4\") == \"2 3 4 1\"\nassert solution(\"3 4 5 1\") == \"2 3 4 1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"4\\n3 2 1 4\") == \"3 2 1 4\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 1\\n1 2 3 4\") == \"1 2 3 4\"",
        "num_ids_2": 50,
        "num_ids_4": 118
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"Expected 4, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str: \\n    pass'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of points: \")) == \"Output: 7 7\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\", \"The output should be '7 7\\n', but is '{}'.\".format(solution(\"5 5\\n5 7\\n7 5\\n\"))",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"The solution is incorrect.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7\\n', \"The output should be '7 7\\n', but is '{}'\".format(solution('5 5\\n5 7\\n7 5'))\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test Failed for the given input\\nInput: {input()}\\nOutput: {output}\\nExpected output: {output}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7 7\", \"Input does not match expected output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"1.016666667\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 61\\n\") == \"1.016666667\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 61\\n\") == 1.016666667",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"1.016666667\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"  # expected output\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1.016666667, \"The result should be 1.016666667\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1.016666667', \"Expected output is: 1.016666667\"\nassert abs(solution(stdin) - 1.016666667) <= 1e-7, \"Absolute error is: %f\" % abs(solution(stdin) - 1.016666667)\nprint(\"Measurement error\")",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.016666667', \"Your code is not correct. Please check the problem statement and the input/output examples.\"\n\nfrom math import ceil, pow",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n1 60\\n2 59\") == \"2.808333333\"\nassert solution(\"3\\n1 59\\n2 58\\n3 57\") == \"3.733333333\"\nassert solution(\"4\\n1 58\\n2 57\\n3 56\\n4 55\") == \"4.666666667\"\nassert solution(\"5\\n1 57\\n2 56\\n3 55\\n4 54\\n5 53\") == \"5.600000000\"\nassert solution(\"6\\n1 56\\n2 55\\n3 54\\n4 53\\n5 52\\n6 51\") == \"6.533333333\"\nassert solution(\"7\\n1 55\\n2 54\\n3 53\\n4 52\\n5 51\\n6 50\\n7 49\") == \"7.466666667\"\nassert solution(\"8\\n1 54\\n2 53\\n3 52\\n4 51\\n5 50\\n6 49\\n7 48\\n8 47\") == \"8.400000000\"\nassert solution(\"9\\n1 53\\n2 52\\n3 51\\n4 50\\n5 49\\n6 48\\n7 47\\n8 46\\n9 45\") == \"9.333333333\"\nassert solution(\"10\\n1 52\\n2 51\\n3 50\\n4 49\\n5 48\\n6 47\\n7 46\\n8 45\\n9 44\\n10 43\") == \"10.266666667\"\nassert solution(\"11\\n1 51\\n2 50\\n3 49\\n4 48\\n5 47\\n6 46\\n7 45\\n8 44\\n9 43\\n10 42\\n11 41\") == \"11.200000000\"\nassert solution(\"12\\n1 50\\n2 49\\n3 48\\n4 47\\n5 46\\n6 45\\n7 44\\n8 43\\n9 42\\n10 41\\n11 40\\n12 39\") == \"12.133333333\"\nassert solution(\"13\\n1 49\\n2 48\\n3 47\\n4 46\\n5 45\\n6 44\\n7 43\\n8 42\\n9 41\\n10 40\\n11 39\\n12 38\\n13 37\") == \"13.066666667\"\nassert solution(\"14\\n1 48\\n2 47\\n3 46\\n4 45\\n5 44\\n6 43\\n7 42\\n8 41\\n9 40\\n10 39\\n11 38\\n12 37\\n13 36\\n14 35\") == \"14.000000000\"\nassert solution(\"15\\n1 47\\n2 46\\n3 45\\n4 44\\n5 43\\n6 42\\n7 41\\n8 40\\n9 39\\n10 38\\n11 37\\n12 36\\n13 35\\n14",
        "num_ids_2": 58,
        "num_ids_4": 140
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1.016666667\", \"Output should be 1.016666667\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input(), stdout='output') == 'output', 'Your implementation is not correct.'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('CPMCRYY', 'ALBERTA') == 'CALGARY'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='CPMCRYY\\nALBERTA') == 'CALGARY'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AB') == '3', \"The correct output is: '3', but it is: '{}'.\".format(solution('AB'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"3\" # Expected output: 3",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == 3, \"Incorrect output.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == 3\nassert solution(\"5 6 7 8\") == 8\nassert solution(\"1 1 1 1\") == 1\nassert solution(\"1 1 1 1 1\") == 1",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == 3",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 2 3 4\\n') == '3\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n') == '3'\nassert solution('1 2 2 3\\n') == '4'\nassert solution('2 2 3 3\\n') == '5'\nassert solution('3 2 2 2\\n') == '6'\nassert solution('4 2 2 2\\n') == '7'\nassert solution('1 2 2 3\\n') == '6'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('4 5 6 7') == '10'\nassert solution('5 6 7 8') == '120'\nassert solution('6 7 8 9') == '155'\nassert solution('7 8 9 10') == '200'",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1 2 3 4\") == \"3\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"3\\n\"\nassert solution(\"2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"3 4 5 6\\n\") == \"9\\n\"\nassert solution(\"4 5 6 7\\n\") == \"12\\n\"\nassert solution(\"5 6 7 8\\n\") == \"15\\n\"\nassert solution(\"6 7 8 9\\n\") == \"18\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('103 27') == 4, \"Expected: 4, Actual: {}\".format(solution('103 27'))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"The minimum number of operations needed to transform 103 into 27 is 4.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"103 27\") == 4, \"The output should be 4.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == 4, \"Incorrect Output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"103 27\") == 4, \"Test case failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103 27\") == \"4\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"103 27\") == \"4\", \"The output should be 4.\"\n\nHere is the Python code to solve the problem:\n\n```python\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103 27\") == 4\nassert solution(\"2 4\") == 1\nassert solution(\"10\") == 0\nassert solution(\"999\") == 0\nassert solution(\"1000\") == 1",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 4, \"The given solution does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('103 27') == 4, 'Incorrect output for 103 27'",
        "num_ids_2": 27,
        "num_ids_4": 27
    }
]