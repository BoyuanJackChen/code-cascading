[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    n = int(stdin)\n    edges = []\n    for i in range(n - 1):\n        a, b = map(int, stdin.split())\n        edges.append((a, b))\n    edges.sort(key=lambda x: x[0])\n    edges.sort(key=lambda x: x[1])\n    res = 0\n    for i in range(n - 1):\n        if edges[i][0]!= edges[i + 1][0] and edges[i][1]!= edges[i + 1][1]:\n            res += 1\n    return str(res)\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    n = int(stdin)\n    divisors = list(map(int, stdin.split()))\n    divisors.sort()\n    divisors = list(set(divisors))\n    divisors.sort()\n    return str(divisors[0]) + \" \" + str(divisors[-1])\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    n, m, k = map(int, stdin.split())\n    a = [[int(i) for i in stdin.split()] for _ in range(n)]\n    max_sum = 0\n    for i in range(n):\n        for j in range(m):\n            if j < m // 2:\n                a[i][j] = 0\n            else:\n                a[i][j] = a[i][j - m // 2]\n            if a[i][j] % k == 0:\n                max_sum = max(max_sum, a[i][j])\n    return str(max_sum)\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    n = int(stdin)\n    a = list(map(int, stdin.split()))\n    a.sort()\n    k = 0\n    s = ''\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            k += 1\n        else:\n            k = 0\n        if k > kmax:\n            kmax = k\n            s = 'L' * k + 'R' * (n - k)\n    return str(kmax) +'' + s\n\ndef"
    }
]