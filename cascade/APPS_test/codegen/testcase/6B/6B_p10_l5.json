[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n5 7\n5 8\n5 9\n5 10\n7 8\n7 9\n7 10\n9 10''') == '8'\nassert solution('''6\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5''') == '5'\nassert solution('''7\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n4 6\n5 6\n5 7''') == '6'\nassert solution('''10\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n4 6\n5 6\n5 7\n5 8\n5 9\n5 10\n7 8\n7 9\n7 10\n9 10''') == '8'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 7\n6 8''') == '1 8 6'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7''') == '1 8 6'\nassert solution('''10\n2 3\n4 5\n6 7\n8 9\n10 11\n10 12\n9 13\n7 11\n2 9\n12 11\n6 10\n1 9\n10 9\n1 8\n9 8\n4 10\n9 11\n2 12\n3 10\n4 12\n1 13\n13 15\n1 14\n14 15\n1 15\n15 17\n3 17\n5 17\n8 17\n14 17\n1 16\n16 17\n2 16\n16 17\n4 16\n17 17\n6 16\n5 15\n15 15\n3 15\n5 15\n2 14\n14 15\n6 15\n8 14\n9 15\n3 17\n7 15\n1 17\n5 17\n3 18\n7 18\n6 19\n9 19\n3 20\n11 19\n7 19\n5 19\n8 19\n1 19\n1 19\n2 19\n2 19\n4 19\n6 19\n4 19\n4 19\n4 19\n4 19\n4 19\n3 19\n8 19\n6 19\n3 19\n5 19\n1 19\n1 19\n3 19\n3 19\n3 19\n4 19\n6 19\n4 19\n3 19\n5 19\n1 19\n1 19\n3 19\n5 19\n2 19\n1 19\n2 19\n4 19\n6 19\n3 19\n1 19\n1 19\n3 19\n2 19\n2 19\n4 19\n4 19\n6 19\n1 19\n1 19\n4 19\n3 19\n5 19\n1 19\n1 19\n3 19\n2 19\n2 19\n4 19\n4 19\n6 19\n1 19\n1 19\n2 19\n1 19\n1 19\n1 19\n3 19\n1 19\n1 19\n5 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n4 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n2 19\n4 19\n1 19\n1 19\n1 19\n1 19\n2 19\n1 19\n1 19\n2 19\n1 19\n1 19\n1 19\n1 19\n2 19\n1 19\n1 19\n2 19\n4 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n2 19\n1 19\n1 19\n2 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1 19\n1"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 4\n4 5\n2 3\n5 4\n1 2\n3 4\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n'''\n) == '5'\n\nassert solution(\n'''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 6\n'''\n) == '1 8 6'\n\nassert solution(\n'''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 6\n4 7\n4 8\n'''\n) == '1 8 6'\n\nassert solution(\n'''8\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n4 6\n4 7\n4 8\n'''\n) == '1 8 6'\n\nassert solution(\n'''8\n1 2\n2 3\n2 4\n3 4\n3 5\n1 6\n6 7\n7 8\n'''\n) == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"10\\n9 10 11\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"3\\n1 2 3 4\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"5\\n1 8 6\\n\"\n\n\n-----"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n8\\n2 3\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'\n\nassert solution('3\\n2 1\\n1 2\\n2 1\\n1 2\\n1 2\\n1 2\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n2 7\n''') == '1 8 6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n''') == '1 8 6'\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == '1 2 3'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '1 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''7\n1 2\n2 3\n2 4\n3 4\n4 5\n4 6\n5 6\n''') == '1 8 6'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '1 8 6'\nassert solution('''3\n1 2\n1 3\n2 3\n''') == '1 3'\nassert solution('''1\n1 2\n2 3\n''') == '1 3'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution_correct_answer\nassert solution(stdin) == \"1 8 6\"\nassert solution(stdin) == \"1 8 6\"\n\nassert solution(stdin) == solution_correct_answer\nassert solution(stdin) == \"1 8 6\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5\\n1 8 6'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n7 6\n''') == '7\\n1 8 6'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n''') == '1 8 6'\nassert solution('''9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '7\\n1 8 6'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 1 4 1 2 4 1 2 5\\n') == '20 8'\n\"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"3 4\"\nassert solution(\"1 2 4 3\") == \"3 2\"\nassert solution(\"2 2 3 4 5\") == \"4 3\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"1 1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"1 1\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n\nassert solution(\n'''\n10\n1 2 4 2 1 1 2 3 2\n''') == '4 2'\n\nassert solution(\n'''\n10\n2 2 3 2 3 2 3 2 3\n''') == '2 3'\n\nassert solution(\n'''\n10\n1 1 1 2 1 1 1 1 1 2\n''') == '2 1'\n\nassert solution(\n'''\n10\n2 2 2 2 2 2 2 2 2 2\n''') == '2'"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2\\n3\\n1\") == \"1\\n2\"\nassert solution(\"5\\n2\\n4\\n1\\n2\\n3\") == \"4\\n1\"\nassert solution(\"6\\n2\\n3\\n1\") == \"2\\n4\"\nassert solution(\"7\\n2\\n3\\n1\") == \"1\\n2\"\nassert solution(\"8\\n2\\n4\\n1\\n2\\n3\") == \"2\\n4\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == \"20 8\"\n'''\nstdin - \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434 \u0438\u043b\u0438 input()\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '2 1'\nassert solution('2\\n1') == '2 1'\nassert solution('2\\n2') == '2 1'\nassert solution('2\\n3') == '1 2'\nassert solution('3\\n1') == '1 2'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('1 2 4 2 1') == '24'\nassert solution('7 1 1 4') == '56'\nassert solution('4 4 4') == '64'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"56\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 6') == '56'\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nassert solution('''1 1 1\n1 1 1\n1 1 1''') == '1'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nassert solution('''2 2 2\n1 1 1\n2 1 1\n1 1 1''') == '1'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '56'\n\"\"\"\n\nfrom sys import stdin\nstdin = open('input.txt')\n\nN, M, K = [int(x) for x in stdin.readline().split(' ')]\na = [0] * M\nfor i in range(N):\n    a = [x + int(stdin.readline()) for x in a]\n\ns = [0] * M\nfor i in range(M):\n    if a[i] % K == 0: s[i] = a[i]\n    else: s[i] = 0\nprint(max(s))\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"48\"\n\n\"\"\"\n\n\"\"\"\n\nTwo pointers\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\n-----\n\nSolution 1:"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\"\n) == \"4\"\n\nassert solution(\n    \"7\"\n) == \"6\"\n\nassert solution(\n    \"3\"\n) == \"1\"\n\nassert solution(\n    \"4\"\n) == \"LLRR\"\n\nassert solution(\n    \"2 2 2\"\n) == \"1\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLRLRRR'\n\n-----Solutions 1-----\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == 'LRLRRR'\nassert solution('''3\n2 2 2\n''') == '1'\nassert solution('''4\n1 2 4 3\n''') == 'LLRR'\nassert solution('''10\n1011 1010 1\n''') == 'LRRRLRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4\\nLRLRRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2') == '1\\nR'\nassert solution('4\\n1 2 4 3') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == answer_data\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 4 3 2') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2') == '1\\nR'\nassert solution('5\\n1 3 5 6 5 4 2') == '4\\nRLRLLR'\nassert solution('3\\n2 2 2') == '1\\nR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"1 3 5 6 5 4 2\") == \"6\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 1 1\") == \"1\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''5\n2 2 5 2 5\n''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'\nassert solution('''2\n2 8\n''') == '3'\nassert solution('''10\n1 9 1 1 9 1 1 1 1 9\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7''') == '-1'\nassert solution('''2\n2 8''') == '3'\nassert solution('''3\n1 3 3 7''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n1 4 4 7 4 1\n''') == '3'\n\nassert solution(\n'''\n6\n1 4 4 7 4 1\n''') == '3'\n\nassert solution(\n'''\n5\n2 2 5 2 5\n''') == '3'\n\nassert solution(\n'''\n6\n2 2 5 2 5\n''') == '-1'\n\nassert solution(\n'''\n4\n2 2 5 2 5\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 1\\n1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1\\n1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1\\n1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1\\n1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1\\n1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n') == '-1'\nassert solution('3\\n2\\n1\\n') == '3'\nassert solution('5\\n2\\n2\\n2\\n2\\n') == '3'\nassert solution('7\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n') == '3'\nassert solution('7\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n2\\n2') == '1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3') == '1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4') == '-1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 2') == None\nassert solution('1 2 3') == None\nassert solution('2') == None\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '3'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"3 3 7 5\") == \"YES\"\nassert solution(\"3 1 7 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\nassert solution('0 0 499999 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'NO'\nassert solution('2 0 4 6') == 'YES'\nassert solution('3 0 4 7') == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"YES\"\nassert solution(\"0 0 7 4\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1098''') == '''20'''\nassert solution('''10''') == '''19'''\nassert solution('''10099''') == '''10100'''\nassert solution('''10098''') == '''10100'''\nassert solution('''998''') == '''10100'''\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1098''') == '20'\nassert solution('''10''') == '19'\nassert solution('''109811''') == '19'\nassert solution('''10''') == '19'\nassert solution('''9810''') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('10100') == '101'\nassert solution('1010') == '1'\nassert solution('1099') == '20'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5' * 10) == '1', 'test 1'\nassert solution('10' * 10) == '19', 'test 2'\nassert solution('20' * 10) == '20', 'test 3'\nassert solution('99' * 10) == '99', 'test 4'\nassert solution('1010' * 10) == '1010', 'test 5'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('91212098123') == '19'\nassert solution('456789') == '1'\nassert solution('91212098123456789') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10099') == '1010'\nassert solution('10') == '19'\nassert solution('999') == '998'\nassert solution('10') == '19'\nassert solution('99') == '98'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 0 1 0') == '0 1 4 3 2'\nassert solution('0 0 0 1 1 1') == '0 0 2 1 4 3'\nassert solution('0 0 0 1 1 1 1 0') == '0 0 2 1 4 3'\nassert solution('0 0 0 1 1 1 1 0') == '0 0 2 1 4 3'\nassert solution('0 0 0 1 1 1 1 0') == '0 0 2 1 4 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"2 1 0 0 0\") == \"2 1 4 5 3\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\nassert solution('7\\n2 1 0 0 0 0 6') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 4 2 0\\n') == '3 1 4 2\\n'\nassert solution('2 1 4 2 0\\n') == '2 1 4 2\\n'\nassert solution('2 1 4 2 3\\n') == '2 1 4 2 3\\n'\nassert solution('2 1 4 2 3\\n') == '2 1 4 2 3\\n'\nassert solution('1 1 1 1 1\\n') == '1 1 1 1 1\\n'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES' or solution(stdin) == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO\\n'\n\n\n\"\"\"\n\na = [int(x) for x in input().split()]\nk = int(input())"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'NO' or solution(stdin) == 'YES'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\nassert solution('5 2\\n3 2 1 2 1\\n') == 'NO'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 3\") == \"NO\"\nassert solution(\"1 2 2 3\") == \"YES\"\nassert solution(\"2 1 2 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 2 1') == 'YES\\n1 1 1 2 1\\n'\nassert solution('3 2\\n2 1 1') == 'NO\\n'\nassert solution('5 2\\n2 1 1 2 1') == 'NO\\n'\nassert solution('5 2\\n1 2 1 2 1') == 'YES\\n2 1 1 2 1\\n'\nassert solution('3 2\\n2 1 1') == 'NO\\n'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2''') == 'YES'\nassert solution('''5 2''') == 'YES'\nassert solution('''4 2''') == 'NO'\nassert solution('''5 2''') == 'NO'\nassert solution('''5 2''') == 'YES'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 1 1\") == \"4\"\nassert solution(\"11 0 11\") == \"7\"\nassert solution(\"11 0 11\") == \"7\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 10 4') == '2'\nassert solution('111 11 2') == '3'\nassert solution('1011011101') == '4'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11 11 10') == '1'\nassert solution('11 10100') == '3'\nassert solution('11 10 10') == '1'\nassert solution('1 0 0') == '3'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\n\n\n\n\"\"\"\n\nn, x, y = map(int, stdin.split())\n\nnumber = stdin[0:n]\n\noperations = 0\n\nwhile(number.count('1')!= x and number.count('0')!= y):\n    if number.count('1') < x:\n        number = number.replace('1', '0')\n        operations += 1\n    else:\n        number = number.replace('0', '1')\n        operations += 1\n\nprint(operations)\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''11 5 2'''\n) == '1'\n\nassert solution(\n'''11 5 1'''\n) == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"1 0 1 0 0 0 1\") == \"4\"\nassert solution(\"5 2 1\") == \"2\"\nassert solution(\"11 10 2\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n3\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n3\\n1\\n2') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n3\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == 'NO'\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('1 1 2 2 1\\n5\\n1 2 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('1 1 2 2 1\\n5\\n1 2 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('1 1 2 2 1\\n5\\n1 2 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 1 2 2 1\\n5\\n1 2 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO\\nNO\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\n\n\n-----My Analysis-----\n\nThe problem seems pretty straightforward: we can just iterate over the array and check if the condition is satisfied.\n\nIn my code, I started with the for loop and tried to use the index as the key in the dictionary. However, the array was unordered, so I had to sort it.\n\nThe rest of the code is a bit messy. I decided to define a function to check if the array has some subsequence of length at least $3$ which is a palindrome.\n\nIt works, but there is a bug in it. In my code, I initially did not check the last element of the array. It actually doesn't matter because I use the index as the key, but I end up making the test case fail.\n\nThe solution was to change the last line to the code:"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n1') == 'YES'\nassert solution('2\\n1 2') == 'NO'\nassert solution('2\\n1 2 1') == 'YES'\nassert solution('3\\n3') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9\\n') == '1557'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'\nassert solution('7\\n1111111\\n9 8 7 6 5 4 3 2 1\\n') == '9999999'\nassert solution('7\\n9 9 9 9 9 9 9 9 9\\n') == '99999999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''6\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''8\n9 8 7 6 5 4 3 2 1\n''') == '999999'\nassert solution('''7\n9 8 7 6 5 4 3 2 1\n''') == '99999999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n7\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '1557'\nassert solution('1\\n11111\\n9 8 7 6 5 4 3 2 1\\n1 1 1 1 1 1 1 1 1') == '99999'\nassert solution('1\\n33\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"111\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"11111\") == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''3\n11111\n1 1 1 1 1 1 1 1 1\n''') == '11111'\nassert solution('''6\n9 1 1 1 1 1 1 1 1\n''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '8'\nassert solution('5') == '13'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234') == '1234'\nassert solution('1234') == '1234'\nassert solution('999999') == '999999'\nassert solution('999999') == '999999'\nassert solution('1337') == '1553'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1553'\nassert solution('11111 9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('11111 9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('123456789123456789') == '987654321'\nassert solution('11111 9 8 7 6 5 4 3 2 1') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9\\n') == '1553'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'\nassert solution('2\\n
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '1553'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '99999'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '1553'\nassert solution('9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') == '999999999'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '9999999999'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''\n2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''\n3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''\n4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''\n5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\"\"\") == \"\"\"1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48\"\"\"\n\nassert solution(\"\"\"1\n2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"\"\"1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48\"\"\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('123 321 456') == '1 1 3'\nassert solution('5 10 15') == '4'\nassert solution('15 18 21') == '4'\nassert solution('100 100 101') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '1 1 3'\nassert solution('''5 10 15''') == '1 1 3'\nassert solution('''15 18 21''') == '1 1 3'\nassert solution('''100 100 101''') == '1 1 3'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48\n'''\n\nprint(solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 3\nprint(solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 4\nprint(solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 5\nprint(solution('''5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 7\nprint(solution('''10\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 15\nprint(solution('''5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 17\nprint(solution('''5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 15\nprint(solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 5\nprint(solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 4\nprint(solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 3\nprint(solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''')) # 2\nprint(solution(''"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"/tmp/tests/3\").read()) == '1 1 3'\nassert solution(open(\"/tmp/tests/4\").read()) == '102'\nassert solution(open(\"/tmp/tests/5\").read()) == '114 228 456'\nassert solution(open(\"/tmp/tests/6\").read()) == '4'\nassert solution(open(\"/tmp/tests/7\").read()) == '4 8 16'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 3\") == \"1 1 3\"\nassert solution(\"2\\n123 321 456\\n5 10 15\") == \"102\\n114 228 456\"\nassert solution(\"3\\n15 18 21\\n100 100 101\") == \"4\\n4 8 16\"\nassert solution(\"4\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\") == \"4\\n4 8 16\\n6\\n18 18 18\"\nassert solution(\"5\\n1 2 3\\n123 321 456\") == \"1\\n1 1 3\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''5\n1 3 7 8 2\n''') == '2'\n\n\n\n\"\"\"\nfrom itertools import *\na = map(int, stdin.splitlines()[1].split())\nprint min(abs(max(a) - min(a)) for _, *a in groupby(sorted(a)))\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''5\n2147483647 100000 1 2 3 4''') == '0'\nassert solution('''5\n2147483647 100000 100000 100000 100000''') == '0'\nassert solution('''5\n3 3 5 2 4''') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('1 100000') == '0'\nassert solution('2 1 100000') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 100') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n3\\n7') == 2\nassert solution('1\\n100000') == 0\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\n'''\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n3\\n7') == '2'\nassert solution('2\\n1\\n100000') == '0'\nassert solution('2\\n1\\n100000') == '0'\nassert solution('4\\n1 3 3 7') == '2'\nassert solution('4\\n1 100000\\n3\\n3\\n7') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\nassert solution('3\\n1 100000 1 100000 1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n100000') == '0'\nassert solution('2\\n1 100000') == '0'\nassert solution('2\\n1 1') == '1'\nassert solution('10\\n
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 3 7\\n') == 2\nassert solution('2\\n1 100000\\n') == 0\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''3 2''') == '-1'\nassert solution('''7 4 3''') == '1 0 0 0 0 0 0 0 0'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('2\\n2') == '-1'\nassert solution('3\\n2') == '-1'\nassert solution('5\\n2') == '2 2 0'\nassert solution('10\\n3') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\n'''\nn, m = [int(x) for x in stdin.split(' ')]\n\nexams = []\nfor i in range(m):\n    s, d, c = [int(x) for x in stdin.split(' ')]\n    exams.append((s, d, c))\n\nans = solution(stdin)\nprint(ans)\n'''\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '-1'\nassert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2 2'\nassert solution('2 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n\n\n>>> from itertools import permutations as p\n>>> def solution(stdin: str) -> str:\n...     n, m = map(int, stdin.split())\n...     a = [0] * (m+1)\n...     for i in range(1, m+1):\n...         s, d, c = map(int, stdin.split())\n...         for j in range(s, d+1):\n...             a[j] = i\n...     return''.join(map(str, p(a)))\n\n>>> assert solution('1 2') == '2 2'\n>>> assert solution('2 2') == '-1'\n>>> assert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n>>> assert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n>>> assert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('4 5') == '1 1 0'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"2 2\") == \"-1\"\n\n\n\n-----Alternate Solutions-----"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''10 2\n8 7 2\n1 8 2''') == '-1'\nassert solution('''10 4\n1 5 1\n2 6 2\n3 7 3\n4 8 4\n5 9 5\n6 10 6''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1') == '2 2 1 1 0 3 3'\nassert solution('5 2') == '-1'\nassert solution('3 2') == '2 2 1 0 3 3'\nassert solution('10 3') == '2 2 1 1 0 3 3 4 4 4'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == -1\nassert solution('10 5') == 7\nassert solution('12 18') == 3\nassert solution('120 51840') == 7\nassert solution('42 42') == 0\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('42 42') == '0'\nassert solution('120 42') == '0'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('54315 56437') == '7'\nassert solution('182674 185156') == '0'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\nassert solution(\"40 65\") == \"-1\"\nassert solution(\"10000000 1000000000\") == \"1\"\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\"\"\"\n\nn, m = map(int, stdin.split(' '))"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"-1\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\"\"\"\n\n\"\"\"\nSubtask: The total number of possible combinations is Catalan number. The formula is $C_n = \\frac{2}{n+1}n^n$.\n\nTo find the number of the possible combinations, we can use binomial coefficient. For example, the number of the combinations for $n=3$ is $3! = 6$. Hence, the formula for $C_n$ is $C_n = 3! = 6$.\n\nCreate a function to calculate the binomial coefficient.\n\nInput: $n$ and $k$ are integers, $n$ non-negative and $k$ non-negative.\nOutput: The number of the combinations of $k$ elements out of $n$ elements.\nConstraints:\n\n0 \u2264 $n$ \u2264 $10^5$\n0 \u2264 $k$ \u2264 $n$\n\"\"\""
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n\"\"\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'catcat'\nassert solution(stdin) == 'ababababa'\n\nprint('Test success!')"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abcd') == 'abcd'\nassert solution('aabab') == 'aabab'\nassert solution('aabb') == 'aabb'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('ab') == 'ab'\nassert solution('a') == 'a'\nassert solution('') == ''\n\n\n\nimport unittest\n\n\nclass TestSolution(unittest.TestCase):\n    def test_sample_1(self):\n        self."
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\nacd''') == 'acd'\nassert solution('''1\na''') == 'a'\nassert solution('''1\na''') == 'a'\nassert solution('''2\nacd''') == 'acd'\nassert solution('''1\na''') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'acat'\nassert solution(stdin) == 'catcat'\nassert solution(stdin) == 'cat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('baa') == 'baab'\nassert solution('a') == 'a'\nassert solution('aaaaaa') == 'aaaaaa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba', 1) == 'ababababa'\nassert solution('cat', 1) == 'catcat'"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n1\") == \"0\"\nassert solution(\"5\\n2 1 2 2\") == \"3\"\nassert solution(\"4\\n8 3 5 2\") == \"2\"\nassert solution(\"6\\n6 6 6 6\") == \"0\"\nassert solution(\"8\\n3 5 2 6 8\") == \"1\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 3') == '1'\nassert solution('2\\n1 3 2') == '1'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '1 4'\nassert solution('8') == '0'\nassert solution('8 3 5 2') == '2 1 4'\n\n\n\"\"\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''5\n2 1 2 4 3\n''') == ''\nassert solution('''5\n3 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n0\") == \"0\\n0\\n\"\nassert solution(\"3\\n3\\n1\") == \"0\\n1\\n\"\nassert solution(\"3\\n3\\n2\") == \"0\\n0\\n\"\nassert solution(\"4\\n4\\n1 2 3 4\") == \"0\\n0\\n\"\nassert solution(\"4\\n4\\n4 1 2 3\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 2 4\n''') == '0'\nassert solution('''5\n2 1 2 2 2\n''') == '3'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''5\n2 1 2 4 5\n''') == '2'\nassert solution('''5\n2 1 2 2 2\n''') == '1 4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n2 1 2 4\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 3 1 2''') == '2'\nassert solution('''10\n10 10 10 10 10 10 10 10 10 10 10''') == '0'\nassert solution('''10\n2 1 2 4 3''') == '0'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''2\n1 1''') == '1'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 1 2 2\") == \"0\"\nassert solution(\"2\\n2 1 2 2\") == \"0\"\nassert solution(\"2\\n2 1 2 2\") == \"0\"\nassert solution(\"2\\n2 1 2 2\") == \"0\"\nassert solution(\"2\\n2 1 2 2\") == \"0\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\", \"\") == \"\"\nassert solution(\"a\", \"\") == \"\"\nassert solution(\"a\", \"a\") == \"a\"\nassert solution(\"aa\", \"a\") == \"a\"\nassert solution(\"aa\", \"aa\") == \"aa\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('abac') == '-1'\n\n\n-----Solution Summary-----\n\nThe idea here is to add all the subsets of a string into a set, and calculate the cost by going through the string and adding the cost of every symbol. If the length of the set is larger than the size of the set, then we can not achieve a set with the required size.\n\nIf the length of the set is smaller than the size of the set, then we can achieve the set with the required size. The set cannot be the empty set because that is an infinite number of subsets. Then we must calculate the cost by adding the cost of every symbol that is not in the set.\n\nThe cost of adding a symbol to the set is equal to the number of symbols in the set minus 1. The symbol in the set that is not in the string will not change the cost of the set, because it's not necessary to include it.\n\nIn the case of string of length $n$, we can have $n - 1$ subsets of size $n - 1$. Then the cost of the first element in the set is equal to the sum of the costs of the other elements. The cost of the other elements is equal to the number of symbols in the set minus the number of symbols in the string, and the cost of the first element in the set is equal to the cost of the first element in the string plus the cost of the last symbol in the set.\n\nIf the length of the set is equal to the size of the set, then the cost of the first element is equal to the cost of the last symbol in the set plus the cost of the first element in the string minus the cost of the last symbol in the string.\n\n\"\"\""
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5\\n'\n    'asdf\\n'\n    ) == '4\\n'\nassert solution('5 6\\n'\n    'aaaaa\\n'\n    ) == '15\\n'\nassert solution('5 7\\n'\n    'aaaaa\\n'\n    ) == '-1\\n'\nassert solution('10 100\\n'\n    'ajihiushda\\n'\n    ) == '233\\n'\nassert solution('9 100\\n'\n    'ajihiushda\\n'\n    ) == '233\\n'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\n\n\"\"\"\n\n\"\"\"\nn, k = map(int, stdin.readline().split(' '))\ns = stdin.readline().strip()\n\ndp = [0] * (k + 1)\n\nfor i in range(1, n + 1):\n    for j in range(k, 0, -1):\n        if s[i - 1] == s[i - 1 - j]:\n            dp[j] = 1 + dp[j - 1]\n            if j == 1:\n                print(dp[1])\n                exit()\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('asdfa') == '-1'\nassert solution('aaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"asdf\") == 4\nassert solution(\"aaaaa\") == 15\nassert solution(\"ajihiushda\") == 233\n\n\n'''\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\ns = stdin.splitlines()[1]"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abaca\") == \"aabaca\"\nassert solution(\"asdf\") == \"aasdf\"\nassert solution(\"ab\") == \"aba\"\nassert solution(\"\") == \"\"\nassert solution(\"asdf\") == -1\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '-1'\nassert solution('adf') == '-1'\nassert solution('asf') == '-1'\nassert solution('sdf') == '-1'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\\n3 4\\n2 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300\\n1 301\\n1 302\\n1 303\\n1 304\\n1 305\\n1 306\\n1 307\\n1 308\\n1 309\\n1 310\\n1 311\\n1 312\\n1 313\\n1 314\\n1 315\\n1 316\\n1 317\\n1 318\\n1 319\\n1 320\\n1 321\\n1 322\\n1 323\\n1 324\\n1 325\\n1 326\\n1 327\\n1 328\\n1 329\\n1 330\\n1 331\\n1 332\\n1 333\\n1 334\\n1 335\\n1 336\\n1 337\\n1 338\\n1"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 3\\n1 4') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 2\\n1 2\\n1 3\\n1 4\\n2 3') == 'NO'\nassert solution('4 5 2\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 3\") == \"YES\\n2 1\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"NO\\n\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"YES\\n1 2\\n1 3\\n\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\") == \"NO\\n\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n'''\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"NO\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"NO\"\nassert solution(\"4 5 2\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\\n4 1\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n1 4\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"\nassert solution(\"4 6 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\\n5 6\") == \"YES\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n\"\nassert solution(\"3 3 3\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"NO\"\n\n\n------\n\nimport sys"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3') == 'NO'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'\n\n\n>>> from io import StringIO\n>>> from unittest import mock\n>>> fakestdout = StringIO()\n>>> with mock.patch('sys.stdout', fakestdout):\n...     solution('4 5 1')\n...     output = fakestdout.getvalue().strip()\n>>> output\n'YES\\n2 1\\n2 3\\n3 4\\n'\n>>>\n>>> fakestdout = StringIO()\n>>> with mock.patch('sys.stdout', fakestdout):\n...     solution('4 5 3')\n...     output = fakestdout.getvalue().strip()\n>>> output\n'NO'\n>>>\n>>> fakestdout = StringIO()\n>>> with mock.patch('sys.stdout', fakestdout):\n...     solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n')\n...     output = fakestdout.getvalue().strip()\n>>> output\n'NO'\n>>>\n>>> fakestdout = StringIO()\n>>> with mock.patch('sys.stdout', fakestdout):\n...     solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n')\n...     output = fakestdout.getvalue().strip()\n>>> output\n'NO'\n>>>"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('01:00\\n05:00') == '04:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '03:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('10:00 11:00') == '11:30'\nassert solution('11:10 11:12') == '11:11'\nassert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '10:30'\nassert solution('''11:10''') == '11:11'\nassert solution('''01:02''') == '02:02'\nassert solution('''03:02''') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"01:00\\n02:00\") == \"00:30\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1:00\\n2:00\") == \"01:30\"\nassert solution(\"2:00\\n3:00\") == \"02:30\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 2\nassert solution(\"27\") == 5\nassert solution(\"42\") == 6\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 2\nassert solution(\"27\") == 5\nassert solution(\"42\") == 6\nprint(\"Correct\")\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1''') == 1\n\nassert solution(\n'''4''') == 2\n\nassert solution(\n'''27''') == 5\n\nassert solution(\n'''42''') == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('23') == '5'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"2 6\") == \"1\"\nassert solution(\"0 4\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 3\\n') == 2\nassert solution('1 3\\n2 6\\n0 4\\n3 3\\n') == 1\nassert solution('2 3\\n1 3\\n0 4\\n1 20\\n0 4\\n') == 7\nassert solution('3 10\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == 2\nassert solution('2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == 0\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n0 4\n3 3\n''') == '0'\n\nassert solution('''2\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''4\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '0'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 3\n2 6\n0 4\n3 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n4 5\n1 2\n9 20\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n3 10\n1 5\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n3\n4 5\n1 2\n9 20\n\"\"\") == \"4\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('10\\n10\\n1 2\\n9 20\\n1 10\\n0 4\\n') == '0'\n\n\n-----\n\nNote:\n\nTest cases have been provided to you, if you would like to use your own data, please contact the author.\n\n----\n\n\n\n\"\"\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n'''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n''') == '7'\n\nassert solution('''\n2\n3 10\n1 5\n3 3\n3 3\n''') == '4'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('2\\n4\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '0'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\n\n\n-----Solutions Overview-----\n\n\"\"\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\nassert solution(\"1\\n3 10\\n1 5\\n\") == \"4\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"NO\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\""
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''2 1 1 2 5''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''4 5 3''') == 'YES'\nassert solution('''4 1 1 2 5''') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('5') == 'YES'\nassert solution('1 2 1 3 2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('10 10') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 4\") == \"YES\"\nassert solution(\"4\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"4\\n4 5 3\") == \"NO\"\nassert solution(\"5\\n5 5 5 5 5\") == \"YES\"\nassert solution(\"2\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'NO'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''2\n10 100''') == 'NO'\nassert solution('''2\n10 100 5''') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n10 1 10\") == \"YES\"\nassert solution(\"1\\n10\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1 2') == 'YES'\nassert solution('2\\n1 2 3') == 'NO'\nassert solution('3\\n4 5 3') == 'YES'\nassert solution('10\\n10') == 'YES'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ajihiushda') == 233\nassert solution('aaaaa') == 15\nassert solution('asdf') == 4\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\nassert solution('asdf') == '4'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('a') == '-1'\nassert solution('aaaaa') == '15'\nassert solution('aaaaaaaaaaaaaa') == '-1'\nassert solution('aab') == '2'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\n\n\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abac') == -1\nassert solution('asdf') == -1\nassert solution('aa') == -1\nassert solution('asdf') == -1\nassert solution('asdfasdf') == -1\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"asdf\") == 4\nassert solution(\"ajihiushda\") == 15\nassert solution(\"aaaaa\") == -1\nassert solution(\"aaaaa\") == -1\nassert solution(\"aaaaa\") == -1\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcabc') == '-1'\nassert solution('aababc') == '4'\nassert solution('abacab') == '2'\nassert solution('abcaa') == '5'\nassert solution('abcab') == '3'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'\n\nassert solution('2 1 1') == '4'\n\nassert solution('3 2 2') == '7'\n\nassert solution('1 100 1') == '3'\n\nassert solution('30 20 10') == '39'"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('6 7 2') == '4'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import deque"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"2 2 1\") == \"4\"\nassert solution(\"1 100 1\") == \"3\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '4'\nassert solution('2 1 1') == '7'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\n'''\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 3\n3 1''') == \"YES\"\nassert solution('''2 4\n5 1\n3 2\n1 3\n2 2\n4 2\n5 5\n3 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"NO\"\n'''\n1 2\n2 3\n3 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"NO\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"5 7\") == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\nThe second test case is a square with only two types of tiles. [Image] \n\nMasha can construct, for example, the following square of size $2 \\times 2$ which is a symmetric matrix: $\\left. \\begin{array}{c|c} \\hline {1} & {2} \\\\ \\hline {2} & {1} \\\\ \\end{array} \\right.$\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n    \n\"\"\"\n    ) == 'YES'\n\n\nassert solution(\n\"\"\"\n2\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n    \n\"\"\"\n    ) == 'NO'\n\n\nassert solution(\n\"\"\"\n3\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n    \n\"\"\"\n    ) == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('3 2') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('2 2') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string\n\n\"\"\"\n\nimport sys\nfrom typing import List\n\nT = int(sys.stdin.readline().strip())\n\nfor _ in range(T):\n    n, m = list(map(int, sys.stdin.readline().split()))\n    tiles = []\n    for _ in range(2 * n):\n        tiles.append(list(map(int, sys.stdin.readline().split())))\n\n    if m!= max(max(tiles)[0], max(tiles)[1]) or m!= min(min(tiles)[0], min(tiles)[1]):\n        print('NO')\n    else:\n        print('YES')"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input/2.in\").read()) == \"YES\"\nassert solution(open(\"test_input/3.in\").read()) == \"NO\"\nassert solution(open(\"test_input/4.in\").read()) == \"YES\"\nassert solution(open(\"test_input/5.in\").read()) == \"NO\"\nassert solution(open(\"test_input/6.in\").read()) == \"YES\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('11') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''8''') == '1'\nassert solution('''10''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n4\\n5\\n2\\n6\\n\") == \"1\"\nassert solution(\"5\\n3\\n4\\n5\\n2\\n6\\n\") == \"1\"\nassert solution(\"2\\n3\\n4\\n5\\n2\\n6\\n\") == \"1\"\nassert solution(\"2\\n3\\n4\\n5\\n2\\n6\\n\") == \"1\"\nassert solution(\"1\\n3\\n4\\n5\\n2\\n6\\n\") == \"0\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n4\\n5\\n6') == '0'\nassert solution('1\\n3\\n4\\n5\\n6') == '1'\nassert solution('1\\n3\\n4\\n5\\n6') == '1'\nassert solution('1\\n3\\n4\\n5\\n6') == '1'\nassert solution('1\\n3\\n4\\n5\\n6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\") == 0\nassert solution(\"1\\n3\\n4\") == 1\nassert solution(\"1\\n3\\n4\\n5\") == 1\nassert solution(\"2\\n2\") == 0\nassert solution(\"2\\n2\\n2\") == 0\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''10''') == '1'\nassert solution('''100''') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"()\") == 5\nassert solution(\"((()))\") == 5\nassert solution(\"(()()))()\") == 5\nassert solution(\"()((()))()\") == 4\nassert solution(\"((()))()\") == 0\n\n\n\"\"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''(()\n''') == '0'\nassert solution('''()()\n''') == '1'\nassert solution('''()(())\n''') == '2'\nassert solution('''()()()\n''') == '3'\nassert solution('''(((()))())\n''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"()\") == \"\"\nassert solution(\"((()))\") == \"\"\nassert solution(\"((()))()\") == \"\"\nassert solution(\"()((()))()\") == \"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()') == '1'\nassert solution('(()') == '1'\nassert solution('()()') == '1'\nassert solution('(()())') == '3'\nassert solution('((()()))') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1 + 1\")) == \"1 + 1\"\nassert solution(input(\"(1 + 1)\")) == \"1 + 1\"\nassert solution(input(\"(1)\")) == \"\"\nassert solution(input(\"(1 + 1)\")) == \"1 + 1\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_s) == output_s\n\"\"\"\n\nn = int(input())\ns = input()"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"3-1.test\").read()) == \"0\"\nassert solution(open(\"3-2.test\").read()) == \"3\"\nassert solution(open(\"3-3.test\").read()) == \"3\"\nassert solution(open(\"3-4.test\").read()) == \"0\"\nassert solution(open(\"3-5.test\").read()) == \"0\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('()())') == '4'\nassert solution('(()()') == '0'\nassert solution('((()))()') == '5'\nassert solution('(()())') == '4'\nassert solution('((()))())') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()') == 0\nassert solution('()()') == 1\nassert solution('(()())') == 1\nassert solution('(()())(())') == 1\nassert solution('((()))') == 1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"abcdefg\") == \"-1\"\nassert solution(\"abc\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"999\") == \"998\"\nassert solution(\"9999\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('66455') == '-1'\nassert solution('457655') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('7000851') == '1'\n\"\"\"\n\nfrom itertools import permutations\nfrom collections import Counter\nfrom typing import Counter as tdict\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('200000000') == '-1'\nassert solution('1900000') == '-1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('acbdefg') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''9\nabacbecfd\n''') == '2'\n\nassert solution(\n'''8\naaabbcbb\n''') == '2'\n\nassert solution(\n'''7\nabcdedc\n''') == '3'\n\nassert solution(\n'''5\nabcde\n''') == '1'\n\nassert solution(\n'''10\nabcdefghij\n''') == '1'"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('adcddc') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abcdedc') == ''\nassert solution('aaabbcbb') == '1 1 1 1 1 1 1 1 1'\nassert solution('aabbbccddee') == '1 1 1 1 1 1 1 1 1'\nassert solution('aabbbcccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcde') == '1 1 1 1 1 1'\nassert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2'\nassert solution('abcdedc') == '3'\nassert solution('aaabbccbb') == '1 2 1 2 1 2 1 2 1 2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('ab') == ''\nassert solution('abc') == ''\nassert solution('abcd') == ''\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'\nassert solution('''4\nabcd\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 1\nassert solution('aa') == 1\nassert solution('aba') == 1\nassert solution('abac') == 2\nassert solution('abcde') == 3\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 1 2 1 2 1 2 1 2'\nassert solution('abcde') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('abcdefg') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('aaaaa') == '1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abcdef') == '1 1 1 1 1 1 1 1 1'\nassert solution('ac') == '1 1 1 1'\nassert solution('bbb') == '1 1 1 1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''a''') == 'NO'\nassert solution('''aba''') == 'YES'\nassert solution('''abacaba''') == 'NO'\nassert solution('''ba''') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacaba') == 'YES\\na\\nb\\nb\\na\\na\\na\\na\\na\\na\\na'\nassert solution('qwerty') == 'YES\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na'\nassert solution('qwerty2') == 'NO'\nassert solution('abcdefghijklmnop') == 'YES\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop'\nassert solution('abcdefghijklmnop') == 'YES\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop\\nabcdefghijklmnop'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'NO'\nassert solution('abacaba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('abacaba') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcd\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwertyuio\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nabc\\nabc\\n') == 'YES\\nabcabcabc'\nassert solution('1\\nabca\\nabc\\n') == 'NO'\nassert solution('2\\nab\\nac\\n') == 'NO'\nassert solution('2\\nab\\nab\\n') == 'YES\\naabab'\nassert solution('2\\nabc\\nabc\\n') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"abacaba\") == \"a\"\nassert solution(\"ba\") == \"abacaba\"\nassert solution(\"qwerty\") == \"NO\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('a') == 'NO'\nassert solution('qwerty') == 'YES'\nassert solution('asdfghjkl') == 'NO'\nassert solution('zxcvbnm') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nimport unittest\n\nfrom solutions.kyu_7.rearrange_the_strings import rearrange\n\n\nclass TestRearrangeTheStrings(unittest.TestCase):\n    def test_equal(self):\n        self.assertEqual(rearrange(stdin), result)"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('1\\n1234') == '0'\nassert solution('2\\n1 1') == '1'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"12 34 55 43 21\") == \"5\"\nassert solution(\"123456123456123456789\") == \"5\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('3 1 2 1 3') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('8 100\\n
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4\\n') == '5\\n'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0\\n'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5\\n'\nassert solution('9 10\\n7 6 5 4 3 2 1\\n') == '6\\n'\nassert solution('12 20\\n23 12 22 2 12 34 2 22 12\\n') == '5\\n'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('8 10') == '16'\nassert solution('5 1') == '6'\nassert solution('5 4') == '12'\nassert solution('4 9') == '14'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4''') == \"12\"\nassert solution('''3 9''') == \"14\"\nassert solution('''9 3''') == \"14\"\nassert solution('''3 6''') == \"12\"\nassert solution('''506 2708''') == \"3218\"\n\n\n-----"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\nassert solution('9 3') == '14'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4') == '12'\nassert solution('1 4') == '8'\nassert solution('4 6') == '14'\nassert solution('6 3') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '14'\nassert solution('506 2708') == '3218'\nassert solution('8 5') == '8'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('5 6') == '14'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdef') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abacbecfd\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\"\nassert solution(\"abc\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\nassert solution('''4\nabcde\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcdedc\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"abcde\") == \"NO\"\nassert solution(\"abcde\") == \"NO\"\nassert solution(\"abced\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcde') == 'NO'\nassert solution('aaabbcbb') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'YES'\nassert solution('abcdefghijklmnopqrstuvwxy') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abc') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbccdd') == 'NO'\nassert solution('abcedbebc') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('a') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1 1'''\n) == '25'\n\nassert solution(\n'''2 2'''\n) == '-1'\n\nassert solution(\n'''1 2'''\n) == '-1'\n\nassert solution(\n'''2 4'''\n) == '25'\n\nassert solution(\n'''10 20'''\n) == '50'"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('20 10') == '5'\nassert solution('4 10') == '-1'\nassert solution('100 10') == '-1'\nassert solution('10 100') == '-1'\n\"\"\""
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('5 3') == '6'\nassert solution('5 4') == '5'\nassert solution('5 7') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('2 2') == '25'\nassert solution('2 3') == '-1'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"25\"\n\"\"\"\n\n\"\"\"\nAC\n\"\"\"\n\nA,B = map(int,stdin.split())\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('0 0') == '-1'\nassert solution('2 1') == '25'\nassert solution('1 0') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split(\" \")[-1]\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''3 3''') == '-1'\nassert solution('''4 4''') == '34'\nassert solution('''50 50''') == '30'\nassert solution('''2 3''') == '25'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == None\nassert solution(input()) == None\nassert solution(input()) == None\nassert solution(input()) == None\nassert solution(input()) == None\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"26 3\") == \"NO\"\nassert solution(\"8 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution('1 1') == 'YES'\nassert solution('1 2 4 5 6 8') == 'YES'\nassert solution('9 3') == 'NO'\nassert solution('9 4') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''26 6''') == \"YES\"\nassert solution('''8 3''') == \"NO\"\nassert solution('''1 1''') == \"YES\"\nassert solution('''9 4''') == \"NO\"\nassert solution('''1 1''') == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1\\n'\nassert solution('9 4') == 'NO\\n'\nassert solution('2 2') == 'YES\\n2\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n\nn, k = map(int, stdin.strip().split(' '))"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3\n''') == 'NO\\n'\nassert solution('''1 1\n''') == 'YES\\n1\\n'\nassert solution('''9 4\n''') == 'NO\\n'\nassert solution('''9 3\n''') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 1') == 'NO'\nassert solution('26 4') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('8 4') == 'YES'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''5 2\n300 -300\n1 299\n1 123\n40 -45\n1 -1\n50 -3\n8 -4\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\nprint(\"solution(): correctness test case passed.\")"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\") == \"\"\nassert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n40 -45\\n\") == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"\nassert solution(\"10 9\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"3\"\nassert solution(\"10 9\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"\nassert solution(\"3 1\\n100 200\\n100 200\\n100 200\\n\") == \"2\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n40 -45\") == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"1\\n2\\n3\"\nassert solution(\"1\\n-2\") == \"1\"\nassert solution(\"2\\n-1\") == \"2\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''2 10\n1 -100\n-100 -1''') == '1'\nassert solution('''1 1\n1 -1''') == '1'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\n\n'''\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == answer()\n\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'YES\\n1\\n1'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'YES\\n1\\n1\\n1'\nassert solution('4\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 8 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(\"1 1 1 1 1 3 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n\"\"\") == \"\"\"\nYES\n1 2 2 1\n8 2 2 8\n8 2 2 8\n1 2 2 1\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 1 1 1 1 3 3 3 3 3\n\"\"\") == \"\"\"\nYES\n1 3 1\n3 1 3\n1 3 1\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 1 1 1 1 3 3 3 3 3\n\"\"\") == \"\"\"\nNO\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('3 3 2 2 1 1') == 'YES'\nassert solution('1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1') == 'NO'\nassert solution('1 2 1 1 1 3 3 3 3 3 3 3 2 1 8 8 1') == 'YES'\nassert solution('1 1 1 1 1 3 3 3 3 3 3 3 3 2 1 8 8 1') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1') == 'YES\\n1\\n2\\n1'\nassert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n') == 'NO'\n\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n10\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(\"2\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 2 2 1\\n3 2 2 3\\n3 2 2 1\\n1 2 2 1\\n\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"NO\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n1 2 1 8 4 3 8 8 3 4 8 9 2 1 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n4\n1 1 1 1 1 3 3 3 3\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n1 1 1 1 1 3 3 3 3\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n1\n10\n\"\"\") == \"YES\""
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"3\\n1 1 1 1 1 3 3 3 3\\n\")) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(input(\"5\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\")) == \"NO\"\nassert solution(input(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\")) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(input(\"2\\n1 1\\n1 1\\n\")) == \"YES\\n1 1\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n4 -2') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n', 'YES') == 'NO'\n\n\n\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''5 3\n10 -2\n8 -1\n3 2\n5 -3\n''') == 'NO'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('4 6') == 'YES'\nassert solution('10 -2') == 'YES'\nassert solution('8 -1') == 'YES'\nassert solution('3 5') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES\\n'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES\\n'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO\\n'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES\\n'\nassert solution('5 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO\\n'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3 2\\n1 2 1') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5\\n2\\n1') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\"\"\""
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\n\n\n\n'''\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 11') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nConstraints:\n    * 1 <= n <= 10^5\n    * 1 <= m <= 10^5\n    * 1 <= d <= 10^5\n    * 1 <= c_i <= n\n    * c_i + c_{i+1} +... + c_m <= n\n    * 1 <= c_i <= n\n    * c_i + c_{i+1} +... + c_m <= n\n    * 1 <= n <= 10^5\n    * 1 <= m <= 10^5\n    * 1 <= d <= 10^5\n    * 1 <= m <= n\n    * 1 <= c_i <= n\n    * 1 <= c_i <= n\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"7 3 2\") == \"NO\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\n\n\"\"\""
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 1 4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"bbaba\"\n    \"bb\"\n) == 3\n\nassert solution(\n    \"baaba\"\n    \"ab\"\n) == 2\n\nassert solution(\n    \"abcde\"\n    \"abcde\"\n) == 0\n\nassert solution(\n    \"asdfasdf\"\n    \"fasd\"\n) == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''bbaba\nbb''') == 3\nassert solution('''baaba\nab''') == 2\nassert solution('''abcde\nabcde''') == 0\nassert solution('''asdfasdf\nfasd''') == 3\nassert solution('''aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaaaaaaaaaaa''') == 19\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('asdfasdf', 'fasdf') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''bbaba\nbb''') == 3\nassert solution('''baaba\nab''') == 2\nassert solution('''abcde\nabcde''') == 0\nassert solution('''asdfasdf\nfasd''') == 3\nassert solution('''aaaa\naaaa''') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''bbaba\nbb\n''') == '3'\nassert solution('''baaba\nab\n''') == '2'\nassert solution('''abcde\nabcde\n''') == '0'\nassert solution('''asdfasdf\nfasd\n''') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('a', 'a') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('abcdefg', 'defg') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''bbaba''') == 3\nassert solution('''bb''') == 0\nassert solution('''baaba''') == 3\nassert solution('''ba''') == 0\nassert solution('''abcde''') == 3\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('3.14159') == '1 1'\nassert solution('0.9') == '1 1'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\nassert solution(1.1) == \"0 0\"\nassert solution(1.1) == \"0 0\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.99999') == '1 1'\nassert solution('0.99998') == '2 2'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.200') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.142857') == '7 2'\nassert solution('0.7236') == '9 9'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''10 3 1''') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\nassert solution(\"8 4 2\") == \"YES\\n2 6\\n2 7\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\n\nprint(solution(input()))"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3 3') == 'NO'\nassert solution('6 2 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('8 5 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 3 4') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('6 2 3') == 'YES'\nassert solution('6 3 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('10 4 3') == 'NO'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\nassert solution('8 1 3') == 'YES\\n1 2\\n1 3\\n2 3'\nassert solution('10 4 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3 3\") == \"NO\"\nassert solution(\"6 2 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"3 2 3\") == \"YES\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n\nn, a, b, x = [int(x) for x in sys.stdin.readline().strip().split()]"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\nassert solution('''4 4 0''') == '1001100'\n'''\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n\n\n'''\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin) # apply the test function to itself\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n\"\"\""
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == \"YES\\nacbbac\"\nassert solution('''3\naa\nbc\n''') == \"YES\\ncacbacbab\"\nassert solution('''1\ncb\nac''') == \"NO\"\nassert solution('''3\na\nb\nc''') == \"NO\"\nassert solution('''5\naaa\naac\n''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\nab\\nbc\") == \"YES\\nacbbac\"\nassert solution(\"4\\naa\\nbc\") == \"YES\\ncacbacbab\"\nassert solution(\"2\\naa\\naa\\naa\") == \"YES\\naa\\naa\\naa\"\nassert solution(\"2\\naa\\naa\\naa\\naa\\naa\") == \"NO\"\nassert solution(\"2\\nab\\nab\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('inputs/test_1.txt') == 'YES\\nabcccba'\nassert solution('inputs/test_2.txt') == 'NO'\nassert solution('inputs/test_3.txt') == 'YES\\nacbacbabc'\nassert solution('inputs/test_4.txt') == 'YES\\nccccccccc'\nassert solution('inputs/test_5.txt') == 'YES\\ncccbaabccc'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\naabca'\nassert solution('''3\naa\nbc\n''') == 'YES\\nacabc'\nassert solution('''1\ncb\nac\n''') == 'YES\\nacbabc'\nassert solution('''1\naa\nbc\n''') == 'NO'\nassert solution('''1\na\na\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ab\", \"ab\") == \"YES\"\nassert solution(\"ab\", \"ba\") == \"NO\"\nassert solution(\"ab\", \"cb\") == \"YES\"\nassert solution(\"ab\", \"ac\") == \"NO\"\nassert solution(\"a\", \"a\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\nab\nbc\n''') == 'YES\\nacbbac'\n\nassert solution('''3\naa\nbc\n''') == 'YES\\ncacbacbab'\n\nassert solution('''1\ncb\nac\n''') == 'YES\\ncbacbab'\n\nassert solution('''4\nab\nac\n''') == 'NO'\n\nassert solution('''2\nca\ncb\n''') == 'NO'"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ab\", \"bc\") == \"YES\\nacbbac\"\nassert solution(\"aa\", \"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"cb\", \"ac\") == \"YES\\ncbacbab\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ab\", \"bc\") == \"YES\\nacbacbab\"\nassert solution(\"ca\", \"bc\") == \"NO\"\nassert solution(\"ab\", \"ab\") == \"YES\\nabababab\"\nassert solution(\"cb\", \"ac\") == \"YES\\ncacbacbab\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\nassert solution('4\\n1 1 1') == '1 2 3 4'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 1 1\n''') == '3 1 2'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''2\n2\n2 1\n''') == '2 1'\nassert solution('''4\n1 1 1\n''') == '1 2 3 4'\nassert solution('''6\n-1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 1 1') == '3 1 2'\nassert solution('3\\n-2 1') == '-1'\nassert solution('7\\n-2 -1 -1 1 2 2 3') == '-1'\nassert solution('7\\n3 2 1 2 3 4 4 3') == '3 1 2'\nassert solution('7\\n1 1 1 1 1 1 1 1') == '1 2 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n-1 -1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''6\n-1 -1 -1 1 1 1\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''4\n1 1 1 1''') == '1 2 3 4'\nassert solution('''2\n2 1''') == '1 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n-1 2 2') == '1 2 3 4'\nassert solution('3\\n1 1 1') == '1 2 3'\nassert solution('5\\n1 1 1 1 1') == '1 2 3 4 5'\nassert solution('5\\n-1 2 2') == '-1'\nassert solution('6\\n-1 2 -1') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2\"\nassert solution(\"3\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"-1 1\") == \"-1\"\nassert solution(\"1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"2 2\") == \"1 2\"\nassert solution(\"3 3\") == \"1 3\"\nassert solution(\"3 3 3\") == \"1 2 3\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2 2 2 3 3') == '1'\nassert solution('2\\n2 2 2 3 3') == '2'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('5\\n2 2 2 3 3') == '2'\n\n\n\"\"\"\n\n\"\"\"\nSolution:\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\n\"\"\"\n\nn = int(input())\ncoords = list(map(int, input().split()))\n\ndp = [0 for _ in range(n)]\n\nfor i in range(n):\n    if i < 2:\n        dp[i] = coords[i] - i\n    else:\n        dp[i] = min(dp[i - 1] + abs(coords[i] - coords[i - 1]), dp[i - 2] + abs(coords[i] - coords[i - 2]))\n\nprint(dp[-1])\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3''') == '1'\nassert solution('''5\n2 2 2 3 3''') == '2'\nassert solution('''2\n2 2''') == '1'\nassert solution('''5\n2 2 2 3 3''') == '2'\nassert solution('''7\n1 2 2 3 4 5 6''') == '5'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n3 1 1 3\\n1 1 1 1 1\\n') == '1'\nassert solution('2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3\\n2 2 2 3 3') == '2'\nprint(solution(''))"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n1 2 3\"\n) == \"1\"\n\nassert solution(\n    \"5\\n2 2 2 3 3\"\n) == \"2\"\n\n\"\"\"\n\nn = int(input())\npositions = [int(x) for x in input().split()]\n\npositions.sort()"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n1 2 3\n'''\n) == '1'\n\nassert solution(\n'''\n5\n2 2 2 3 3\n'''\n) == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\n\nassert solution('''5\n2 2 2 3 3\n''') == '2'\n\nassert solution('''1\n0\n''') == '0'\n\nassert solution('''10\n2 2 2 3 3 4 4 4 4 4 4\n''') == '10'\n\nassert solution('''100\n4 4 4 4 4 4 4 4 4 4 4\n''') == '42'"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3 2 3 3 3\") == \"1\"\nassert solution(\"4 5 6 7 8\") == \"1\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3\\n2\\n2') == '2'\nassert solution('3\\n3\\n3') == '3'\nassert solution('5\\n2\\n2\\n2\\n2') == '2'\nassert solution('5\\n3\\n3\\n3\\n3') == '4'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n0\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"3\\n1\") == \"1\"\nassert solution(\"4\\n1\") == \"3\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '10'\n) == '5'\nassert solution(\n    '100'\n) == '50'\nassert solution(\n    '1000'\n) == '500'\nassert solution(\n    '10000'\n) == '1000'\nassert solution(\n    '100000'\n) == '5000'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1234567890') == '0'\nassert solution('100') == '2'\nassert solution('12345') == '5'\nassert solution('123456') == '6'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1000\") == \"\"\nassert solution(\"1000000\") == \"\"\nassert solution(\"10000000\") == \"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == '2'\n\nassert solution('''2\n''') == '4'\n\nassert solution('''3\n''') == '6'\n\nassert solution('''4\n''') == '8'\n\nassert solution('''5\n''') == '10'"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == \"5\"\nassert solution('3') == \"1\"\nassert solution('100') == \"28\"\nassert solution('1000') == \"265\"\nassert solution('12345678') == \"17\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1000\") == \"30\"\nassert solution(\"10000000\") == \"100\"\nassert solution
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"10\"\n) == \"5\"\nassert solution(\n    \"5\"\n) == \"5\"\nassert solution(\n    \"20\"\n) == \"10\"\nassert solution(\n    \"2\"\n) == \"0\"\nassert solution(\n    \"10\"\n) == \"5\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == '0 1'\nassert solution('1 1 0') == '0 1'\nassert solution('1 1 0') == '0 1'\nassert solution('0 0 3') == '3 3'\nassert solution('1 1 1') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3'\nassert solution('319\\n10 53 256\\n182 103 34') == '119 226'\nassert solution('686\\n479 178 29\\n11 145 530') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 1') == '0 1'\nassert solution('1 1 0') == '0 1'\nassert solution('0 0 3') == '0 1'\nassert solution('1 1 0') == '0 1'\nassert solution('3 0 0') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 3\\n3 0 0') == '0 3'\nassert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '''0 1'''\nassert solution('''1 1 1''') == '''0 1'''\nassert solution('''0 0 3''') == '''0 1'''\nassert solution('''3 0 0''') == '''3 3'''\nassert solution('''10 53 256''') == '''119 226'''\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1\\n'\nassert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1\\n'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15\\n'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15\\n'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3\\n'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1') == '1 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '3 3'\nassert solution(input()) == '119 226'\n\"\"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '3', 'Error!'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2', 'Error!'\nassert solution('''9\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7''') == '1', 'Error!'\nassert solution('''9\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7''') == '1', 'Error!'\nassert solution('''9\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7''') == '1', 'Error!'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"-8 8 9 -4 -3 1 1 2 2 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\nassert solution(\"-1 -2 -3 -4\") == \"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == '1 1'\nassert solution(\"-5\\n-4\\n-3\\n-2\\n-1\\n0\\n1\\n2\\n3\\n4\\n5\") == '3'\nassert solution(\"1\\n1\\n1\\n1\") == '3'\nassert solution(\"-5\\n-4\\n-3\\n-2\\n-1\\n0\\n1\\n2\\n3\\n4\\n5\") == '2'\nassert solution(\"3\\n1\\n1\\n1\") == '1 1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2 1 1 5 3\") == \"3\"\nassert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1 1\\n1 1\\n1 1\\n1 1\\n'\nassert solution('2\\n1\\n2\\n1') == '1 1\\n2 2\\n'\nassert solution('2\\n1\\n2\\n2') == '2 2\\n1 1\\n2 2\\n'\nassert solution('2\\n1\\n2\\n2\\n2') == '2 2\\n2 2\\n2 2\\n'\nassert solution('2\\n1\\n2\\n1\\n1') == '1 1\\n1 1\\n2 2\\n2 2\\n'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n-3\\n-2\\n-1\\n0\\n1\\n2\\n3\\n4\\n5') == '3\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('4\\n1 1 1 1\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('7\\n4 1 2 2 1 5 3\\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5') == '3\\n7 7\\n2 3\\n4 5\\n1 1'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5') == '4\\n4 4\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('3\\n1 1 1\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"3\\n7 7\"\nassert solution(\"7\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n\") == \"2\\n3 4\\n1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('4\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"NO\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"3\\n1 2 2\") == \"YES\"\nassert solution(\"3\\n1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1 1') == 'NO'\nassert solution('2\\n2 1') == 'YES'\nassert solution('2\\n1 1') == 'YES'\nassert solution('2\\n3 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\n\nassert solution('''2\n3 1 2''') == 'NO'\nassert solution('''2\n2 1 2''') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"3 1 2\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n3\\n2\") == \"YES\"\nassert solution(\"1\\n3\\n1\\n2\") == \"NO\"\nassert solution(\"2\\n4\\n1\\n3\") == \"YES\"\nassert solution(\"2\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n1\\n1\\n3\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('2\\n2') == 'NO'\nassert solution('1\\n3') == 'YES'\nassert solution('2\\n3') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('3\\n3 1 2\\n3 2 1') == 'YES'\nassert solution('3\\n2 1 3\\n3 2 1') == 'YES'\nassert solution('3\\n3 2 1\\n2 1 3') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n1 3') == 'YES'\nassert solution('1\\n1 1') == 'YES'\nassert solution('1\\n2 3') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n1 2\") == \"NO\"\nassert solution(\"2\\n1 2 3\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abcd') == '-1'\nassert solution('accd') == '-1'\nassert solution('abcd') == '-1'\nassert solution('abdfec') == 'abdfec'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6\nabcdef\nabdfec\n\n\"\"\"\n) == \"\"\"\n4\n3 5 4 5 \n\n\"\"\"\nassert solution(\n\"\"\"\n4\nabcd\naccd\n\n\"\"\"\n) == \"\"\"\n-1\n\"\"\"\nassert solution(\n\"\"\"\n8\nabcd\nbacd\n\n\"\"\"\n) == \"\"\"\n3\n3 2 1 1 \n\n\"\"\"\nassert solution(\n\"\"\"\n6\nabcd\nacde\n\n\"\"\"\n) == \"\"\"\n5\n3 2 2 1 \n\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4'\n\nassert solution('''4\nabcd\naccd\n''') == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''6\nbbcdef\nbcgdef\n''') == '3\\n1 4 4 3'\nassert solution('''10\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdef', 'abdfec') == '-1'\nassert solution('abcd', 'accd') == '0'\nassert solution('abcdef', 'abcd') == '3 5 4 5'\nassert solution('abcdef', 'abdfec') == '1'\nassert solution('abcdef', 'aefcd') == '2 4 2 3'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"-1\"\nassert solution(\"abcd\") == \"0\"\nassert solution(\"accd\") == \"1\"\nassert solution(\"acd\") == \"1\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'P'\nassert solution('ab') == 'PS'\nassert solution('abc') == 'SP'\nassert solution('aba') == 'PS'\nassert solution('baba') == 'PSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == \"SPPSPSPS\"\n\nassert solution(\n'''3\na\naa\naa\na\n''') == \"PPSS\"\n\nassert solution(\n'''2\na\nc\n''') == \"PS\"\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\na\\nba\\nabab\\na\\naa\\naaa\\na\\nabab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\na\\n\") == \"PS\"\nassert solution(\"2\\na\\na\\na\\n\") == \"PS\"\nassert solution(\"2\\na\\na\\nca\") == \"PS\"\nassert solution(\"3\\na\\naa\\na\\naa\") == \"PSPSPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PS'\nassert solution('a') == 'PS'\nassert solution('ba') == 'SPSS'\nassert solution('a') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'P'\nassert solution('abab') == 'SPSPSPS'\nassert solution('aab') == 'SP'\nassert solution('aaaa') == 'PPPPPPSSPPPPPPPPPPP'\nassert solution('ba') == 'SPPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\n\nassert solution('''3\na\naa\naa\na\n''') == 'PPSS'\n\nassert solution('''2\na\nc\n''') == 'PS'\n\nassert solution('''2\na\nc\n''') == 'PS'\n\nassert solution('''2\na\na\na\na\na\na\na\na\na\na\n''') == 'PPSPPPPPSPPPPP'"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n\n\"\"\""
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abcdef\") == \"abc\"\nassert solution(\"abcd\") == \"cba\"\nassert solution(\"abcdefgh\") == \"abc\"\nassert solution(\"abcdefghi\") == \"cba\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '-1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('3 5 2') == '0'\nassert solution('6 8 4 3') == '0'\nassert solution('0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''0''') == '0'\nassert solution('''100''') == '1'\nassert solution('''12 2 14 0''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8') == 1\nassert solution('2 4 6') == 2\nassert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 0') == 2\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('6 2 3 6 4 9 10') == '5'\nassert solution('7 19 2 22 22 22 22 22 22 19 19') == '1'\nassert solution('14 16 5 13 5 19 15 18 19 3 9 17 19 19 17 19 19 19 14 19 16 19 14 19 19 17 19 19') == '2'\nassert solution
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''3 6 9 12 15''') == '2'\nassert solution('''3 6 9 12 15''') == '2'\nassert solution('''3 6 9 12 15''') == '2'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"4 8 6 10 2\") == \"2\"\nassert solution(\"10 2 5 9 4 8\") == \"2\"\nassert solution(\"9 4 2 5 8 1\") == \"3\"\nassert solution(\"2 4 6 8 10 2\") == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 3 5 7 9\") == \"3\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 1 0 1 1 0 1 0 1 0\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"1 1 1 1 1\") == \"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"10\\n1 1 0 0 0\\n1 1 0 0 0\\n1 1 0 0 0\\n1 1 0 0 0\\n1 1 0 0 0\") == \"0\"\nassert solution(\"5\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 0 1 1\\n1 0 1 0\\n1 1 1 1\\n1 1 0 1\") == \"0\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '2'\n\n\n'''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0\\n') == '0'\nassert solution('2\\n0\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('1\\n0\\n') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0\\n'\n'3') == '2'\nassert solution('5\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1') == '0'\nassert solution('5\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1') == '0'\nassert solution('1\\n'\n'1') == '0'\nassert solution('1\\n'\n'1\\n'\n'1') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''3\n1 4 6''') == '0'\nassert solution('''15\n1 4 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '144'"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1 2\\n3') == '3'\nassert solution('1\\n1 2 3\\n4 5 6\\n7') == '3'\nassert solution('1\\n1 2 3 4 5\\n6 7 8 9 10\\n11') == '5'\nassert solution('1\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18 19\\n20 21 22 23 24 25 26\\n27 28 29 30 31 32 33 34\\n35 36 37 38 39 40 41 42 43 44\\n45 46 47 48 49 50 51 52 53 54\\n55 56 57 58 59 60 61 62 63 64 65 66\\n67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '11'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n1 2 3 4 5') == '1'\nassert solution('4\\n2 4 4 4 4') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('6\\n6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\nassert solution('1 2 3 4 5 6') == '0'\nassert solution('-1 -2 -3 -4 -5') == '0'\nassert solution('-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30 -31 -32 -33 -34 -35 -36 -37 -38 -39 -40 -41 -42 -43 -44 -45 -46 -47 -48 -49 -50 -51 -52 -53 -54 -55 -56 -57 -58 -59 -60 -61 -62 -63 -64 -65 -66 -67 -68 -69 -70 -71 -72 -73 -74 -75 -76 -77 -78 -79 -80 -81 -82 -83 -84 -85 -86 -87 -88 -89 -90 -91 -92 -93 -94 -95 -96 -97 -98 -99 -100 -101 -102 -103 -104 -105 -106 -107 -108 -109 -110 -111 -112 -113 -114 -115 -116 -117 -118 -119 -120 -121 -122 -123 -124 -125 -126 -127 -128 -129 -130 -131 -132 -133 -134 -135 -136 -137 -138 -139 -140 -141 -142 -143 -144 -145 -146 -147 -148 -149 -150 -151 -152 -153 -154 -155 -156 -157 -158 -159 -160 -161 -162 -163 -164 -165 -166 -167 -168 -169 -170 -171 -172 -173 -174 -175 -176 -177 -178 -179 -180 -181 -182 -183 -184 -185 -186 -187 -188 -189 -190 -191 -192 -193 -194 -195 -196 -197 -198 -199 -200 -201 -202 -203 -204 -205 -206 -207 -208 -209 -210 -211 -212 -213 -214 -215 -216 -217 -218 -219 -220 -221 -222 -223 -224 -225 -226 -227 -228 -229 -230 -231 -232 -233 -234 -235 -236 -237 -238 -239 -240 -241 -242 -243 -244 -245 -246 -247 -248 -249 -250 -251 -252 -253 -254 -255 -256 -257 -258 -259 -260 -261 -262 -263 -264 -265 -266 -267 -268 -269 -270 -271 -272 -273 -274 -275 -276 -277 -278 -279 -280 -281 -282 -283 -284 -285 -286 -287 -288 -289 -290 -291 -292 -293 -294 -295 -296 -297 -298 -299 -300 -301 -302 -303 -304 -305 -306 -307 -308 -309 -310 -311 -312 -313 -314 -315 -316 -317 -318 -319 -320 -321 -322 -323 -324 -325 -326 -327 -328 -329 -330 -331 -332 -333 -334 -335 -336 -337 -338 -339 -340 -341 -342 -343 -344 -345 -346 -347 -348 -349 -350 -351 -352 -353 -354 -355 -356 -357 -358 -359 -360 -361 -362 -363 -364 -365 -366 -367 -368 -369 -370 -371 -372 -373 -374 -375 -376 -377 -378 -379 -380 -381 -382 -383 -384 -385 -386 -387 -388 -389 -390 -391 -392 -393 -394 -395 -396 -397 -398 -399 -400 -401 -402 -403 -404 -405 -406 -407 -408 -409 -410 -411 -412 -413 -414 -415 -416 -417 -418 -419 -420 -421 -422 -423 -424 -425 -426 -427 -428 -429 -430 -431 -432 -433 -434 -435 -436 -437 -438 -439 -440 -441 -442 -443 -444 -445 -446 -447 -448 -449 -450 -451 -452 -453 -454 -455 -456 -457 -458 -459 -460 -461 -462 -463 -464 -465 -466 -467 -468 -469 -470 -471 -472 -473 -474 -475 -476 -477 -478 -479 -480 -481 -482 -483 -484 -485 -486 -487 -488 -489 -490 -491 -492 -493 -494 -495 -496 -497 -498 -499 -500 -501 -502 -503 -504 -505 -506 -507 -508 -509 -510 -511 -512 -513 -514 -515 -516 -517 -518 -519 -520 -521 -522 -523 -524 -525 -526 -527 -528 -529 -530 -531 -532 -533 -534 -535 -536 -537 -538 -539 -540 -541 -542 -543 -544 -545 -546 -547 -548 -549 -550 -551 -552 -553 -554 -555 -556 -557 -558 -559 -560 -561 -562 -563 -564 -565 -566 -567 -568 -569 -570 -571 -572 -573 -574 -575 -576 -577 -578 -579 -580 -581 -582 -583 -584 -585 -586 -587 -588 -589 -590 -591 -592 -593 -594 -595 -596 -597 -598 -599 -600 -601 -602 -603 -604 -605 -606 -607 -608 -609 -610 -611 -612 -613 -614 -615 -616 -617 -618 -619 -620 -621 -622 -623 -624 -625 -626 -627 -628 -629 -630 -631 -632 -633 -634 -635 -636 -637 -638 -639 -640 -641 -642 -643 -644 -645 -646 -647 -648 -649 -650 -651 -652 -653 -654 -655 -656 -657 -658 -659 -660 -661 -662 -663 -664 -665 -666 -667 -668 -669 -670 -671 -672 -673 -674 -675 -676 -677 -678 -679 -680 -681 -682 -683 -684 -685 -686 -687 -688 -689 -690 -691 -692 -693 -694 -695 -696 -697 -698 -699 -700 -701 -702 -703 -704 -705 -706 -707 -708 -709 -710 -711 -712 -713 -714 -715 -716 -717 -718 -719 -720 -721 -722 -723 -724 -725 -726 -727 -728 -729 -730 -731 -732 -733 -734 -735 -736 -737 -738 -739 -740 -741 -742 -743 -744 -745 -746 -747 -748 -749 -750 -751 -752 -753 -754 -755 -756 -757 -758 -759 -760 -761 -762 -763 -764 -765 -766 -767 -768 -769 -770 -771 -772 -773 -774 -775 -776 -777 -778 -779 -780 -781 -782 -783 -784 -785 -786 -787 -788 -789 -790 -"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2 3 4 5\") == \"1\"\nassert solution(\"3\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"4\\n1 2 3 4 5 6 7\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5 6 7 8\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8 9\") == \"5\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '3'\nassert solution('1 2 3 4 5 6 7 8') == '4'\nassert solution('1 2 3 4 5 6 7 8 9') == '5'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('6\\n6 70 30 10 30') == '3'\nassert solution('6\\n6 70 30 10 30') == '3'\nassert solution('6\\n6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4') == '1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5') == '4'\nassert solution('1\\n1\\n2\\n3\\n4\\n6') == '0'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n7') == '0'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n3') == '1'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n1 2 4 3 3 2\n''') == '2'\n\nassert solution('''1\n100\n''') == '1'\n\nassert solution('''0\n''') == '0'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n100''') == '1'\n\nassert solution('''2\n1 2\n''') == '2'\n\nassert solution('''6\n1 2 4 3 3 2\n''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 4 3 3 2') == 2\nassert solution('100') == 1\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == \"2\"\nassert solution('''1\n100''') == \"1\"\nprint(solution('''7\n1 2 4 3 3 2'''))\nprint(solution('''7\n1 2 3 4 5 6'''))\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''10\n2 3 4 5 6 7 8 9 10''') == '5'\nassert solution('''0''') == '0'\nassert solution('''0''') == '0'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n1 1 1') == '1'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('5\\n1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('8') == '4'\nassert solution('7') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 3\n1 0 0 0\n'''\n) == '3'\n\nassert solution(\n'''3 5\n0 0 1 1\n'''\n) == '-1'\n\nassert solution(\n'''10 3\n0 0 1 1 0 1 0 0 1\n'''\n) == '3'\n\nassert solution(\n'''10 10\n0 0 1 1 0 1 0 0 1 0 0\n'''\n) == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/test_01') == '2'\nassert solution('inputs/test_02') == '1'\nassert solution('inputs/test_03') == '-1'\nassert solution('inputs/test_04') == '3'\nassert solution('inputs/test_05') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1\\n1 1 1 1') == '3'\nassert solution('1 2\\n1') == '2'\nassert solution('1 2\\n2') == '1'\nassert solution('2 1\\n1') == '1'\nassert solution('2 1\\n2') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 3\\n0 0 0 0 0 0 0 0 0 0\\n') == '-1'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 3') == '2'\nassert solution('5 10') == '3'\nassert solution('10 3') == '3'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('1 5\\n0 0 1 1 0 1\\n') == '2'\nassert solution('5 7\\n0 0 0 0 0 0\\n') == '-1'\nassert solution('10 4\\n0 0 0 0 0 0 0 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 1\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('5 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '-1'"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('3') == '9'\nassert solution('3') == '12'\nassert solution('3') == '15'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 3\nassert solution('3') == 3\nassert solution('5') == 3\nassert solution('7') == 2\nassert solution('9') == 3\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '3'\n) == '3'\n\"\"\"\n\n\"\"\"\nThe number of tuples of integers (A,B,C) that satisfy A*B+C = N is the binomial coefficient of N and the sum of A,B,C.\nFor example, the binomial coefficient of 3 and 4 is  3 * 2 = 6, the sum of 3 and 4 is 3 + 4 = 7.\n\nFor this question, we need to find the number of possible tuples (A,B,C) of size 3, such that  A \\times B + C = N\n\nAn example is as follows:\nN = 6\n\nThere are 6 possible tuples of size 3, namely (1,1,2), (1,2,1), (2,1,1), (2,2,1), (2,1,2), (2,2,2).\n\nLet the number of tuples of size 3 be 3(since there are 3 size 3 tuples)\n\n1.Find the number of tuples of size 3 that satisfy N = 3*1 + 3*2 + 3*3, namely 3.\n2.Since there are 3 tuples of size 3, then the number of tuples of size 3 that satisfy N = 3*1 + 3*2 + 3*3 is  3.\n3.Therefore, the answer is 3.\n\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('7') == '3'\nassert solution('9') == '2'\nassert solution('11') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('13') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('100') == '9'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('5') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('1000') == '8'\nassert solution('1000000') == '24'\nassert solution('10000000') == '1024'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('((()') == '0'\nassert solution(')(') == '0'\nassert solution(')(()') == '0'\nassert solution('()()()()') == '3'\nassert solution('((())') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''((())''') == 3\nassert solution('''()()()''') == 0\nassert solution(''')(''') == 0\nassert solution('''()(()''') == 0\nassert solution(''')(()())''') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()()()') == 0\nassert solution('((()') == 3\nassert solution(')())()') == 0\nassert solution('))((((') == 3\nassert solution('((((((((((((') == 4\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"(())\") == \"\"\nassert solution(\"()()\") == \"(((1)))\"\nassert solution(\"(()())\") == \"(1+((1)))\"\nassert solution(\")(\") == \"((1+1))\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(((())') == '0'\nassert solution('(((()))') == '3'\nassert solution('((())))') == '0'\nassert solution('))())((') == '0'\nassert solution('))())(((') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('(((()' == solution('))'))\nassert solution('((()') == solution('))')\nassert solution('((()' == solution('))')\nassert solution('((()' == solution('))')\nassert solution('((()' == solution('))')\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"(((()\") == \"((1)+1)\")\nassert solution(\"()()()\") == \"((1)+1)+1\"\nassert solution(\"))()\") == \"((1)+1)+1\"\nassert solution(\"(((()\")) == \"((1)+1)+(1)\"\nassert solution(\")))(\") == \"((1)+1)+1\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"(((()\")) == \"(((1)))\"\nassert solution(\"()()()\") == \"((1)+1)\"\nassert solution(\")(\") == \"\"\nassert solution(\"((()\")) == \"((1))\"\nassert solution(\"()()()\") == \"((1)+1)\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"bbaba\nbb\n\"\"\") == '3'\n\nassert solution(\n\"\"\"baaba\nab\n\"\"\") == '2'\n\nassert solution(\n\"\"\"abcde\nabcde\n\"\"\") == '0'\n\nassert solution(\n\"\"\"asdfasdf\nfasd\n\"\"\") == '3'"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"baaba\", \"ab\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\nbbaba\nbb\n''') == '3'\n\nassert solution(\n'''\nbaaba\nab\n''') == '2'\n\nassert solution(\n'''\nabcde\nabcde\n''') == '0'\n\nassert solution(\n'''\nasdfasdf\nfasd\n''') == '3'\n\nassert solution(\n'''\nghijkl\nhijk\n''') == '3'"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bbaba', 'bb', '3') == '3'\nassert solution('bbaba', 'bb', '2') == '2'\nassert solution('baaba', 'ab', '2') == '2'\nassert solution('abcde', 'abcde', '0') == '0'\nassert solution('asdfasdf', 'fasd', '3') == '3'\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"baaba\"\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"bbaba\nbb\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"baaba\nab\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"abcde\nabcde\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"asdfasdf\nfasd\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"aaaaaaaaaaaaa\na\n\"\"\") == \"0\""
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"hcwajkdfnkjhgjdf\", \"hcw\") == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 3 5\") == \"6\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"2 2 2 2\") == \"8\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 0\") == \"0\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"2 1 1 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 1\") == '2'\nassert solution(\"-1 2 1 1\") == '2'\nassert solution(\"-1 -2 1 1\") == '2'\nassert solution(\"1 -2 1 1\") == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('10 10 10 10') == '100'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '2'\nassert solution('1 3 5 2') == '1'\nassert solution('1 3 5 1') == '1'\nassert solution('1 3 2 5') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"-10 3 9 4\") == \"4\"\nassert solution(\"10 3 9 4\") == \"2\"\nassert solution(\"4 3 2 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '2'\nassert solution('1 2 1 2') == '4'\nassert solution('2 1 1 2') == '4'\nassert solution('1 2 1 3') == '6'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''2\n10 1 10''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n2''') == '0'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('1\\n1') == '0'\nassert solution('6\\n1 1 1 1 1 1') == '0'\nassert solution('6\\n1 1 1 1 1 4') == '1'\nassert solution('6\\n2 2 2 2 2 3') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35') == '5'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 1 4 4 6 7') == \"2\"\nassert solution('1 2 3 4 5 6 7 8 9') == \"3\"\nassert solution('10 100 1000 1000 1000 1000 1000 1000') == \"0\"\nassert solution('8 20 25 30 35 40 45 50 55 60 70 80 90') == \"3\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('2 1 2 2 4') == '3'\nassert solution('10 7 8 9 10') == '4'\nassert solution('4 2 3 4') == '1'\nassert solution('4 3 2 1') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\n-----My Submission-----\nhttps://www.codechef.com/JUNE20B/problems/PROBLEMVALUES\n'''\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n\n\"\"\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22\\n') == '3'\n\nassert solution('1\\n1\\n') == '1'\n\nassert solution('8\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '5'\nassert solution('2\\n0\\n1\\n2\\n') == '2'\nassert solution('5\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '4'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'\nassert solution('1 100 100 100 1 1') == '4'\nassert solution('1 100 100 100 1 1 1') == '4'\nassert solution('1 100 100 100 1 1 1 1') == '4'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\n\"\"\"\n\nimport sys\nsys.path.append(\"../../\")\n\nfrom good_sleeping_times.solution import solution\n\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"1 4 7\\n1 1 1\\n1 2 1\") == \"1\"\nassert solution(\"3 4 21\\n2 1 1\\n1 1 1\") == \"3\"\nassert solution(\"3 4 21\\n2 1 1\\n1 1 2\") == \"1\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'\nassert solution('1 2 3 4 5 6') == '3'\nassert solution('7 24 21 23') == '3'\nassert solution('8 3 2 6 6 3 2 4') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'\n\nimport sys\nsys.setrecursionlimit(10**6)\n\nn, h, l, r = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\nans = 0\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == '3'\n\"\"\"\n\nn, h, l, r = map(int, stdin.readline().strip().split(' '))\na = list(map(int, stdin.readline().strip().split(' ')))\n\ngood_count = 0\ncurrent_max = 0\nfor i in range(n):\n    if l <= a[i] < r:\n        current_max += 1\n        good_count = max(current_max, good_count)\n    else:\n        current_max = 0\nprint(good_count)\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23', '16 17 14 20 20 11 22') == '3'\nassert solution('7 24 21 23', '16 17 14 19 20 11 22') == '3'\nassert solution('7 24 21 23', '16 17 14 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''1 2 3 4 5 6 7 8 9 10 11''') == '1'\nassert solution('''2 3 4 5 6 7 8 9 10 11''') == '2'\nassert solution('''1 1 1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 4') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n\n\n\"\"\""
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('2 10 50 110 250') == '1'\nassert solution('5 2 10 50 110 250') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n'''\nimport sys\n\nn = int(sys.stdin.readline())\na = sorted(map(int, sys.stdin.readline().split()))\n\nbest = 0\nleft = 0\nright = 0\nwhile left <= right:\n    if a[right] * 2 > a[left] * 2:\n        best = max(best, right - left + 1)\n        right += 1\n    elif a[right] * 2 == a[left] * 2:\n        right += 1\n    else:\n        left += 1\nprint(best)\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''11\n2 3 3 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''\n1\n1\n2\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '15'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 5 6 7\\n\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"7\\n4 7 12 100 150 199\\n\") == \"2\"\nassert solution(\"8\\n4 7 12 100 150 199\\n\") == \"2\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n5 6 7 10 11 22 33 44''') == '4'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10''') == '1'\nassert solution('''1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''2 10 50 110 250''') == '1'\nassert solution('''4 7 12 100 150 199''') == '3'\nassert solution('''4 7 12 100 150 199''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('3\\n
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n2 5 10 1 10 2\") == \"1 4\"\nassert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\"\nassert solution(\"5\\n2 5 2 1 2\") == \"1 2\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n\nprint(solution('''3\n3\n1 9 10\n'''))"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n5 4 10 1 10 2') == '1 4'\nassert solution('2\\n5 2 11 3 7') == '1 4'\nassert solution('2\\n5 3 2 4 1') == '1 3'\nassert solution('6\\n2 5 10 1 10 2') == '1 4'\nassert solution('6\\n2 5 11 3 7') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''2\n2 4 2 2 2''') == '2 2'\nassert solution('''10\n4 8 6 2 2 10 10 8 10 2''') == '1 8'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''7\n2 5 10 1 10 2''') == '1 4'\nassert solution('''8\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''10\n2 5 10 1 10 2''') == '1 5'\nassert solution('''15\n2 5 10 1 10 2''') == '1 6'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'\nassert solution('5 5 10 1 10 2') == '1 4'\nassert solution('6 6 10 1 10 2') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''3\n7 1 6''') == '1 2'\nassert solution('''1\n100000''') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 1') == '1 2'\nassert solution('2 4') == '1 2'\nassert solution('2 5') == '2 4'\nassert solution('2 3') == '1 2'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n0\n0\n0\n0\n0\n0\n''') == '000'\nassert solution('''\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"021\"\nassert solution(input()) == \"120120\"\nassert solution(input()) == \"211200\"\nassert solution(input()) == \"120110\"\nassert solution(input()) == \"010100\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"10000\") == \"10000\"\nassert solution(\"10101010101001\") == \"01010101010101\"\nassert solution(\"211200\") == \"211200\"\nassert solution(\"000000\") == \"000000\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"021\") == \"021\"\nassert solution(\"121\") == \"021\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"120120\") == \"120120\"\nassert solution(\"000000\") == \"001122\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"00100\") == \"00111\"\nassert solution(\"1110000\") == \"1111022\"\nassert solution(\"1110110\") == \"1111210\"\nassert solution(\"1110010\") == \"1111020\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"01112\") == \"12112\"\nassert solution(\"01101\") == \"11102\"\nassert solution(\"112\") == \"0011\"\nassert solution(\"100\") == \"0100\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('120110') == '120120'\nassert solution('211200') == '211200'\nassert solution('120120') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''121''') == '021'\nassert solution('''000000''') == '001122'\nassert solution('''211200''') == '211200'\nassert solution('''120110''') == '120120'\nassert solution('''123''') == '123'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '120120'\nassert solution('''6\n120110''') == '120120'\nassert solution('''7\n0000000''') == '0111111'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1112') == '111'\nassert solution('112') == '11'\nassert solution('1111') == '110'\nassert solution('111222333') == '111222333'\nassert solution('010110') == '010110'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 1') == '4'\nassert solution('3 0') == '0'\nassert solution('2 0') == '1'\nassert solution('3 2') == '3'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1\\n3\\n') == '4'\nassert solution('3 1\\n3\\n') == '0'\nassert solution('4 1\\n3\\n') == '1'\nassert solution('5 1\\n3\\n') == '2'\nassert solution('6 1\\n3\\n') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2 3') == 4\nassert solution('5 10\\n3 4 5 6 7 8 9 10\\n1 2 3 4 5 6\\n') == 34\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == output\n@ CodedGeek\n\"\"\""
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1') == '4'\nassert solution('0 2') == '4'\nassert solution('1 0') == '1'\nassert solution('1 1') == '1'\nassert solution('2 0') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '2'\nassert solution('5 6') == '5'\nassert solution('10 10') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 2 -4') == '2'\nassert solution('5 3 0') == '0'\nassert solution('4 1 2') == '2'\nassert solution('1 3 1') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-10 10 100') == '0'\nassert solution('-5 2 4') == '-1'\nassert solution('3 -1 -2') == '3'\nassert solution('3 -1 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('5 3 2') == '-1'\nassert solution('4 6 5') == '1'\nassert solution('7 5 2') == '2'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '6 2 4'\n) == '2'\nassert solution(\n    '12 9 7'\n) == '0'\nassert solution(\n    '20 30 4'\n) == '0'\nassert solution(\n    '1 1 4'\n) == '0'\nassert solution(\n    '1 4 10'\n) == '4'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 4') == '2'\nassert solution('1 1 0') == '0'\nassert solution('0 2 3') == '0'\nassert solution('6 2 4') == '2'\nassert solution('3 2 1') == '3'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-3 -2 4') == '-1'\nassert solution('9 -3 4') == '-1'\nassert solution('3 -1 1') == '1'\nassert solution('-9 4 4') == '1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 2') == '2'\nassert solution('5 3 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '9'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('-1 -1 -1') == '0'\nassert solution('100 10000 10000') == '0'\nassert solution('-100 -10000 -10000') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('0 0 0') is None\nassert solution('0 0 0') == ''\nassert solution('-1 0 0') == '-1'\nassert solution('-1 0 0') == '-1'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2 3 4 5') == ''\nassert solution('1 2 3 4 5 6 7 8 9') == ''\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == ''\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\nprint(\"All set! Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12') == '2'\nassert solution('1234') == '3'\nassert solution('12345') == '4'\nassert solution('123445') == '5'\nassert solution('1234567') == '7'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == 1\nassert solution('2') == 4\nassert solution('3') == 9\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == 4\nassert solution(\"5\") == 5\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 27\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == 27\nassert solution(\"10\") == 654\nassert solution(\"1\") == 1"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == 27\nassert solution(1) == 1\nassert solution(3) == 27\nassert solution(5) == 27\nassert solution(9) == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(3) == 27\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '27'\n\n'''\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('') == None\nassert solution('0') == None\nassert solution('0') == None\nassert solution('1') == None\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"13\") == \"1\"\nassert solution(\n    \"927\") == \"1\"\nassert solution(\n    \"48\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('100') == 0\nassert solution('1000') == 0\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('108') == '0'\nassert solution('9199') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('9') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"13\") == 1\nassert solution(\"927\") == 1\nassert solution(\"48\") == 0\nassert solution(\"73\") == 1\nassert solution(\"20\") == 0\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == 1\nassert solution(\"13\") == 1\nassert solution(\"927\") == 1\nassert solution(\"48\") == 0\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(8) == \"0\"\nassert solution(67) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\nassert solution(13) == \"1\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n'''"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"2 5 3 1 4\") == \"2\"\nassert solution(\"4 5 3 2 1\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"4\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\n\n------Resources------\n\nThis problem is interesting because the problem is a finite field for base 2.\n\nThe base 2 field is defined as the set of all numbers from 1 to 10^9, inclusive.\n\nOne can also think of this field as an infinite octadecagonal number field, or as a finite field of small bases.\n\nThe base 2 field is generated by multiplying each of the base 10 digit strings by the base 10 digit strings.\n\nFor example, the base 10 number
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin + '\\n') == 0\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 5 3 1\") == 4\nassert solution(\"3 1 4 2 5 1 2 1\") == 2\nassert solution(\"1\") == 1\nassert solution(\"2 4 3 1\") == 2\nassert solution(\"2 4 3 1\") == 2\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'OK'\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('3 3 1 1') == '2'\nassert solution('2 5 3 1') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 5 3 1\") == 4\n\n\n------- Testcases -------\n2\n1 4\n2\n3\n\nOutput\n2\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0 0 0 0 0 0 0 0 0 0 0 0 0') == 0\nassert solution('1 2 3 4 5 6 7 8 9 0') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10') == 8\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\n\nassert solution('''8 2\n9 1\n5 10\n999999733 999999732\n999999733 999999733''') == '1\\n5\\n999999733\\n1'\n\nassert solution('''8 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 2\n10 100'''\n) == '1'\nassert solution(\n'''1 2\n10 100\n1 10\n1 1\n2 10\n2 10'''\n) == '2'\nassert solution(\n'''3 5\n3 5\n3 1\n3 3\n3 1\n1 10\n1 10\n1 1\n1 1'''\n) == '1'\nassert solution(\n'''3 5\n3 5\n3 1\n3 3\n3 1\n1 10\n1 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1'''\n) == '2'\nassert solution(\n'''3 5\n3 5\n3 1\n3 3\n3 1\n1 10\n1 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1'''\n) == '3'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''4 1\n2 4\n2 2\n3 4\n3 1\n3 2\n1 4\n4 4\n2 5\n''') == '2\\n4\\n1\\n2\\n2\\n1\\n4\\n2'\n'''\nTest cases are sorted by their number of shovels\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 9\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '8\\n9\\n1\\n999999733\\n1'\nassert solution('''8 9\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '8\\n9\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 9\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '8\\n9\\n1\\n999999733\\n1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\n'''"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999733\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('4\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('6\\n') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nstdin = \"\"\"\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\"\n\nstdout = \"\"\"\n2\n8\n1\n999999733\n1\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\n'''\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '3'\nassert solution('7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('3 3\\n3 1 3\\n1 3\\n0 1') == '0'\nassert solution('3 3\\n3 1 3\\n1 3\\n0 1') == '0'\nassert solution('3 3\\n3 1 3\\n1 3\\n0 1') == '0'\nassert solution('3 3\\n3 1 3\\n1 3\\n0 1') == '0'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('1 0\\n0 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('3 3\\n2 1 2 3\\n1 2 1\\n0 1 1\\n2 3 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1\\n'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 2') == '0\\n'\nassert solution('2 1\\n2 1\\n0 1') == '0\\n'\nassert solution('2 1\\n2 1\\n0 0') == '1\\n'\nassert solution('2 1\\n2 1\\n0 1') == '0\\n'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\n\"\"\"\n\nn, m = map(int, stdin.split('\\n')[0].split(' '))\nk = list(map(int, stdin.split('\\n')[1].split(' ')))\np = list(map(int, stdin.split('\\n')[2].split(' ')))\n\ntotal = 0\nfor i in range(len(k)):\n    total += (k[i] - 1) // 2\n    if k[i] % 2:\n        total += 1\n\nprint(total)\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''3 1\n1 1\n0 1\n1 1\n0 1''') == '1'\nassert solution('''4 3\n2 1 2\n1 2\n0 1\n2 1 2\n0 1\n0 1''') == '2'\nassert solution('''3 2\n1 1\n1 1\n0 1\n1 1\n0 1\n1 1\n0 1''') == '2'\n'''"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"1 2\") == 1\nassert solution(\"0 1\") == 1\nassert solution(\"1 1\") == 1\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n0 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n0 1\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n0 1\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n1 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2 2\n2 1 2\n1 2\n1 1\n\"\"\"\n) == \"1\""
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('1 1\\n0 1') == '1'\nassert solution('1 1\\n0 1\\n0 1') == '1'\nassert solution('3 2\\n1 2\\n2 2') == '3'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n'''\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 5 4 0') == '1.246875'\nassert solution('3 2 3 0') == '1.333333333333333'\nassert solution('3 4 6 0') == '0.6333333333333333'\nassert solution('4 6 2 0') == '0.6875'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"10 11 0 0\") == \"8.888888888888889\"\nassert solution(\"10 11 22 0\") == \"17.26666666666\"\nassert solution(\"10 19 1 0\") == \"18.1333333333334\"\nassert solution(\"2 5 0 0\") == \"11.0\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 9 0') == '5.00000000000000000000'\nassert solution('5 4 9 0') == '5.00000000000000000000'\nassert solution('4 5 5 0') == '5.00000000000000000000'\nassert solution('3 4 4 0') == '5.00000000000000000000'\nassert solution('1 1 1 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"5.00000000000000000000\"\nassert solution(\"1 2 0 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 2 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 6 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 1 1') == '6'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\nassert solution('1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 4 5 60 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('10 3\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '9'\nassert solution('10 10\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\nassert solution('''10 3\n1 2 3 4 5 6 7 8 9 10\n''') == '106'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '106'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '6'\nassert solution('15 2') == '97'\nassert solution('1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 1 1') == '6'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 4 5 60 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '99'\n'''\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\nassert solution('''100 200''') == '0'\nassert solution('''100 200''') == '0'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 1\\n') == '6'\nassert solution('4 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n\n\n\"\"\""
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0') == '0'\nassert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n'''"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n-2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n100\\n100\\n100') == '6'\nassert solution('2\\n-1 1\\n1 1\\n1 1\\n-1 1') == '7'\nassert solution('1\\n100\\n100\\n100\\n100') == '0'\nassert solution('2\\n-1 1\\n1 1\\n1 1\\n-1 1') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 4') == '6'\nassert solution('5 4') == '6'\nassert solution('0 0') == '0'\nassert solution('1000000') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n1 3\") == \"7\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n1 3\") == \"7\"\nassert solution(\"1 0\\n100000\\n\") == \"0\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"fced\") == \"Yes\\n\"\nassert solution(\"xyz\") == \"Yes\\n\"\nassert solution(\"r\") == \"Yes\\n\"\nassert solution(\"dabcef\") == \"Yes\\n\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"abc\\naa\\nbad\\nbabc\") == \"No\\nNo\\nNo\\nNo\\n\"\nassert solution(\"yz\\naz\\nza\\nza\") == \"No\\nNo\\nNo\\nNo\\n\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"abc\\naa\\nbad\\nbabc\") == \"No\\nNo\\nNo\\nNo\\n\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == '''Yes\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\n'''\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('fce\\nxyz\\n\\r\\n\\n\\n\\n\\n\\ndabcef\\naa\\nbabc\\n') == 'No\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n-1000000\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n100000\\n') == '-2147483648'\nassert solution('3\\n-2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('2\\n-2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('3\\n-2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '-5'\nassert solution('1\\n1000000\\n') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4 5') == ''\nassert solution('2 4') == '-1'\nassert solution('1 2 3 4 5') == '6'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '1'\nassert solution('2 4') == '1'\nassert solution('2 5') == '2'\nassert solution('2 6') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nassert solution('''1\n999999999\n''') == '0'\n\nassert solution('''4\n1 2 3 4\n3 3\n1 2\n3 4\n2 4\n''') == '1'"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1000000') == '6'\nassert solution('2\\n1000000') == '7'\nassert solution('2\\n1000000') == '0'\nassert solution('2\\n1000000') == '0'\nassert solution('2\\n1000000') == '0'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == 4\nassert solution(\"7\\n1 3 5 6 7 4 2\") == 7\nassert solution(\"3\\n1 2 3\") == 3\nassert solution(\"4\\n1 2 4 3\") == 4\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == 9\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_seq = 0\nmax_seq_list = []\n\nfor i in range(n):\n    if len(max_seq_list) == 0:\n        max_seq_list.append(a[i])\n    else:\n        if max_seq_list[-1] <= a[i]:\n            max_seq_list.append(a[i])\n        else:\n            while len(max_seq_list) > 0 and max_seq_list[-1] < a[i]:\n                max_seq_list.pop()\n                max_seq += 1\n            max_seq_list.append(a[i])"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2\n''') == 'LRLRLLL'\nassert solution('''3\n1 2 3\n''') == 'LLL'\nassert solution('''4\n1 2 4 3\n''') == 'LLRL'\nassert solution('''9\n1 2 3 4 5 6 7 8 9\n''') == 'LRLLLLRL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == 'L'\nassert solution('5') == '4'\nassert solution('3') == 'LL'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nLRLRLLL'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3') == '4\\nLLRL'\nassert solution('10\\n2 3 4 5 6 7 8 9 1') == '10\\nLLLRRRLLRLLRRRR'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n-----\n\nThis solution is accepted with a score of 94% with the time limit exceeding the deadline.\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 3\") == \"LLL\"\nassert solution(\"5\\n1 2 5 4 3\") == \"LLRLLR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"LRLRLLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"LLL\"\nassert solution(\"5\\n1 2 5 4 3\") == \"LLRLLR\"\n\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 4 3\") == \"\"\nassert solution(\"1 3 4 2\") == \"\"\nassert solution(\"1 3 5 4 2\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"L\"\nassert solution(\"2\\n1\") == \"L\"\nassert solution(\"2\\n2\") == \"LL\"\nassert solution(\"1\\n2\") == \"R\"\nassert solution(\"2\\n3\") == \"LLR\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n123"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''10\n1 2 5 3 4 5 6 7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\n\nassert solution('''2\n1 2\n''') == '2'\n\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''13\n6 5 4 3 2 4 3 6 1 4 5\n''') == '2'\n\nassert solution('''42\n2 1 1 2 2 3 2 1 1 2 3 2 4 3 2 3 1\n''') == '3'\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\n\nassert solution('''2\n1 2\n''') == '2'\n\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''13\n1 2 5 3 4 6 7 8 9 10 11 12 13\n''') == '12'\n\nassert solution('''16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n''') == '10'"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1\\n1') == '2'\nassert solution('1\\n2\\n2') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''\n1\n5\n''') == '1'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '1'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''8 3\n1 2 2 3 3 3 4 3 3''') == '2'\nassert solution('''8 3\n1 2 2 3 3 3 4 3''') == '0'\nassert solution('''15 3\n1 2 2 3 3 3 4 3 3 4 3 3 3 3 4 3 3 3 4 4 3 3 3 4 3 3 3 3 3 4 3 3''') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 5\n1 2 3 4 5 4 3 2 1''') == '2'\nassert solution('''5 5\n2 2 2 2 2 2 2''') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 2 4 5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 4 5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 4 5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 2 4 5\\n1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 3 3\") == \"0\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 3 3\") == \"0\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 3 3\") == \"0\"\nassert solution(\"5 3\\n1 2 3 3 3\\n1 2 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('3 2 1') == '2'\nassert solution('8 7 2') == '1'\nassert solution('2 3') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 4\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('5 2 2') == '1'\nassert solution('5 4 4') == '3'\nassert solution('5 4 2') == '2'\nassert solution('100 30 10') == '10'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('3 4 3') == '0'\nassert solution('3 4 3 4 4 4 4 4 4') == '0'\nassert solution('3 4 3 4 4 4 4 4 4 4 4 4 4 4 4 4') == '0'\nassert solution
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 2 5\") == \"2\"\nassert solution(\"1 0 0\") == \"1\"\nassert solution(\"4 3 1\") == \"0\"\nassert solution(\"10 2 3\") == \"2\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"9 3 2\") == \"3\"\nassert solution(\"7 0 1\") == \"0\"\nassert solution(\"10 0 1\") == \"0\"\nassert solution(\"5 1 1\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 4') == '2'\nassert solution('6 7 8') == '5'\nassert solution('4 4 4') == '1'\nassert solution('5 6 7') == '4'\nassert solution('2 5 6') == '2'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aab\") == \"aab\"\nassert solution(\"aaba\") == \"aaba\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n''') == '4'\nassert solution('''2\n2\n''') == '-1'\nassert solution('''2\n8\n2 6 8 4 16 4 3\n''') == '48'\nassert solution('''2\n8\n2 1 2 4 6 4 3\n''') == '-1'\nassert solution('''2\n8\n1 2 1 2 1 2 3\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3''') == \"48\"\nassert solution('''1\n2\n2''') == \"-1\"\nassert solution('''8\n8 2 12 6 4 24 16 3''') == \"48\"\nassert solution('''1\n2\n2''') == \"-1\"\nassert solution('''8\n8 2 12 6 4 24 16 3''') == \"48\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '48'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''2\n4\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\n\nassert solution('''2\n4\n2 2 2 2 2 2 2 2 2\n2\n2 2 2\n2\n''') == '-1'\n\nassert solution('''2\n6\n6 2 6 4 6 6 6\n2\n2 2 1\n2\n''') == '-1'\n\nassert solution('''2\n9\n9 2 9 4 9 6 9 8\n2\n2 2 2 2 2\n2\n''') == '-1'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n4\n''') == '-1'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\n\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"48\\n4\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"48\\n4\"\n\nassert solution(\"2\\n5\\n5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19\\n1\\n2\\n\") == \"-1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"\"\nassert solution(\"1 5 5 1 6 1\") == \"3\"\nassert solution(\"2 4 2 4 4\") == \"2\"\nassert solution(\"6 6 6 6 6\") == \"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 5 5 1 6 1''') == '3'\nassert solution('''5\n2 4 2 4 4''') == '2'\nassert solution('''5\n6 6 6 6 6''') == '1'\nassert solution('''9\n6 6 6 6 6 6 6 6 6''') == '0'\n\n\n-----"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == '2\\n3 1'\nassert solution('5\\n2 4 2 4 4\\n') == '1\\n2 4'\nassert solution('6\\n6 6 6 6 6\\n') == '1\\n6'\n\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 3\nassert solution('2 3 3 4 5') == 2\nassert solution('5 6 6 6 6') == 1\nassert solution('6 6 6 6 6') == 1\nassert solution('3 4 3 4 4') == 3\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('2 4 2 4 4') == '2\\n4 2'\nassert solution('6 6 6 6 6') == '1\\n6'\nassert solution('1 2 3 4 1') == '1\\n2 3 4'\n\n\n\"\"\""
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('43') == '44'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint(solution(input()))\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('9') == '10'\nassert solution('33') == '34'\nassert solution('111') == '11'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('99') == '103'\nassert solution('333') == '333'\nassert solution('1000') == '1031'\nassert solution('10001') == '10301'\nassert solution('33333') == '33333'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\nassert solution('939') == '939'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"123\") == \"1\"\nassert solution(\"1234\") == \"1\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\n\n\n\n\n\"\"\"\n\n\"\"\"\n\n---6 min 19 sek---\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"ecoosdcefr\") == \"\"\n'''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0''') == \"aac\"\nassert solution('''eo\n3\n2 1 0\nec\n1\n0''') == \"eo\"\nassert solution('''ab\n1\n0\nb''') == \"a\"\nassert solution('''a\n1\n0\nb''') == \"b\"\nassert solution('''e\n1\n0\nb''') == \"e\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\nabc\n2\n1 0 0\nabc\n1\n0\naabb\n2\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"ecoosdcefr\") == \"codeforces\"\nassert solution(\"abba\") == \"b\""
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == \"aac\"\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n39 33 33 34 33 31 31 3 24 17 0''') == \"aac\"\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n0 0 2 0 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''aac\nb\naba\ncodeforces\n''') == 'b'\n'''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\n\n\n\"\"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n''') == 'b'\nassert solution('''20\n''') == 'z'\nassert solution('''33\n''') == 'y'\nassert solution('''1000\n''') == 'a'\nassert solution('''2097\n''') == 'z'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\q') == 'b'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2\n\"\"\"\n) == \"b\"\n\nassert solution(\n\"\"\"\n5\n\"\"\"\n) == \"z\"\n\nassert solution(\n\"\"\"\n10000000000000001\n\"\"\"\n) == \"aa\"\n\nassert solution(\n\"\"\"\n2\n\"\"\"\n) == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('26') == 'z'\nassert solution('27') == 'aa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'b'\nassert solution('1') == 'a'\nassert solution('10') == 'z'\nassert solution('26') == 'a'\nassert solution('701') == 'z'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'a'\nassert solution('26') == 'z'\nassert solution('7') == 'a'\nassert solution('7') == 'aa'\nassert solution('10') == 'z'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == \"bb\"\nassert solution(\"26\\n\") == \"zy\"\nassert solution(\"27\\n\") == \"az\"\nassert solution(\"7023\\n\") == \"zzz\"\nassert solution(\"7024\\n\") == \"aab\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'b'\nassert solution('1000000000') == 'z'\nassert solution('18277') == 'zy'\nassert solution('475253') == 'zzz'\nassert solution('475254') == 'zzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'b'\nassert solution('7') == 'zzz'\nassert solution('1') == 'a'\nassert solution('27') == 'zy'\nassert solution('27') == 'zy'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == 'a'\nassert solution('26') == 'z'\nassert solution('27') == 'aa'\nassert solution('701') == 'zy'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"\"\nassert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a bb') == 'a'\nassert solution('a a') == ''\nassert solution('a a a a') == ''\nassert solution('a a a bb') == 'a'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"a ab aa aa bb bb\") == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa ab ab aa ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab\n\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nfrom sys import stdin\n\nn = int(stdin.readline())\nwords = [stdin.readline().strip() for i in range(n)]\n\nans = 0\n\nfor i in range(1, n):\n    if words[i - 1][0] == words[i][0] and len(words[i - 1]) == len(words[i]):\n        if len(words[i - 1]) > ans:\n            ans = len(words[i - 1])\n        \n        if words[i][1:] == words[i - 1][1:]:\n            words[i] = words[i - 1][:1] + words[i][1:]\n            \n        if len(words[i]) > ans:\n            ans = len(words[i])\n\nprint(ans)\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\nprobs = 0\nfor i in range(k):\n    if probs + a[i] < n:\n        probs += a[i]\n    elif probs + a[i] == n:\n        probs += a[i]\n    else:\n        probs = 0\n\nprint(probs)\n\nprobs = 0\nday_probs = [0]*k\nfor i in range(k):\n    day_probs[i] += a[i]\n    if probs + a[i] < n:\n        day_probs[i] += 1\n        probs += 1\n    elif probs + a[i] == n:\n        probs += 1\n    else:\n        probs = 0\n\nprint(\" \".join([str(x) for x in day_probs]))\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4000\\n2 2\"\nassert solution(stdin) == \"2000\\n2 2\"\nassert solution(stdin) == \"3000\\n2 2\"\nassert solution(stdin) == \"4000\\n3 2\"\nassert solution(stdin) == \"4000\\n4 2\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20\\n3 2 3'\nassert solution('''5 1\n1 1 1 1 1''') == '1\\n5'\nassert solution('''4 2\n1 2000 2000 2''') == '4000\\n2 2'\nassert solution('''8 9\n1234567 89012345678 9012345678''') == '4630465296\\n9792466569 9792466569'\nassert solution('''4 2\n1 2000 2000 2''') == '4000\\n2 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''2 1\n1 10''') == '1'\nassert solution('''6 2\n2 11 1 5 3 2''') == '3'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\ndiffs = [a[i] - a[i - 1] for i in range(1, n)]\n\na_max = diffs[-1]\na_sum = sum(a[:-1])"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4000\\n2 2\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4000\"\nassert solution(stdin) == \"4000\"\nassert solution(stdin) == \"4000\"\nassert solution(stdin) == \"4000\"\nassert solution(stdin) == \"4000\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4000'\nassert solution(stdin) == '2 2'\nassert solution(stdin) == '3 2 3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\nassert solution('8\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 -5 3 2''') == '1'\nassert solution('''5\n4 -2 3 -9 2''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4''') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4\n1 -5 3 2\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5\n4 -2 3 -9 2\"\"\") == \"0\"\n\nassert solution(\n\"\"\"9\n-1 1 -1 1 -1 1 1 -1 -1\"\"\") == \"3\"\n\nassert solution(\n\"\"\"8\n16 -5 -11 -15 10 5 4 -4\"\"\") == \"3\"\n\nassert solution(\n\"\"\"7\n4 -2 3 -9 2 -3 -2\"\"\") == \"1\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n-5 3 2\\n') == '1'\nassert solution('3\\n1 -5 3 2') == '0'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('5\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1 -1 -1 1 1 1 -1 1 1 -1 -1') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4''') == '1'\nassert solution('''5''') == '0'\nassert solution('''9''') == '3'\nassert solution('''16 -5 -11 -15 10 5 4 -4''') == '6'\nassert solution('''16 -5 -11 -15 10 5 4 -4''') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\nassert solution(\"10\\n3 1 -1 -2 4 1 -1 1 -1 -1 -1 -1 -1\") == \"6\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('2\\n-1 -2') == '1'\nassert solution('4\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 -5 3 2') == '1'\nassert solution('2\\n4 -2 3 -9 2') == '0'\nassert solution('2\\n16 -5 -11 -15 10 5 4 -4') == '3'\nassert solution('2\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('2\\n-1 -1 -1 -1 -1 1 1 -1 -1') == '3'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Hello\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('100') == '2'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n100\") == \"0\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"5\\n5\") == \"0\"\nassert solution(\"2\\n1000000000\\n1000000000\") == \"1000000000\"\nassert solution(\"1\\n100\\n1\\n100\") == \"0\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('5\\n5') == '0'\nassert solution('1\\n100') == '2'\nassert solution('2\\n100') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n100') == '0'\nassert solution('2\\n2') == '2'\nassert solution('5\\n5') == '0'\nassert solution('2\\n1000000000') == '1000000000'\nassert solution('1\\n1000000000 1000000000') == '0'\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0\\n1\\n1\\n1\\n1\\n'\nassert solution('''2\n1 0\n1 1\n''') == '1\\n2\\n3\\n2\\n1\\n'\nassert solution('''3\n1 0\n1 1\n1 2\n''') == '2\\n2\\n1\\n2\\n3\\n'\nassert solution('''4\n1 0\n1 1\n1 2\n1 3\n''') == '1\\n2\\n3\\n3\\n2\\n'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\n-----\nInput\n3\n3 9\n5 15\n7 7\n\nOutput\n0\n12\n4\n\n-----\nInput\n3\n4 4\n1 1\n3 3\n2 2\n\nOutput\n0\n2\n2\n\n-----\nInput\n5\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n1000000000\n1000000000\n\n-----\nInput\n2\n2 2\n2 2\n\nOutput\n0\n0\n\n\n-----\nInput\n2\n2 2\n1 1\n\nOutput\n0\n0\n\n\n-----\nInput\n3\n2 3\n5 5\n7 7\n\nOutput\n0\n2\n2\n\n-----\nInput\n3\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n\n-----\nInput\n4\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n\n-----\nInput\n5\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n\n-----\nInput\n6\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n\n-----\nInput\n7\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n8\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n9\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n10\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n11\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n12\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n13\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n14\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n15\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n16\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n17\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n18\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n19\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\nInput\n20\n1 1000000000\n1000000000 1000000000\n\nOutput\n0\n2\n2\n2\n2\n2\n2\n2\n2\n\n-----\n\n-----\n\n\"\"\""
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000 1000000000\\n') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == 4\nassert solution('100') == -1\nassert solution('12345') == -1\nassert solution('7501') == 6\nassert solution('7') == 0\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('101') == '4'\nassert solution('101', '2') == '2'\nassert solution('101', '4') == '4'\nassert solution('101', '100') == '-1'\nassert solution('7', '2') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\") == 4\nassert solution(\"77\") == 4\nassert solution(\"777\") == 4\nassert solution(\"777 77 77 777\") == 4\nassert solution(\"77 77 777 777 77 777 77 77 777 777\") == 4\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == 4\nassert solution(\"77\") == -1\nassert solution(\"777\") == 3\nassert solution(\"7777\") == -1\nassert solution(\"101\") == 4\nprint('Testcase 1 Passed')\n\"\"\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == -1\nassert solution(7) == 4\nassert solution(100) == -1\nassert solution(5000) == -1\nassert solution(100000) == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"4\") == -1\nprint(\"Test cases passed!\")\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"K\") == \"4\"\nassert solution(\"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839404142434445464748495051508157151617181920212223242526272829303132333435363738394041424344454647484950515081571516171819202122232425262728293031323334353637383940414243444546474849505150815715161718192021222324252627282930313233343536373839"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('101') == 4\nassert solution('1') == -1\nassert solution('0') == -1\nassert solution('777') == 0\nassert solution('77') == 1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == -1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == -1\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '4'\nassert solution('5 4') == '4'\nassert solution('15 8') == '48'\nassert solution('15 7') == '3'\nassert solution('15 9') == '3'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\nassert solution('1 2\\n1 2 2\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n'''\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4''') == '0'\nassert solution('''5 5''') == '1'\nassert solution('''15 8''') == '48'\nassert solution('''1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n'''"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n\n\n\"\"\"\nfrom collections import defaultdict\nimport sys"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('15 15\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('15 17\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9 10 11 12 13 14 15 16 17') == '56'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\nassert solution('1 2 3 4 5\\n1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5\\n7 9 1 3 8 2 5 4 6') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 4\"\"\") == \"2\"\nassert solution(\"\"\"1 2\"\"\") == \"0\"\nassert solution(\"\"\"5 4\"\"\") == \"4\"\nassert solution(\"\"\"5 5\"\"\") == \"1\"\nassert solution(\"\"\"15 8\"\"\") == \"48\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"\"\"[Finished in 0.3s]\"\"\"\n\"\"\"\n\"\"\""
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 10\n2 3 1 1 2''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''7 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 8\n2 3 1 1 2\n''') == '4'\nassert solution(\n'''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution(\n'''5 15\n5 5 5 5 5\n''') == '1'\nassert solution(\n'''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution(\n'''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\n\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"10 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 15\n5 5 5 5 5''') == '1'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5 5\\n\") == \"1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '3'\nassert solution('3') == '0'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('24 21 14 10') == '3'\nassert solution('500 500') == '0'\nassert solution('1 3 6 9 12') == '1'\n\n\n\n------Solutions------\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"24 21 14 10\") == \"3\"\nassert solution(\"500 500\") == \"0\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"1\\n1 1\") == \"0\"\nassert solution(\"2\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n24 21 14 10''') == '3'\nassert solution('''2\n500 500''') == '0'\nassert solution('''3\n14 5 1''') == '-1'\nassert solution('''5\n1 3 6 9 12''') == '1'\nassert solution('''5\n1 3 6 9 12''') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 6 9 12\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('5\\n14 5 1\\n') == '1'\nassert solution('10\\n1 3 6 9 12 14 15 17 18 19\\n') == '8'\nassert solution('4\\n24 21 14 10\\n') == '3'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('5\\n1 3 6 9 12\\n') == '0'\n\n\n-----Best Practice----"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('1\\n2 3 4 5\\n') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 6 9 12''') == '0'\nassert solution('''4\n24 21 14 10''') == '3'\nassert solution('''2\n500 500''') == '0'\nassert solution('''5\n1 3 6 9 12''') == '1'\nassert solution('''3\n14 5 1''') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('5') == '3'\nassert solution('7') == '-1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 2 1') == '1'\nassert solution('5 2\\n1 2 1 2 1') == '5'\nassert solution('2 2\\n1 2\\n2 2') == '2'\nassert solution('4 4\\n1 10 100 1000') == '4'\nassert solution('2 2\\n1 10 100 1000\\n2 2') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 10 10 10') == '2'\nassert solution('1 2 10 10 100') == '4'"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2''') == '5'\nassert solution('''6 1''') == '2'\nassert solution('''6 4''') == '4'\nassert solution('''6 3''') == '3'\nassert solution('''6 4\n1 10 100 1000''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 3 4\\n2 3 4 5') == '2'\nassert solution('1 1\\n1') == '1'\nassert solution('1 1\\n1') == '1'\nassert solution('3 3\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '3'\nassert solution('2 1\\n5') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\n\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\n\nassert solution('''5 3\n1 2 3 5 6\n''') == '3'\n\nassert solution('''6 4\n1 10 100 1000 1000 1000\n''') == '5'"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 15 15 15\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('10 4\\n1 2 3 4 5 6 7 8 9 10\\n') == '3'\nassert solution('100 30\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n') == '31'\nassert solution('6 2\\n1 2 3 4 5 6\\n') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\n\n'''\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\"\n\"\"\"\n\nfrom sys import stdin\n\nN, K, M = list(map(int, stdin.readline().split()))\nscores = [int(stdin.readline()) for _ in range(N-1)]"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 4 3\\n1 2 2 4\\n') == '4'\nassert solution('5 4 3\\n1 2 2 4\\n') == '-1'\nassert solution('2 3 4\\n1 2 3 4\\n') == '0'\nassert solution('4 10 17\\n4 1 4 4 3 4\\n') == '5'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 7\\n3 2 4 5\\n') == '3'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10') == '8'\nassert solution('7 10 7\\n8 10 3 6\\n') == '8'\nassert solution('10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 2 1') == '-1'\nassert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('3 5 5\\n6 3 2 2\\n1 2 1 2') == '3'\nassert solution('2 1 2\\n2 3 1 1') == '1'\nassert solution('2 1 2\\n2 2 1 1') == '2'\nassert solution('2 1 2\\n2 2 1 1') == '2'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''6 3 4\n3\n2\n1\n3\n2\n''') == 'Yes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''6 3 4\n3\n2\n1\n3\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''2 2 3\n3\n1\n3\n2\n''') == 'Yes\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''7 7 9\n2\n2\n2\n2\n2\n2\n2\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes'\nassert solution('''5 5 4\n4\n4\n4\n4\n4\n''') == 'No\\nNo\\nNo\\nNo\\nNo'\nassert solution('''3 3 2\n3\n3\n3\n3\n''') == 'No\\nNo\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('2 1 1') == 'Yes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''2 10 5\n1\n1\n2\n2\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes\\nNo\\n'\nassert solution('''2 4 1\n1\n3\n4\n2\n''') == 'No\\nYes\\nYes\\nYes\\nYes\\n'\nassert solution('''1 3 2\n1\n1\n2\n2\n''') == 'Yes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''1 1 2\n1\n1\n2\n2\n''') == 'Yes\\nYes\\nYes\\nNo\\nNo\\n'\n'''\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('1 2 3\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n'\nassert solution('1 2 3\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\nassert solution('4 2 2\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('2 2 1\\n1\\n1\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('5 4 2\\n3\\n1\\n3\\n2\\n') == 'Yes\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('1 4 5\\n3\\n1\\n3\\n2\\n') == 'No\\nYes\\nYes\\nYes\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 4') == 'No'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3') == 'No'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n1\\n1') == 'No'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n1\\n1\\n1') == 'No'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n1\\n1\\n1\\n1') == 'No'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'Yes'\nassert solution('2\\n1') == 'Yes'\nassert solution('2\\n2') == 'No'\nassert solution('2\\n4') == 'No'\nassert solution('2\\n7') == 'No'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"NO\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\n\"\nassert solution(\"3 4\\n1 1 0 0\\n1 1 0 0\\n0 0 1 0\\n\") == \"NO\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n00\\n10\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\"\nassert solution(\"3 4\\n0 0 0\\n0 0 0\\n1 1 1\\n\") == \"NO\"\nassert solution(\"3 4\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"3 4\\n0 0 0\\n0 0 0\\n1 1 1\\n0 0 0\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == \"YES\"\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == \"YES\"\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == \"NO\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1\\n0 1\\n1 1\\n') == 'YES\\n00\\n01'\nassert solution('1 2\\n1 2\\n1 2\\n') == 'YES\\n0101\\n0101'\nassert solution('0 1\\n0 0\\n0 0\\n') == 'YES\\n1\\n0'\nassert solution('0 1\\n1 1\\n0 1\\n') == 'NO'\nassert solution('0 0\\n0 0\\n0 0\\n') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1\\n0 0 0\\n1 1 1 1') == 'YES\\n00010\\n000001'\nassert solution('1 1\\n1 0 0\\n0 1 1 1') == 'NO'\nassert solution('2 2\\n0 0\\n1 1\\n0 0') == 'YES\\n00100\\n11111'\nassert solution('3 4\\n0 0 0\\n0 0 0 0\\n1 1 1 1\\n1 1 1 1') == 'NO'"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\") == \"YES\\n010\\n0000\"\nassert solution(\"1 2\\n0 0\\n1 0\") == \"NO\"\nassert solution(\"2 2\\n0 0\\n0 0\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 0\\n0 0\") == \"NO\"\n\n\n------\n\nNote:\n\nA is a binary matrix with integer entries from 0 to 1.\nA is of size n by m.\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES\\n0 0\\n0 0\\n'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'NO\\n'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n0000\\n0010\\n'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n') == 'NO\\n'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n0011\\n000\\n'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('0 1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('1 1 0') == 'YES'\nassert solution('0 1 1') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 2\\n1 1\\n0 1\"\n) == \"YES\"\n\nassert solution(\n    \"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\"\n) == \"YES\"\n\nassert solution(\n    \"3 3\\n0 0 0\\n1 0 1\\n1 1 0\"\n) == \"NO\"\n\nassert solution(\n    \"3 3\\n1 1 1\\n1 1 0\\n1 1 1\"\n) == \"YES\"\n\nassert solution(\n    \"3 3\\n1 1 1\\n1 1 0\\n0 0 0\"\n) == \"NO\"\n\"\"\""
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"233\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"33\") == \"Yes\"\nassert solution(\"233\") == \"Yes\"\nassert solution(\"121\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"+input()) == \"\"\nassert solution(\"\"+input()) == \"\"\nassert solution(\"\"+input()) == \"\"\nassert solution(\"\"+input()) == \"\"\nassert solution(\"\"+input()) == \"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('987654321') == 'No'\nassert solution('1234567891') == 'Yes'\nassert solution('12345678911') == 'No'\nassert solution('947273911') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('1000000') == 'No'\nassert solution('10000002') == 'Yes'\nassert solution('1000000000') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == \"Yes\"\nassert solution('73') == \"Yes\"\nassert solution('73') == \"No\"\nassert solution('7313') == \"Yes\"\nassert solution('7312') == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1001') == 'No'\nassert solution('1') == 'Yes'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('6 2 1\\n0 1 0 1 0 1') == '3'\nassert solution('6 2 1\\n0 0 1 0 0 1') == '3'\nassert solution('6 2 1\\n1 0 0 1 0 0') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nimport sys\n\nsys.stdin = open(\"./in/5.in\")"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('6 2 1') == '3'\nassert solution('10 3 3') == '5'\nassert solution('3 2 1') == '4'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\nassert solution(\"4 2 1\") == \"2\"\nassert solution(\"6 7 10\") == \"0\"\nassert solution(\"6 8 10\") == \"0\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\nassert solution(\"4 2 1\") == \"3\"\nassert solution(\"5 2 1\") == \"5\"\nassert solution(\"5 3 1\") == \"3\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '3'\nassert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('3 2 1') == '3'\nassert solution('6 2 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 2 1\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"6 2 1\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\nassert solution(\"10+\") == 0\nassert solution(\"-1+-\") == 0\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n\n\n\nTest.describe(\"Basic tests\")\nTest.assertEquals(solution('2+2'), -46, 'Simple')\nTest.assertEquals(solution('8-7+6-5+4-3+2-1-0'), 4, 'Simple')\nTest."
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nprint(\"Testcases passed!\")"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\n\n-------\n\n## Submissions\n1)\n\n\"\"\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''4 10''') == 'YES'\nassert solution('''5 2''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution('10 4') == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution('13 4') == \"NO\"\n\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\" # \"YES\" or \"NO\" is correct\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n''') == \"YES\"\nassert solution('''2 4\n''') == \"NO\"\nassert solution('''7 5\n''') == \"NO\"\nassert solution('''13 4\n''') == \"NO\"\nassert solution('''3 4\n''') == \"YES\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\nassert solution('''4 4\n''') == 'NO'\nassert solution('''2 2\n''') == 'YES'\nassert solution('''2 4\n''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\n5 3\n1 2\n2 3\n3 2\n1 2\n2 3\n\n5 4\n1 2\n1 3\n2 3\n3 4\n4 1\n\n3 4\n1 2\n1 3\n2 3\n2 4\n3 4\n\n\"\"\""
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\nassert solution('2 2 2\\n1 1 1\\n') == '0'\nassert solution('2 2 1\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\n\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\n\nassert solution('''6 1 4\n1 10 1 1 10\n''') == '20'\n\nassert solution('''5 1 3\n5 1 3 10 1\n''') == '18'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''6 1 2''') == '-1'\nassert solution('''5 2 3''') == '18'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('4 3 1') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"18\"\n\"\"\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '21'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n00100') == '3'\nassert solution('5 1\\n000000') == '21'\nassert solution('6 1\\n000000') == '4'\nassert solution('6 1\\n000010000100') == '15'\nassert solution('12 6\\n000010000100') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data\nprint(solution(input_data))"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"6 1\\n000010000100\") == \"15\"\nassert solution(\"4 1\\n0011\") == \"4\"\n\n\"\"\"\n\nfrom sys import stdin\nfrom functools import lru_cache"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('4 1\\n000010011111') == '5'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1\\n0011') == '4'\nassert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '15'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('6 1\\n000000') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"15\"\n\n\n\nIn [66]: str(5)\nOut[66]: '5'\n\nIn [67]: len(str(5))\nOut[67]: 1\n\nIn [68]: len(str(5)[0])\nOut[68]: 1\n\nIn [69]: str(5)[0]\nOut[69]: '5'\n\nIn [70]: str(5)[0][0]\nOut[70]: '5'\n\nIn [71]: len(str(5)[0][0])\nOut[71]: 1\n\nIn [72]: str(5)[0][0][0]\nOut[72]: '5'\n\nIn [73]: len(str(5)[0][0][0])\nOut[73]: 1\n\nIn [74]: str(5)[0][0][0][0]\nOut[74]: '5'\n\nIn [75]: len(str(5)[0][0][0][0])\nOut[75]: 1\n\nIn [76]: len(str(5)[0][0][0][0][0])\nOut[76]: 1\n\nIn [77]: str(5)[0][0][0][0][0][0]\nOut[77]: '5'\n\nIn [78]: len(str(5)[0][0][0][0][0][0])\nOut[78]: 1\n\nIn [79]: str(5)[0][0][0][0][0][0][0]\nOut[79]: '5'\n\nIn [80]: len(str(5)[0][0][0][0][0][0][0])\nOut[80]: 1\n\nIn [81]: str(5)[0][0][0][0][0][0][0][0]\nOut[81]: '5'\n\nIn [82]: len(str(5)[0][0][0][0][0][0][0][0])\nOut[82]: 1\n\nIn [83]: str(5)[0][0][0][0][0][0][0][0][0]\nOut[83]: '5'\n\nIn [84]: len(str(5)[0][0][0][0][0][0][0][0][0])\nOut[84]: 1\n\nIn [85]: str(5)[0][0][0][0][0][0][0][0][0][0]\nOut[85]: '5'\n\nIn [86]: len(str(5)[0][0][0][0][0][0][0][0][0][0])\nOut[86]: 1\n\nIn [87]: str(5)[0][0][0][0][0][0][0][0][0][0][0]\nOut[87]: '5'\n\nIn [88]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0])\nOut[88]: 1\n\nIn [89]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0]\nOut[89]: '5'\n\nIn [90]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0])\nOut[90]: 1\n\nIn [91]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[91]: '5'\n\nIn [92]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[92]: 1\n\nIn [93]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[93]: '5'\n\nIn [94]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[94]: 1\n\nIn [95]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[95]: '5'\n\nIn [96]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[96]: 1\n\nIn [97]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[97]: '5'\n\nIn [98]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[98]: 1\n\nIn [99]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[99]: '5'\n\nIn [100]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[100]: 1\n\nIn [101]: str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]\nOut[101]: '5'\n\nIn [102]: len(str(5)[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0])\nOut[102"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n00100\n\n''') == '3'\n\nassert solution('''6 1\n000000\n\n''') == '21'\n\nassert solution('''4 1\n0011\n\n''') == '4'\n\nassert solution('''12 6\n000010000100\n\n''') == '15'\n\nassert solution('''3\n0\n\n''') == '1'"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n00100\n\n''') == '3'\n\nassert solution('''6 1\n000000\n\n''') == '21'\n\nassert solution('''4 1\n0011\n\n''') == '4'\n\nassert solution('''12 6\n000010000100\n\n''') == '15'\n\nassert solution('''5 1\n00000\n\n''') == '4'"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"Yes\"\nassert solution('banana') == \"No\"\nassert solution('zzzzzzzzz') == \"No\"\nassert solution('aaaaaaaa') == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('zpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzpzp"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\nassert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\nassert solution('tacocat') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"No\"\nassert solution('z') == \"Yes\"\nassert solution('a') == \"Yes\"\nassert solution('abc') == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('azpzg') == 'No'\nassert solution('pppzg') == 'Yes'\nassert solution('zzpzg') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('apple') == 'No'\nprint(solution(input()))\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('ac') == 'No'\nassert solution('zzc') == 'Yes'\nassert solution('aazelzzlzzp') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"Yes\"\nassert solution('zabbaz') == \"Yes\"\nassert solution('zabazz') == \"Yes\"\nassert solution('abcde') == \"Yes\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n2 1 3\\n1 3 3\\n1 3 3\") == \"Yes\\n7\"\nassert solution(\"3 2 2\\n2 1 3\\n1 3 3\\n1 3 3\\n1 3 3\") == \"No\\n5\"\nassert solution(\"3 1 2\\n2 1 3\\n1 3 3\\n1 3 3\\n1 3 3\") == \"Yes\\n7\"\nassert solution(\"3 1 2\\n2 1 3\\n1 3 3\\n1 3 3\\n1 3 3\\n1 3 3\") == \"Yes\\n7\"\nassert solution(\"3 1 2\\n2 1 3\\n1 3 3\\n1 3 3\\n1 3 3\\n1 3 3\\n1 3 3\") == \"Yes\\n7\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n2 4 1\n''') == '4'\n\nassert solution('''\n3 2\n2 3\n''') == '1'\n\nassert solution('''\n3 2\n2 2\n2 1\n''') == '1'\n\nassert solution('''\n3 3\n3 1\n3 2\n''') == '3'\n\nassert solution('''\n5 5\n1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n3\\n3\\n') == '3'\nassert solution('3\\n3\\n3\\n3\\n') == '7'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\nassert solution('6\\n5\\n3\\n3\\n2\\n1\\n') == '11'\nassert solution('9\\n5\\n3\\n3\\n2\\n1\\n') == '18'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 10 2 5\") == \"10\"\nassert solution(\"5 10 2 3\") == \"6\"\nassert solution(\"5 10 2 4\") == \"10\"\nassert solution(\"5 10 2 5\") == \"10\"\nassert solution(\"5 10 2 7\") == \"8\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == 2\nassert solution(\"AABA\") == 0\nassert solution(\"BAB\") == 3\nassert solution(\"AAA\") == 0\nassert solution(\"AA\") == 2\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4 4') == 'Takahashi'\nassert solution('2 5 2') == 'Takahashi'\nassert solution('1 1 1') == 'Takahashi'\nassert solution('5 5 5') == 'Takahashi'\nassert solution('1 2 1') == 'Takahashi'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '\\n'.join([\n    '5, 25, 60, 90, 120',\n    '60, 25, 90, 120',\n    '120',\n])\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '\\n'.join([\n    '5, 60, 120',\n    '120',\n])\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '\\n'.join([\n    '5, 80, 120, 160, 200',\n    '120, 80, 160, 200',\n    '200',\n])\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n2 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 3 3\\n2 4 4\\n3 5 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '7'\nassert solution('10\\n2 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 3 3\\n2 4 4\\n3 5 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '8'\nassert solution('10\\n2 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 3 3\\n2 4 4\\n3 5 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '9'\nassert solution('10\\n2 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 3 3\\n2 4 4\\n3 5 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '10'\nassert solution('10\\n2 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 3 3\\n2 4 4\\n3 5 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '11'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1\\n1\\n3\\n2\\n4\\n2\\n3') == '4\\n1\\n2\\n3\\n4'\nassert solution('6\\n2\\n3\\n4\\n5\\n6\\n7\\n1') == '1\\n2\\n3\\n4\\n5\\n6'\nassert solution('2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('4\\n2\\n3\\n4\\n2\\n3\\n4\\n3\\n2\\n1') == '6\\n6\\n6\\n6\\n6\\n6'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 100''') == '1'\nassert solution('''1 200''') == '1'\nassert solution('''2 300''') == '1'\nassert solution('''2 200''') == '1'\nassert solution('''5 300''') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '2'\nassert solution('5 800') == '1'\nassert solution('10 2') == '9'\nassert solution('3 5') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '2'\nassert solution('2 250') == '3'\nassert solution('3 300') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '3'\nassert solution('2 10') == '2'\nassert solution('1 1') == '0'\nassert solution('7 3') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"2 100\\n3 100\\n5 100\") == \"1\"\nassert solution(\"5 100\\n5 100\\n5 100\") == \"1\"\nassert solution(\"2 1000\\n5 1000\\n5 1000\") == \"3\"\nassert solution(\"1 0\\n0 0\\n0 0\") == \"0\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '2'\nassert solution('1 100') == '0'\nassert solution('1 100 1') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '4'\nassert solution('2 600') == '5'\nassert solution('7 800') == '6'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 700\n3 500\n5 800\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n2 500\n3 500\n5 800\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1\n399 1\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n2 700\n3 500\n5 800\n\"\"\") == \"3\""
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '5'\nassert solution('5 800') == '3'\n\"\"\""
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('1 1\\n10 100\\n50 0') == '1'\nassert solution('1 1\\n1 1\\n1 1') == '0'\nassert solution('2 2\\n10 100\\n50 0') == '0'\nassert solution('10 10\\n100 10\\n1000 0') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5''') == '2'\nassert solution('''9\n2 3 4 2 2 3 2 2 4''') == '3'\n\n'''"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\"\"\"\n    number of candies, number of candies (sorted),\n    if candies_sorted[i] > candies_sorted[i+1]:\n        candies_sorted[i+1] = candies_sorted[i]\n\n    if candies_sorted[i] < candies_sorted[i+1]:\n        candies_sorted[i] = candies_sorted[i+1]\n\"\"\""
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('10\\n2 3 4 2 2 3 2 2 4\\n') == '5'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1\\n'\nassert solution('5\\n1 2 3 4 5') == '2\\n'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2\\n'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3\\n'\nassert solution('1\\n2') == '1\\n'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '2'\nassert solution('7') == '2'\nassert solution('9') == '3'\nassert solution('8') == '2'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n5 1 3\\n\") == \"-1\"\nassert solution(\"1\\n1\\n\") == \"-1\"\nassert solution(\"1 1 1\\n1\\n\") == \"1\"\nassert solution(\"1 1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"\n\n\"\"\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '4'\nassert solution('1 100 1 1') == '-1'\nassert solution('1 1 1 1 1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '-1'\nassert solution('1 100 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '-1'\nassert solution('''4 1 3\n100 1 1 1''') == '-1'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 2 4 9') == '9'\nassert solution('1 1 2 4 9 3') == '9'\nassert solution('5 5 4') == '10'\nassert solution('5 5 5') == '10'\nassert solution('10 1 2 3 4') == '10'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 1') == '100'\nassert solution('4 2 3') == '-1'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n\n\n\"\"\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''10 30 30 70 10 10''') == '30'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11') == 'Yes'\nassert solution('100') == 'No'\nassert solution('15') == 'Yes'\nassert solution('5') == 'No'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"20\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('12') == 'No'\nassert solution('1000000') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"11\") == \"No\"\nassert solution(\"11\\n12\") == \"Yes\"\nassert solution(\"11\\n12\\n13\") == \"No\"\nassert solution(\"11\\n12\\n13\\n14\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"4\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\") == \"Yes\"\nassert solution(\"2\\n4\") == \"No\"\nassert solution(\"1\\n3\") == \"Yes\"\nassert solution(\"10\\n12\") == \"No\"\nassert solution(\"8\\n8\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"No\"\nassert solution(\"1\\n\") == \"Yes\"\nassert solution(\"1\\n2\\n\") == \"Yes\"\nassert solution(\"1\\n2\\n2\\n\") == \"Yes\"\nassert solution(\"1\\n2\\n3\\n\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n5\n7\n2\n2''') == 'No'\nassert solution('''4\n4\n5\n7\n2\n2''') == 'Yes'\nassert solution('''5\n5\n5\n5\n5\n5\n''') == 'Yes'\nassert solution('''2\n2\n2\n2\n2\n2\n''') == 'Yes'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\nassert solution('''\n3\n3 4 1\n3 1 1\n3 4 1\n''') == '3 3 4'\n\nassert solution('''\n2\n2 3 5\n1 2 5\n''') == '2 2 5'\n\nassert solution('''\n5\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4\n''') == '1 3 3'\n\nassert solution('''\n6\n0 0 10\n0 1 10\n0 2 10\n0 3 10\n0 4 10\n0 5 10\n''') == '0 4 5'"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\"\"\") == \"2 2 6\"\nassert solution(\n\"\"\"1\n1 1 1\n\"\"\") == \"1 1 1\"\nassert solution(\n\"\"\"2\n2 2\n\"\"\") == \"2 2\"\nassert solution(\n\"\"\"6\n1 1 1\n2 2\n2 2\n1 2\n2 1\n1 2\n2 1\"\"\") == \"2 2\"\nassert solution(\n\"\"\"2\n2 2\n2 1\n1 2\n1 2\n1 1\"\"\") == \"2 1\"\n\n\"\"\"\ntest_case_number = 1"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('4\\n3 2 5\\n3 2 5\\n3 2 5\\n3 2 5') == '3 3 5'\n\"\"\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 2 6'\nassert solution('1 2 5') == '2 2 6'\nassert solution('3 2 5') == '2 2 6'\n\"\"\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/3.txt\").read()))\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/input/a.txt\").read()))\n\n\"\"\"\n\nfrom datetime import datetime\nfrom functools import lru_cache"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == EXPECTED_SAMPLE_OUTPUT\nprint(solution(READING_INPUT))\n\"\"\"\nfrom sys import stdin\nfrom math import sqrt"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(input()))\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n''') == '3 3 3'\nassert solution('''\n3\n3 3 3\n3 3 3\n3 3 3\n''') == '2 2 6'"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('redcoder') == 1\nassert solution('takahashi') == 2\nassert solution('deedee') == 1\nassert solution('happen') == 2\nassert solution('k') == 0\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('takahashi') == 2\nassert solution('takahashi') == 2\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 36\nassert solution('abcdefghijklmnopqrstuvwxyz') == 36\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('redcoder') == 1\nassert solution('mredcoder') == 2\nassert solution('abcdcba') == 0\nassert solution('a') == 1\nassert solution('abcdcba') == 1\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('redcoder') == 1\nassert solution('acccbacb') == 2\nassert solution('qqqqq') == 0\nassert solution('bbbbb') == 0\nassert solution('ababa') == 2\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abc') == '0'\nassert solution('bb') == '2'\nassert solution('redcoder') == '1'\nassert solution('abcba') == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabbccc') == 3\nassert solution('redcoder') == 1\nassert solution('abc') == 0\nassert solution('a') == 0\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abc') == '1'\nassert solution('ad') == '2'\nassert solution('adc') == '3'\nassert solution('acdc') == '4'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"1000000000\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"9999\") == \"No\"\nassert solution(\"9\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"No\"\nassert solution(3) == \"No\"\nassert solution(4) == \"No\"\nassert solution(5) == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"No\"\nassert solution(input(\"\")) == \"No\"\nassert solution(input(\"\")) == \"No\"\nassert solution(input(\"\")) == \"No\"\nassert solution(input(\"\")) == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(11) == \"No\"\nassert solution(12) == \"Yes\"\nassert solution(13) == \"No\"\nassert solution(14) == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('20') == 'No'\nassert solution('21') == 'Yes'\nassert solution('22') == 'No'\nassert solution('23') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n') == \"Yes\"\nassert solution('100\\n') == \"No\"\nassert solution('1000\\n') == \"Yes\"\nassert solution('100000\\n') == \"Yes\"\nassert solution('1000000\\n') == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('10') == 'No'\nassert solution('2') == 'Yes'\nassert solution('25') == 'No'\nassert solution('100') == 'Yes'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n4 4 9 7 5'''\n) == '5'\n\nassert solution(\n'''10\n1 1 1 1 1 1 1 1 1 1 1'''\n) == '10'\n\nassert solution(\n'''5\n6 6 6 6 6 6 6 6 6 6'''\n) == '2'\n\nassert solution(\n'''5\n1 1 1 1 1 1'''\n) == '1'\n\nassert solution(\n'''10\n1 1 1 1 1 1 1 1 1 1'''\n) == '1'"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 4 7 5') == '5'\nassert solution('3 4 9 7 5') == '5'\nassert solution('4 4 9 7 5') == '5'\nassert solution('4 9 7 5') == '5'\nassert solution('1 1 3 4 4 4') == '4'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n4 4 9 7 5\n\"\"\".strip()\n) == \"5\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4 4 9 7 5''') == '5'\nassert solution('''6\n1 2 3 4 5 6''') == '10'\nassert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''5\n7 8 9 10 11''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '19'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4 9 7 5\\n') == '5'\n\"\"\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n4 4 9 7 5\n''') == '5'\n\nassert solution(\n'''\n6\n2 4 3 2 2\n''') == '6'\n\nassert solution(\n'''\n7\n1 4 7 4 3 2 5\n''') == '7'\n\nassert solution(\n'''\n8\n1 2 3 2 3 1\n''') == '8'\n\nassert solution(\n'''\n8\n1 3 2 3 2 3\n''') == '8'"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n2\\n3\\n4\\n5\") == 2\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == 3\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == 4\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1, 1) == 1\nassert solution(2, 2) == 2\nassert solution(3, 3) == 3\nassert solution(1, 5) == 5\nassert solution(1, 6) == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 10') == '-1'\nassert solution('5 3') == '30'\nassert solution('2 3') == '-1'\nassert solution('2 7') == '42'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"2 2\") == \"-1\"\nassert solution(\"5 0\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '10'\nassert solution('1 3') == '-1'\nassert solution('3 5') == '10'\nassert solution('9 10') == '-1'\nassert solution('4 5') == '20'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"10 22\") == \"10\"\nassert solution(\"2 1\") == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == 10\nassert solution('1 5') == -1\nassert solution('1 6') == -1\nassert solution('9 9') == 81\nassert solution('3 9') == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 8\") == \"-1\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"5 4\") == \"20\"\nassert solution(\"3 5\") == \"15\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == 10\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n\n\"\"\"\n---\n\n##### Ideas ---\n\nUse a hash table to record the position and the number of pieces at the same position.\n\n---\n\n## C++\n\n```c++\n// TODO"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"2 5\\n10 12 1 2 14\"\n) == \"5\"\nassert solution(\n\"2 1\\n-10\"\n) == \"-1\"\nassert solution(\n\"2 4\\n-10 -2 -1 1 2\"\n) == \"-1\"\nassert solution(\n\"2 5\\n0 -1 2 3 4 5\"\n) == \"2\"\nassert solution(\n\"2 5\\n0 1 1 2 2 3\"\n) == \"1\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 10\") == \"3\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''2 4\n2 2 2 2''') == '4'\nassert solution('''3 4\n-10 -5 1 0''') == '6'\nassert solution('''3 4\n-10 -5 1 0''') == '6'\nassert solution('''3 4\n-10 -5 1 0''') == '6'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('1 2\\n1 1') == '0'\nassert solution('2 4\\n1 2 3 4') == '3'\nassert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 5\\n10 12 1 2 14') == '5'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 3\\n1 2 3') == '4'\nassert solution('3 3\\n1 2 3') == '-1'\nassert solution('2 1\\n1') == '0'\nassert solution('2 2\\n1') == '-1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''2 5\n7 4 1 2 3 9''') == '6'\nassert solution('''2 5\n7 4 1 2 3 9''') == '6'\nassert solution('''2 5\n5 7 1 2 3 4''') == '3'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''3 2\n10 4 9\n5 2 8''') == '3'\nassert solution('''4 2\n1 7 2 2 1\n8 6 3 6''') == '2'\nassert solution('''5 2\n10 12 1 2 14\n9 10 8 7 6''') == '3'\nassert solution('''6 4\n1 2 3 4 5 6\n7 8 9 10 11 12''') == '4'\n'''\n-----Binary Search-----\nWe can do this using a binary search, by repeatedly dividing the search space in half.\nThis will take O(logN) to finish the search, with N the total number of pieces.\n\nHere, we will keep track of the number of pieces in each bin, so the total number of moves is the number of pieces in the last bin.\n\nFor each iteration of the search, we will determine the number of pieces in each bin.\nIf the number of pieces in the bin is odd, we will place the last piece in that bin.\nIf the number of pieces in the bin is even, we will place the middle piece in that bin.\nWe keep track of the number of pieces in each bin and choose the smallest.\n'''\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"\nassert solution(\"5 8 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n\") == \"2\\n111100\\n110110\\n\"\nassert solution(\"7 10 5\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n\") == \"2\\n111100\\n110110\\n\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2\\n1110\\n1011'\nassert solution('''3 3 2\n1 2\n1 3\n2 3\n''') == '1\\n111\\n010'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2\\n111100\\n110110'\nassert solution('''6 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '2\\n111100\\n110110'\nassert solution('''6 7 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n''') == '2\\n111100\\n110110\\n101001'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 3') == '1'\nassert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2'\nassert solution('1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''2 4\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''5 7 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '1'\nassert solution('''8 9 3\n4 5\n5 6\n6 7\n7 8\n8 9\n9 8\n8 7\n7 6\n6 5\n5 4\n4 3\n3 2\n2 1\n''') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '''2\n1110\n1011\n'''\nassert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''1\n101001\n110110\n'''\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''2\n111100\n110110\n'''\nassert solution('''5 3 2\n1 2\n2 3\n3 4\n3 5\n4 5\n1 3\n2 4\n4 5\n''') == '''0\n'''\nassert solution('''1 10 1\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '''1\n111101\n111010\n111010\n'''\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\") == \"2\"\nassert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n4 3\\n2 4\\n3 4\") == \"2\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 3\\n2 4\\n1 3\\n4 3\\n2 4\\n3 4\") == \"1\"\nassert solution(\"4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 3\\n2 4\\n1 3\\n4 3\\n2 4\\n3 4\") == \"2\""
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution(\n'''\n4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution(\n'''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'NO'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\nassert solution('''10\n
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'NO'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\n\n'''\n) == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'YES'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''1\n10 10''') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\\n1\\n\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n\") == \"YES\"\nassert solution(\"3\\n4\\n5\\n\") == \"YES\"\nassert solution(\"3\\n3\\n4\\n5\\n\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3\\n2 3 4') == 'YES'\nassert solution('2\\n2 3\\n1 2\\n1 3\\n3 4') == 'YES'\nassert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"2\\n2 2\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''1000000000 5\n-1 0 0 0 0''') == '-1'"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\nassert solution('10 5\\n1 1 1 1 1') == '1'\nassert solution('10 5\\n1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\nassert solution('100000 1\\n-1') == '-1'\nassert solution('10 9\\n-1 -1') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[1:8]\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\nassert solution('7 11\\n0 -1 0 -1 -1 -1 -1 -1 -1 -1 -1') == '5'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n\n'''\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''100 200 300 125 77 -4''') == '9'\nassert solution('''10 4\n-1 -1 -1 -1 -1''') == '-1'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BBAABBBA') == 'BB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZZZZZ') == 'ZZ'\nassert solution('AAAA') == 'AAAA'\nassert solution('BBBBBB') == 'BBBB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABACBAZ') == 'AB'\nassert solution('AAABAAAAA') == 'AA'\nassert solution('BBBBAAAAAABB') == 'AA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n7\nABACABA\n\"\"\"\n) == \"AB\"\nassert solution(\n\"\"\"\n5\nZZZAA\n\"\"\"\n) == \"ZZ\"\n\nassert solution(\n\"\"\"\n2\na\na\n\"\"\"\n) == \"a\"\nassert solution(\n\"\"\"\n7\nBBABABA\n\"\"\"\n) == \"BBA\"\nassert solution(\n\"\"\"\n10\nAAAAAAA\n\"\"\"\n) == \"AAAA\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ABCDEFGHIJ\") == \"ABC\"\nassert solution(\"ABCDEFG\") == \"ABC\"\nassert solution(\"ABCDEF\") == \"ABC\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ABCBCBA''') == 'AB'\nassert solution('''BAABCCA''') == 'AB'\nassert solution('''AAABCCA''') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('A') == ''\nassert solution('AB') == ''\nassert solution('ABACAB') == 'AB'\nassert solution('ABACABA') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ABACABA\n''') == 'AB'\n\nassert solution('''ZZZAA\n''') == 'ZZ'\n\nassert solution('''ZZZAA\n''') == 'ZZ'\n\nassert solution('''ABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nassert solution('''ABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('ABCBC') == 'BC'\nassert solution('ABCD') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"BBAABBBA\") == \"BB\"\nassert solution(\"ABAB\") == \"AB\"\nassert solution(\"ABBBABA\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZZZAA') == 'ZZ'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces') == 'es'\nassert solution('test') == 'est'\nassert solution('b') == 'b'\nassert solution('yes') == 'es'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('codeforces') == 'es'\nassert solution('test') == 'test'\nassert solution('b') == 'b'\nassert solution('ab') == 'a'\nassert solution('bab') == 'bab'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 'east'\nassert solution('west') == 'east'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'es'\n\n\n-----\nThe idea is to find the longest common substring between both strings. The result of such a common substring is the number of characters that need to be removed from each string in order to make the two strings equal.\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"a\"\nassert solution(\"test\") == \"e\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''west''') == ''''west'''\nassert solution('''codeforces''') == ''''codeforces'''\nassert solution('''b''') == ''''b'''\nassert solution('''b''') == ''\nassert solution('''codeforces''') == ''''codeforces'''\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == ''\nassert solution('b') == ''\nassert solution('test') == 'test'\nassert solution('codeforces') == 'es'\nassert solution('codeforces') == 'es'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"west\"\n) == \"west\"\nassert solution(\n\"codeforces\"\n) == \"es\"\nassert solution(\n\"yes\"\n) == \"yes\"\nassert solution(\n\"b\"\n) == \"b\"\nassert solution(\n\"a\"\n) == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"2\"\nassert solution(\"west\") == \"2\"\nassert solution(\"codeforces\") == \"9\"\nassert solution(\"b\") == \"1\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 'es'\nassert solution('east') == 'es'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'yes'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 7\") == \"2\"\nassert solution(\"1 7 11\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 5\") == \"1\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 7 11\\n') == '2'\nassert solution('4 5\\n1 2 3 4\\n2 4 5 6') == '1'\nassert solution('4 5\\n1 2 3 4\\n2 3 1 4\\n3 4 5 6') == '2'\nassert solution('4 5\\n1 2 3 4\\n2 3 1 4\\n3 4 1 2') == '1'\nassert solution('2 2\\n1 2\\n') == '1'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('1 7 11') == '2'\nassert solution('1 7 11') == '2'\nassert solution('1 1000000 1') == '100'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 7 11\n\"\"\") == '2'\n\nassert solution(\n\"\"\"\n3 2\n1 7 11\n\"\"\") == '3'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 5 6') == '3'\nassert solution('2 5 7 3 1') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1'\nassert solution('7 3 2 6 1 4 9 5 8 10') == '4'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[-1]\nassert stdin == '3 3\\n1 7 11\\n'\nassert stdin == '2\\n1\\n'\nassert stdin == '2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('3 2\\n1 7 11') == '1'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10') == '5'\nassert solution('10 9\\n1 2 3 4 5 6 7 8 9 10') == '4'\nassert solution('4 4\\n1 3 4 2 5 6 7') == '1'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('a') == 'Yes'\nassert solution('aabaa') == 'Yes'\nassert solution('aabaa') == 'Yes'\nassert solution('abbaa') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akatakasak') == 'Yes'\nassert solution('akatakatak') == 'Yes'\nassert solution('akatakatakasak') == 'Yes'\nassert solution('akatakatakatak') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asasa') == 'No'\nassert solution('avasi') == 'Yes'\nassert solution('aas') == 'No'\nassert solution('as') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akasaka\") == \"No\"\nassert solution(\"aaa\") == \"No\"\nassert solution(\"aba\") == \"Yes\"\nassert solution(\"abac\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('baa') == 'Yes'\nassert solution('aba') == 'Yes'\nassert solution('baaaaa') == 'Yes'\nassert solution('baaab') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abab') == 'No'\nassert solution('aaaaa') == 'Yes'\nassert solution('abbba') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('aksaka') == 'No'\nassert solution('abaca') == 'Yes'\nassert solution('abab') == 'No'\nassert solution('ab') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is True\nassert solution('j') is False\nassert solution('a') is False\nassert solution('aa') is False\nassert solution('ab') is False\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('haibei') == 'Yes'\nassert solution('hannah') == 'Yes'\nassert solution('asasasa') == 'Yes'\nassert solution('ashashashas') == 'Yes'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1.1') == '2'\nassert solution('2 0.1') == '2'\nassert solution('2 0.0') == '2'\nassert solution('2 3.0') == '5'\nassert solution('2 3.14') == '5'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('1 1.1') == '1'\nassert solution('1 1.01') == '1'\nassert solution('1.0 1') == '1'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('8 10') == '9'\nassert solution('9 1') == '9'\nassert solution('0 1') == '0'\nassert solution('10 100') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '25'\nassert solution('0 1') == '0'\nassert solution('4 4') == '20'\nassert solution('3 5') == '15'\nassert solution('2 1.5') == '3'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"9 1\") == \"9\"\nassert solution(\"99 1\") == \"99\"\nassert solution(\"999 1\") == \"999\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '7'\nassert solution('-3.4 -2.8') == '-5.1'\nassert solution('5.5 -5.5') == '0'\nassert solution('0.3 0.3') == '0'\nassert solution('4.3 -4.3') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '9'\nassert solution('6 9') == '45'\nassert solution('6 9.1') == '45'\nassert solution('2 8') == '16'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1.0') == '2'\nassert solution('1.1 1.0') == '1'\nassert solution('1.5 1.5') == '1'\nassert solution('1.0 1.0') == '1'\nassert solution('1.9 1.9') == '1'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('1 1') == '1'\nassert solution('2 3') == '6'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n3') == '3'\nassert solution('2\\n5') == '2'\nassert solution('2\\n10') == '4'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '0\\n0\\n0'\nassert solution('1\\n2\\n') == '0\\n0\\n1'\nassert solution('2\\n2\\n') == '0\\n1\\n1'\nassert solution('2000000000\\n763243547\\n') == '381621773\\n417427735\\n0'\nassert solution('2\\n7\\n') == '0\\n1\\n1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '1'\nassert solution('''5''') == '2'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2''') == '2'\nassert solution('''7\n1''') == '3'\nassert solution('''14\n763243547''') == '0'\nassert solution('''7\n29999999999''') == '999999999'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 4 5''') == \"1\"\nassert solution('''5 4 5''') == \"1\"\nassert solution('''1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == \"3\"\nassert solution('''5 4 1''') == \"3\"\nassert solution('''6 4 6\n1 2\n2 3\n3 4\n4 1\n5 6\n6 1\n1 8\n9 8\n7 1''') == \"1\"\n'''"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 4"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''5 2 9\n1 2\n2 3\n3 4\n4 5\n1 5\n1 7\n3 7\n2 9\n3 8\n''') == '0'\nassert solution('''7 4 1\n1 2\n1 3\n2 3\n1 4\n3 4\n2 4\n2 5\n1 6\n1 8\n6 8\n1 9\n9 8\n7 1\n''') == '1'\nassert solution('''8 4 9\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 6\n2 7\n2 8\n2 9\n3 4\n4 5\n4 6\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n''') == '2'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('1 3') == '0'\nassert solution('2 3') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"5 4 5 1\") == \"1\"\nassert solution(\"5 4 5 2\") == \"1\"\nassert solution(\"5 4 5 3\") == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1''') == '1'\nassert solution('''5 4 4\n1 2\n2 3\n3 4\n4 1\n1 2''') == '0'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n1 3\n5 4''') == '1'\nassert solution('''5 4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n4 5\n1 2''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"4 4 4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"0\"\nassert solution(\"4 4 4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"1\"\nassert solution(\"4 4 4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\n\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\nassert solution('''1 2\n2 3\n3 4\n4 1\n''') == '0'\n'''\nassert solution('''5 4 4\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n\nassert solution('''1 1 2\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n'''\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('1 1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n4 2\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5') == '0'\nassert solution('1 1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n4 2\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, s = map(int, stdin.split())\n\nroads = [stdin.split() for _ in range(m)]"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('2\\n1 1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 1') == '2'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('4\\n1 1 1 1') == '5'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('10000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '9'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 4 4 4') == '5'\nassert solution('2 2 1 4 4 4') == '5'\nassert solution('3 3 1 4 4 4') == '5'\nassert solution('4 4 1 4 4 4') == '5'\nassert solution('5 5 1 4 4 4') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('1\\n1') == '2'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n1 1') == '2'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('1\\n2') == '3'\nassert solution('1\\n3') == '4'\nassert solution('1\\n4') == '5'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\nassert solution('''2\n2 1''') == '1'\nassert solution('''8\n2 2 4 3 4 5 4 6''') == '7'\nassert solution('''10\n2 2 3 3 4 4 5 5 6 7 8''') == '8'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''3 2\n1 22\n2 33\n3 12''') == '000001000001\\n000002000001\\n000001000002'\nassert solution('''3 3\n1 22\n2 33\n3 12''') == '000001000001\\n000002000001\\n000001000002\\n0000030000003'\nassert solution('''4 3\n1 22\n2 33\n3 12\n4 44''') == '000001000001\\n000002000001\\n000001000002\\n0000030000003\\n00000400000004'\nassert solution('''10 10\n1 22\n2 33\n3 12\n4 44\n5 55\n6 66\n7 77\n8 88\n9 99''') == '000001000001\\n000002000001\\n000001000002\\n0000030000003\\n00000400000004\\n0000050000005\\n0000060000006\\n00000700000007\\n00000800000008\\n0000090000009'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\n\nassert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'\n'''\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 2\") == \"000001000002\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"0000010000020001\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"000001000001000001\"\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\") == \"000001000001000001000001\"\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"000001000001000001000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"1 2 3 4\") == \"000001000001\"\nassert solution(\"2 3 4 5 6\") == \"0000020000002\"\nassert solution(\"2 3 4 5 6 7\") == \"00000200000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\n\nassert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\n'''\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '000001000002'\nassert solution('2 3') == '000002000001'\nassert solution('1 2') == '000001000001'\n\"\"\""
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n\"\"\"\nfrom __future__ import annotations\n\nfrom functools import lru_cache\nfrom typing import Tuple\n\nfrom shared.utilities import (\n    char_value_to_digit,\n    parse_line,\n    print_result,\n    timed_test,\n    Test,\n    TestResult,\n)\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n10\n8\n40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7''') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('1 10') == '0'\nassert solution('4 10 8 40') == '4'\nassert solution('2 10 8 40') == '2'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 1') == \"1\"\nassert solution('2\\n2 10 8 40') == \"2\"\nassert solution('3\\n2 10 8 40') == \"1\"\nassert solution('4\\n2 10 8 40') == \"2\"\nassert solution('5\\n2 10 8 40') == \"3\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 10 8 40''') == '2'\nassert solution('''5\n2 10 4 10 7''') == '3'\nassert solution('''7\n10 5 10 4 10 3''') == '5'\nassert solution('''9\n4 5 10 4 10 2''') == '4'\nassert solution('''10\n8 12 8 8 9 2''') == '6'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"4\n2 10 8 40\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"10\n39 10 57 22 11 41 22 39 59 22 3 19 41 17 19 16 17 11 22 40 19 18 22 22 22 21 19 19 19 17 19 16 22 22 22 22 22 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n10\\n8\\n40') == '2'\nassert solution('4\\n2\\n10\\n8\\n40') == '2'\nassert solution('5\\n2\\n10\\n8\\n40') == '2'\nassert solution('6\\n2\\n10\\n8\\n40') == '2'\nassert solution('7\\n2\\n10\\n8\\n40') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n'''\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\n\"\"\"\nfrom collections import deque\n\nclass Variable:\n    def __init__(self, name, index):\n        self.name = name\n        self.index = index\n\n    def __repr__(self):\n        return f'{self.name}{self.index}'"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'false'\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nprint(\"All set? Click 'Check' to earn sweet rewards!\")\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n\n'''\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    ?(__+___+__-___):-___>__.\n    ) == '0101'\n\nassert solution(\n    ?(____+_____+_+_)/____:___<____,____<____,____<____.\n    ) == '02503401'\n\nassert solution(\n    ?(____+_____+___+_+_)/____:___<____,____<____,____<____.\n    ) == 'false'\n\nassert solution(\n    ?(____+_____+___+__+__)/____:___<____,____<____,____<____.\n    ) == '0101'\n\nassert solution(\n    ?(____+_____+___+__+__+_)/____:___<____,____<____,____<____.\n    ) == 'false'"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nprint(solution(input()))\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(?(__+___+__-___):-___>__. ) == \"0101\"\nassert solution(?(____+____+____-____*_*__-____*_*__*_*__-___):-___<___,___<____,____<_____,_____<______,______<_______. ) == \"0250341\"\nassert solution(?(____+____+____-____*_*__-____*_*__*_*__*_*__*_*_*__-___):-___<___,___<____,____<_____,_____<______,______<_______. ) == \"false\"\nassert solution(?(____+____+____-____*_*__-____*_*__*_*__*_*__*_*_*__*_*_*__-___):-___<___,___<____,____<_____,_____<______,______<_______. ) == \"false\"\nassert solution(?(____+____+____-____*_*__-____*_*__*_*__*_*__*_*_*__*_*_*__*_*_*__*_*_*__*_*_*__*_*_*__*_*_*__-___):-___<___,___<____,____<_____,_____<______,______<_______. ) == \"false\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == '3'\nassert solution(\n'''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\nassert solution(\n'''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '0'\nassert solution(\n'''3 4 5\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '6'\nassert solution(\n'''3 4 3\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '7'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 2''') == '5'\nassert solution('''3 4 1000000000000000000''') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 11''') == '3'\nassert solution('''3 4 2''') == '5'\nassert solution('''3 4 1000000000000000000''') == '0'\nassert solution('''3 4 11''') == '3'\nassert solution('''3 4 2''') == '5'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '0'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\nprint('Test case 1 passed')\n\n'''\n'''\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\n'''"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"z\") == \"z\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\n-----Note-----\n\n*This is a companion problem to the System Design problem: System Design and Analysis.\n*An Easy Data Structures series by Ilkka Kokkarinen\n'''\n\nfrom math import ceil, floor"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"z\") == \"z\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('5 14') == 19\nassert solution('5 1') == 5\nassert solution('3 2') == 3\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"100 9\") == \"99\"\nassert solution(\"10 9\") == \"9\"\nassert solution(\"1000000 9\") == \"9990000\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('51421') == 514\n\"\"\""
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"873\"\n'''\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('10 2') == '1'\nassert solution('5 14') == '19'\nassert solution('1 1') == '1'\nassert solution('10 2') == '1'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 14') == '19'\nassert solution('381 492') == '873'\nassert solution('5 14') == '19'\nassert solution('5 14') == '19'\nassert solution('5 14') == '19'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == 3\nassert solution(\"1 3\") == 4\nassert solution(\"1 4\") == 5\nassert solution(\"1 5\") == 6\nassert solution(\"1 6\") == 7\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n\n\n-------Test.Add Test-------\nOK\n\n-------Notes-------\n- Easy: don't think about any hard math, only a few example\n- Easy: try a for loop\n- Easy: use math.factorial\n- Easy: try more than one for loop\n\n'''\nfrom functools import reduce"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution(' ') ==''\nassert solution('+') == '++>'\nassert solution('-') == '<[<+>-]<'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1+2') == '<-><-><'\nassert solution('3+4') == '<+>-<+>'\nassert solution('5+6-7') == '++>>-<+<[-]<'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"\nassert solution(\"10-1\") == \">++++++++[-]<\"\n\n\n\"\"\""
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == '++>'\nassert solution('1') == '+++>'\nassert solution('2') == '<[<+>-]<'\nassert solution('3') == '++++++++++++++++++++++++++++++++.\\n+++>\\n++[<-]<\\n++++++++++++++++++++++++++++++++.\\n'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"+>\\n+++>\\n<[<+>-]<\\n++++++++++.\\n\"\nassert solution(\"9-7\") == \"+[<->-]<\\n++++++++++.\\n\"\nassert solution(\"9-7\") == \"+[<->-]<\\n++++++++++.\\n\"\nassert solution(\"30000+50000\") == \"+[-]<\\n++++++++++.\\n\"\nassert solution(\"30000-50000\") == \"+[<->-]<\\n++++++++++.\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7' * 5000) == '+++++++++>'\n\n\n-----\n\nThe 2nd, 3rd, 4th, 5th, 6th, 7th, and 8th lines of the input contain respectively the values of the 1st, 2nd, 3rd, 4th, 5th, 6th, 7th, and 8th operands. There are no spaces in the input.\n\nThis means that the following expression must be evaluated:\n\n\n0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n\nThe binary representation of the above expression is:\n\n\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\n\nIt can be verified that this expression evaluates to the desired result.\n\n\"\"\"\n\nfrom typing import List\nfrom itertools import accumulate, count, combinations, groupby, permutations"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3-7') == '++>'\nassert solution('2+3-7+') == '++>'\nassert solution('2+3-7++') == '++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nfrom collections import deque\nfrom functools import lru_cache"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"8\", \"First Example\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"2\", \"Second Example\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"5\", \"Third Example\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"0\", \"Fourth Example\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"8\", \"Fifth Example\""
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '''1\n2\n3\n4\n5'''\n\nassert solution('''1\n1\n1\n2\n3''') == '''0\n0\n0\n0\n1\n'''\n\nassert solution('''1\n2\n3\n4\n5''') == '''1\n1\n2\n3\n5\n'''\n\nassert solution('''1\n1\n2\n3\n4''') == '''1\n1\n2\n3\n4\n'''\n\nassert solution('''1\n1\n2\n3\n4\n5''') == '''1\n1\n1\n2\n3\n4\n'''"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"112123123412345\") == \"12345\"\nassert solution
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('1$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('2$\\dots$') == '1111212312341234512345612345671234567812345678912345678910'\nassert solution('3$\\dots$') == '1111211212312341234512345612345671234567812345678912345678910'\nassert solution('4$\\dots$') == '11112312341234512345612345671234567812345678912345678910'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\") == \"2\"\nassert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"4\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"1,2,5,0\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"8,2,4,1\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"8,2,4,1\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"0,2,4,1\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"1,2,5,0\"\n\nprint(solution(open(\"input.txt\", \"r\").read()))\n\n\"\"\""
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n4\n5\n''') == '''12345\n1234\n123\n12\n1\n'''\nassert solution('''3\n20\n38\n56\n1000000000000000000\n''') == '''0\n2\n5\n2\n'''\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '8\\n2\\n4\\n1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1\\n2\\n2\\n1'\nassert solution('3\\n1\\n1\\n1\\n1') == '2\\n2\\n2\\n3'\nassert solution('4\\n2132\\n506\\n999999999999999999\\n1000000000000000000') == '8\\n2\\n4\\n1'\nassert solution('5\\n1\\n1\\n1\\n1') == '1\\n2\\n2\\n1'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"4\"\n\"\"\""
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '0'\nassert solution('15') == '2'\nassert solution('5') == '1'\nassert solution('1000') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"14\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1000\") == \"25\"\nassert solution(\"10000\") == \"125\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('945') == '4'\nassert solution('3577') == '4'\nassert solution('5775') == '4'\nassert solution('107') == '0'\nassert solution('112') == '2'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == '1'\nassert solution('001') == '1'\nassert solution('1') == '0'\nassert solution('0101') == '0'\nassert solution
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == '1'\nassert solution('00') == '1'\nassert solution('000') == '1'\nassert solution('001') == '1'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"01110\") == \"1\"\nassert solution(\"01010\") == \"2\"\nassert solution(\"01110\") == \"2\"\nassert solution(\"01110\") == \"2\"\nassert solution(\"01110\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('0010110') == '1'\nassert solution('0') == '1'\nassert solution('0010110') == '1'\nassert solution('0101010') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('000') == 1\nassert solution('101') == 2\nassert solution('0011') == 3\nassert solution('001111') == 2\nassert solution('010101') == 3\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"00111\") == \"2\"\nassert solution(\"1111111\") == \"3\"\nassert solution(\"11111\") == \"2\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('000') == 0\nassert solution('01000') == 1\nassert solution('01000') == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[1]"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('000') == 1\nassert solution('111') == 0\nassert solution('01111001101100010111010010101001') == 0\nassert solution('0111100110110001011101001010100101001') == 3\nassert solution
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n8\\n10\\n15\") == \"APPROVED\"\nassert solution(\"3\\n9\\n12\\n15\\n18\") == \"DENIED\"\nassert solution(\"4\\n10\\n14\\n16\\n18\") == \"APPROVED\"\nassert solution(\"5\\n10\\n15\\n18\\n21\") == \"DENIED\"\nassert solution(\"6\\n9\\n12\\n15\\n18\") == \"DENIED\"\n\n\"\"\"\n\nN = int(input())\nA = list(map(int, input().split()))"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\" +\n    \"6 7 9 10 31\"\n) == \"APPROVED\"\nassert solution(\n    \"5\\n\" +\n    \"6 7 9 10 30\"\n) == \"DENIED\"\nassert solution(\n    \"5\\n\" +\n    \"2 3 4 5\"\n) == \"DENIED\"\nassert solution(\n    \"5\\n\" +\n    \"1 2 3 4 5\"\n) == \"DENIED\"\nassert solution(\n    \"5\\n\" +\n    \"8 8 8 8 8\"\n) == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\n'''\n\n'''\n-----MY SOLUTION-----\nn = int(input())\ns = [int(i) for i in input().split()]"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 21''') == 'DENIED'\nassert solution('''1\n2 3 4 5''') == 'DENIED'\nassert solution('''3\n0''') == 'DENIED'\nassert solution('''5\n9 8 7 6 5''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n1\\n1\\n0') == 'APPROVED'\nassert solution('2\\n2\\n0\\n2\\n1') == 'DENIED'\nassert solution('5\\n2 2 2 1 1') == 'APPROVED'\nassert solution('3\\n2 1 2 2') == 'APPROVED'\nassert solution('4\\n1 1 2 2 1') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''4\n6 7 9 10''') == 'APPROVED'\nassert solution('''5\n6 7 9 10''') == 'APPROVED'\nassert solution('''6\n6 7 9 10''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 11''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == 'DENIED'\nassert solution('2\\n1') == 'DENIED'\nassert solution('3\\n1 3') == 'DENIED'\nassert solution('4\\n1 3 5') == 'DENIED'\nassert solution('4\\n1 3 5 6') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n9 11 13 15 16 19''') == 'APPROVED'\nassert solution('''5\n100 101 103 104 105 106 107 108 109 110''') == 'DENIED'\nassert solution('''5\n9 11 13 15 16 19''') == 'DENIED'\nassert solution('''5\n1 1 2 2 3 3 4 4''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"6 7 9 10 11\") == \"DENIED\"\nassert solution(\"6 7 9 10 31\") == \"DENIED\"\nassert solution(\"6 7 9 10 31\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''5\n    6 7 9 10 31'''\n    ) == 'APPROVED'\n'''\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDUDLR') == 'No'\nassert solution('RDRUDLR') == 'Yes'\nassert solution('UDUDLR') == 'No'\nassert solution('LLURRRDDUDUDUD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(RUDLUDR) == 'Yes'\nassert solution(LDRRUULR) == 'No'\nassert solution(RUD) == 'Yes'\nassert solution(UD) == 'No'\nassert solution(RUUD) == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RURDRUD') == 'No'\nassert solution('RURUDDRUD') == 'Yes'\nassert solution('RRLLRLLLRLUDDLLRLLLLRULUDDDLLRRLRRLRUDDLLRRLLLLRLRLRRLUDDLLRRLLRR') == 'Yes'\nassert solution('RRLLRLLLRLUDDLLRLLLLRULUDDDLLRRLRRLRUDDLLRRLLLLRLRLRRLUDDLLRRLLRR') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRUD\") == \"No\"\nassert solution(\"LDRUDR\") == \"Yes\"\nassert solution(\"DRRDRUD\") == \"No\"\nassert solution(\"RDRUDDR\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDDLDRUDU') == 'Yes'\nassert solution('DDLDRUDU') == 'No'\nassert solution('RLUDUDDDUDUU') == 'No'\nassert solution('RRUUUUUDDLLDDDDDLLR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == 'Yes'\nassert solution(\"RRLLDD\") == 'Yes'\nassert solution(\"RDDLDRUL\") == 'No'\nassert solution(\"RDRUDUDD\") == 'Yes'\nassert solution(\"LDRRLR\") == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == \"Yes\"\nassert solution('DRLUL') == \"No\"\nassert solution('RDRULDDLL') == \"No\"\nassert solution('LDRRULDLL') == \"Yes\"\nassert solution('RDRULDLLD') == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDRL') == 'No'\nassert solution('RRDD') == 'Yes'\nassert solution('RDRDR') == 'No'\nassert solution('RDDLD') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\") == \"12\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"100\"\nassert solution(\"100\\n100\\n100\\n100\\n100\\n100\\n100\") == \"1\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''5\n3\n2\n4\n3\n5'''\n) == '7'\nassert solution(\n    '''10\n1000\n5000\n10000\n100000\n50000\n1000000\n10000000'''\n) == '74000'\nassert solution(\n    '''5\n5\n5\n5\n5\n5'''\n) == '0'\nassert solution(\n    '''5\n0\n0\n0\n0\n0'''\n) == '0'\nassert solution(\n    '''1\n1\n1\n1\n1\n1'''\n) == '0'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '8'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '8'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '8'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n7\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n2') == '2'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n6') == '7'\nassert solution('10\\n6\\n3\\n4\\n5\\n1\\n2\\n8\\n7\\n9') == '8'\nassert solution('10\\n8\\n3\\n4\\n5\\n6\\n1\\n2') == '8'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == 7\nassert solution('5\\n3\\n2\\n4\\n3\\n6\\n') == 7\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == 3\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n') == 7\nassert solution('4\\n1\\n1\\n1\\n1\\n') == 3\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == \"7\"\nassert solution('''5\n1\n2\n3\n4\n5''') == \"7\"\nassert solution('''4\n1\n2\n3\n4''') == \"4\"\nassert solution('''2\n1\n2''') == \"1\"\nassert solution('''2\n2\n2''') == \"1\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"3\\n2\\n4\\n3\\n5\\n\") == \"7\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('9') == ''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"1234\") == \"\"\nassert solution(\"123456789\") == \"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '2'\nassert solution('''4''') == '0'\nassert solution('''8''') == '1'\nassert solution('''16''') == '2'\nassert solution('''256''') == '8'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"9\") == \"9\"\nassert solution(\"99\") == \"99\"\nassert solution(\"999\") == \"999\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '2'\nassert solution('9') == '2'\nassert solution('4') == '1'\nassert solution('6') == '3'\nassert solution('8') == '5'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 2\nassert solution(4) == 8\nassert solution(10) == 24\n\nprint(solution(int(stdin.read())))\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1\n''') == '2'\nassert solution(\n'''2\n''') == '2'\nassert solution(\n'''5\n''') == '2'\nassert solution(\n'''7\n''') == '2'\nassert solution(\n'''9\n''') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('7') == '4'\nassert solution('10') == '10'\nassert solution('100') == '14'\nassert solution('1000') == '1'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('23') == 23\nassert solution('2') == 3\nassert solution('20') == 23\nassert solution('10') == 11\nassert solution('13') == 13\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"15\") == \"17\"\nassert solution(\"10\") == \"11\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20''') == '23'\nassert solution('''2''') == '3'\nassert solution('''10''') == '11'\nassert solution('''9''') == '11'\nassert solution('''8''') == '11'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20''') == 23\nassert solution('''1000000000''') == 73\nassert solution('''10000010000''') == 7\nassert solution('''1337''') == 29\nassert solution('''100000000000000000''') == 73"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20\\n') == '23'\nassert solution('1\\n') == '2'\nassert solution('1000000\\n') == '1000000'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"100\") == 23\nassert solution(\"100000\") == 23\nassert solution(\"20\") == 23\nassert solution(\"2\") == 3\nassert solution(\"4\") == 5\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20''') == '23'\nassert solution('''100000''') == '23'\nassert solution('''2''') == '3'\nassert solution('''1''') == '2'\nassert solution('''1000000000''') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '23'\nassert solution('20') == '23'\nassert solution('5') == '5'\nassert solution('4') == '5'\nassert solution('3') == '5'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('asdf') == None\nassert solution('20') == None\nassert solution('2') == None\nassert solution('3') == None\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''8\n4 5 3 1 8 3 9 2''') == '1'\nassert solution('''5\n5 5 3 2 1''') == '2'\nassert solution('''7\n7 2 2 1 1 1 1''') == '3'\nassert solution('''10\n5 2 2 1 1 1 1 1 3''') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 1\nassert solution('3 1 3 2') == 2\nassert solution('3 1 3 2') == 2\nassert solution('4 1 3 2') == 0\nassert solution('5 1 3 2') == 2\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.replace('3,1,3,2','')\n'''\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1 3 2\") == 1\nassert solution(\"4 1 3 2\") == 2\nassert solution(\"2 2\") == 0\nassert solution(\"1 1\") == 0\nassert solution(\"1 1 1 1\") == 0\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\"\nassert solution(\"2\\n1 2\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"0\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1 3 2\") == 1\nassert solution(\"3 3 2 1\") == 2\nassert solution(\"3 2 1 3\") == 0\nassert solution(\"2 1 3\") == 1\nassert solution(\"1 1 1 1\") == 1\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3 1 3 2') == 1\nassert solution('10\\n13 19 22 11') == 0\nassert solution('5\\n12 2 5 4') == 2\nassert solution('4\\n1 2 3 4') == 0\nassert solution('5\\n3 3 3 3') == 1\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''3 100 90 80\n22\n25\n50\n80''') == '33'\nassert solution('''3 100 90 80\n4\n5\n6\n80''') == '36'\nassert solution('''5 100 90 80\n4\n4\n4\n4\n4''') == '36'\nassert solution('''5 100 90 80\n5\n4\n3\n2\n1\n10''') == '35'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin=\"5 100 90 80\"\n    \"98\"\n    \"40\"\n    \"30\"\n    \"21\"\n    \"80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('98') == '23'\nassert solution('40') == '10'\nassert solution('30') == '9'\nassert solution('21') == '8'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 300 100 300') == '17'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '4'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n\n-----My Submission-----\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 100 90 80'''\n'''98'''\n'''40'''\n'''30'''\n'''21'''\n'''80'''\n'''\n'''\n) == \"23\"\n\nassert solution(\n'''3 3 2'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1'''\n'''1"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80') == '23'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"35\"\n\"\"\""
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('2 1 2') == '2'\nassert solution('2 1 3') == '3'\nassert solution('2 1 4') == '3'\nassert solution('2 1 5') == '4'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('DEZABC') == 'ABCXYZ'\nassert solution('ZABCDEF') == 'DEZABC'\nassert solution('ZZABCDEF') == 'ABCDEF'\n\n'''\n\nS = stdin.readline().strip()\nN = int(stdin.readline().strip())\n\nresult = ''\n\nfor char in S:\n    result += chr((ord(char) - ord('A') + N) % 26 + ord('A'))\n\nprint(result)\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ', 2) == 'DEZAB'\nassert solution('ABCXYZ', 1) == 'BCDE'\nassert solution('ABCXYZ', 0) == 'ABCXYZ'\nassert solution('ABCXYZ', -2) == 'ZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('zx') == 'zy'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB' # Do not remove this line\nassert solution('ABBC') == 'CABB'\nassert solution('A') == 'A'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('abc') == 'cde'\nassert solution('abcxyz') == 'cdezab'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCYZ\") == \"DEZABC\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ZABCDEFGHIJKLMNOPQRSTUVWXY\"\nassert solution(\"XYZABCDEFGHIJKLMNOPQRSTUVW\") == \"DEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ZABCDEFGHIJKLMNOPQRSTUVWX\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\"\"\"\nassert solution(input()) == \"\"\"\"\"\"\nassert solution(input()) == \"\"\"\"\"\"\nassert solution(input()) == \"\"\"\"\"\"\nassert solution(input()) == \"\"\"\"\"\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('A') == 'Z'\nassert solution('A') == 'Z'\nassert solution('Z') == 'A'\nassert solution('AAAAAA') == 'AAAAAA'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('a') == 'a'\nassert solution('abc') == 'bcd'\nassert solution('cad') == 'cad'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABC') == 'C'\nassert solution('ABZ') == 'A'\nassert solution('XYZ') == 'X'\nassert solution('ABCD') == 'BD'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'\nassert solution('''\n1\n2700000997\n''') == '199999'\n'''"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('1') == '199999'\nassert solution('2750131 199999') == '199999'\nassert solution('3 6') == '6'\nassert solution('1') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1''') == '199999'\nassert solution('''2750131 199999''') == '199999'\nassert solution('''3''') == '3'\nassert solution('''3 6''') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999') == '199999'\nprint('Test success!')\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''2\n3 4\n''') == '2 3'\nassert solution('''2\n4 5\n''') == '2 3'\nassert solution('''5\n2 3 4 5 6 7\n''') == '3 4 2 5 6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n6''') == '6'\nassert solution('''2\n6 9 5 3 1 4''') == '5 3 9 1 4'\nassert solution('''2\n5 7 8 9 10 11''') == '5 11'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\nassert solution('''3\n3 6''') == '3'\nassert solution('''2\n5 4\n5 4''') == '5 4'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1\\n7 1\\n') == '11212'\nassert solution('5 1\\n2 1\\n') == '2211'\nassert solution('7 1\\n7 2\\n') == '11212'\nassert solution('7 1\\n2 1\\n') == '2211'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\n\n\n\n- \n\n'''\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1\\n2 1 3 5 4\\n') == '11111'\nassert solution('5 1\\n2 4 5 3 1\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\nassert solution('5 1\\n2 3 4 5 3\\n') == '11111'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 2\n2 4 5 3 1\"\"\") == \"11111\"\nassert solution(\"\"\"5 1\n2 1 3 5 4\"\"\") == \"22111\"\nassert solution(\"\"\"7 1\n7 2 1 3 5 4 6\"\"\") == \"1121122\"\nassert solution(\"\"\"5 1\n2 4 5 3 1\"\"\") == \"21112\"\nassert solution(\"\"\"7 1\n7 2 1 3 5 4 6\"\"\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 5 1') == '11111'\nassert solution('3 1 5 4 3') == '22111'\nassert solution('7 1 7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1') == '21112'\nassert solution('1 2 1 3 5 4') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\nassert solution('8 2\\n1 2 2 1 2 1 2 2 1\\n') == '22222'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\n\n\n\n\"\"\"\n\nfrom collections import Counter, deque\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\nassert solution('5 2') == '11111'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\nassert solution('7 1') == '1121122'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"5\\n1 2 1 2 3\") == \"2\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"7\\n1 3 3 7 7 9 1\") == \"4\"\nassert solution(\"8\\n1 3 3 7 7 9 1\") == \"4\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '2'\nassert solution('''100 1''') == '2'\nassert solution('''2''') == '2'\nassert solution('''4''') == '4'\nassert solution('''2 3 3 7''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('100 1 1') == '3'\nassert solution('100 1 1 1') == '5'\nassert solution('100 1 1 1 1') == '7'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''6\n1 2 3 4 5 6''') == '10'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2 3\\n5') == '2'\nassert solution('1 2 3 4\\n5') == '4'\nassert solution('1 2 3 4\\n5') == '4'\nassert solution('1 2 3 4\\n5') == '4'\nassert solution('1 2 3 4\\n5') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\n\nassert solution('''\n2\n100 1\n''') == '2'\n\nassert solution('''\n4\n1 3 3 7\n''') == '4'\n\nassert solution('''\n5\n965  564  743  838  411\n''') == '9'\n\nassert solution('''\n10\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 1000\n''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''4\n1 3 3 2''') == '3'\nassert solution('''4\n2 3 3 2''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''10\n73 53 25 78 72 22 91 84 83 22 81 70 47 22 52 31 16 22 58 24 61 30 22 26 62 19 11 65 22 16 92 22\n''') == '21'\nassert solution('''10\n11 12 13 14 15 16 17 18 19\n''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '4'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n16\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1023\\n\") == \"0\"\nassert solution(\"2\\n4 8 4 8\\n\") == \"1\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''6\n4 7 1 5 4 9''') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''6\n1 1 1 1023''') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''6\n1 1 1 1023''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"2\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 1 1023\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\nassert solution('6\\n1 2 3 4 5 6\\n') == '1'\nassert solution('1\\n16\\n') == '1'\nassert solution('4\\n1 1 1 1023\\n') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 1 1') == \"1\"\nassert solution('1\\n1 1 1 1023') == \"0\"\nassert solution('4\\n1 1 1 1023') == \"1\"\nassert solution('5\\n1 1 1 1023') == \"2\"\nassert solution('6\\n1 1 1 1023') == \"2\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('11') == 1\nassert solution('101') == 0\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0011') == 4\nassert solution('0111') == 3\nassert solution('001101100') == 3\nassert solution('000100100') == 3\nassert solution('0001001110') == 4\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0011') == '4'\nassert solution('0101') == '0'\nassert solution('001100010') == '1'\nassert solution('001100010') == '1'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('0011') == 4\nassert solution('1101100101') == 3\nassert solution('100111111111100011') == 5\nassert solution('100111111111100101') == 4\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0011') == 4\nassert solution('111') == 0\nassert solution('1011') == 4\nassert solution('1001') == 0\nassert solution('0111') == 4\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"101001\") == \"0\"\nassert solution(\"11111010011\") == \"0\"\nassert solution(\"0011001010000\") == \"1\"\nassert solution(\"01000001100100\") == \"2\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0011') == 4\nassert solution('1011') == 2\nassert solution('1111') == 0\nassert solution('0000') == 0\nassert solution('1111110101') == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0011') == '4'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('10') == '0'\nassert solution('11') == '1'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0000\") == 0\nassert solution(\"1111\") == 0\nassert solution(\"1010\") == 1\nassert solution(\"1011\") == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0111\") == 2\nassert solution(\"1100\") == 1\nassert solution(\"1111\") == 0\nassert solution(\"00000\") == 0\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 4') == '3'\nassert solution('4 2') == '2'\nassert solution('5 4') == '3'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 3\\n2 4\\n') == '2'\nassert solution('3 2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n4 5\\n1 2\\n2 4\\n3 4\\n') == '4'\nassert solution('3 3\\n1 1\\n1 1\\n1 1\\n') == '0'\nassert solution('3 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n\") == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == \"2\"\nassert solution('5 5') == \"2\"\nassert solution('1 1') == \"1\"\nassert solution('1 1') == \"1\"\nassert solution('1 1') == \"1\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"1 3\\n2 4\\n\") == \"2\"\nassert solution(\"1 2\\n3 4\\n\") == \"0\"\nassert solution(\"1 2\\n2 4\\n\") == \"0\"\nassert solution(\"1 2\\n1 4\\n\") == \"1\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('2 4') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 3\n2 4''') == '2'\nassert solution('''4 2\n1 3\n1 4\n1 5\n2 4''') == '1'\nassert solution('''4 2\n1 3\n1 4\n1 5\n1 6\n2 4''') == '0'\nassert solution('''4 2\n1 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n5 7\n6 7''') == '1'\nassert solution('''4 2\n2 1\n3 2\n1 1\n3 2\n3 3\n2 1\n2 2\n2 3\n3 4\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9''') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('4 2') == '2'\nassert solution('1 3') == '2'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 2 1') == '0'\nassert solution('1') == '0'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('3\\n1 2 2 1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('3\\n1 2 2 1') == '1'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 2 1''') == '2'\nassert solution('''4\n1 2 2 1''') == '2'\nassert solution('''4\n1 2 1 2''') == '3'\nassert solution('''4\n1 2 1 2''') == '1'\nassert solution('''2\n2 1 1''') == '0'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 2 2 1') == '2'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 2 1''') == '2'\nassert solution('''2\n1 2''') == '1'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('2 4 1 2') == '2'\nassert solution('4 10') == '2'\nassert solution
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10') == 2\nassert solution('2 4 1 2') == 4\nassert solution('2 1 1 1') == 0\nassert solution('1 1 1 1') == 0\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\nassert solution('5 1\\n-2 1 -1 1 -1') == '0'\nassert solution('5 3\\n-2 2 -2 -1') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4\\n2 4 1 2\\n') == '2'\nassert solution('3 4\\n2 4 1 2\\n') == '0'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\\\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\\\n4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\\\n3 10\n1 -1 1 -1 1\n''') == '4'\n\nassert solution('''\\\n2 4\n1 2 3 4\n''') == '0'"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4') == '3'\nassert solution('4 10') == '2'\nassert solution('2 4 1 2') == '4'\nassert solution('4 10 -1 1') == '2'\nassert solution('2 4 1 2') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\nassert solution('''4 10\n4 3 2 1\n''') == '3'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n\n\n'''\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom math import factorial\n\nn, w = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()[1:]]\n\ndp = [1] + [0] * w\n\nfor i in range(1, n + 1):\n    for j in range(w):\n        if j - a[i - 1] >= 0:\n            dp[j] += dp[j - a[i - 1]]\n\nprint(dp[w - 1])\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('6\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('6\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/test_1.txt') == '9 3 6 12 4 8\\n126 42 84 28'\nassert solution('inputs/test_2.txt') == '3000000000000000000 1000000000000000000\\n42 28 84 126'\nassert solution('inputs/test_3.txt') == '1000000000000000000 3000000000000000000\\n3000000000000000000 1000000000000000000\\n'\nassert solution('inputs/test_4.txt') == '3000000000000000000 1000000000000000000\\n42 28 84 126'\nassert solution('inputs/test_5.txt') == '9 3 6 12 4 8\\n126 42 84 28'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '9 3 6 12 4 8'\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\n\"\"\"\nTime Limit Exceeded"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 28 84 42\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('3\\n1 1 1') == '1 1 1'\n\n\n\n------\n\n## SOLUTION 2 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 3 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 4 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 5 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 6 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 7 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 8 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 9 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 10 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 11 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 12 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 13 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 14 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 15 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 16 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 17 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 18 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 19 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 20 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 21 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 22 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 23 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 24 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 25 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 26 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 27 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 28 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 29 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 30 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 31 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 32 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 33 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 34 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 35 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 36 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 37 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 38 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 39 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 40 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 41 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 42 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 43 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 44 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 45 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 46 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 47 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 48 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 49 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 50 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 51 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 52 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 53 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 54 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 55 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 56 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 57 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 58 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 59 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 60 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 61 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 62 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 63 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 64 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 65 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 66 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 67 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 68 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 69 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 70 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 71 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 72 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 73 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 74 ##\n\n--\n\n-----\n\n-----\n\n-----\n\n## SOLUTION 75 ##\n\n--\n\n-----\n\n-----\n\n-----\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\n\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4 8 6 3 12 9''') == '9 3 6 12 4 8'\nassert solution('''2\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\nassert solution('''6\n42 28 84 126''') == '126 42 84 28'\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 28 84'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\nassert solution('''5''') == '1'\nassert solution('''5''') == '1'\nassert solution('''-1 2 5 8 11''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n-1 2 5 8 11') == '3\\n7 3 5'\nassert solution('6\\n3 5 4 7 10 12') == '3\\n7 3 5'\nassert solution('5\\n1 2 4 5') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('3 5 4 7 10 12') == '3'\nassert solution('-1 2 5 8 11') == '1'\nassert solution('-1 2 -3 -4 -5 -6') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"3\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"3\\n3 3\") == \"3\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6\n3 5 4 7 10 12\n\"\"\") == \"\"\"\n3\n7 3 5\n\"\"\"\n\n\nassert solution(\n\"\"\"\n5\n-1 2 5 8 11\n\"\"\") == \"\"\"\n1\n8\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n-1 3 -2 0\n\"\"\") == \"\"\"\n3\n-1 3 -2\n\"\"\"\n\n\nassert solution(\n\"\"\"\n7\n-1 1 3 5 7 9 11\n\"\"\") == \"\"\"\n3\n-1 1 3\n\"\"\"\n\nassert solution(\n\"\"\"\n1\n-1\n\"\"\") == \"\"\"\n1\n\"\"\""
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n-1 2') == '2'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n6\n3 5 4 7 10 12\n''') == '3'\nassert solution(\n'''\n5\n-1 2 5 8 11\n''') == '1'\nassert solution(\n'''\n5\n-5 -4 -3 -2 -1\n''') == '2'\nassert solution(\n'''\n9\n2 4 -5 6 -8 9 0 1\n''') == '2'\nassert solution(\n'''\n10\n5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"0 2\"\nassert solution(\"2 2 2\") == \"0 0\"\nassert solution(\"2 2 1\") == \"0 1\"\nassert solution(\"4 4 4\") == \"0 0\"\nassert solution(\"2 2 1\") == \"0 1\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 3''') == '0 2'\nassert solution('''5 5 3''') == '4 0'\nassert solution('''100000 100000 10''') == '76679 27'\nprint('Test passed.')\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('10 10 10') == '10 10'\nassert solution('100 100 100') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3 3''') == '0 2'\nassert solution('''4 5 6''') == '0 2'\nassert solution('''1 4 7''') == '0 2'\nassert solution('''1000 1 1''') == '0 2'\nassert solution('''1000 1000 1''') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\n'''\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n\nprint(solution(\"2 3 3\"))\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 3 2') == '0 1'\nassert solution('2 3 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('1 2 2') == '1 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 3 3\n'''\n    ) == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('4 2 3') == '0 4'\nassert solution('6 4 3') == '0 6'\nassert solution('4 1 3') == '0 2'\nassert solution('4 1 2') == '0 1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('10^18') == '1'\nassert solution('1000') == '1'\nassert solution('10^18') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[0]\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100''') == '3'\nassert solution('''1000000''') == '2'\nassert solution('''80000000''') == '6'\nassert solution('''9874000000''') == '10'\n'''\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '2'\nassert solution('100000') == '8'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('1') == '5'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''103''') == '3'\nassert solution('''1''') == '1'\nassert solution('''100''') == '3'\nassert solution('''9''') == '1'\nassert solution('''18''') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('3\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('2\\n100') == '3'\nassert solution('100\\n100') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('103') == '3'\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '1'\nassert solution('100') == '3'\nassert solution('1000') == '4'\nassert solution('10000') == '5'\nassert solution('1234567') == '12'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '3'\nassert solution('101') == '3'\nassert solution('1000000001') == '5'\nassert solution('10000000000000000000000001') == '1000000000'\nassert solution('10000000000000000000100000000000000000000') == '2'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '36'\nassert solution('4') == '464'\nassert solution('5') == '54321'\nassert solution('6') == '7654321'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"0\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '12'\nassert solution('4') == '18'\nassert solution('5') == '60'\nassert solution('6') == '72'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '9'\nassert solution('3\\n') == '27'\nassert solution('5\\n') == '5'\nassert solution('7\\n') == '1'\nassert solution('9\\n') == '9'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('3') == '45'\nassert solution('4') == '1050'\nassert solution('5') == '8100'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 2\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4 6''') == '10'\n'''\n    while True:\n        try:\n            n = int(stdin.readline().strip())\n            arr = [int(x) for x in stdin.readline().strip().split()]\n            return '%d' % solution('''%d\n%s''' % (n,''.join(map(str, arr))))\n        except ValueError:\n            continue\n'''\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n3 4 6\n'''\n) == '10'\n\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == '10'\n\nassert solution(\n'''\n6\n9 12 15 17 19\n'''\n) == '17'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == 10\nassert solution('3\\n3 4 6') == 10\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''2\n4 4''') == '8'\nassert solution('''3\n2 3 4''') == '0'\nassert solution('''4\n4 4 4 4''') == '0'\nassert solution('''10\n4 4 4 4 4 4 4 4 4 4 4''') == '4'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n2 1 1') == '1'\nassert solution('3\\n2 1 1') == '1'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n4 2 3') == '6'\nassert solution('2\\n3 4') == '6'\nassert solution('2\\n4 4') == '0'\nassert solution('3\\n4 4 6') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n4 6') == '10'\nassert solution('4\\n3 4 6') == '10'\nassert solution('4\\n3 4') == '10'\nassert solution('3\\n4') == '10'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2''') == 'Yes'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 'No'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13''') == 'Yes'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13''') == 'Yes'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13''') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 1\\n') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 1\\n') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n'''\n) == \"Yes\"\n\nassert solution(\n'''\n6\n1 2\n6 6\n4 4\n3 3\n3 2\n3 1\n'''\n) == \"No\"\n\nassert solution(\n'''\n6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n'''\n) == \"Yes\"\n\nassert solution(\n'''\n1\n1\n'''\n) == \"Yes\"\n\nassert solution(\n'''\n1\n1\n'''\n) == \"No\""
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == \"Yes\"\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n') == \"Yes\"\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n3 0\\n') == \"No\"\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n3 0\\n3 1\\n') == \"Yes\"\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n3 0\\n3 1\\n3 0\\n') == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == 'Yes'\nassert solution('''5\n1 2\n1 1\n1 3\n1 4\n1 5\n1 6\n''') == 'Yes'\nassert solution('''5\n1 1\n1 2\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == 'No'\nassert solution('''5\n1 1\n1 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3\n1 1\n1 2\n1 1\n1 2\n1 3"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('100') == '1'\nassert solution('1000000') == '0'"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 4\nassert solution(\"3\") == 12\nassert solution(\"4\") == 16\nassert solution(\"5\") == 20\nassert solution(\"6\") == 24\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '8'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('5') == '16'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 4\nassert solution('3') == 9\nassert solution('4') == 16\nassert solution('5') == 25\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('11') == '6'\nassert solution('100') == '100'\nassert solution('101') == '101'\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == \"4\"\nassert solution(4) == \"2\"\nassert solution(100) == \"0\"\nassert solution(0) == \"0\"\n\nassert solution(6) == \"2\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 4\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 4\nassert solution('100') == 0\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '9'\nassert solution('1') == '1'\nassert solution('10') == '100'\nassert solution('100') == '1000'\nprint('All tests passed successfully!')"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3 5 1') == 'Yes'\nassert solution('2 3 4 1') == 'No'\nassert solution('3 5 4 1') == 'No'\nassert solution('8 3 5 1') == 'Yes'\nassert solution('8 3 5 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n8 5 1') == 'Yes'\nassert solution('1\\n1') == 'No'\nassert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('4\\n5 9 7 6') == 'No'\nassert solution('5\\n3 4 2 1') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n'''\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"4 8 5 1\") == \"Yes\"\nassert solution(\"3 8 5 1\") == \"Yes\"\nassert solution(\"2 4 5 1\") == \"Yes\"\nassert solution(\"6 3 5 1\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 5 1') == 'Yes'\nassert solution('4 5 1') == 'No'\nassert solution('3 8 5 1') == 'Yes'\nassert solution('3 4 4 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 8 5 1\\n') == 'Yes'\nassert solution('3 8 5 1\\n') == 'No'\nassert solution('2\\n1\\n') == 'No'\nassert solution('3\\n2\\n') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 8 5 1') == 'No'\nassert solution('3 8 5 1') == 'No'\nassert solution('3 8 5 1') == 'No'\nassert solution('3 8 5 1') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 5 1') == 'Yes'\nassert solution('1 1 1 1') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('1 1 1 1 1 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") is True\nassert solution(\"3 8 5 1\") is True\nassert solution(\"3 8 5 1 2\") is False\nassert solution(\"1 1 1 1 1\") is True\nassert solution(\"1 1 1 1 2\") is False\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"Yes\"\n\n\"\"\"\n\n\"\"\"\nFrom the sample input above, we see that an N-sided polygon (not necessarily convex) with sides of length L_1, L_2,..., L_N can be drawn in a two-dimensional plane.\nWe can use the following theorem:\nTheorem: an N-sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other N-1 sides.\n\nTheorem: an N-sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other N-1 sides.\n\"\"\""
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7\n''') == '702'\nassert solution('''8 4\n1 4\n3 4\n2 4\n1 4\n4 2\n2 3\n3 4\n2 1\n''') == '-1'\nassert solution('''6 6\n1 6\n1 1\n1 6\n1 4\n1 5\n1 6\n1 4\n1 4\n1 5\n1 5\n1 4\n1 6\n1 4\n1 3\n1 2\n1 4\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 2\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 8') == '702'\nassert solution('1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 8') == '702'\nassert solution('1 7\\n3 2\\n1 7') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3') == '3'\nassert solution('2 4\\n1 3') == '2'\nassert solution('3 4\\n1 3') == '2'\nassert solution('1 2\\n1 4') == '2'\nassert solution('2 4\\n1 5') == '2'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7\n''') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '3 3\\n'\n    '1 7\\n'\n    '3 2\\n'\n    '1 7\\n') == '702'\n\nprint(solution(\n    '3 3\\n'\n    '1 7\\n'\n    '3 2\\n'\n    '1 7\\n'))\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"2 6\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('3 4\\n1 7\\n3 2\\n1 7') == '-1'\nassert solution('2 2\\n1 7\\n3 2\\n1 7') == '1'\nassert solution('2 3\\n1 7\\n3 2\\n1 7') == '7'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '9'\nassert solution('3 2') == '6'\nassert solution('7 19') == '29'\nassert solution('2 10') == '14'\nassert solution('2 2') == '5'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1, 2) == 0\nassert solution(1, 3) == 9\nassert solution(2, 2) == 0\nassert solution(2, 3) == 15\nassert solution(3, 3) == 0\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '9'\nassert solution('3 2') == '6'\nassert solution('1000 2') == '12'\nassert solution('100 2') == '4'\nassert solution('1000 2') == '12'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\"\nassert stdin == \"\"\"(3,2)\"\"\"\n\nassert solution(stdin) == \"10\"\nassert stdin == \"\"\"(3,2)\"\"\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '9'\nassert solution('''1 2''') == '9'\nassert solution('''10 2''') == '0'\nassert solution('''1000 2''') == '0'\nassert solution('''10000 2''') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '9'\nassert solution('1 2') == '0'\nassert solution('0 0') == '0'\nassert solution('1 10') == '0'\nassert solution('5 3') == '10'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '9'\nassert solution('5 4') == '6'\nassert solution('1 1') == '0'\nassert solution('10 10') == '0'\nassert solution('10 17') == '5'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 4') == '4'\nassert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0) == '0'\nassert solution(10) == '1010'\nassert solution(-10) == '1111'\nassert solution(14) == '11101'\nassert solution(2) == '00'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('-9') == '1011'\nassert solution('0') is None\nassert solution('0') == '0000'\nassert solution('0') == '0000'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-9') == 1011\nassert solution('9') == 0\nassert solution('-98') == 10\nassert solution('98') == 7\nassert solution('-99') == 11\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(str(10)) == \"1010\"\nassert solution(str(1)) == \"1\"\nassert solution(str(100)) == \"110010000\"\nassert solution(str(999)) == \"1111111111\"\nassert solution(str(0)) == \"0\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == '0'\nassert solution(1) == '1'\nassert solution(-1) == '1'\nassert solution(-2) == '101'\nassert solution(9) == '101'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '11'\nassert solution('4') == '100'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '10'\nassert solution(3) == '11'\nassert solution(4) == '100'\nassert solution(5) == '101'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\nassert solution('0') == '0'\nassert solution('10') == '1010'\nassert solution('100') == '110000'\nassert solution('1000') == '110001'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('-1') == '1'\nassert solution('-10') == '1010'\nassert solution('-101') == '10101'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == str(solution(input())) # Ignore TLE\n\"\"\""
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_data"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5') == '12'\nassert solution('4 9') == '27'\nassert solution('2 4') == '16'\nassert solution('3 10') == '31'\nassert solution('1 5') == '0'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 10\") == \"20\"\nassert solution(\"1 10 2\") == \"6\"\nassert solution(\"1 10 3\") == \"10\"\nassert solution(\"1 10 4\") == \"18\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin\n\nN, M = list(map(int, stdin.readline().split()))\n\nr = []\nfor i in range(N):\n    a, b = list(map(int, stdin.readline().split()))\n    r.append(a * b)\n\nr.sort()\n\nprint(r[M - 1])\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('1 4\\n2 4') == '1'\nassert solution('5 4\\n2 4\\n1 4') == '11'\nassert solution('2 5\\n4 10\\n2 4') == '23'\nassert solution('1 5\\n1 1') == '2'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n5 4') == '12'\nassert solution('2 5\\n4 9\\n2 4') == '12'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n4 4\\n\") == \"25\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('5\\n2 4 1 8 7 3') == '3'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"3\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('5\\n8 7 3 5') == '1'\nassert solution('5\\n8 3 2 7') == '1'\nassert solution('5\\n8 3 2 9') == '2'\nassert solution('5\\n10 9 2 1 4') == '3'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''5\n10 4 8 7 3'''\n) == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\nassert solution('''3\n2 3 1''') == '0'\nassert solution('''5\n3 1 2 5 1''') == '2'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''2\n2 2''') == '0'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 2\n\"\"\""
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n2\\n2\\n') == '0'\nassert solution('2\\n2\\n2\\n2\\n') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == '0'\nassert solution(\"1\\n2\") == '1'\nassert solution(\"1\\n3\") == '1'\nassert solution(\"1\\n4\") == '0'\nassert solution(\"1\\n5\") == '1'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 3 3') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''7 4\n1 2 3 4 5 6 7''') == '3'\nassert solution('''4 10\n1 2 3 4 5 6 7 8 9 10''') == '2'"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5\\n1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5\\n1 2 3 3 3 3 3') == '0'\nassert solution('1 2 3 4 5\\n1 2 3 3 4 5') == '1'\nassert solution('1 2 3 4 5\\n1 2 3 3 4 5') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3') == '3'\nassert solution('7 5\\n3 3 2 1 1 1 3') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 5\") == \"\"\nassert solution(\"1 2 2 4 2 3\") == \"\"\nassert solution(\"6 5\") == \"\"\nassert solution(\"1 2 2 4 2 3\") == \"\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''5 5\n1 2 2 4 2 3''') == '5'\nassert solution('''7 7\n3 3 2 1 1 1 3''') == '8'\nassert solution('''1 1\n1''') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 2 4 2 3') == '3'\nassert solution('3 4\\n1 2 3 4 2 3') == '4'\nassert solution('2 2\\n1 2') == '0'\nassert solution('3 4\\n1 1 1 1 1 1') == '2'\nassert solution('4 5\\n1 1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '2'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10'\nassert solution('''3\n1 10 1\n1 100 1\n1 1 1\n1 100 1''') == '3'\nassert solution('''6\n9 1 4\n2 3 2\n2 2 1\n2 2 1\n2 2 1\n2 2 1''') == '6'\nassert solution('''20\n1 9 3\n1 9 2\n2 4 1\n2 4 2\n3 4 3\n4 4 4\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '20'\nassert solution('''24\n1 6 5\n2 8 5\n3 9 5\n4 10 5\n5 12 4\n6 19 4\n7 26 4\n8 30 4\n9 37 3\n10 45 3\n11 52 3\n12 59 2\n13 66 2\n14 73 1\n15 75 1\n16 83 1\n17 89 1\n18 94 1\n19 96 1\n20 105 1\n21 108 1\n22 112 1\n23 121 1\n24 138 1\n25 144 1\n26 151 1\n27 156 1\n28 163 1\n29 175 1\n30 186 1\n31 198 1\n32 212 1\n33 225 1\n34 233 1\n35 236 1\n36 240 1\n37 244 1\n38 247 1\n39 251 1\n40 254 1\n41 256 1\n42 259 1\n43 265 1\n44 271 1\n45 279 1\n46 287 1\n47 291 1\n48 309 1\n49 315 1\n50 327 1\n51 334 1\n52 336 1\n53 335 1\n54 337 1\n55 342 1\n56 353 1\n57 359 1\n58 375 1\n59 387 1\n60 404 1\n61 418 1\n62 423 1\n63 423 1\n64 425 1\n65 426 1\n66 433 1\n67 433 1\n68 435 1\n69 435 1\n70 440 1\n71 445 1\n72 446 1\n73 446 1\n74 449 1\n75 450 1\n76 450 1\n77 454 1\n78 454 1\n79 455 1\n80 455 1\n81 456 1\n82 457 1\n83 457 1\n84 459 1\n85 459 1\n86 459 1\n87 460 1\n88 461 1\n89 462 1\n90 465 1\n91 466 1\n92 466 1\n93 469 1\n94 469 1\n95 470 1\n96 471 1\n97 472 1\n98 473 1\n99 475 1\n100 477 1\n101 478 1\n102 480 1\n103 481 1\n104 481 1\n105 481 1\n106 481 1\n107 481 1\n108 481 1\n109 481 1\n110 481 1\n111 481 1\n112 481 1\n113 481 1\n114 481 1\n115 481 1\n116 481 1\n117 481 1\n118 481 1\n119 481 1\n120 481 1\n121 481 1\n122 481 1\n123 481 1\n124 481 1\n125 481 1\n126 481 1\n127 481 1\n128 481 1\n129 481 1\n130 481 1\n131 481 1\n132 481 1\n133 481 1\n134 481 1\n135 481 1\n136 481 1\n137 481 1\n138 481 1\n139 481 1\n140 481 1\n141 481 1\n142 481 1\n143 481 1\n144 481 1\n145 481 1\n146 481 1\n147 481 1\n148 481 1\n149 481 1\n150 481 1\n151 481 1\n152 481 1\n153 481 1\n154 481 1\n155 481 1\n156 481 1\n157 481 1\n158 481 1\n159 481 1\n160 481 1\n161 481 1\n162 481 1\n163 481 1\n164 481 1\n165 481 1\n166 481 1\n167 481 1\n168 481 1\n169 481 1\n170 481 1\n171 481 1\n172 481 1\n173 481 1\n174 481 1\n175 481 1\n176 481 1\n177 481 1\n178 481 1\n179 481 1\n180 481 1\n181 481 1\n182 481 1\n183 481 1\n184 481 1\n185 481 1\n186 481 1\n187 481 1\n188 481 1\n189 481 1\n190 481 1\n191 481 1\n192 481 1\n193 481 1\n194 481 1\n195 481 1\n196 481 1\n197 481 1\n198 481 1\n199 481 1\n200 481 1\n201 481 1\n202 481 1\n203 481 1\n204 481 1\n205 481 1\n206 481 1\n207 481 1\n208 481 1\n209 481 1\n210 481 1\n211 481 1\n212 481 1\n213 481 1\n214 481 1\n215 481 1\n216 481 1\n217 481 1\n218 481 1\n219 481 1\n220 481 1\n221 481 1\n222 481 1\n223 481 1\n224 481 1\n225 481 1\n226 481 1\n227 481 1\n228 481 1\n229 481 1\n230 481 1\n231 481 1\n232 481 1\n233 481 1\n234 481 1\n235 481 1\n236 481 1\n237 481 1\n238 481 1\n239 481 1\n240 481 1\n241 481 1\n242 481 1\n243 481 1\n244 481 1\n245 481 1\n246 481 1\n247 481 1\n248 481 1\n249 481 1\n250 481 1\n251 481 1\n252 481 1\n253 481 1\n254 481 1\n255 481 1\n256 481 1\n257 481 1\n258 481 1\n259 481 1\n260 481 1\n261 481 1\n262 481 1\n263 481 1\n264 481 1\n265 481 1\n266 481 1\n267 481 1\n268 481 1\n269 481 1\n270 481 1\n271 481 1\n272 481 1\n273 481 1\n274 481 1\n275 481 1\n276 481 1\n277 481 1\n278 481 1\n279 481 1\n280 481 1\n281 481 1\n282 481 1\n283 481 1\n284 481 1\n285 481 1\n286 481 1\n287 481 1\n288 481 1\n289 481 1\n290 481 1"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '0'\nassert solution('10\\n') == '1'\nassert solution('100\\n') == '10'\nassert solution('1000\\n') == '90'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''100000 1 3\n1 1 1\n1000000 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''1000000 1 3\n1 1 1\n1000000 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''3\n1 3 1\n1 1 1\n1 1 1\n''') == '4\\n9\\n3\\n1'\n\nassert solution('''1\n1 1 1\n1 1 1\n1 1 1\n''') == '4\\n9\\n1\\n1'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'\nprint(solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88'''))\n'''\n\n'''\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"3 4 5\") == \"2\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"7 7 7\") == \"3\"\nassert solution(\"6 9 6\") == \"2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 2 3\\n\") == \"3\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2'\nassert solution('8 15\\n9 17 19 21 19\\n') == '1'\nassert solution('3 4\\n1 1 2\\n') == '0'\nassert solution('1 1\\n1\\n') == '0'\nassert solution('5 10\\n4 5 6 7 8 9\\n') == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6') == 2\nassert solution('3 4 5') == 2\nassert solution('0 1 2 3 4 5') == 2\nassert solution('0 1 2 3 4') == 0\nassert solution('0 1 2 3') == 0\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2') == 2\nassert solution('1 1') == 1\nassert solution('3 1 2 2') == 2\nassert solution('4 1 2 3 4') == 3\nassert solution('3 10 9 8 7 6 5 4 4 3 3 2 2 1 1') == 3\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\"\n          \"hoge\\n\"\n          \"hoge\\n\"\n          \":\\n\"\n          \"hoge\") == \"No\"\n\nassert solution(\"1\\n\"\n          \"hoge\\n\"\n          \"hoge\\n\"\n          \":\\n\"\n          \"hoge\") == \"Yes\"\n\nassert solution(\"4\\n\"\n          \"hoge\\n\"\n          \"hoge\\n\"\n          \"enigma\\n\"\n          \":\\n\"\n          \"hoge\") == \"No\"\n\nassert solution(\"1\\n\"\n          \"hoge\\n\"\n          \"hoge\\n\"\n          \"enigma\\n\"\n          \":\\n\"\n          \"hoge\") == \"Yes\"\n\"\"\"\n\nfrom collections import Counter\nfrom typing import List\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'Yes'\nassert solution('''7\nfuga\nfuga\nfuga\nfuga\nfuga\nfuga\nfuga''') == 'Yes'\nassert solution('''5\nhogehoge\nhogehoge\nhogehoge\nhogehoge\nhogehoge''') == 'No'\nassert solution('''6\nfuga\nfuga\nfuga\nfuga\nfuga\nfuga''') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Takahashi is practicing shiritori alone again today.\\nShiritori is a game as follows:\\n - In the first turn, a player announces any one word.\\n - In the subsequent turns, a player announces a word that satisfies the following conditions:\\n - That word is not announced before.\\n - The first character of that word is the same as the last character of the last word announced.\\nIn this game, he is practicing to announce as many words as possible in ten seconds.\\nYou are given the number of words Takahashi announced, N, and the i-th word he announced, W_i, for each i. Determine if the rules of shiritori was observed, that is, every word announced by him satisfied the conditions.\\n') == 'No'\nassert solution('Shiritori is a game as follows:\\n - In the first turn, a player announces any one word.\\n - In the subsequent turns, a player announces a word that satisfies the following conditions:\\n - That word is not announced before.\\n - The first character of that word is the same as the last character of the last word announced.\\nIn this game, he is practicing to announce as many words as possible in ten seconds.\\nYou are given the number of words Takahashi announced, N, and the i-th word he announced, W_i, for each i. Determine if the rules of shiritori was observed, that is, every word announced by him satisfied the conditions.\\n') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('takahashi is practicing shiritori alone again today.\\n' +\n'Shiritori is a game as follows:\\n' +\n' - In the first turn, a player announces any one word.\\n' +\n' - In the subsequent turns, a player announces a word that satisfies the following conditions:\\n' +\n' - That word is not announced before.\\n' +\n' - The first character of that word is the same as the last character of the last word announced.\\n' +\n'In this game, he is practicing to announce as many words as possible in ten seconds.') == 'Yes'\nassert solution('takahashi is practicing shiritori alone again today.\\n' +\n'Shiritori is a game as follows:\\n' +\n' - In the first turn, a player announces any one word.\\n' +\n' - In the subsequent turns, a player announces a word that satisfies the following conditions:\\n' +\n' - That word is not announced before.\\n' +\n' - The first character of that word is the same as the last character of the last word announced.\\n' +\n'In this game, he is practicing to announce as many words as possible in ten seconds.\\n' +\n'N\\n' +\n'W_1\\n' +\n'W_2\\n' +\n':\\n' +\n'W_N\\n') == 'Yes'\nassert solution('hogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehoge"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('', 'abc', 'xyz') == 'Yes'\nassert solution('', 'a', 'b') == 'No'\nassert solution('', 'a', 'a') == 'Yes'\nassert solution('', 'ab', 'ba') == 'Yes'\nassert solution('', 'ba', 'ab') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\\n\".join([\n    \"4\",\n    \"hoge\",\n    \"english\",\n    \"hoge\",\n    \"enigma\"\n])) == \"No\"\nassert solution(\"\\n\".join([\n    \"3\",\n    \"hoge\",\n    \"hoge\",\n    \"enigma\",\n    \"english\"\n])) == \"Yes\"\nprint(\"tests passed\")"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'Yes'\nassert solution('''2\nhogehoge\nhogehoge\n''') == 'No'\nassert solution('''6\nfool\nfoob\nfoo\nfoobar\nfoo\nfoo\nfoo\n''') == 'Yes'\nassert solution('''2\nfoobar\nfoo\n''') == 'No'\nassert solution('''3\nhoge\nhoge\nhoge\n''') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('takahashi' == 'no') == 'Yes'\nassert solution('hoge' == 'no') == 'Yes'\nassert solution('hoge' == 'no') == 'Yes'\nassert solution('hoge' == 'no') == 'Yes'\nassert solution('hoge' == 'no') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('hoge\\nenglish\\nhoge\\nenigma') == 'Yes'\nassert solution('hoge\\nenglish\\nhoge\\nenigma') == 'No'\nassert solution('hoge\\nenglish\\nhoge\\nenigma') == 'No'\nassert solution('hoge\\nenglish\\nhoge\\nenigma') == 'Yes'\nassert solution('hoge\\nenglish\\nhoge\\nenigma') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\""
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('5 4') == '8'\nassert solution('7 5') == '14'\nassert solution('15 4') == '20'\nassert solution('4 4') == '8'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('1 10') == '5'\nassert solution('1 10') == '5'\nassert solution('10 100') == '25'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('3 2') == '3'\nassert solution('7 1') == '5'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('0 0') == '0'\nassert solution('5 1') == '15'\nassert solution('100 500') == '500000'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3''') == '6'\nassert solution('''2 3''') == '6'\nassert solution('''2 3''') == '6'\nassert solution('''1 2''') == '2'\nassert solution('''3 2''') == '2'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(min(6, 12))\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 3') == '4'\nassert solution('2 3') == '6'\nassert solution('2 1') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('c') == 'c'\nassert solution('cabbac') == 'ccbbaa'\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaaa') == 'aaaa'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nprint(solution('sardine'))\nassert solution('sardine') == 'xxxxxxx'\nprint(solution('sardine'))\nassert solution('sardine') == 'xxxxxxx'\nprint(solution('sardine'))\nassert solution('sardine') == 'xxxxxxx'\nprint(solution('sardine'))\nassert solution('sardine') == 'xxxxxxx'\nprint(solution('sardine'))\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"deepl\") == \"dddddddddd\"\nassert solution(\"orwell\") == \"xxxxxxxxx\"\nassert solution(\"morp\") == \"xxxxxxxxxxxx\"\nassert solution(\"morp\") == \"xxxxxxxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('codewars') == 'xodxxwrs'\nassert solution('codeWars') == 'xodxxwrs'\nassert solution('cw') == 'xodxxwrs'\nassert solution('CODEWars') == 'xodxxwrs'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('x') == 'xxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardinep') == 'xxxxxxpe'\nassert solution('foolish') == 'xxxxxish'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5\n1 2 1 1 3\n'''\n) == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('3 2 1 1 1') == 'No'\nassert solution('5 2 1 1 1 3') == 'Yes'\nassert solution('2 5 1 1 2') == 'No'\nassert solution('10 5 1 1 1 1 2 1 1 1 1 3') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1''') == 'Yes'\nassert solution('''1\n3''') == 'Yes'\nassert solution('''2\n1 2 3''') == 'No'\nassert solution('''2\n1 3 2''') == 'Yes'\nassert solution('''1\n2''') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\") == \"No\"\nassert solution(\"3\\n2 3\") == \"Yes\"\nassert solution(\"2\\n1 2\") == \"No\"\nassert solution(\"3\\n3 3\") == \"Yes\"\nassert solution(\"3\\n3 2\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\nn = int(stdin.readline().strip())\nh = list(map(int, stdin.readline().split()))\nprint(\"Yes\" if all(a > b for a, b in zip(h, h[1:])) else \"No\")"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\n\u9898\u76ee\u8981\u6c42\u662f\u7528\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\n\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\u7528\u7a77\u4e3e\u6cd5\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5199\uff0c\u5982\u679c\u6709\u8d1f\u6570\uff0c\u4f1a\u8d85\u65f6\uff0c\u548c\u6709\u91cd\u590d\u60c5\u51b5\u4f1a\u8d85\u65f6\n\nfor i in range(1, n+1):\n    if height[i] < height[i-1]:\n        return 'No'\nreturn 'Yes'\n'''"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"2 1 1 2 3\\n\") == \"No\"\nassert solution(\"2 1 1 2 3\\n\") == \"Yes\"\nassert solution(\"1 2 2 1 3\\n\") == \"No\"\nassert solution(\"1 2 2 1 3\\n\") == \"Yes\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0\\n'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0\\n'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0\\n'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1') == '1\\n'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n1 2 4') == '2\\n'\nassert solution('1 3 2\\n-1 1 3\\n-1 1 2') == '1\\n'\nassert solution('1 3 2\\n-1 1 3\\n-1 1 2\\n-1 1 4') == '0\\n'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-10\\n1\\n3\\n2') == '1\\n'"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\") == \"1\"\nassert solution(\"1 1 -10\\n1 1 -10\\n1 1 -10\") == \"2\"\nassert solution(\"3 1 -10\\n1 1 -10\\n1 1 -10\\n1 1 -10\") == \"0\"\nassert solution(\"2 4 0\\n1 2 3 4\\n2 1 2 3\\n1 2 2 3\") == \"1\"\nassert solution(\"1 2 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '1'\nassert solution('2\\n4\\n7\\n9\\n15\\n20\\n23\\n29\\n30\\n31\\n32\\n33\\n35\\n40\\n45\\n50\\n60\\n70\\n75\\n80\\n85\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '9'\nassert solution('4\\n15\\n30\\n45\\n60\\n75\\n90\\n105\\n120\\n135\\n150\\n165\\n180\\n195\\n210\\n225\\n240\\n255\\n270\\n285\\n300\\n315\\n330\\n345\\n360\\n375\\n390\\n405\\n420\\n435\\n450\\n465\\n480\\n495\\n510\\n525\\n540\\n555\\n570\\n585\\n600\\n615\\n630\\n645\\n660\\n675\\n690\\n705\\n720\\n735\\n750\\n765\\n780\\n795\\n810\\n825\\n840\\n845\\n860\\n875\\n890\\n905\\n920\\n925\\n930\\n935\\n940\\n945\\n960\\n965\\n980\\n985\\n990\\n995\\n1000\\n1005\\n1010\\n1015\\n1020\\n1025\\n1030\\n1035\\n1040\\n1045\\n1050\\n1055\\n1060\\n1065\\n1070\\n1075\\n1080\\n1085\\n1090\\n1095\\n1100\\n1105\\n1110\\n1125\\n1130\\n1135\\n1140\\n1145\\n1150\\n1155\\n1160\\n1165\\n1170\\n1175\\n1180\\n1185\\n1190\\n1195\\n1200\\n1205\\n1210\\n1215\\n1220\\n1225\\n1230\\n1235\\n1240\\n1245\\n1250\\n1255\\n1260\\n1265\\n1270\\n1275\\n1280\\n1285\\n1290\\n1295\\n1300\\n1305\\n1310\\n1315\\n1320\\n1325\\n1330\\n1335\\n1340\\n1345\\n1350\\n1355\\n1360\\n1365\\n1370\\n1375\\n1380\\n1385\\n1390\\n1395\\n1400\\n1405\\n1410\\n1415\\n1420\\n1425\\n1430\\n1435\\n1440\\n1445\\n1450\\n1455\\n1460\\n1465\\n1470\\n1475\\n1480\\n1485\\n1490\\n1495\\n1500\\n1505\\n1510\\n1515\\n1520\\n1525\\n1530\\n1535\\n1540\\n1545\\n1550\\n1555\\n1560\\n1565\\n1570\\n1575\\n1580\\n1585\\n1590\\n1595\\n1600\\n1605\\n1610\\n1615\\n1620\\n1625\\n1630\\n1635\\n1640\\n1645\\n1650\\n1655\\n1660\\n1665\\n1670\\n1675\\n1680\\n1685\\n1690\\n1695\\n1700\\n1705\\n1710\\n1715\\n1720\\n1725\\n1730\\n1735\\n1740\\n1745\\n1750\\n1755\\n1760\\n1765\\n1770\\n1775\\n1780\\n1785\\n1790\\n1795\\n1800\\n1805\\n1810\\n1815\\n1820\\n1825\\n1830\\n1835\\n1840\\n1845\\n1850\\n1855\\n1860\\n1865\\n1870\\n1875\\n1880\\n1885\\n1890\\n1895\\n1900\\n1905\\n1910\\n1915\\n1920\\n1925\\n1930\\n1935\\n1940\\n1945\\n1950\\n1955\\n1960\\n1965\\n1970\\n1975\\n1980\\n1985\\n1990\\n1995\\n2000\\n2005\\n2010\\n2015\\n2020\\n2025\\n2030\\n2035\\n2040\\n2045\\n2050\\n2055\\n2060\\n2065\\n2070\\n2075\\n2080\\n2085\\n2090\\n2095\\n2100\\n2105\\n2110\\n2115\\n2130\\n2135\\n2140\\n2145\\n2150\\n2155\\n2160\\n2165\\n2170\\n2175\\n2180\\n2185\\n2190\\n2195\\n2200\\n2205\\n2210\\n2215\\n2220\\n2225\\n2230\\n2235\\n2240\\n2245\\n2250\\n2255\\n2260\\n2265\\n2270\\n2275\\n2280\\n2285\\n2290\\n2295\\n2300\\n2305\\n2310\\n2315\\n2320\\n2325\\n2330\\n2335\\n2340\\n2345\\n2350\\n2355\\n2360\\n2365\\n2370\\n2375\\n2380\\n2385\\n2390\\n2395\\n2400\\n2405\\n2410\\n2415\\n2420\\n2425\\n2430\\n2435\\n2440\\"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 -10') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '0'\nassert solution('1 2 2 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2 3') == '1\\n'\nassert solution('2 3 -10\\n1 2 3') == '1\\n'\nassert solution('2 3 -10\\n1 2 2') == '1\\n'\nassert solution('2 3 -10\\n1 2 3') == '2\\n'\nassert solution('2 3 -10\\n1 3 1') == '0\\n'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom functools import lru_cache"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 -10\\n1 2 3\\n3 2 1') == '1'\nassert solution('1 2 -10\\n3 2 1\\n3 2 1') == '2'\nassert solution('2 2 -10\\n1 2 3\\n3 2 1') == '0'\nassert solution('1 2 -10\\n3 2 1\\n3 2 1') == '2'\nassert solution('1 2 -10\\n3 2 1\\n3 2 1') == '2'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('1000000000') == 0\nassert solution('10000') == 10\nassert solution('10000000') == 100\nassert solution('100001') == 11\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1500\") == \"100\"\nassert solution(\"1900\") == \"100\"\nassert solution(\"100\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"1000000\") == \"0\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2000\\n') == '100'\n\"\"\"\n\nN = int(input())\n\nbills = 1000 - N\ncoins = int(N / 1000)\nchange = N - coins * 1000"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"1900\"\n) == \"100\"\n'''\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1000\n''') == '100'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '0'\nassert solution('''\n10\n''') == '5'\nassert solution('''\n100\n''') == '50'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '1900'\n) == '100'\nassert solution(\n    '1170'\n) == '700'\nassert solution(\n    '999'\n) == '0'\nassert solution(\n    '2000'\n) == '200'\nassert solution(\n    '100'\n) == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '25'\nassert solution('10000') == '50000'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('10') == '0'\nassert solution('10.5') == '0'\nassert solution('1000') == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\n\"\"\""
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"10 50 1 1\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"5\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2\n3 5 2\n4 5'''\n) == '9'\nassert solution(\n'''5\n3 5 2\n4 5'''\n) == '15'\nassert solution(\n'''1\n1 1 1 1 1'''\n) == '6'\nassert solution(\n'''2\n1 1'''\n) == '2'\nassert solution(\n'''5\n2 5 2 5 2'''\n) == '6'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('1 2 3 4') == \"4\"\nassert solution('2 2 1 1') == \"3\"\nassert solution('1 1 1 1') == \"4\"\nassert solution('1 1 1 1 1') == \"5\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '9'\nassert solution('2 3 5 2') == '9'\nassert solution('4 5 2') == '9'\nassert solution('3 5 5') == '9'\nassert solution('3 3 5') == '6'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(9)\n\"\"\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9 10\n2 2 2 2 2 2 2 2 2\n3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9\n2 2 2 2 2 2 2 2\n4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9\n2 2 2 2 2 2 2 2\n5 6 7 8 9 10\n2 3 4 5 6 7 8 9\n2 2 2 2 2 2 2 2\n''') == '109'\n'''\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n4 2\") == \"4\"\nassert solution(\"2\\n3 3\") == \"5\"\nassert solution(\"5\\n1 1 1 1 1\\n4 4 4 4 4\") == \"60\"\nassert solution(\"5\\n1 1 1 1 1\\n4 4 4 4 4\") == \"60\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 10\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 10\n8 15 13\n16 22''') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 2 10 20') == 'No War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'War'\nassert solution('2 4 10 17') == 'War'\nassert solution('4 9 15 17') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'War'\nassert solution('1 0 100 1') == 'War'\nassert solution('1 0 0') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'No War'\nassert solution('-1 1 2 -1') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'War'\nassert solution('16 22') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'No War'\n\"\"\"\n\n__author__ = 'Leo'\n\nN, M, X, Y = map(int, stdin.split())\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '3 2 10 20'\n    '8 15 13'\n    '16 22'\n) == 'No War'\nassert solution(\n    '3 2 10 21'\n    '8 15 13'\n    '16 22'\n) == 'War'\nassert solution(\n    '3 2 10 21'\n    '8 15 13'\n    '16 22'\n) == 'War'\n\n'''\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 2 10 20\\n8 15 13\\n16 22\\n\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n\") == \"War\"\nassert solution(\"1 2 10 20\\n8 15 13\\n16 22\\n\") == \"War\"\nassert solution(\"2 2 10 20\\n8 15 13\\n16 22\\n\") == \"No War\"\nassert solution(\"3 2 10 19\\n8 15 13\\n16 22\\n\") == \"War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'War'\nassert solution('-1 -1 0 0') == 'No War'\nassert solution('2 3 4 5') == 'War'\nassert solution('1 1 1 1') == 'War'\nassert solution('1 2 3 4') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 19') == 'War'\nassert solution('3 2 10 19') == 'War'\nassert solution('3 2 10 19') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"No War\"\nassert solution(sample_input2) == \"War\"\nassert solution(sample_input3) == \"War\"\nassert solution(sample_input4) == \"No War\"\nassert solution(sample_input5) == \"War\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n3\\n3\\n\") == \"2\"\nassert solution(\"2\\n3\\n4\\n\") == \"6\"\nassert solution(\"1\\n1\\n2\\n\") == \"6\"\nassert solution(\"1\\n2\\n2\\n\") == \"2\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3\\n2') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('2\\n2\\n3\\n2\\n3') == '12'\nassert solution('2\\n2\\n3\\n2\\n3\\n2') == '12'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"2\\n3\\n2\") == \"1\"\nassert solution(\"2\\n3\\n2\") == \"1\"\nassert solution(\"2\\n2\\n2\") == \"0\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n3\\n2') == '5'\nassert solution('2\\n3\\n3') == '4'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n3') == '5'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''3\n3\n6''') == '9'\nassert solution('''10\n1\n3''') == '15'\nassert solution('''13\n2\n5\n10\n17''') == '55'\nassert solution('''45\n11\n2\n9\n5\n10\n11\n13\n14\n6\n1\n4\n15\n13\n8''') == '1430'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('4\\n4\\n5\\n5\\n6') == '12'\nassert solution('4\\n2\\n3\\n4\\n5') == '10'\nassert solution('5\\n5\\n5\\n5\\n5') == '25'\nassert solution('100\\n4\\n5\\n6\\n7\\n7\\n7\\n8\\n9\\n9\\n10') == '1109'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('3\\n6\\n9') == '9'\nassert solution('5\\n4\\n3\\n5\\n2') == '12'\nassert solution('2\\n2\\n2') == '2'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n3''') == \"6\"\nassert solution('''5\n10\n0\n2\n2\n2''') == \"8\"\nassert solution('''7\n13\n3\n2\n2\n2\n2\n2''') == \"6\"\nassert solution('''4\n8\n8\n2\n2\n2\n2''') == \"4\"\nassert solution('''1\n8\n0\n2\n2\n2\n2''') == \"6\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('3 3 3') == '0'\nassert solution('2 2 1') == '1'\nassert solution('5 5 3') == '2'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 1\nassert solution('2 3 4 5') == 2\nassert solution('1 2 3 4 5') == 1\nassert solution('1 2 3 4 5 6') == 2\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 0\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5 6') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2\n1 2 3''') == '0'\nassert solution(\n'''6\n1 2 3 4 5 6 7''') == '0'\nassert solution(\n'''8\n1 2 3 4 5 6 7 8''') == '0'\nassert solution(\n'''7\n3 4 5 6 7 8 9 10''') == '7'\nassert solution(\n'''7\n1 2 3 4 5 6 7''') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''4\n1 2 3 4\n''') == '2'\nassert solution('''3\n5 9 8\n''') == '5'\nassert solution('''4\n4 3 2 1\n''') == '1'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 3 4 5') == '1'\nassert solution('3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31') == '0'\nassert solution('8 12 22 4') == '4'\nassert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 1\nassert solution('1 1 3 3') == 2\nassert solution('1 1 3 3 4') == 0\nassert solution('1 1 3 3 4 5') == 1\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"0\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 4\") == \"0\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\n\n\n\n-------\n\nAfter this post, I figured out the logic behind this problem.\nWe have to consider the minimun number of moves, to reach the goal.\n\nIn order to do so, we need to consider all the possible ways to reach the goal.\n\nIf the element we are considering is the first, then we can shift it to the first column of the goal, by dividing it by the (goal_column - 1) * (goal_row - 1).\nIf the element we are considering is the second, then we can shift it to the second column of the goal, by adding the (goal_column - 1) * (goal_row - 1) to it.\nIf the element we are considering is the third, then we can shift it to the third column of the goal, by adding the (goal_column - 1) * (goal_row - 1) to it, then multiplying it by 2, and adding the (goal_column - 1) * (goal_row - 1).\n\nThe minimum number of moves is the product of the minimun number of moves of the first row (1st column) and the minimun number of moves of the second row (2nd column).\n\nTime Complexity: O(n^2)\nSpace Complexity: O(1)\n\n--------\n\n## Second Approach\n\nYou are given a rectangular matrix of size $n \\times m$ consisting of integers from $1$ to $2 \\cdot 10^5$.\n\nIn one move, you can:  choose any element of the matrix and change its value to any integer between $1$ and $n \\cdot m$, inclusive;  take any column and shift it one cell up cyclically (see the example of such cyclic shift below). \n\nA cyclic shift is an operation such that you choose some $j$ ($1 \\le j \\le m$) and set $a_{1, j} := a_{2, j}, a_{2, j} := a_{3, j}, \\dots, a_{n, j} := a_{1, j}$ simultaneously. [Image] Example of cyclic shift of the first column \n\nYou want to perform the minimum number of moves to make this matrix look like this: $\\left. \\begin{array}{|c c c c|} \\hline 1 & {2} & {\\ldots} & {m} \\\\{m + 1} & {m + 2} & {\\ldots} & {2m} \\\\{\\vdots} & {\\vdots} & {\\ddots} & {\\vdots} \\\\{(n - 1) m + 1} & {(n - 1) m + 2} & {\\ldots} & {nm} \\\\ \\hline \\end{array} \\right.$ \n\nIn other words, the goal is to obtain the matrix, where $a_{1, 1} = 1, a_{1, 2} = 2, \\dots, a_{1, m} = m, a_{2, 1} = m + 1, a_{2, 2} = m + 2, \\dots, a_{n, m} = n \\cdot m$ (i.e. $a_{i, j} = (i - 1) \\cdot m + j$) with the minimum number of moves performed.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $m$ ($1 \\le n, m \\le 2 \\cdot 10^5, n \\cdot m \\le 2 \\cdot 10^5$) \u2014 the size of the matrix.\n\nThe next $n$ lines contain $m$ integers each. The number at the line $i$ and position $j$ is $a_{i, j}$ ($1 \\le a_{i, j} \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum number of moves required to obtain the matrix, where $a_{1, 1} = 1, a_{1, 2} = 2, \\dots, a_{1, m} = m, a_{2, 1} = m + 1, a_{2, 2} = m + 2, \\dots, a_{n, m} = n \\cdot m$ ($a_{i, j} = (i - 1) \\cdot m + j$).\n\n\n-----Examples-----\nInput\n3 3\n3 2 1\n1 2 3\n4 5 6\n\nOutput\n6\n\nInput\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n0\n\nInput\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n2"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100') == '99'\n\"\"\"\n\n\nfrom sys import stdin\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n1 100\\n') == '99'\n\n\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100') == '99'\n\n\n\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\n\n\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 100') == '5'\nassert solution('2\\n1 100') == '5'\nassert solution('2\\n1 100') == '5'\nassert solution('2\\n1 100') == '5'\nassert solution('2\\n1 100') == '5'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == ''\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('4\\n1 100') == '99'\nassert solution('8\\n1 100') == '99'\nassert solution('8\\n1 100') == '99'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '2'\nassert solution('''6''') == '2'\nassert solution('''7''') == '3'\nassert solution('''3''') == '0'\nassert solution('''0''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n0 0 0 0 0 0 0 1\\n') == '2'\nassert solution('2\\n1 0 1\\n') == '0'\nassert solution('1\\n0 1\\n') == '0'\nassert solution('1\\n1 0\\n') == '0'\nassert solution('1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\n\n\n\n'''\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 1 0 1') == 2\nassert solution('6\\n0 1 0 1 1 0\\n') == 2\nassert solution('7\\n1 0 1 1 1 0 1\\n') == 3\nassert solution('3\\n0 0 0\\n') == 0\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nprev = 0\ncurr = 0\nfor i in range(n):\n    curr = max(a[i], prev)\n    prev = curr\n\nprint(curr)\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''6''') == '''2'''\nassert solution('''7''') == '''3'''\nassert solution('''3''') == '''0'''\nassert solution('''0''') == '''0'''\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2\\n'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2\\n'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3\\n'\nassert solution('3\\n0 0 0\\n') == '0\\n'\nassert solution('3\\n1 0 1 0\\n') == '0\\n'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('3\\n1 0 1 0') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('999999999') == '1'\nassert solution('1011001111011111000001001') == '0'\nassert solution('1' * 15) == '1'\n\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 0\nassert solution(7) == 0\nassert solution(2) == 0\nassert solution(5) == 0\nassert solution(10) == 0\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('7') == '0'\nassert solution('7') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('3') == 0\nassert solution('4') == 0\nassert solution('5') == 0\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == '1'\nassert solution('''7''') == '0'\nassert solution('''9''') == '0'\nassert solution('''10''') == '0'\nassert solution('''12''') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 1\nassert solution('7') == 0"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0\nassert solution(\"2\") == 0\nassert solution(\"12\") == 0\nassert solution(\"17\") == 0\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 3\nassert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == 4\nassert solution('3\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3\nassert solution('2\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\nceddar hard\\ngouda hard\\nswiss hard') == 3\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 2\") == \"1\"\nassert solution(\"1 1 1 1 1 2 3\") == \"1\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '3'\nassert solution('1\\n') == '1'\nassert solution('10\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('2\\n') == '0'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\nhello\\nworld\") == \"0\"\nassert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\"\nassert solution(\"5\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"\nassert solution(\"5\\npepper soft\\ncurry soft\\nsalami hard\\nswiss hard\\ncheddar hard\\n\") == \"4\"\nassert solution(\"4\\npepper soft\\ncurry soft\\nsalami hard\\nswiss hard\\ncheddar hard\\n\") == \"3\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == 3\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == 4\nassert solution('''7\naustin hard\nhavana hard\ncavalier hard\nlisa hard\nplatinum soft''') == 1\nassert solution('''8\ncabage hard\ncavalier hard\nbrie hard\ncamembert soft\ngouda soft\nedam soft\nmussabha soft\nhilton hard''') == 0\nassert solution('''10\ncabage hard\ncavalier hard\nbrie hard\ncamembert soft\ngouda soft\nedam soft\nmussabha soft\nhilton hard\ngouda hard\ncavalier hard''') == 0\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expect\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('5\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '4'\nassert solution('5\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '4'\nassert solution('8\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '5'\nassert solution('8\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '5'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('10\\n2 4 4 3 3 2 2 1\\n2 4 3 3 2 2 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('8\\n2 4 4 3 3 2 2 1\\n2 4 4 3 3 2 2 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('7\\n2 4 4 3 3 2 2 1\\n2 4 4 3 3 2 2 1\\n') == '0 0 0 1 0 2 4\\n'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('0\\n4\\n0 1 2 1\\n3 2 1 1\\n') == '0 0 0 1 0 2 4\\n'\n\n\n\"\"\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2 1 1') == '0 0 0 2'\nassert solution('2\\n3 2 1 1') == '0 0 0 1'\nassert solution('2\\n3 2 1 1') == '0 0 0 1'\nassert solution('3\\n3 2 1 1') == '0 0 0 2'\nassert solution('3\\n3 2 1 1') == '0 0 0 2'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\nassert solution('\\n') == ''\nassert solution('1\\n0\\n') == ''\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2') == '0 0 0 1 0 2 4'\nassert solution('7\\n2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\nassert solution('3\\n2 1 1\\n2') == '0 0 0 1 0 2 4'\nassert solution('7\\n2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\nassert solution('3\\n2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"\"\"0 0 0 2 \n\"\"\"\n\nassert solution(\"\"\"7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n\"\"\") == \"\"\"0 0 0 1 0 2 4\n\"\"\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\".join(solution(l) for l in TESTS)) == \"\".join(l[1] for l in TESTS)\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n1\\n1\\n0\\n\") == \"0\"\nassert solution(\"1\\n0\\n1\\n0\\n\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"0\"\nassert solution(\"0\\n0\\n1\\n1\\n\") == \"0\"\nassert solution(\"0\\n1\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"0\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"1\\n0\\n1\\n1\") == \"1\"\nassert solution(\"0\\n1\\n0\\n1\") == \"0\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n1\\n1\\n0\") == \"1\"\n\n'''\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n0\\n0') == '1'\nassert solution('1\\n0\\n0\\n1') == '1'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n1\\n0\\n1') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == 0\nassert solution('1\\n1\\n1\\n0\\n') == 0\nassert solution('0\\n0\\n0\\n0\\n') == 0\nassert solution('0\\n1\\n0\\n0\\n') == 0\nassert solution('1\\n0\\n0\\n0\\n') == 0\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == 0\nassert solution('1\\n1\\n1\\n0\\n') == 1\nprint('Test case passed')\n\n----Explanation-----\n\nTest case 1: 0, 1, 1, 0 is the output.\nTest case 2: 1, 1, 1, 0 is the output.\n\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == 0\nassert solution(\"0\\n1\\n0\\n0\") == 0\nassert solution(\"1\\n1\\n0\\n0\") == 1\nassert solution(\"0\\n0\\n0\\n0\") == 0\nassert solution(\"0\\n1\\n0\\n0\") == 0\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"100 10 10\") == \"No\"\nassert solution(\"1000 25 80\") == \"Yes\"\nassert solution(\"1000 15 30\") == \"No\"\nassert solution(\"10 15 30\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 10\") == \"No\"\nassert solution(\"1000 15 9\") == \"No\"\nassert solution(\"1000 15 8\") == \"Yes\"\nassert solution(\"1000 15 7\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 80\") == \"No\"\nassert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 80\") == \"No\"\nassert solution(\"1000 15 80\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 20') == 'No'\nassert solution('1000 15 20') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 100 1') == 'Yes'\nassert solution('1000 100 10') == 'No'\nassert solution('1000 100 100') == 'Yes'\nassert solution('1000 1 1') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:-1]\n'''"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 19 80\") == \"Yes\"\nassert solution(\"1000 19 11\") == \"No\"\nassert solution(\"1000 19 22\") == \"No\"\n\"\"\""
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"Yes\"\nassert solution(sample_input_2) == \"No\"\nassert solution(sample_input_3) == \"Yes\"\nassert solution(sample_input_4) == \"Yes\"\nassert solution(sample_input_5) == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('99 99 99') == 'No'\nassert solution('99 99 33') == 'Yes'\nassert solution('99 99 77') == 'No'\nassert solution('67 77 89') == 'Yes'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == 'Yes'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n8 9 1') == 'No'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\\n9 1 2') == 'No'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\\n9 1 2\\n9 2 3') == 'Yes'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n8 9 1\\n9 1 2\\n9 2 3\\n9 3 4') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\nfrom collections import deque\nfrom typing import List"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 2') == 'Yes'\nassert solution('8 4 4') == 'Yes'\nassert solution('6 9 10') == 'Yes'\nassert solution('8 8 6') == 'Yes'\nassert solution('7 3 5') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"No\"\nassert solution(\"9\\n1\\n1\\n1\") == \"No\"\nassert solution(\"9\\n9\\n9\\n1\") == \"No\"\nassert solution(\"9\\n9\\n9\\n9\") == \"Yes\"\nassert solution(\"9\\n9\\n9\\n9\\n1\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('74 87 42\\n70 95 33\\n39 67 44\\n2 89 78\\n74 86 22\\n52 76 76\\n29 22 37\\n26 26 24\\n1 52 45') == 'No'\nassert solution('87 77 42\\n74 94 33\\n39 67 44\\n2 89 78\\n74 86 22\\n52 76 76\\n29 22 37\\n26 26 24\\n1 52 45') == 'Yes'\n\"\"\""
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''10 10 10\n9 9 9\n8 8 8\n7 7 7\n6 6 6\n5 5 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1''') == 'Yes'\nassert solution('''11 12 13\n10 9 8\n7 6 5\n4 3 2\n1 1 1\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10''') == 'Yes'\nassert solution('''9 8 7\n6 6 5\n4 4 3\n2 2 1\n1 1 1\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9''') == 'No'\nassert solution('''1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9''') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\") == \"Yes\"\nassert solution(\"1\\n2\\n3\") == \"Yes\"\nassert solution(\"1\\n2\\n3\\n3\\n3\") == \"Yes\"\nassert solution(\"1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\") == \"Yes\"\nassert solution(\"1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 30"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('41 2\\n5 6\\n') == '30'\nassert solution('1 10\\n
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n5 6\") == \"30\"\nassert solution(\"2 2\\n1 1\") == \"-1\"\nassert solution(\"4 1\\n3 1\") == \"3\"\nassert solution(\"1 1\\n1 1\") == \"-1\"\nassert solution(\"10 10\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"-1\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('41 2') == 30\nassert solution('5 6') == 30\nassert solution('3 2') == -1\nassert solution('1 1') == 0\nassert solution('1 2') == -1\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''41 2\n5 6\n''') == '30'\n\nassert solution(\n'''31 22\n15 16\n''') == '-1'\n\nassert solution(\n'''31 22\n15 16\n''') == '-1'\n\nassert solution(\n'''41 30\n1 2\n''') == '-1'\n\nassert solution(\n'''10 10\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '9'"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_1) == 30\nassert solution(input_2) == -1\nassert solution(input_3) == 30\nassert solution(input_4) == -1\nassert solution(input_5) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''41 2\n5 6''') == '30'\nassert solution('''42 2\n5 6''') == '-1'\nassert solution('''1 2\n5 6''') == '30'\nassert solution('''10 10\n10 10''') == '-1'\nassert solution('''10 10\n10 9''') == '-1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 0') == '1'\nassert solution('2 0') == '1'\nassert solution('0 1') == '1'\nassert solution('0 2') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '5'\nassert solution('3 5') == '5'\nassert solution('4 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '2'\nassert solution('0 0') == '1'\nassert solution('1 1') == '2'\nassert solution('2 2') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"10\"\nassert solution(\"5 2\") == \"50\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '10'\nassert solution('3 5') == '15'\nassert solution('4 5') == '20'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('2 3') == '6'\nassert solution('3 3') == '10'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '3'\nassert solution('5 6') == '3'\nassert solution('15 5') == '15'\nassert solution('42 20') == '40'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1\n''') == '1'\nassert solution('''2 3\n''') == '5'\nassert solution('''4 5\n''') == '2'\nassert solution('''0 5\n''') == '5'\nassert solution('''1 0\n''') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('3 7') == '37'\nassert solution('0 3') == '3'\nassert solution('1 1') == '100'\nassert solution('1 5') == '25'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"3\\n4 5 6\") == \"1\"\nassert solution(\"3\\n8 5 6\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"2\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"10 10 9\") == \"10\"\nassert solution(\"10 10 2\") == \"10\"\nassert solution(\"5 5 5\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution('2 2 3\\n1 3 2\\n2 3 2') == '2'\nassert solution('2 2 3\\n1 3 2\\n3 2 1') == '2'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 8 6') == '2'\nassert solution('3\\n5 7 8') == '1'\nassert solution('3\\n5 8 7') == '1'\nassert solution('3\\n5 7 7') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n4 1') == '2'\nassert solution('3\\n7 6 8') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n4 8 7''') == '2'\nassert solution('''3\n1 2 3''') == '1'\nassert solution('''9\n27 45 48\n7 29 22 3''') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n4\\n6\\n8') == '2'\nassert solution('7\\n6\\n8') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('9\\n9\\n9') == '1'\nassert solution('3\\n3\\n6') == '3'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 6 8\\n6 8') == '2'\nassert solution('3\\n7 6 8\\n6 8\\n9') == '2'\nassert solution('3\\n7 6 8\\n6 8\\n9\\n3') == '2'\nassert solution('3\\n7 6 8\\n6 8\\n9\\n3\\n2') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n3 1') == '3 1 2'\nassert solution('2\\n1 2') == '2 1'\nassert solution('2\\n1 3') == '1 2 3'\nassert solution('2\\n3 1') == '1 2 3'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\n##\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3\\n1') == '3 1 2'\nassert solution('2\\n1') == '1'\nassert solution('1') == '1'\nassert solution('3\\n2 3\\n3') == '3 3 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('5 5 2 1') == '2 1 3 4 5'\nassert solution('3 2 1') == '2 1 3'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n3') == '3'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 1') == '3 1 2'\nassert solution('2 3 1\\n2 3 1') == '3 1 2'\nassert solution('2 3 1\\n2 3 1\\n2 3 1') == '3 1 2'\nassert solution('3\\n3\\n3') == '3'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3 1''') == '3 1 2'\nassert solution('''3\n1 2 3''') == '3 1 2'\nassert solution('''3\n1 2 1''') == '2 1 3'\nassert solution('''4\n3 4 1 2''') == '3 1 2 4'\nassert solution('''6\n6 6 5 4 3 2 1''') == '6 4 1 3 2 5 6'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n3 3 3') == '3 3 1'\nassert solution('3\\n4 4 4') == '3 4 1 2'\nassert solution('3\\n3 3 3') == '3 3 1'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"2 4 2\") == \"2\"\nassert solution(\"2 5 1\") == \"0\"\nassert solution(\"2 1 4\") == \"1\"\nassert solution(\"2 1 1\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 10') == '9'\nassert solution('5 5 10') == '9'\nassert solution('10 4 1') == '9'\nassert solution('3 2 10') == '0'\nassert solution('1 2 10') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 9 8') == '0'\nassert solution('0 0 10') == '0'\nassert solution('3 2 10') == '3'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 15 5') == '9'\nassert solution('1000 12345 1000000') == '1000000'\nassert solution('1000000') == '0'\nassert solution('123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789') == '123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 3 100') == '0'\nassert solution('10 100 100') == '9'\nassert solution('10000000 1000000000 100000000') == '999999999'\nassert solution('7 6 11') == '4'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 10') == '0'\nassert solution('10 7 1000') == '9'\nassert solution('10 100 1000') == '99'\nassert solution('10 100 10000') == '999'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 100') == '9'\nassert solution('10 100 10') == '9'\nassert solution('10 10 12345') == '9'\nassert solution('10 10 100 12345') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('9 7 1000') == '9'\nassert solution('10 7 1000') == '9'\nassert solution('10 7 1000') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 10 7\\n') == '9'\nassert solution('10 10 7\\n') == '0'\nassert solution('2 2 7\\n') == '2'\nassert solution('12345 12345 7\\n') == '123485'\nassert solution('12345 12345 7\\n') == '123485'\n\nprint(solution(''))\nprint(solution('1 1 7\\n'))\nprint(solution('12345 12345 7\\n'))\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('N K\\n150 140 100 200\\n') == '2'\nassert solution('4 150\\n150 140 100 200\\n') == '2'\nassert solution('4 200\\n150 140 100 200\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '0'\nassert solution('5 5\\n1 1 1 1 1\\n') == '5'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 150') == \"2\"\nassert solution('4 200') == \"1\"\nassert solution('1 2') == \"1\"\nassert solution('2 3') == \"2\"\nassert solution('1 4') == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 100') == '0'\nassert solution('4 200') == '0'\nassert solution('4 200') == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 150\n150 140 100 200''') == \"2\"\n'''\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4 150\n150 140 100 200\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"5 40\n40 30 20 10 50\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"3 60\n60 60 60\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"100 4\n
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 100') == \"2\"\nassert solution('1 100') == \"0\"\nassert solution('2 3') == \"1\"\nassert solution('1 2') == \"0\"\nassert solution('2 2') == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4 150\n150 140 100 200\n''') == '2'\nassert solution(\n'''\n3 17\n17 14 100\n100 17 150\n''') == '3'\nassert solution(\n'''\n5 300\n5 20 8 8 8\n''') == '4'\nassert solution(\n'''\n9 201\n200 150 50 150 50 50 150\n''') == '0'\nassert solution(\n'''\n5 1\n20\n''') == '0'"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == 1\nassert solution('1 1\\n1 1') == 1\nassert solution('1 2\\n1 2') == 1\nassert solution('1 2\\n2 1') == 1\nassert solution('1 2\\n1 2\\n2 1') == 1\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('4 1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('4 3') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('1 3') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('5 4 2 1') == 'Yes'\nassert solution('5 4 2 1') == 'No'\nassert solution('5 4 2 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('5 1') == 'Yes'\nassert solution('5 2') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('4 3') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('4 5') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('4 2') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('5 3 2 1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('4 1\\n1 1 1 1') == 'No'\nassert solution('3 1\\n4 1 2 1') == 'Yes'\nassert solution('4 1\\n2 2 2 2') == 'No'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('5 4 2 1') == 'No'\nassert solution('12 3') == 'Yes'\nassert solution('6 7') == 'No'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('5 1') == 'No'\nassert solution('1 1000') == 'Yes'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('..#') == '5'\nassert solution('###') == '5'\nassert solution('.#.#') == '5'\nassert solution('....') == '0'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"3 2 2\\n#.\\n.#\") == \"5\"\nassert solution(\"4 3 3\\n###\\n.#.\\n#.#\\n#.#\") == \"1\"\nassert solution(\"5 4 4\\n##\\n##\\n##\\n##\\n##\") == \"5\"\nassert solution(\"5 5 5\\n##\\n##\\n##\\n##\\n##\") == \"1\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('..#\\n###\\n.#.') == '5'\nassert solution('##\\n##\\n#.') == '3'\nassert solution('##\\n##\\n##') == '0'\nassert solution('..#\\n##\\n##') == '5'\nassert solution('..#\\n##\\n##') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3''') == '5'\nassert solution('''1 2 3 4''') == '2'\nassert solution('''1 2 3 4 5''') == '0'\nassert solution('''2 3 2''') == '5'\nassert solution('''2 3 1''') == '3'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '2 3 2\\n..#\\n###'\n) == '5'\n\nassert solution(\n    '2 3 2\\n.#\\n.#'\n) == '5'\n\nassert solution(\n    '2 3 2\\n.#\\n.#'\n) == '5'\n\nassert solution(\n    '5 4 2\\n....#\\n....#\\n....#\\n....#\\n....#'\n) == '1'\n\nassert solution(\n    '6 5 3\\n.......\\n.........\\n.......\\n.......\\n.......'\n) == '4'"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('2 3 2\\n..#\\n###\\n..#\\n###') == '5'\nassert solution('4 3 2\\n.###\\n###.#\\n.#..#\\n.#.#.\\n#.#.##') == '1'\nassert solution('2 3 2\\n.#..\\n###.#\\n#.#.#\\n.#.#.\\n.#.#.\\n.#.#.\\n.#.#.\\n#.#.#') == '8'\nassert solution('2 3 2\\n.#..\\n###.#\\n#.#.#\\n.#.#.\\n.#.#.\\n.#.#.\\n.#.#.\\n#.#.#') == '16'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\".#.#\") == \"5\"\nassert solution(\"#.#.\") == \"5\"\nassert solution(\"#.#.##\") == \"5\"\nassert solution(\".#.##.##\") == \"8\"\nassert solution(\"#.#####\") == \"8\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('2 3 4\\n.##\\n...#\\n#.#\\n#.#') == '0'\nassert solution('3 5 3\\n.###\\n.###\\n.###\\n#.#.\\n.#.#') == '2'\nassert solution('3 5 3\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#') == '3'\nassert solution('6 7 4\\n.###.\\n.###.\\n...#.\\n#....\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.#.#.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.#.#.\\n.#.#.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.#.#.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.#.#.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\n.###.\\"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 3''') == '0'\nassert solution('''3 3 2''') == '5'\nassert solution('''3 2 2''') == '5'\nassert solution('''2 2 2''') == '0'\nassert solution('''2 1 2''') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 731') == '2'\nassert solution('7 31') == '2'\n\nassert solution('-1 -1') == '0'\nassert solution('-1 0') == '0'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2022') == '4'\nassert solution('2022 2022') == '4'\nassert solution('2020 2044') == '4'\nassert solution('2022 2044') == '8'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == \"2\"\nassert solution('2020 2020') == \"0\"\nassert solution('2020 3030') == \"0\"\nassert solution('2020 2020 4040') == \"0\"\nassert solution('2020 2040 5') == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2040') == '2'\nassert solution('2021 2020') == '1'\nassert solution('2021 1') == '1'\nassert solution('2040 1') == '1'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2040 2040\") == \"2\"\nassert solution(\"2020 2020\") == \"1\"\nassert solution(\"2020 2040\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2020,2040) == '2'\n\n-----Best Solution-----\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2040 2040') == '2'\nassert solution('2020 2520') == '2'\nassert solution('2020 2040') == '2'\nassert solution('2020 2000') == '0'\nassert solution('2020 3000') == '0'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2020 2040') == '2'\n'''\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == 'AC'\nassert solution('Abc') == 'WA'\nassert solution('AbC') == 'AC'\nassert solution('a') == 'WA'\nassert solution('AbcA') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cAB') == 'AC'\nassert solution('CAB') == 'WA'\nassert solution('ABC') == 'WA'\nassert solution('aCb') == 'AC'\nassert solution('AbC') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'AC'\nassert solution('ac') == 'WA'\nassert solution('abcdc') == 'AC'\nassert solution('atcoder') == 'AC'\nassert solution('abcdec') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('acccbb') == 'AC'\nassert solution('aacccccbb') == 'AC'\nassert solution('Aacccccbb') == 'WA'\nassert solution('aacccccbb') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"AC\"\nassert solution(\"ACDE\") == \"AC\"\nassert solution(\"aCDE\") == \"WA\"\nassert solution(\"aBCDE\") == \"AC\"\nassert solution(\"ABCDE\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aCtCd') == 'AC'\nassert solution('atCoder') == 'AC'\nassert solution('atCODER') == 'WA'\nassert solution('atcoder') == 'WA'\nassert solution('atCODER') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('abc') == 'WA'\nassert solution('AtCoder') == 'AC'\nassert solution('ABC') == 'WA'\nassert solution('ATCODER') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 'AC'\nassert solution('ac') == 'AC'\nassert solution('atcoder') == 'AC'\nassert solution('Atcoder') == 'AC'\nassert solution('aaac') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'WA'\nassert solution('C') == 'WA'\nassert solution('Cc') == 'WA'\nassert solution('Ac') == 'WA'\nassert solution('c') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'AC'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1214', 4) == \"2\"\nassert solution('1214', 8) == \"999999\"\nassert solution('1214', 100) == \"999999\"\nassert solution('1234', 4) == \"12\"\nassert solution('1234', 8) == \"9999\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1214\",4) == \"2\"\nassert solution(\"1324\",5) == \"4\"\nassert solution(\"1444\",4) == \"4\"\nassert solution(\"2224\",4) == \"4\"\nassert solution(\"1111\",4) == \"1\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[len(stdin) - 1]"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('12') == '1'\nassert solution('1234') == '2'\nassert solution('12345') == '3'\nassert solution('1245') == '4'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:4]\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 3) == '3'\nassert solution('1214', 8) == '8'\nassert solution('1214', 22) == '4'\nassert solution('1214', 12) == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1214''') == '2'\nassert solution('''22''') == '2'\nassert solution('''13333''') == '22'\nassert solution('''2222''') == '3'\nassert solution('''3333333''') == '4'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n1 2 4 3 5') == 'NO'\n\"\"\""
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 2 3 4 1\\n') == 'YES\\n'\nassert solution('4\\n4 3 2 1\\n') == 'YES\\n'\nassert solution('4\\n1 2 3 4\\n') == 'NO\\n'\nassert solution('4\\n1 3 2 4\\n') == 'NO\\n'\nassert solution('4\\n4 1 3 2\\n') == 'NO\\n'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_to_string('4\\n')) == 'YES'\nassert solution(input_to_string('5\\n')) == 'YES'\nassert solution(input_to_string('1\\n')) == 'NO'\nassert solution(input_to_string('1\\n')) == 'NO'\nassert solution(input_to_string('5\\n')) == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n2 3 4 1 5') == 'NO'\nassert solution('6\\n1 2 3 4 5 6') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('6\\n5 4 3 2 1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('5 2 3 4 1') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"2 1 3 4\") == \"NO\"\n\"\"\""
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n5 2 3 4 1''') == \"YES\"\nassert solution('''1\n5''') == \"NO\"\nassert solution('''2\n5''') == \"NO\"\nassert solution('''5\n2 3 4 1''') == \"YES\"\nassert solution('''3\n5''') == \"YES\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('00') == '0'\nassert solution('000') == '0'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nassert solution('''9999999999999999999999''') == '1'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n\"\"\""
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12131415') == '4'\nassert solution('1234567890') == '1'\nassert solution('1901042309') == '9'\nassert solution('201920181') == '4'\n\n\n\"\"\""
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nassert solution('''0''') == '1'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n2 4 7 11 3') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n13 37 39\\n') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n13 37 39\\n13 37 39\\n') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('1 2 3 4\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('1 2 -1\\n-6 -12 6\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 -1\") == \"2\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\") == \"0\"\nassert solution(\"3\\n-6 -12 6\") == \"3\"\nassert solution(\"3\\n1 2 -1\") == \"2\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/test_mixed_numbers.txt') == '4'\nassert solution('inputs/test_1.txt') == '2'\nassert solution('inputs/test_2.txt') == '3'\nassert solution('inputs/test_3.txt') == '0'\nassert solution('inputs/test_4.txt') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n10') == '0'\nassert solution('1\\n-2\\n3\\n4\\n5') == '3'\nassert solution('1\\n-2\\n3\\n4\\n5\\n10') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''3\n13 37 39\n1 2 3\n''') == '0'\n\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '0'\n\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '3'\n\nassert solution('''10\n-2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('13 37 39') == '0'\nassert solution('1 2 -1') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('code??????') == '10'\nassert solution('??????test') == '10'\nassert solution('bambarbia') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '0'\nassert solution('hellocode') == '10'\nassert solution('code??????') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\nassert solution('''10\ncode??????\n??????test\n''') == '10'\nassert solution('''100\nzokzok\nqzqzqzqz\n''') == '1'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('code??????\\ndiv?ts\\ntest') == '10'\nassert solution('bambarbia\\nhellocode\\n') == '0'\nassert solution('bambarbia\\nhellocode\\ntest') == '10'\nassert solution('bambarbia\\nhellocode') == '5'\nassert solution('codeforces\\ndodivthree') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('codeforces\\ndodivthree\\n') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\nassert solution('bambarbia\\nhellocode\\n') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('code??????\\n??????test\\n') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n'\nassert solution('a\\nabaca?b\\nzabbbcc\\n') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('code?code') == '2'\nassert solution('code??????') == '5'\nassert solution('code?code?code') == '2'\nassert solution('code???code') == '2'\nassert solution('code??code') == '2'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''10\ncodeforces\ndodivthree\n''') == '5'\n\nassert solution(\n'''7\nabaca?b\nzabbbcc\n''') == '5'\n\nassert solution(\n'''9\nbambarbia\nhellocode\n''') == '0'\n\nassert solution(\n'''10\ncode??????\n??????test\n''') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"codeforces\") == \"\"\nassert solution(\"dodivthree\") == \"\"\nassert solution(\"bambarbia\") == \"\"\nassert solution(\"hellocode\") == \"\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 2\"\nassert solution(\"codeforces\") == \"7 8\"\nassert solution(\"bambarbia\") == \"5 6\"\nassert solution(\"hellocode\") == \"3 5\"\nassert solution(\"code??????\") == \"10 9\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n7') == '3\\n7 7'\nassert solution('2\\n4 1 2 2 1 5 3') == '3\\n7 7'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n5 5'\nassert solution('4\\n1 1 1 1') == '4\\n4 4\\n1 1'\nassert solution('3\\n1 1 1') == '3\\n3 3\\n1 1'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('''2\n1 1 1 1\n''') == '2\\n1 1\\n'\nassert solution('''9\n-1 -3 -5 -7 -9 -11 -13 -15 -17 -19\n''') == '2\\n1 1\\n7 7\\n1 3\\n5 5\\n3 7\\n7 9\\n'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2 1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n2') == '1 2'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '3'\nassert solution('''5\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\n''') == '4'\nassert solution('''11\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1 1\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('4\\n-5 -4 -3 -2 -1 0 1 2 3 4\\n') == '2\\n3 4\\n1 1\\n2 2\\n4 4'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2'\nassert solution('5\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\\n') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 7\\n8 9\\n10 10'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2 2 1 5 3\") == \"3\"\nassert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"7 0 0 0 0 0 0 0\") == \"4\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"4\"\nassert solution(\"0 0 0 0 0 0 0 0\") == \"5\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('8\\n3 4 6 9 10 7 4 2 6 4 1 5\\n') == '2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-4 1 2 2 1 5 3') == '3\\n7 7'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1'\nassert solution('1 1 1 1') == '4\\n4 4\\n1 1'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1'\nassert solution('1 1 1 1') == '4\\n4 4\\n1 1'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n123456789\\n1') == '1'\nassert solution('1\\n123456789\\n1\\n1') == '1'\nassert solution('1\\n123456789\\n1\\n2') == '2'\nassert solution('1\\n123456789\\n1\\n3') == '0'\nassert solution('1\\n123456789\\n1\\n4') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 78 4 10\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\n\"\"\"\nfrom collections import defaultdict\nimport bisect\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if (a[i] + a[j]) % k == 0:\n            count += 1\nprint(count)\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('1 2\\n2 78 4 10\\n') == '7'\nassert solution('7 2\\n2 78 4 10\\n') == '0'\nassert solution('2 2\\n2 78 4 10\\n') == '0'\nassert solution('5 2\\n3 7 19 3 3\\n') == '12'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n100\\n') == '0'\nassert solution('2\\n100\\n') == '0'\nassert solution('2\\n200\\n') == '0'\nassert solution('1\\n100\\n') == '0'\nassert solution('2\\n200\\n') == '1'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == stdout.strip()\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import Counter\nfrom math import gcd\n\nn, k = map(int, stdin.readline().split())\narr = list(map(int, stdin.readline().split()))\n\ndivisor = gcd(*arr)\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if (arr[i] * arr[j]) % k == 0:\n            count += 1\n\nstdout.write(str(count))\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '12'\nassert solution('5 2') == '0'\nassert solution('6 11') == '7'\nassert solution('1 1') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\n\n'''\n\n## Solution\n\n'''\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(2000)\n\nN = int(input())\nA = [int(i) for i in input().split()]\nB = [0]\nfor i in range(N-1):\n    B.append(max(A[i], A[i+1]))\nB.sort(reverse=True)\nfor i in range(N-1):\n    if A[i] > B[i]:\n        print(A[i] - B[i])\n        break\nelse:\n    print(B[-1])\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n5') == '9'\nassert solution('2\\n-1\\n-2\\n-3') == '-6'\nassert solution('3\\n1\\n5\\n3') == '7'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '46'\nassert solution('4\\n-1\\n-1\\n-1\\n-1') == '-1'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n4 6\n''') == '10'\n\nassert solution('''2\n5\n4 4\n''') == '10'\n\nassert solution('''2\n5\n4 1\n''') == '9'\n\nassert solution('''2\n5\n5\n4 1\n''') == '10'\n\nassert solution('''2\n5\n4 1\n3 3\n2 6\n''') == '10'"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5 2\n''') == '9'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''2\n3 2\n''') == '3'\nassert solution('''2\n2 5\n''') == '9'\nassert solution('''2\n1 2\n3 2\n''') == '4'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\"\n\"\"\""
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\n'''\n\nn, m, q = [int(x) for x in stdin.split()]\n\nfor _ in range(q):\n    a, b, c, d = [int(x) for x in stdin.split()]\n    a_b = b - a\n    c_d = d - c\n    if a_b == c_d:\n        print(a + c)\n    else:\n        print(max(a + c, b + d))\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n1 2 2 10\\n2 3 2 10') == 110\nassert solution('2 3 3\\n1 3 3 10\\n1 2 2 10') == 0\nassert solution('3 3 3\\n1 3 3 10\\n1 2 2 10\\n2 3 2 10') == 20\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 3') == 110\nassert solution('1 3 3 100') == 110\nassert solution('1 2 2 10') == 110\nassert solution('2 3 2 10') == 120\nassert solution('5 4 5 10') == 155\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"110\"\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 3') == '110'\n\nassert solution('1 3 3 100') == '110'\n\nassert solution('1 2 2 10') == '110'\n\nassert solution('2 3 2 10') == '110'\n\"\"\""
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 3 100') == 110\nassert solution('1 2 2 10') == 120\nassert solution('2 3 2 10') == 120\nassert solution('3 4 3') == 110\nassert solution('1 3 3 100') == 110\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 3''') == '110'\nassert solution('''1 3 3 100''') == '110'\nassert solution('''1 2 2 10''') == '110'\nassert solution('''2 3 2 10''') == '110'\nassert solution('''3 4 3''') == '110'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n6\\n3') == '5'\nassert solution('2\\n1\\n2\\n1') == '0'\nassert solution('10\\n1\\n100\\n1') == '9'\nassert solution('1\\n100\\n1\\n1000') == '0'\nassert solution('10\\n1\\n1000\\n1') == '9'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 4 6 3\") == 5\n\nassert solution(\"1 4 6 3\") == 5\n\"\"\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 6 3') == 5\nassert solution('-1 -2 -3 -4') == -1\nassert solution('-1 -2 -3 -4 -5 -6') == -5\nassert solution('1 -2 -3 -4') == -1\nassert solution('1 -2 -3 -4 -5 -6') == -5\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 2\nassert solution('1 2 3') == 1\nassert solution('1 2 3 4 5') == 1\nassert solution('2 3 5 4') == 3\nassert solution('1 5 5 3') == 1\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4 6 3\\n') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n4\n6\n3''') == '5'\nassert solution('''1\n4\n6\n3''') == '5'\nassert solution('''4\n1 4 6 3\n''') == '5'\nassert solution('''4\n1 4 6 3\n''') == '5'\nassert solution('''4\n1\n4\n6\n3\n''') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\n'''\n'''\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('1 4 6 3') == '5'\nassert solution('1 4 6 3') == '5'\nassert solution('1 4 6 3') == '5'\nassert solution('1 4 6 3') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 3\") == \"5\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('1\\n0\\n0\\n0') == '0'\nassert solution('2\\n0 0\\n1 1') == '1.4142135623730951'\nassert solution('3\\n0 0\\n1 1\\n2 1') == '1.732055066559082'\nassert solution('5\\n1 1\\n2 3\\n3 5\\n4 7') == '2.223939071250'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"3\\n0 0\\n1 0\\n0 1\\n\")) == \"2.2761423749\"\nassert solution(input(\"6\\n1 -2\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n\")) == \"5.0\"\nassert solution(input(\"5\\n10.5 -3.5\\n4.3 -5.7\\n5.6 -3.1\\n1.2 4.7\\n3.9 6.1\\n3.8 -0.5\\n\")) == \"0.9552980019233684\"\nassert solution(input(\"3\\n0 0\\n1 0\\n0 1\\n\")) == \"2.2761423749\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n') == '2.276142'\n\"\"\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\n'''\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 0\n0 1\n''') == \"2.2761423749\"\n\nassert solution('''2\n0 0\n1 0\n0 1\n''') == \"2.2761423749\"\n\nassert solution('''3\n0 0\n1 0\n0 1\n''') == \"2.2761423749\"\n\nassert solution('''4\n-2 4\n0 -1\n1 -1\n2 -1\n3 -1\n''') == \"0.2272913129\"\n\nassert solution('''5\n-4 2\n-3 1\n-2 1\n-1 1\n0 1\n1 1\n2 1\n3 1\n4 1\n''') == \"0.4135158345\""
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"2\\n0 0\\n2 0\\n0 2\") == \"0.499999999999999\"\nassert solution(\"3\\n0 0\\n0 1\\n1 0\\n0 1\") == \"1.414214\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\") == \"2.2761423749\"\nassert solution(\"2 4\\n4 2\") == \"2.5761423749\"\nassert solution(\"3 3\\n3 3\") == \"6.000000000\"\nassert solution(\"5 5\\n5 5\") == \"9.000000000\"\nassert solution(\"7 5\\n7 5\") == \"9.000000000\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\nassert solution('''0 0\n1 0\n2 1\n-1 1''') == '1.17972461'\nassert solution('''0 0\n1 0\n1 1''') == '1.73234446'\nassert solution('''0 0\n1 0\n1 -1''') == '1.73234446'\nassert solution('''0 0\n10 10\n10 10''') == '4.00000'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '0 0\\n1 0\\n0 1\\n'\n) == '2.2761423749'\nassert solution(\n    '3\\n0 0\\n1 0\\n0 1\\n'\n) == '2.2761423749'\nassert solution(\n    '6\\n1 1\\n1 1\\n2 2\\n3 3\\n5 5\\n4 4\\n'\n) == '4.538359'\nassert solution(\n    '6\\n1 1\\n1 1\\n2 2\\n3 3\\n5 5\\n4 4\\n'\n) == '4.538359'\nassert solution(\n    '6\\n1 1\\n1 1\\n2 2\\n3 3\\n5 5\\n4 4\\n'\n) == '4.538359'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0\\n0 1\") == \"2.2761423749\"\n\"\"\"\n\n\"\"\"\nAPPROACH:\n- Put the given points in a 2D array\n- Sort the array\n- Iterate through array and compute the distance to the end\n- Sum up all distances\n- Divide sum by the total number of points\n\nTime Complexity: O(n^2)\nSpace Complexity: O(n)\n\"\"\"\nimport math\n\nn = int(input())\npoints = [tuple(map(int, input().split())) for _ in range(n)]\npoints.sort(key=lambda p: (p[1], p[0]))"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12 4''') == '4'\nassert solution('''8 4''') == '4'\nassert solution('''18 19''') == '16'\nassert solution('''98 3''') == '56'\nassert solution('''42 56''') == '26'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"13 4\") == \"1\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('12 3') == '5'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'\nassert solution('4 5') == '5'\nassert solution('10 11') == '5'\nassert solution('2 3') == '1'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4') == '4'\nassert solution('8 12') == '16'\nassert solution('12 12') == '24'\nassert solution('8 2') == '8'\nassert solution('4 2') == '8'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '4'\nassert solution('3 8') == '7'\nassert solution('2 4') == '2'\nassert solution('1 2') == '1'\nassert solution('2 1') == '3'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 40') == '36'\nassert solution('50 35') == '25'\nassert solution('11 13') == '8'\nassert solution('50 50') == '25'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == 4\nassert solution(\"1 2\") == 1\nassert solution(\"3 4\") == 2\nassert solution(\"50 15\") == 35\nassert solution(\"1 2\") == 1\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 4') == '4'\nassert solution('3 4') == '1'\nassert solution('20 30') == '10'\nassert solution('40 20') == '20'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('100') == '2'\nassert solution('1000') == '3'\nassert solution('10000') == '3'"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10000''') == '3'\nassert solution('''100000''') == '3'\nassert solution('''1000000''') == '3'\nassert solution('''100000''') == '4'\nassert solution('''111111''') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '10000') == '3'\n'''\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"3\"\nassert solution(\"1000\") == \"0\"\nassert solution(\"10000\") == \"3\"\nassert solution(\"100000\") == \"0\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2\\n1\\n4\\n2') == \"3\\n\"\nassert solution('2\\n1\\n4\\n2') == \"2\\n\"\nassert solution('1\\n1\\n4\\n2') == \"1\\n\"\nassert solution('1000\\n1000\\n1000\\n1000') == ''\nassert solution('2\\n2\\n2\\n2') == ''"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"1010\") == \"2\"\nassert solution(\"100000000000000000\") == \"2\"\nassert solution(\"10000000000000000\") == \"2\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == '3'\nassert solution('1000') == '5'\nassert solution('10000') == '3'\nassert solution('100000') == '3'\nassert solution('1000000') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10000') == 3\nassert solution('10000\\n') == 3\nassert solution('1000\\n') == 3\nassert solution('1000\\n3000') == 3\nassert solution('1000\\n4') == 2\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '10000'\n) == '3'\n\"\"\""
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000') == '3'\nassert solution('20000') == '6'\nassert solution('50000') == '11'\nassert solution('100000') == '17'\nassert solution('30000') == '17'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n5 4\n2 1 3 4 5\n2 3 2 4 5\n2 4 3 5 4\n2 1 4 3 5\n2 1 2 2 5\n\"\"\"\n) == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''5 10\n2 1 2 3 4 5 6 7 8 9 10\n4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4''') == '1'\nassert solution('''10 10\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1''') == '2'\nassert solution('''2 2\n1 1\n1 1''') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\n\nassert solution('''\n3 4\n3 1 2 3\n2 3 2\n2 3 2\n''') == '1'\n\nassert solution('''\n3 3\n2 1 1\n2 2 1\n2 2 1\n''') == '1'\n\nassert solution('''\n3 3\n2 3 1\n1 1 3\n2 2 1\n''') == '1'\n\nassert solution('''\n3 3\n2 2 3\n2 3 2\n2 3 2\n''') == '0'"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\n'''\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\\\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\\\n3 4\n3 1 2 3\n2 3 2\n2 3 2\n''') == '2'\nassert solution('''\\\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\\\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\"\n) == \"0\"\nassert solution(\n\"3 4\\n2 1 3\\n2 2 2\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n1 1 3\\n1 2 2\\n1 3 2\"\n) == \"1\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\nFind the number of the foods liked by all the N people.\\n') == '1'\nassert solution('5 3\\n2 1 3\\n3 1 2 3\\n2 3 2\\n') == '1'\nassert solution('5 5\\n2 3 2 1 3\\n3 1 2 3 2 3\\n3 2 1 1 3 3\\n3 1 2 2 3 2 3\\n') == '3'\nassert solution('5 5\\n2 3 2 1 3\\n3 1 2 3 2 3\\n3 2 1 1 3 3\\n3 1 2 2 3 2 3\\n') == '5'\nassert solution('5 5\\n2 3 2 1 3\\n3 1 2 3 2 3\\n3 2 1 1 3 3\\n3 1 2 2 3 2 3\\n') == '6'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('2 1 3') == '1'\nassert solution('3 1 2 3') == '1'\nassert solution('2 3 2') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\") == \"1\"\nassert solution(\"Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\") == \"0\"\nassert solution(\"Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\") == \"0\"\nassert solution(\"Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\") == \"0\"\nassert solution(\"Katsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\\nKatsusando loves omelette rice.\\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\nThe i-th person"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1 3') == '2'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[1:]"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '0.5'\nassert solution('1\\n1\\n1\\n1\\n1') == '0.5'\nassert solution('2\\n2\\n2\\n2\\n2') == '0.5'\nassert solution('3\\n3\\n3\\n3\\n3') == '0.333333333333333333333333333333333333333333333333333333333333333333333'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '0.5000000000'\nassert solution('6\\n') == '0.6999999999'\nassert solution('10\\n') == '0.25'\nassert solution('100\\n') == '0.015625'\nassert solution('1000\\n') == '0.00015625'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"0.25\"\nassert solution(\"3\") == \"0.16666666666666666\"\nassert solution(\"4\") == \"0.08333333333333333\"\nassert solution(\"5\") == \"0.04\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 1\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5'\nassert solution('3') == '0.3333333333'\nassert solution('5') == '0.2'\nassert solution('6') == '0.16666666667'\nassert solution('7') == '0.13793103448275862'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '0.5000000000'\nassert solution('''5''') == '0.75000000'\nassert solution('''6''') == '0.8000000'\nassert solution('''7''') == '0.90625'\nassert solution('''8''') == '0.9375'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == 0.5\n\"\"\"\n\n\"\"\"\n4\n\n1 2 3 4\n\"\"\"\n\n\"\"\"\n6\n\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\n6\n\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\n7\n\n1 2 3 4 5 6 7\n\"\"\"\n\n\"\"\"\n1\n\n1\n\"\"\"\n\n\"\"\"\n5\n\n1 2 3 4 5\n\"\"\"\n\n\"\"\"\n5\n\n1 2 3 4 5\n\"\"\"\n\n\"\"\"\n6\n\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\n2\n\n1 1\n\"\"\"\n\n\"\"\"\n2\n\n1 1\n\"\"\"\n\n\"\"\"\n3\n\n1 2 3\n\"\"\"\n\n\"\"\"\n3\n\n1 2 3\n\"\"\"\n\n\"\"\"\n4\n\n1 2 3 4\n\"\"\"\n\n\"\"\"\n4\n\n1 2 3 4\n\"\"\"\n\n\"\"\"\n5\n\n1 2 3 4 5\n\"\"\"\n\n\"\"\"\n5\n\n1 2 3 4 5\n\"\"\"\n\n\"\"\"\n6\n\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\n6\n\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\n7\n\n1 2 3 4 5 6 7\n\"\"\"\n\n\"\"\"\n7\n\n1 2 3 4 5 6 7\n\"\"\"\n\n\"\"\"\n8\n\n1 2 3 4 5 6 7 8\n\"\"\"\n\n\"\"\"\n8\n\n1 2 3 4 5 6 7 8\n\"\"\"\n\n\"\"\"\n9\n\n1 2 3 4 5 6 7 8 9\n\"\"\"\n\n\"\"\"\n9\n\n1 2 3 4 5 6 7 8 9\n\"\"\"\n\n\"\"\"\n10\n\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n\n\"\"\"\n10\n\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n\n\"\"\"\n11\n\n1 2 3 4 5 6 7 8 9 10 11\n\"\"\"\n\n\"\"\"\n11\n\n1 2 3 4 5 6 7 8 9 10 11\n\"\"\"\n\n\"\"\"\n12\n\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n\n\"\"\"\n12\n\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n\n\"\"\"\n13\n\n1 2 3 4 5 6 7 8 9 10 11 12 13\n\"\"\"\n\n\"\"\"\n13\n\n1 2 3 4 5 6 7 8 9 10 11 12 13\n\"\"\"\n\n\"\"\"\n14\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\"\"\"\n\n\"\"\"\n14\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\"\"\"\n\n\"\"\"\n15\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n\"\"\"\n\n\"\"\"\n15\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n\"\"\"\n\n\"\"\"\n16\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\"\"\"\n\n\"\"\"\n16\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\"\"\"\n\n\"\"\"\n17\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n\"\"\"\n\n\"\"\"\n17\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n\"\"\"\n\n\"\"\"\n18\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\"\"\"\n\n\"\"\"\n18\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\"\"\"\n\n\"\"\"\n19\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n\"\"\"\n\n\"\"\"\n19\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n\"\"\"\n\n\"\"\"\n20\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\"\"\"\n\n\"\"\"\n20\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\"\"\"\n\n\"\"\"\n21\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n\"\"\"\n\n\"\"\"\n21\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n\"\"\"\n\n\"\"\"\n22\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n\"\"\"\n\n\"\"\"\n22\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n\"\"\"\n\n\"\"\"\n23\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n\"\"\"\n\n\"\"\"\n23\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n\"\"\"\n\n\"\"\"\n24\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n\"\"\"\n\n\"\"\"\n24\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n\"\"\"\n\n\"\"\"\n25\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n\"\"\"\n\n\"\"\"\n25\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n\"\"\"\n\n\"\"\"\n26\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n\"\"\"\n\n\"\"\"\n26\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n\"\"\"\n\n\"\"\"\n27\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n\"\"\"\n\n\"\"\"\n27\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n\"\"\"\n\n\"\"\"\n28\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\n\"\"\"\n\n\"\"\"\n28\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\n\"\"\"\n\n\"\"\"\n29\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n\"\"\"\n\n\"\"\"\n29\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n\"\"\"\n\n\"\"\"\n30\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\"\"\"\n\n\"\"\"\n30\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\"\"\"\n\n\"\"\"\n31\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n\"\"\"\n\n\"\"\"\n31\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n\"\"\"\n\n\"\"\"\n32\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n\"\"\"\n\n\"\"\"\n32\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n\"\"\"\n\n\"\"\"\n33\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n\"\"\"\n\n\"\"\"\n33\n\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n\"\"\"\n\n\"\"\"\n34\n\n1 2 3 4 5 6 7 8"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\nassert solution('10\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\nassert solution('5\\n2\\n3 2\\n2 1\\n3 2\\n2 0\\n') == 1\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n5\n5\n4 1\n1 3\n4 1\n4 0\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n5\n5\n4 1\n1 3\n4 1\n4 0\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n5\n5\n4 1\n1 3\n4 1\n4 0\n\"\"\"\n) == '5'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n1 2 0') == '2'\n\"\"\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\n\nassert solution('''2\n1\n1 1\n1\n1 1\n''') == '2'\n\nassert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\n'''\nassert solution('''6\n3\n1 2 1\n1 3 1\n1 4 1\n3\n1 4 1\n2 5 1\n''') == '3'\n'''\nassert solution('''6\n3\n1 2 1\n1 3 1\n1 4 1\n3\n1 4 1\n2 5 1\n''') == '3'"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n1''') == '2'\nassert solution('''1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''1\n2\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''2\n3\n3 1\n1\n1 1\n2\n2 0\n3\n1 1\n2 0\n''') == '2'\nassert solution('''2\n2\n2 1\n1\n1 1\n1\n2 0\n3\n1 1\n2 0\n''') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n'''"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n'\n    '1\\n'\n    '2 1\\n'\n    '1\\n'\n    '1 1\\n'\n    '1\\n'\n    '2 0\\n'\n) == '2'\n\"\"\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\n\"\"\"\nimport sys\n\nT = int(sys.stdin.readline().strip())\n\nfor i in range(T):\n    K = int(sys.stdin.readline().strip())\n    S = sys.stdin.readline().strip()\n\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[0:K] + '...')\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nprint('Test 1 passed')\n\nassert solution('9\\naaajhghjhgh\\nddajhghjhgh') == 'a..a...jh...hjh..jhjhjh...hjh...hjh'\nprint('Test 2 passed')\n\nassert solution('4\\nabhjhjkhdhjkhjkhdjkhkj\\nhjk\\nhjkhjkhjkhjkhdjkhkj\\nhjkhjkhjkhjkh') == 'abhjh...jkhjhjkh...jkh...hjkhjkhjkhjkh'\nprint('Test 3 passed')\n\nassert solution('4\\naaajhghjhgh\\nddajhghjhgh') == 'a..a...jh...hjh..jhjhjh...hjh...hjh'\nprint('Test 4 passed')\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('2\\nab') == 'ab'\nassert solution('1\\nab') == 'a'\nassert solution('2\\naabb') == 'aabb'\nassert solution('2\\naabbb') == 'aabbb'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('niko') == 'niko'\nassert solution('nikoandsolstice') == 'nikoand...'\nassert solution('nikoandso...') == 'nikoand...'\nassert solution('nikoandsolstice') == 'nikoand...'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n' + 'nikoandsolstice') == 'nikoand...'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('7\\nnikoand\\nsolstice') == 'nikoand...'\n\"\"\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('6\\nnikoandsolstice') == 'nikoand...'\nassert solution('5\\nnikoandsolstice') == 'nikoand...'\nassert solution('4\\nnikoandsolstice') == 'nikoan...'\nassert solution('3\\nnikoandsolstice') == 'nikoa...'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('1\\nHello world') == 'Hello world'\nassert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('1\\nHello world') == 'Hello world'\nassert solution('7\\nI am the very model of a modern major general,I believe that I can define a unit called a \\\ncentimeter, a centimeter is equal to 0.1 meter. I do believe that based on my hunch, \\\nthis is correct.\\n') == 'I am the very model of a modern major general,I believe that I can define a unit called a \\\ncentimeter, a centimeter is equal to 0.1 meter. I do believe that based on my hunch, \\\nthis is correct.\\n'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\n\n'''\n\n'''\nclass Solution:\n    def __init__(self):\n        self.rules = {'s':'es', 'x':'xs', 'z':'zs'}\n        self.letters = {'a', 'e', 'i', 'o', 'u'}\n\n    def solve(self, s):\n        if s in self.rules:\n            return self.rules[s]\n        return s+self.rules[self.end(s)]\n\n    def end(self, s):\n        return s[-1] if s in self.letters else None\n'''\n\n'''\nclass Solution:\n    def solve(self, s):\n        if s.endswith('s'):\n            return s+'es'\n        return s+'s'\n'''\n\nimport sys"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"car\") == \"cars\"\nassert solution(\"money\") == \"monies\"\nassert solution(\"buzz\") == \"buzzes\"\nassert solution(\"pizza\") == \"pizzas\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('pear') == 'pears'\nassert solution('banana') == 'bananas'\nassert solution('sausage') =='sausages'\nassert solution('cucumber') == 'cucumbers'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"\nimport sys"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('cheese') == 'cheeses'\nassert solution('tree') == 'trees'\nassert solution('bug') == 'bugs'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('puppy') == 'puppies'\nassert solution('zebra') == 'zoa'\nassert solution('tree') == 'trees'\nassert solution('person') == 'people'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('s') =='s'\nassert solution('apples') == 'apples'\nassert solution('ab') == 'ab'\nassert solution('ak') == 'aks'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"appl\") == \"apples\"\nassert solution(\"applle\") == \"apples\"\nassert solution(\"appllees\") == \"apples\"\nassert solution(\"appllee\") == \"apples\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3') == '1'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('4 2') == '2'\nassert solution('5 2') == '2'\nassert solution('6 2') == '3'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 2') == '2'\nassert solution('5 1') == '2'\nassert solution('3 2') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n1 3') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1 3') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1 3') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1 3') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1 3') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 3\\n1\") == \"1\"\nassert solution(\"3 2\\n1 3\\n1\") == \"0\"\nassert solution(\"3 2\\n1 3\\n1\\n3\") == \"0\"\nassert solution(\"3 2\\n1 3\\n1\\n3\\n3\") == \"2\"\nassert solution(\"3 2\\n1 3\\n1\\n3\\n3\\n3\") == \"0\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n3\\n1') == '2'\nassert solution('2 1\\n2\\n1') == '0'\nassert solution('4 3\\n2\\n1 3\\n1') == '1'\nassert solution('4 3\\n3\\n1 2\\n1') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 3') == '1'\nassert solution('3 1') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == 1\nassert solution('1 2') == 0\nassert solution('3 2') == 1\nassert solution('1 3') == 2\nassert solution('3 1') == 2\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaabbbbbaaa') == '1'\nassert solution('aaaaa') == '5'\nassert solution('aaabaaaaabaaa') == '6'\nassert solution('aabaa') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ab') == 'ab'\nassert solution('aabbbba') == 'ababa'\nassert solution('aabbbbaaa') == 'abababa'\nassert solution('aabbbbbaaa') == 'abaaabababa'\nassert solution('aabbbbbaaa') == 'abaaabababa'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('ab') == 'ab'\nassert solution('abb') == 'ab'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbba') == '1'\nassert solution('abc') == '0'\nassert solution('a') == '1'\nassert solution('bb') == '2'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"aabaa\") == \"1\"\nassert solution(\"aabaaa\") == \"4\"\nassert solution(\"aaaa\") == \"0\"\nassert solution(\"aaaaa\") == \"3\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaacac') == '4'\nassert solution('aabbbbaacab') == '2'\nassert solution('aabbbbaacabb') == '1'\nassert solution('aabbbbbaaca') == '3'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaaa') == 'abaaa'\nassert solution('aabbbbaaca') == 'abaaa'\nassert solution('aabbbba') == 'aaabaa'\nassert solution('baba') == 'aaabaa'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n10\naabbbbaaca\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nprint(\"Test1 passed\")\n\nassert solution(\"aaaaa\") == \"0\"\nprint(\"Test2 passed\")\n\nassert solution(\"baaa\") == \"0\"\nprint(\"Test3 passed\")\n\nassert solution(\"aaaa\") == \"1\"\nprint(\"Test4 passed\")\n\nassert solution(\"aaab\") == \"2\"\nprint(\"Test5 passed\")\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n3') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n3\\n2') == '2'\nassert solution('3\\n4\\n5') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 4\") == \"3\"\nassert solution(\"1 2 1\") == \"4\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 4 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 4\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3 2 4\") == \"3\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 4 4\") == \"1\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 4 2') == '2'\nassert solution('3\\n5 4 6') == '0'\nassert solution('3\\n5 4 2 3') == '1'\nassert solution('3\\n5 4 6 2 3') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[1:-1]\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 4\\n') == '3'\nassert solution('5 2 3\\n') == '3'\nassert solution('5 2 4\\n3 3 3\\n') == '3'\nassert solution('5 2 3\\n2 4 4\\n') == '2'\nassert solution('5 2 4\\n2 3 3\\n4 4 3\\n') == '1'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('3\\n2 1') == '2'\nassert solution('3\\n1 1 1') == '1'\nassert solution('1\\n1 1 1') == '0'\nassert solution('2\\n2 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 3') == \"2\"\nassert solution('2 1 1 3') == \"2\"\nassert solution('4 4 4 4') == \"0\"\nassert solution('2 2 2 2') == \"0\"\nassert solution('8 8 8 8') == \"0\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3') == \"2\"\nassert solution('2 1 1 3') == \"2\"\nassert solution('2 1 1 3') == \"2\"\nassert solution('2 1 1 3') == \"2\"\nassert solution('2 1 1 3') == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 0 1 3') == '2'\nassert solution('2 0 0 3') == '2'\nassert solution('2 1 1 1') == '2'\nassert solution('2 1 0 1') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 2''') == '3'\nassert solution('''2 1 1 3''') == '3'\nassert solution('''2 1 1 2''') == '3'\nassert solution('''2 1 2 1''') == '3'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 2 3\") == \"0\"\nassert solution(\"1 2 3 4\") == \"-1\"\nassert solution(\"1 2 3 4\") == \"-1\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 1 -1 3\") == \"2\"\nassert solution(\"2 -1 -1 3\") == \"2\"\nassert solution(\"-2 -1 1 3\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 3 4 5') == '2'\nassert solution('2 3 4 0') == '2'\nassert solution('2 3 4 5 2') == '2'\nassert solution('2 3 4 5 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 2 3 4') == '15'\nassert solution('1 1 1 1') == '5'\nassert solution('1 2 1 3') == '6'\nassert solution('1 2 2 2') == '10'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 2 2 3\") == \"4\"\nassert solution(\"2 1 2 3\") == \"4\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('3 3 3 3') == '5'\nassert solution('2 1 1 3') == '2'\nassert solution('3 3 3 3') == '5'\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 8\") == \"Yes\"\nassert solution(\"3 8\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"8 4\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 8') == 'No'\nassert solution('2 9') == 'Yes'\nassert solution('9 1') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('3 8') == 'Yes'\nassert solution('3 9') == 'No'\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('2 3') == 'No'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 8') == 'Yes'\nassert solution('3 8') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('4 8') == 'No'\nassert solution('4 6') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 2') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('5 7') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 8') == \"Yes\"\nassert solution('2 1') == \"No\"\nassert solution('3 4') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\n\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == \"2\"\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == \"2\"\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == \"2\"\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == \"2\"\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('1 2\\n1 3\\n1 2\\n') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == 2\nassert solution('1 2\\n1 3\\n2 4') == 1\nassert solution('1 2\\n1 3\\n2 4\\n3 4') == 2\nassert solution('1 2\\n1 3\\n2 4\\n3 5') == 0\nassert solution('1 2\\n1 3\\n2 4\\n3 6') == 0\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n2 3') == '0'\nassert solution('1 2\\n1 3\\n1 2') == '2'\nassert solution('1 2\\n1 3\\n2 3') == '2'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 1') == '6'\nassert solution('5 2') == '17'\nassert solution('6 2') == '23'\nassert solution('7 2') == '31'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('2 3\\n') == '4'\nassert solution('2 4\\n') == '5'\nassert solution('5 3\\n') == '6'\nassert solution('4 2\\n') == '-3'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == \"18\"\nassert solution('5 2') == \"18\"\nassert solution('2 5') == \"8\"\nassert solution('2 10') == \"18\"\nassert solution('3 5') == \"8\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1\")) == \"1\"\nassert solution(input(\"2\")) == \"2\"\nassert solution(input(\"3\")) == \"5\"\nassert solution(input(\"4\")) == \"9\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '6'\nassert solution('3 4') == '9'\nassert solution('5 6') == '15'\nassert solution('4 3') == '7'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"18\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'\nassert solution('4 1') == '4'\nassert solution('15 0') == '100'\nassert solution('10 5') == '5'\nassert solution('5 2') == '18'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"18\"\n\"\"\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'\nassert solution('3 3') == '6'\nassert solution('10 10') == '23'\nassert solution('15 4') == '29'\nassert solution('10 10') == '23'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('123') == 'Fizz'\nassert solution('1000000') == 'Fizz'\nassert solution('1000000001') == 'Fizz'\nassert solution('10000000000000000') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"Fizz\"\nassert solution(\"15\") == \"60\"\nassert solution(\"4\") == \"Fizz\"\nassert solution(\"2\") == \"Buzz\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 'Fizz'\nassert solution('4') == 4\nassert solution('5') == 'Buzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15') == '60'\n\"\"\"\n\nN = int(input())\n\ntotal = 0\nfor i in range(1, N+1):\n    if i % 3 == 0 and i % 5 == 0:\n        total += 'FizzBuzz'\n    elif i % 3 == 0:\n        total += 'Fizz'\n    elif i % 5 == 0:\n        total += 'Buzz'\n    else:\n        total += i\n\nprint(total)\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('3') == 'Fizz'\nassert solution('3,5') == 'FizzBuzz'\nassert solution('5,3') == 'FizzBuzz'\nassert solution('5,5') == 'FizzBuzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('15') == '60'"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('15') == '60'\nassert solution('2') == '0'\nassert solution('10') == '45'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('5') == 'FizzBuzz'\nassert solution('10') == 'FizzBuzz'\nassert solution('15') == 'FizzBuzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"15\") == \"60\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 5') == '8'\nassert solution('4 7 10 6 5') == '8'\nassert solution('6 -12 -10 -8 -6 -4 0') == '-8'\nassert solution('-10 -6 -4 -2 -1 0 1 2 3 4') == '-8'\nassert solution('6 0') == '6'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7 10 6 5') == '8'\n\"\"\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 7 10 6 5') == '8'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '2'\nassert solution('1 2 3 4 5 6 7 8') == '3'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5') == '8'\nassert solution('4 7 10 6 5') == '8'\nassert solution('6 5') == '8'\nassert solution('4 7 10 6 5') == '8'\nassert solution('4 7 10 6 5') == '8'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == '4'\nassert solution('3 5') == '3'\nassert solution('10 2') == '5'\nassert solution('10 1') == '9'\nassert solution('4 10') == '5'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('3 4') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6 5\n4 7 10 6 5''') == '8'\nassert solution(\n'''10 15\n5 9 11 10 13 14 15''') == '14'\nassert solution(\n'''2 4\n1 2 3 4''') == '2'\nassert solution(\n'''2 4\n1 2 3 4''') == '2'\nassert solution(\n'''7 6\n4 6 5 6 7''') == '5'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5') == '8'\nassert solution('5 2') == '2'\nassert solution('3 3') == '2'\nassert solution('1 5') == '1'\nassert solution('8 6') == '7'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\nassert solution('8 5\\n4 7 10 6 5') == '8'\nassert solution('1 10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('0 0\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('-10 0\\n1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"-1 1\\n1 1\") == \"0\"\nassert solution(\"0 2\\n0 2\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"-5 0\\n-5 0\") == \"-5\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1\\n') == '1'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('3 1\\n2 1\\n') == '1'\nassert solution('2 2\\n1 1\\n') == '1'\nassert solution('2 1\\n1 2\\n') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nH, W = map(int, stdin.readline().split())\nh, w = map(int, stdin.readline().split())\n\nstdout.write(str(H*W - h*w))\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n2 1\\n') == '1'\nassert solution('3 3\\n3 2\\n3 1\\n') == '0'\nassert solution('4 3\\n3 2\\n3 1\\n4 1\\n') == '2'\nassert solution('5 5\\n5 4\\n5 3\\n5 2\\n5 1\\n') == '10'\nassert solution('20 20\\n16 17\\n15 16\\n14 15\\n13 14\\n12 13\\n11 12\\n10 11\\n9 10\\n8 9\\n7 8\\n6 7\\n5 6\\n4 5\\n3 4\\n2 3\\n1 2\\n') == '95'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 1') == '1'\nassert solution('3 2\\n2 1') == '1'\nassert solution('5 3\\n3 2\\n4 1\\n2 3') == '2'\nassert solution('5 4\\n3 2\\n3 2\\n3 2') == '0'\nassert solution('5 5\\n3 2\\n3 2\\n3 2') == '4'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[1]\n\"\"\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 1\"\"\") == \"1\"\nassert solution(\"\"\"2 2\"\"\") == \"0\"\nassert solution(\"\"\"1 1\"\"\") == \"0\"\nassert solution(\"\"\"5 10\"\"\") == \"10\"\nassert solution(\"\"\"100 100\"\"\") == \"0\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\") == \"0\"\nassert solution(\"2 3\\n2 2\\n3 3\") == \"1\"\nassert solution(\"2 3\\n3 3\\n3 2\\n2 3\") == \"2\"\nassert solution(\"5 5\\n1 4\\n2 5\\n3 4\\n4 5\\n5 4\") == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2 1\\n') == '1'"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n2 1') == '1'\nassert solution('1 1\\n2 1') == '0'\nassert solution('2 2\\n2 1') == '1'\nassert solution('2 2\\n2 2') == '0'\nassert solution('2 2\\n2 3') == '1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 3\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 5\\n3 7 5 1 10 3 20') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\nassert solution(\"7 4\") == \"6\"\nassert solution(\"5 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '-1'\n\n\"\"\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n1 3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n1 3 7 5 1 10 3 20') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('1 2\\n1 2\\n') == '-1'\nassert solution('10\\n10\\n') == '-1'\nassert solution('10\\n10\\n') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n1') == '-1'\nassert solution('8 2\\n2 3 2 4 4 1 4 3') == '2'\nassert solution('8 1\\n1') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\n\"\"\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"1\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '3\\n3 4 1'\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '-1'\n\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '3\\n2 2 1\\n3 3 1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '-1'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\nassert solution('1 1') == '0'\nassert solution('1 2 3 4 5 6 7') == '2'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 8\n    ....*...\n    ...**...\n    ..*****.\n    ...**...\n    ....*...\n    ........\n    \"\"\") == \"3\\n3 4 1\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    ****.\n    .*...\n    .*...\n    .....\n    \"\"\") == \"-1\"\n\nassert solution(\n    \"\"\"\n    3 3\n    *.*\n    .*.\n    *.*\n    \"\"\") == \"-1\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    ***..\n    .*...\n    .*...\n    .....\n    \"\"\") == \"-1\"\n\nassert solution(\n    \"\"\"\n    5 5\n    .*...\n    .*...\n    .*...\n    .*...\n    .....\n    \"\"\") == \"-1\""
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 8''') == '''3\n3 4 1\n3 5 2\n3 5 1'''\n\nassert solution('''5 5''') == '''-1\n'''\n\nassert solution('''3 3\n.*...\n***.\n.*...\n.*...\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1'''\n\nassert solution('''6 8''') == '''3\n3 4 1\n3 5 2\n3 5 1'''"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '-1'\nassert solution(\n'''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '3'\nassert solution(\n'''3 3\n*.*\n.*.\n*.*\n''') == '-1'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n*.*\\n.*\\n.*') == '2'\nassert solution('5 5\\n.*..\\n.*.\\n.*\\n.*\\n.*') == '3'\nassert solution('3 3\\n*.*\\n.*\\n*.*') == '3'\n\n\n\n\n-----\n\ntag:\nBinary Search\nGreedy\n\n\"\"\"\n\nimport sys\nfrom itertools import product\nfrom typing import List\n\n\nclass Star:\n    def __init__(self, row, col, size):\n        self.row = row\n        self.col = col\n        self.size = size\n\n    def __repr__(self):\n        return '*' * self.size\n\n    def __eq__(self, other):\n        return self.row == other.row and self.col == other.col and self.size == other.size\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"-1\"\nassert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"3 3\") == \"3 5 2\"\nassert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3\\n3 4 1\\n3 5 2\\n'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '-1\\n'\nassert solution('3 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '3\\n3 4 1\\n3 5 2\\n'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3\\n3 4 1\\n3 5 2\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '-1\\n'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'a'\nassert solution('aa') == ''\nassert solution('aabc') == 'a'\nassert solution('abc') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bad') == 'bad','should return \\'bad\\''\nassert solution('good') == '','should return \\'\\''\nassert solution('aa') == '','should return \\'\\''\nassert solution('xy') == '','should return \\'\\''\nassert solution('xzx') == '','should return \\'\\''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc', 'abc') == 'abc'\nassert solution('abc', 'ab') == 'ab'\nassert solution('abc', '') == ''\nassert solution('a', 'abc') == 'a'\nassert solution('abc', 'abc') == 'abc'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('good') == 0\nassert solution('aa') == 1\nassert solution('aaa') == 0\nassert solution('aaaaa') == 0\nassert solution('aaaaaaaaaaaaaaaa') == 0\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('good') == '', 'Expected an empty string'\nassert solution('good') == '', 'Expected an empty string'\nassert solution('aabc') == '', 'Expected an empty string'\nassert solution('aa') == '', 'Expected an empty string'\nassert solution('abc') == '', 'Expected an empty string'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n10100\"\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\"\nassert solution('''\n5 6\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n1 2\n''') == \"NO\"\nassert solution('''\n4 4\n1 2\n3 1\n4 1\n3 2\n4 2\n''') == \"YES\"\nassert solution('''\n5 4\n1 2\n3 1\n4 1\n5 2\n6 1\n''') == \"NO\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES\\n10100'\n'''\n\n'''"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n7 1\\n') == 'NO'\nassert solution('4 7\\n1 4\\n2 4\\n1 4\\n3 4\\n1 4\\n4 7\\n1 4\\n1 4\\n3 4\\n1 4\\n1 4\\n') == 'YES\\n1000100'\nassert solution('7 6\\n1 2\\n2 3\\n3 4\\n3 5\\n1 6\\n1 6\\n2 6\\n3 4\\n') == 'YES\\n00110'\n\n\n-----"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n2 3 2\\n3 1 3\\n3 3 2\\n1 2 3\") == \"YES\"\nassert solution(\"1 2 3\\n2 3 1\\n3 1 3\\n3 3 2\\n1 2 3\") == \"NO\"\nassert solution(\"2 2 3\\n3 3 2\\n3 2 1\\n1 2 2\") == \"YES\"\nassert solution(\"2 3 2\\n2 3 1\\n3 1 2\\n3 3 2\\n1 2 2\") == \"NO\"\nassert solution(\"1 2 3\\n2 3 2\\n3 1 3\\n3 3 2\\n1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == 'YES\\n10100'\n\nFor the second example:\n\n[Image]\n\n\n-----Solution-----\n\nWe should start from the vertices with index 1. We should have $m = 5$ edges in the first line.\n\nSo we can use a BFS to find all the vertices that should be on the first line. We then iterate over each vertices and check if the following edge should be directed to it:"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\nfrom itertools import product\nsys.setrecursionlimit(5000)\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\" \"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 4\\n2 1\\n1 4\\n3 1\\n6 1') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 4\") == \"NO\"\nassert solution(\"1 2\\n1 4\") == \"YES\\n1 0\"\nassert solution(\"2 2\\n1 2\") == \"YES\\n1 0\"\nassert solution(\"4 3\\n1 3\\n2 3\\n3 1\") == \"NO\"\nassert solution(\"2 1\\n2 1\") == \"YES\\n1 0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n1 2\\n2 3\\n7 7\\n1 2') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('3 5\\n1 2\\n2 3\\n4 5\\n7 8\\n2 3\\n3 4\\n5 6\\n7 9\\n8 9\\n9 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 17\\n18 19\\n20 21\\n22 22\\n23 23\\n24 24\\n25 26\\n27 28\\n29 30\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2\\n3 4\\n'\n\n\n-----\n\nThe worst-case time complexity is $O(n \\sqrt{n})$ and the space complexity is $O(n)$.\n\nIn the second example, the points $1$, $2$, $3$, $4$, $5$, $6$, $7$, $8$, $9$, $10$, $11$, $12$ and $13$ do not belong to any segment.\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 5\\n1 5\\n') == '0\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\nassert solution('''1 2\n1 2\n2 1\n''') == '2'\nassert solution('''1 5\n1 5\n''') == '0'\nassert solution('''1 6\n1 6\n''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 2\\n3 4\\n4 5\\n5 6') == '0\\n5 6'\nassert solution('2 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '0'\nassert solution('2 2\\n1 2\\n3 4\\n5 6') == '0\\n3 4\\n5 6'\nassert solution('2 2\\n1 2\\n1 2') == '0'\nassert solution('2 3\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '2\\n3 4'\nassert solution('1 7') == '0'\nassert solution('1 2\\n1 7') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 7\\n1 7') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7\n''') == '0\\n'\n'''\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7'\nassert solution('2\\n1\\n2') == '0\\n'\n\n\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n3\\n') == '2 3 4'\nassert solution('1\\n2\\n3\\n4\\n') == '2 3 4'\nassert solution('1\\n2\\n3\\n5\\n6\\n7\\n') == '2 3 4 5 6 7'\nassert solution('1\\n2\\n3\\n4\\n6\\n7\\n') == '2 3 4 5 6 7'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'\nassert solution('''8 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '0\\n'\n\n\n-----Solution-----\n\"\"\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 9 2 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 9 2 3\n'''\n    ) == \"2\"\n\nassert solution(\n'''\n4 9 2 3\n'''\n    ) == \"2\""
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == '2'\n\nassert solution('4 9 2 3') == '2'\n\nassert solution('-4 -9 -2 -3') == '0'\n\nassert solution('1 100 1 1') == '100'\n\nassert solution('1 1 1 1') == '0'"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 3\") == 1\nassert solution(\"4 9 2 3\") == 2\nassert solution(\"1 1 1 1\") == 5\nassert solution(\"1 1 1 100\") == 100\nassert solution(\"100 100 100 100\") == 0\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789') == \"Yes\"\nassert solution('123456789123456789123456789') == \"No\"\nprint(\"Asserts passed\")\n\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('1234567891') == 'No'\nassert solution('12345678901') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(1234567891) == 'No'\nassert solution(1234567891123) == 'Yes'\nassert solution(123456789123456789) == 'Yes'\nassert solution(123456789123456789123456789) == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(4999369) == 'No'\nassert solution(4593037) == 'Yes'\nassert solution(691609) == 'No'\nassert solution(49973) == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567') == 'No'\nassert solution('12345') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(987654321) == \"No\"\nprint(solution(9))\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123456789) == 'Yes'\n\nassert solution(123) == 'No'\n\nassert solution(9900) == 'Yes'\n\nassert solution(1012) == 'No'\n\nassert solution(19) == 'No'"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(987654321) == 'Yes'\nassert solution(123456789) == 'Yes'\nassert solution(9079317) == 'Yes'\nassert solution(0) == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123456789) == \"No\"\nassert solution(1234567) == \"Yes\"\nassert solution(1234567) == \"No\"\nassert solution(123456789) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(123456789) == 'Yes'\nassert solution(123456789) == 'Yes'\nassert solution(123456789) == 'Yes'\nassert solution(123456789) == 'Yes'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('127') == '4'"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('127') == '4'\nassert solution('100000') == '4'\nassert solution('150000') == '4'\nassert solution('999999') == '3'\nassert solution('99999') == '3'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\nassert solution('64') == '2'\nassert solution('96') == '3'\nassert solution('100') == '4'\nassert solution('42') == '1'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"127\"\"\") == \"4\"\nassert solution(\"\"\"27\"\"\") == \"1\"\nassert solution(\"\"\"27\"\"\") == \"2\"\nassert solution(\"\"\"27\"\"\") == \"3\"\nassert solution(\"\"\"27\"\"\") == \"4\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123) == \"4\"\nassert solution(12345) == \"5\"\nassert solution(123456789) == \"7\"\nassert solution(987654321) == \"13\"\n\n\"\"\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"123\") == \"3\"\nassert solution(\"12345\") == \"5\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '0'\nassert solution('10\\n') == '1'\nassert solution('1000\\n') == '2'\nassert solution('10000\\n') == '3'\nassert solution('100000\\n') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kohti') == 'No'\nassert solution('toki') == 'No'\nassert solution('ankang') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('ko') == 'No'\nassert solution('t') == 'No'\nassert solution('tow') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == stdin\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('hooool', 'cool') == 'No'\nassert solution('sea', 'eat') == 'Yes'\nassert solution('opq', 'qop') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nassert solution(\"kyoto\") == \"No\"\nassert solution(\"tokyo\") == \"No\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''kyoto''') == 'Yes'\nassert solution('''tokyo''') == 'Yes'\nassert solution('''osaka''') == 'No'\nassert solution('''mountain''') == 'No'\nassert solution('''kazoo''') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(s) == t\n\"\"\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('ab') == '1'\nassert solution('abcd') == '3'\nassert solution('abcdef') == '4'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\nassert solution('cbbabc') == '2'\nassert solution('ab') == '0'\nassert solution('zzz') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc', 'abc') == 0\nassert solution('abcc', 'abcc') == 0\nassert solution('abcc', 'abcd') == 1\nassert solution('abcc', 'abcdc') == 1\nassert solution('abc', 'abcabccd') == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == 1\nassert solution(\"abc\") == 0\nassert solution(\"ac\") == 1\nassert solution(\"c\") == 1\nassert solution(\"a\") == 0\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('xyxz') == '3'\nassert solution('xyxzy') == '1'\nassert solution('xzyx') == '0'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('pqpqpqpq') == '4'\nassert solution('pqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqpqp"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcabc') == 0\nassert solution('abcabcabcabc') == 1\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('abcbacc') == '1'\nassert solution('abcabc') == '0'\nassert solution('abcabcbb') == '2'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc', 'abc') == 0\nassert solution('cabacc', 'abc') == 1\nassert solution('abc', 'cabacc') == 2\nassert solution('abac', 'abc') == 0\nassert solution('abac', 'cabacc') == 1\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 1') == '2'\nassert solution('2 2 2') == '4'\nassert solution('1 1 2') == '1'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 4 2') == '4'\nassert solution('8 4 4') == '4'\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\nassert solution('10 10 10') == '10'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''7 10 1''') == '7'\nassert solution('''1 0 1''') == '1'\nassert solution('''2 1 2''') == '2'\nassert solution('''6 22 1''') == '6'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('3 2 4') == '3'\nassert solution('5 2 5') == '3'\nassert solution('9 10 3') == '3'\nassert solution('10 10 10') == '10'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3 1') == '1'\nassert solution('2 3 4') == '2'\nassert solution('10 2 3') == '10'\nassert solution('5 10 10') == '10'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"4 2 2\") == \"4\"\nassert solution(\"8 12 2\") == \"2\"\n\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 4') == '2'\nassert solution('8 12 2') == '2'\nassert solution('5 6 8') == '2'\nassert solution('3 10 6') == '2'\nassert solution('5 13 5') == '3'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 5 2') == '4'\nassert solution('8 7 2') == '2'\nassert solution('10 10 2') == '10'\nassert solution('1 100 2') == '100'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 100 1') == '1'\nassert solution('8 12 2') == '2'\nassert solution('1 100 1') == '1'\nassert solution('1 10 2') == '2'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('101') == '101'\nassert solution('1020') == '2020'\nassert solution('1000000') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''10\n''') == '2020'\nassert solution('''100\n''') == '5280'\nassert solution('''1000\n''') == '5280'\nassert solution('''10000\n''') == '5280'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"15\"\nassert solution(\"100\") == \"500\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n1024'''\n    ) == '2020'\nassert solution(\n'''\n0'''\n    ) == '0'\nassert solution(\n'''\n10\n'''\n    ) == '5'\nassert solution(\n'''\n1\n'''\n    ) == '0'\nassert solution(\n'''\n10\n'''\n    ) == '5'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('1024') == 2020\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1024') == '2020'\n\n'''\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1024''') == '2020'\nassert solution('''20''') == '2020'\nassert solution('''45000''') == '2020'\nassert solution('''454545''') == '2020'\nassert solution('''1000''') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1024') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1024') == ''\nassert solution('10 50 50 25 10 10 10') == '2020'\nassert solution('10 50 50 25 10 10 10 10 50') == '2020'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 4''') == \"5\"\nassert solution('''1\n100''') == \"0\"\nassert solution('''4\n1 2 3 4''') == \"10\"\nassert solution('''8\n1 2 3 4 5 6 7 8''') == \"14\"\nassert solution('''30\n
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4') == '5'\nassert solution('2 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2 3') == '0'\nassert solution('1 3 3 4') == '1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 4 2') == '0'\nassert solution('2\\n1 4 1 2') == '4'\nassert solution('3\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '4'\nassert solution('2\\n1\\n2') == '3'\nassert solution('2\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"5\"\nassert solution(\"1\\n3\") == \"10\"\nassert solution(\"1\\n5\") == \"5\"\nassert solution(\"1\\n4\") == \"4\"\nassert solution(\"1\\n6\") == \"14\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"5\"\nassert solution(\"1 4 4 1\") == \"5\"\nassert solution(\"2 5 4\") == \"15\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4\\n') == '5'\nassert solution('2 1\\n') == '2'\nassert solution('3 2\\n') == '3'\nassert solution('2 3\\n') == '6'\nassert solution('1 3\\n') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 4\") == \"\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"4 10\") == \"3\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10') == '3'\nassert solution('4 10') == '3'\nassert solution('7 10') == '4'\nassert solution('8 10') == '4'\nassert solution('9 10') == '5'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10') == '3'\nassert solution('4 15') == '2'\nassert solution('5 5') == '0'\nassert solution('1 5') == '2'\nassert solution('2 5') == '0'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 21\") == \"1\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"1 10\") == \"3\"\nassert solution(\"1 100\") == \"3\"\nassert solution(\"1 1000\") == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CS') == '2'\nassert solution('RR') == '0'\nassert solution('C') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSC') == '3'\nassert solution('CSCRS') == '1'\nassert solution('CSCCRS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CS') == '2'\nassert solution('C') == '1'\nassert solution('C') == '1'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSSS\") == \"0\"\nassert solution(\"RSS\") == \"1\"\nassert solution(\"SCC\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"CSS\"\n\"CSR\"\n) == \"2\"\nassert solution(\n\"CSS\"\n\"CRS\"\n) == \"2\"\nassert solution(\n\"CSS\"\n\"CSS\"\n) == \"3\"\nassert solution(\n\"CRS\"\n\"CSS\"\n) == \"3\"\nassert solution(\n\"CSS\"\n\"CSS\"\n) == \"3\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"CSS\", \"CSR\") == \"2\"\nassert solution(\"CSS\", \"CS\") == \"0\"\nassert solution(\"CS\", \"CSS\") == \"0\"\nassert solution(\"CSS\", \"CS\") == \"0\"\nassert solution(\"CS\", \"CS\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CCR') == '3'\nassert solution('CRS') == '3'\nassert solution('SR') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('3 1 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 2 3 4 5') == '5'\nassert solution('3 1 2 4 5') == '5'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 3 5 4 2''') == \"2\"\nassert solution('''1\n1''') == \"1\"\nassert solution('''5\n1 1 1 1 1''') == \"1\"\nassert solution('''5\n1 3 5 4 2''') == \"2\"\nassert solution('''5\n1 1 1 2 1''') == \"1\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('5 1 3 4 2') == '2'\nassert solution('1 3 4 2 5') == '1'\nassert solution('2 5 1 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('5 1 3 4 2') == '2'\nassert solution('5 2 4 1 3') == '2'\nassert solution('5 3 4 2 1') == '2'\nassert solution('5 4 2 1 3') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 5 4 2') == 2\nassert solution('1 3 5 4 2') == 2\nassert solution('1 3 5 4 2') == 2\n\"\"\""
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"1 3 4\") == \"2\"\nassert solution(\"1 4 2 3\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('2 4 5 1 3') == '2'\nassert solution('2 4 3 5 1') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 2 4 3') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''5\n2 5 1 3 4''') == '3'\nassert solution('''5\n3 1 2 4 5''') == '1'\nassert solution('''5\n3 2 1 4 5''') == '2'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\"\"\"8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"6.040\"\nassert solution(\"\"\"7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"\nassert solution(\"\"\"10\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 0\nassert solution('2.14 2.06') == 5.410\nassert solution('-2.14 2.06') == 5.410\nassert solution('-1.14 2.04') == 5.620\nassert solution('-2.16 1.46') == 5.620\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\n\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\n\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\n\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\n\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"\n\n\"\"\""
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n'''"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''8''') == '5.410'\nassert solution(\n'''5''') == '5.620'\nassert solution(\n'''8''') == '6.040'\nassert solution(\n'''7''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8''') == '5.410'\nassert solution('''5''') == '5.620'\nassert solution('''8''') == '6.040'\nassert solution('''7''') == '6.720'\nassert solution('''9''') == '10.320'\n'''Output'''\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8''') == '6.040'\nassert solution('''5''') == '5.620'\nassert solution('''8''') == '6.720'\nassert solution('''7''') == '6.876'\nassert solution('''9''') == '8.700'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''5 15\n5 5 5 5 5\n''') == '2'\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 16\n5 5 5 5 5''') == '1'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\nassert solution('''5 36\n5 5 5 5 5''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 3 1 1 2\\n4 2 1 4 2\\n2 1 3 4 2\\n1 2 1 4 2\\n1 1 1 1 1\\n1 1 1 1 1') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10') == '2'\nassert solution('5 16\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5') == '-1'\nassert solution('5 15\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '2'\nassert solution('1 1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 1 1\\n') == '1 1 2'\nassert solution('3 4\\n1 2 1\\n') == '1 1 2'\nassert solution('10 4\\n1 3 1 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('10 4\\n1 3 1 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('10000000 2\\n10000000\\n') == '10000000'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 1 2 1 1 1 1\\n') == '1 1'\nassert solution('15 2\\n1 3 1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 3 1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '1 1'\nassert solution('''5 6\n1 2 2 2 3 3''') == '1 3 2'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1\n''') == '1 1'\nassert solution('''9 4\n1 3 1 3 10 3 7 7 12 3\n''') == '1 3 1 3'\nassert solution('''4 5\n1 2 3 4 5\n''') == '4 4'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 3 1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '1 1'\n'''\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1 2 3\"\nassert solution(\"10 4\") == \"7 3 1 3\"\nassert solution(\"15 2\") == \"1 1\"\nassert solution(\"1 2 1 1 1 2 1 1 2 1 2 1 1 1\") == \"1 1\"\nassert solution(\"1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2 1 1') == '1 1'\nassert solution('5 2\\n1 1 2 2 1') == '1 1'\nassert solution('15 2\\n
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4') == '1 3'\nassert solution('1 10') == '1 1'\nassert solution('7 2') == '1 3'\nassert solution('1 2 1 1 1 2 1 1 2 1 2 1 1 1 1') == '1 1'\nassert solution('1 2 3 4') == '1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '1 3 1 3 10 3 7 7 12 3'\nassert solution('15 2') == '1 3 1 3 10 3 7 7 12 3'\nassert solution('1 2 1 1 1 2 1 1 2 1 2 1 1 1 1') == '1 1'\nassert solution('1 3 1 3 10 3 7 7 12 3') == '7 3 1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 3 1 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 3 1 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'\n\n\"\"\"\n\n\"\"\"\nSolution notes:\n    The idea is to traverse the given matrix in alternating directions, from the top-left corner to the bottom-right corner. The problem is that the sequence should contain all the numbers in the matrix in order from top to bottom and left to right.\n    The solution can be obtained by considering each cell as a new \"stop\". The traversal starts from the top-left corner and covers the whole matrix, there are two options for every \"stop\":\n    - Skip a cell, the solution is to continue the search starting from the next cell,\n    - Take the value of the cell, the solution is to update the sequence with the new value.\n    The choice of the \"next\" cell depends on the number of stops so far in the sequence.\n    The problem is to ensure that the sequence of stops is always the same.\n    \n    Since the matrix is symmetric, each of the diagonal cells is part of the sequence, each row and each column are also part of the sequence.\n    \n    For each \"stop\" the two options are:\n    - The number of stops so far in the sequence is the same as the number of diagonal cells that have the same value in the matrix.\n    - The number of stops so far in the sequence is one more than the number of diagonal cells that have the same value in the matrix.\n    \n    In the first case the sequence will contain all the numbers in the matrix in order from top to bottom and left to right.\n    In the second case the sequence will contain all the numbers in the matrix in order from top to bottom and left to right plus the new value of the cell.\n    \n    In the first case the sequence will eventually be the same as the matrix, in the second case the sequence will eventually be a subsequence of the matrix.\n    \n    To ensure that the sequence is the same as the matrix, the number of stops must be the same for the top-left and the bottom-right cells.\n    \n    In the first example the number of stops is the same for top-left and bottom-right cells, so the new value of the cell is picked.\n    In the second example the new value of the cell is picked and the sequence is updated.\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\n\nassert solution('''6 1\n3''') == '3'\n\nassert solution('''7 4\n1 2 3 4 5 6 7\n10 9 8 7 6 5 4 3\n8 9 7 6 5 4 3 2\n7 8 9 7 6 5 4 3\n6 7 8 9 7 6 5 4\n5 4 3 2 1''') == '0'\n\nassert solution('''8 4\n1 2 3 4 5 6 7 8\n10 9 8 7 6 5 4 3\n8 9 7 6 5 4 3 2\n7 8 9 7 6 5 4 3\n6 7 8 9 7 6 5 4\n5 4 3 2 1''') == '3'"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\") == \"3\"\nassert solution(\"5 3\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"7 2\\n1 2 3 4 5 6 7\\n10 11 12 13 14 15 16\\n\") == \"2\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"0\"\nassert solution(\"6 1\\n3\") == \"3\"\nassert solution(\"3 3\\n1 1 1\\n2 2 2\") == \"0\"\nassert solution(\"2 1\\n1\") == \"0\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\nassert solution('''8 2\n1 2 3 4 5 6 7 8\n10 11 12 13 14 15 16\n\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 2\n9 9\n10 8\n5 3\n4 3\n\"\"\") == \"5\"\nassert solution(\"\"\"2 4\n1 2 3 4\n10 3 7 3\n\"\"\") == \"0\"\nassert solution(\"\"\"6 1\n3\n6\n2\n5\n1\n4\n\"\"\") == \"3\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''4 1\n10\n1 2 3 4\n''') == '3'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4') == '3'\nprint('All set!')\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3') == '0'\nassert solution('2 4\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '3'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '0'\nassert solution('4 3\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '3'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '5'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xxxx') == 0\nassert solution('xxoxx') == 0\nassert solution('33xxx') == 1\nassert solution('xxOxx') == 1\nassert solution('xxxxxxxxxx') == 8\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxx\") == 0\nassert solution(\"xxxxxx\") == 0\nassert solution(\"xxxxxx\") == 0\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xxoxx\") == \"x\"\nassert solution(\"xxxiii\") == 1\nassert solution(\"xxoxxiii\") == \"x\"\nassert solution(\"xxxxxxxxxx\") == 8\n\n\n\n'''\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin = '6\\nxxxiii\\n') == '1'\nassert solution(\n    stdin = '5\\nxxoxx\\n') == '0'\nassert solution(\n    stdin = '10\\nxxxxxxxxxx\\n') == '8'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"xxxiii\"\n) == \"1\"\n\nassert solution(\n    \"xxoxx\"\n) == \"0\"\n\n\n\"\"\""
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxxxxxxxx') == '7'\nassert solution('xxxxxx') == '5'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxxxxx\") == 8\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xixxxix') == '8'\nassert solution('xixxxx') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '48'\nassert solution(input()) == '48'\nassert solution(input()) == '48'\nassert solution(input()) == '48'\nassert solution(input()) == '48'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('4') == ''\nassert solution('6') == ''\nassert solution('7') == ''\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == '48'\nassert solution('5') == '105'\nassert solution('3') == '9'\nassert solution('100') == '100'\nassert solution('10000') == '10000'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '48'\nassert solution('8') == '512'\nassert solution('12') == '1024'\nassert solution('20') == '4096'\nassert solution('30') == '8192'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(4) == 48\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1000\") == \"\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(4) == \"48\"\nassert solution(2) == \"12\"\nassert solution(3) == \"12\"\nassert solution(3) == \"12\"\nassert solution(4) == \"48\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('9') == '9'\nassert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '11'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == 48\nassert solution('''4\n5\n6\n7''') == 48\nassert solution('''6''') == 48\nassert solution('''123''') == 0\nassert solution('''123\n456\n789''') == 0\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('10 10') =='safe'\nassert solution('100 5') == 'unsafe'\nassert solution('100 30') =='safe'\nassert solution('100 30') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_a) == output_a\nassert solution(input_b) == output_b\nassert solution(input_c) == output_c\nassert solution(input_d) == output_d\nassert solution(input_e) == output_e\n\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('5 5') == 'unsafe'\nassert solution('5 6') == 'unsafe'\nassert solution('3 6') =='safe'\nassert solution('3 2') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('10 100') =='safe'\nassert solution('1 100') == 'unsafe'\nassert solution('1 5') =='safe'\nassert solution('2 10') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"unsafe\"\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('0 0') == 'unsafe'\nassert solution('1 2') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('3 1') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"safe\"\nassert solution(\"4 2\") == \"unsafe\"\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"unsafe\"\nassert solution(\"4 5\") == \"unsafe\"\nassert solution(\"3 2\") == \"safe\"\nassert solution(\"5 4\") == \"safe\"\nassert solution(\"0 0\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 4\") == \"unsafe\"\nassert solution(\"0 0\") == \"safe\"\nassert solution(\"10 2\") == \"safe\"\nassert solution(\"20 0\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('0 0') == 'unsafe'\nassert solution('4 5') == 'unsafe'\nassert solution('0 0') == 'unsafe'\nassert solution('0 1') =='safe'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 6"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == 6\nassert solution('3 4 5\\n') == 6\nprint('Testcases passed.')\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '6'\n'''\n\nimport sys\nassert (solution(sys.stdin.readline().strip()) == '6')\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'\nassert solution('2 3 4') == '6'\nassert solution('2 4 3') == '6'\nassert solution('5 4 3') == '10'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 4') == '6'\nassert solution('4 3 3') == '12'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n\"\"\"\n\n\"\"\"\nExplanation\nThe area of a triangle is equal to (\u2220AB\u00d7BC)/2. \n\nThe inputs are:\n\u2220AB = \u2220BC = \u2220CA = 90\u00b0\n\u2220AB = \u2220BC = \u2220CA = \u2220AC = 180\u00b0\n\u2220AB = \u2220BC = \u2220CA = \u2220AC = \u2220BC = 90\u00b0\n\n\u2220AB = \u2220BC = \u2220CA = \u2220AC = \u2220BC = 90\u00b0\n\u2220AB = \u2220BC = \u2220CA = \u2220AC = \u2220BC = \u2220CA = \u2220AC = \u2220BC = 180\u00b0\n\nSo, the area is 180\u00b0.\n\"\"\"\n\nfrom math import cos, pi"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('1 2 3') == '6'\nassert solution('1 2 1') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"6\"\nassert solution(input(\"3 4 5\")) == \"6\"\nassert solution(input(\"3 4 5\\n3 4 5\")) == \"6\"\nassert solution(input(\"1 2 3\\n3 4 5\")) == \"6\"\nassert solution(input(\"1 2 3\\n4 5 6\")) == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('4 3 5') == '6'\nassert solution('5 4 3') == '6'\nassert solution('5 5 5') == '15'\nassert solution('5 5 5') == '15'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"3 4 5\") == \"6\"\nassert solution(\"-1 -2 -3\") == \"-6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"-1 -2 -3\") == \"-6\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 2') == '4'\nassert solution('2 4 5') == '1'\nassert solution('2 5 7') == '2'\nassert solution('10 10 2') == '4'\nassert solution('5 4 10') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 10') == '4'\nassert solution('100 2 10') == '8'\nassert solution('1 2 100') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 11 4') == '4'\nassert solution('2 11 4') == '8'\nassert solution('1 1 1') == '1'\nassert solution('2 1 1') == '4'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 3 1') == '2'\nassert solution('1 2 2') == '0'\nassert solution('1 0 1') == '0'\nassert solution('1 1 0') == '0'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('5 1 8') == '5'\nassert solution('7 1 2') == '6'\nassert solution('7 1 1000000000') == '4'\nassert solution('5 9 1000000000') == '4'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 5') == '2'\nassert solution('0 1 5') == '0'\nassert solution('0 0 1') == '1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 11 4\") == \"4\"\nassert solution(\"10 9 10\") == \"10\"\nassert solution(\"2 10 2\") == \"4\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('3 4') == '12'\nassert solution('3 4') == '12'\nassert solution('10 15') == '300'\nassert solution('10 100') == '1000'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"9 9\") == \"81\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 3\") == \"9\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == 10\nassert solution('1 5') == 5\nassert solution('3 2') == 6\nassert solution('1 1') == 1\nassert solution('100 100') == 10000\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 1') == '2'\nassert solution('2 0') == '0'\nassert solution('1 1') == '1'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\"\nprint(\"Test 1 passed.\")\n'''\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == 10\nprint(solution('2 5'))\nassert solution('1 100') == 100\nprint(solution('1 100'))\nassert solution('1 1000') == 1000\nprint(solution('1 1000'))\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 2') == '1'\nassert solution('100 1') == '100'\nassert solution('10 4') == '40'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == 10\nassert solution('1 2') == 2\nassert solution('-10 -5') == -5\nassert solution('10 -5') == -5\nassert solution('0 0') == 0\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 10 5\") == \"10\"\nassert solution(\"3 10 10\") == \"30\"\nassert solution(\"3 10 15\") == \"30\"\nassert solution(\"3 10 10\") == \"30\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split(' ')[2]"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '10'\nassert solution('1 2 10') == '10'\nassert solution('2 1 1') == '5'\nassert solution('2 1 6') == '5'\nassert solution('3 2 2') == '5'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A B T\") == \"10\"\nassert solution(\"1 2 3\") == \"10\"\nassert solution(\"20 25 35\") == \"150\"\nassert solution(\"5 3 7\") == \"110\"\nassert solution(\"10 4 10\") == \"300\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"2 5 7\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"2 4 1\") == \"8\"\nassert solution(\"8 3 2\") == \"5\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"3 4 2\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n500 600') == \"OK\"\nassert solution('7\\n50 50') == \"OK\"\nassert solution('7\\n5 6') == \"OK\"\nassert solution('7\\n49 500') == \"OK\"\nassert solution('7\\n48 99') == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n'''\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n500 600\\n') == 'OK'\n\n\"\"\"\n\nK = int(input())\nA, B = map(int, input().split())"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n500 600') == \"OK\"\nassert solution('4\\n500 600') == \"OK\"\nassert solution('7\\n50 50') == \"OK\"\nassert solution('7\\n501 600') == \"NG\"\nassert solution('5\\n500 600') == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == \"OK\"\nassert solution('7') == \"OK\"\nassert solution('500 600') == \"OK\"\nassert solution('7 7') == \"OK\"\nassert solution('500 600') == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('5\\n500 600') == 'NG'\nassert solution('10\\n500 600') == 'OK'\nassert solution('7\\n4 5') == 'NG'\nassert solution('9\\n1 1') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nprint('Test successful!')\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == str(solution(input()))\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666666667'\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '2.6666666667'\nassert solution('3 3') == '3.3333333333'\nassert solution('0 0') == '0'\nassert solution('10 0') == '10'\nassert solution('0 10') == '10'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0 0') == 0\nassert solution('0 1') == 0\nassert solution('1 0') == 0\nassert solution('1 1') == 0\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"6 3 2\") == \"1\"\nassert solution(\"14 10 5\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('10 4 3') == '2'\nassert solution('2 1 5') == '1'\nassert solution('1 4 2') == '3'\nassert solution('10 4 5') == '5'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('3 4 2') == '1'\nassert solution('9 100 999') == '99'\n'''\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2\") == \"1\"\nassert solution(\"3 4 5\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 4 5\") == \"2\"\nassert solution(\"9 7 9\") == \"2\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('1 1 1') == '0'\nassert solution('6 4 3') == '1'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\") == \"1\"\nassert solution(\"10 3 6\") == \"5\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"7 1 1\") == \"4\"\nassert solution(\"2 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 5\") == 1\nassert solution(\"3 3 3\") == 0\nassert solution(\"3 3 2\") == 2\nassert solution(\"2 3 2\") == 1\nassert solution(\"2 3 1\") == 2\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[3]\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 3 2\") == \"0\"\nassert solution(\"3 2 1\") == \"0\"\nassert solution(\"5 6 7\") == \"3\"\nassert solution(\"2 5 4\") == \"2\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n3 1 2\") == '3'\nassert solution(\"3 1 2\\n3 1 2\") == '0'\nassert solution(\"2 1 3\\n3 1 2\") == '2'\nassert solution(\"3 1 2\\n1 3 2\") == '2'\nassert solution(\"1 2 3\\n2 1 3\") == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('4 2 1') == '4'\nassert solution('4 3 2 1') == '2'\nassert solution('5 4 3 2 1') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 3 2\\n3 1 2\\n\") == \"3\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n\") == \"0\"\nassert solution(\"5\\n1 3 2 4 5\\n3 1 2 4 5\\n\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"5 4 3\") == \"2\"\nassert solution(\"1 2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"3\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 2\\n3 1 2\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1 2\n2 1''') == '1'\nassert solution('''2\n2 1\n1 2''') == '1'\nassert solution('''3\n1 2 3\n2 1 3\n3 1 2''') == '2'\nassert solution('''4\n1 2 3 4\n2 1 4 3\n3 1 2 4\n4 1 2 3''') == '3'\nassert solution('''5\n1 2 3 4 5\n2 1 4 5 3\n3 1 2 5 4\n4 1 2 3 5\n5 1 2 4 3''') == '4'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 2 3') == '-1'\nassert solution('3 1 2') == '2'\nassert solution('1 3 2') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2\\n3 1 2\\n') == '3'\nassert solution('2 3 1\\n3 1 2\\n') == '3'\nassert solution('2 4 3\\n4 3 2\\n') == '0'\nassert solution('3 3 3\\n3 3 2\\n3 2 3\\n') == '0'\nassert solution('3 4 2\\n4 3 2\\n4 2 3\\n') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 1 3 4 5\") == \"3\"\nassert solution(\"3 4 2 1 5\") == \"3\"\nassert solution(\"2 3 1 4 5\") == \"5\"\nassert solution(\"1 3 2 4 5\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AAAA') == 'AAAA'\nassert solution('AACGT') == 'ACGT'\nassert solution('AGCCTA') == 'AGCCTA'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'AT'\nassert solution('ACGT') == 'ACGT'\nassert solution('ATCODER') == 'AT'\nassert solution('ATCODER') == 'AT'\nassert solution('ATCODER') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('CODE') == 'C'\nassert solution('CCODER') == 'C'\nassert solution('CODER') == 'C'\nassert solution('CODER') == 'C'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATC') == 'AT'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATC') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AATCODER') == 'ATC'\nassert solution('ATTACGTTGAGATACGGAAATCCAGTACGAGTTCCTGAGAACCGTTTCGGAATCTGACGAGTACGACGCTTTCGTCAGATATAGCAGCGTCGGTCGACGGGTGGTCTTTT') == 'TTT'\nprint('Test success!')"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('AACGTTTT') == 'ACG'\nassert solution('ACGT') == 'ACG'\nassert solution('ACGTTCGT') == 'TCG'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"GCCTGCGCTCTTCCTAAGCCGTCTTCCTGTGGCTTTCCCTTGCTGCCCTTCCTGTGTGCTTCTCTTGCTGCCCTTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGCCCTTCCTGTGGCTTCCTGTGGCTTTCCCTTGCTGCCCTTCCTGTGGCTTCCTTGGCTTCCTGTGGCTTCCTGTGGCTTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGGCGGCGTTCGTGGTCCTTCCCTTGCTGG"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('TTTTTTTT') == ''\nassert solution('GG') == 'GG'\nassert solution('A') == 'A'\nassert solution('TT') == 'TT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('CATTAAACCCACCCC') == 'AAACCCC'\nassert solution('ACGTACGTACGT') == 'ACGT'\nassert solution('AGTATTTTTTTTTTGATTG') == 'GATTG'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11') == '9'\nassert solution('101') == '1'\nassert solution('10001') == '1'\nassert solution('100100') == '2'\nassert solution('100000000') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('3') == None\nassert solution('22') == None\nassert solution('100') == None\nassert solution('10001') == None\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(9)\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('14') == '8'\nassert solution('5') == '2'\nassert solution('12') == '4'\nassert solution('17') == '5'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11\") == 9\nassert solution(\"\") == 0\nassert solution(\"10\") == 0\nassert solution(\"0\") == 0\nassert solution(\"2\") == 1\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == 5\nassert solution('2 2 2 3 4 5') == 7\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == 13\nassert solution('2 3 3 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 7 8 8 8 8 8 9 10 11') == 19\nassert solution('2 2 3 3 4 4 5 5 5 5 6 6 6 6 7 7 7 7 7 7 8 8 8 8 8 8 9 10 11') == 18\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11) == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"1234\") == \"5\"\nassert solution(\"12345\") == \"5\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n\n\"\"\"\n    ) == \"\"\"9\"\"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdef') == 'hcfhfc'\nassert solution('abcde') == 'hcthct'\nassert solution('abcde') == 'hcthct'\nassert solution('fghij') == 'fcgjfh'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin)\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('abcdef') == 'abcdh'\nassert solution('abcdefghijklm') == 'abcdhijklm'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cupofcoffee') == 'hofoetae'\nassert solution('cupofhottea') == 'hottea'\nassert solution('hello') == 'helloe'\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cufohefeae') == 4\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cupofcoffee') == 'cuhofcoffe'\nassert solution('cupofhottea') == 'cuhotteh'\nassert solution('yoyo') == 'yoyo'\nassert solution('xoyoyo') == 'yoyo'\nassert solution('yyyo') == 'yoyo'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cuppf') == 'cuppht'\nassert solution('halo') == 'halot'\nassert solution('hil') == 'hilt'\nassert solution('uuppf') == 'uuppht'\nassert solution('uopf') == 'uopth'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('hippopotamus') == 'hippothottamu'\nassert solution('hippopotamus') == 'hippothottamu'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cupofcoffee') == 4\nassert solution('cupofhottea') == 5\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7') == '5 6 7 8 9'\nassert solution('5 7') == '5 6 7 8 9'\nassert solution('10 0') == ''\nassert solution('11 0') == '11'\nassert solution('1 2') == ''\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 7\\n') == '5 6 7 8 9'\nassert solution('5 3\\n') == '5'\nassert solution('1 1\\n') == '1'\nassert solution('0 0\\n') == ''\nassert solution('10 10\\n') == '9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\n\nassert solution('''3 4\n''') == '5'\n\nassert solution('''5 1\n''') == '5'\n\nassert solution('''10 1\n''') == '5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\n'''\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('1 1 1 1 1 1 1 1 1') == ''\nassert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6 7 8 9 1') == '1 3 4 5'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 7'''\n) == '5 6 7 8 9'\nassert solution(\n'''1 2 3 4 5 6 7 8 9'''\n) == ''\nassert solution(\n'''0 10000000 1000000000'''\n) == ''\nassert solution(\n'''3 2'''\n) == '2'\nassert solution(\n'''0 0'''\n) == ''\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"35\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"-5\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('25') == \"No\"\nassert solution('30') == \"Yes\"\nassert solution('-20') == \"No\"\nassert solution('15') == \"No\"\nassert solution('45') == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"29\") == \"No\"\nassert solution(\"16\") == \"Yes\"\nassert solution(\"8\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-3\") == \"No\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"30\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('25') == \"No\"\nassert solution('-20') == \"Yes\"\nassert solution('0') == \"No\"\nassert solution('80') == \"Yes\"\nassert solution('-70') == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n''') == 'Yes'\nassert solution('''4\n''') == 'No'\nassert solution('''-1\n''') == 'Yes'\nassert solution('''-4\n''') == 'Yes'\nassert solution('''42\n''') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"30\") == \"Yes\"\n\nprint('Test1:'+ str(solution(\"25\") == \"No\"))\nprint('Test2:'+ str(solution(\"30\") == \"Yes\"))\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"18\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"-10\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\nassert solution('-25') == 'Yes'\nassert solution('100') == 'Yes'\nassert solution('-100') == 'No'\nassert solution('30') == 'Yes'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 2\n1 2\n5 5\n1 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n3 2\n1 2\n5 5\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n5 5\") == \"1\"\nassert solution(\"2 3\\n1 2\\n5 5\") == \"2\"\nassert solution(\"3 4\\n1 2\\n3 4\\n1 2\") == \"0\"\nassert solution(\"10 10\\n-10 -10\\n10 10\") == \"1\"\nassert solution(\"10 1\\n10 1\\n-10 -10\") == \"0\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"-2 -1 1 2\") == \"2\"\nassert solution(\"2 -1 1 2\") == \"1\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n2 3\n4 5\n6 7\n8 9''') == '3'\nassert solution('''3 2\n1 2\n1 2\n1 2''') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('-2 8\\n5 5') == '1'\nassert solution('3 2\\n1 2\\n5 5') == '1\\n1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8') == '1\\n1\\n1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n-1 8') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 2\") == \"\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('2 3\\n1 2') == '0'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-1 -4''') == '2'\nassert solution('''3 2\n1 2\n5 5\n-1 -4''') == '2'\nassert solution('''3 2\n1 2\n5 5\n-2 -1''') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n-2 8') == '1'\nassert solution('2 1\\n0 1') == '1'\nassert solution('2 1\\n0 1\\n5 5') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"2311\") == \"Bad\"\nassert solution(\"4123\") == \"Good\"\nassert solution(\"4123\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'Good'\nassert solution('2') == 'Good'\nassert solution('3') == 'Good'\nassert solution('4') == 'Good'\nassert solution('5') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Good'\nassert solution('1111') == 'Good'\nassert solution('2222') == 'Good'\nassert solution('3776') == 'Good'\nassert solution('1317') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"2222\") == \"Good\"\nassert solution(\"222222\") == \"Bad\"\nassert solution(\"22222\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3776') == \"Good\"\nassert solution('3034') == \"Bad\"\nassert solution('7637') == \"Good\"\nassert solution('4378') == \"Good\"\nassert solution('7678') == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"3745\") == \"Good\"\nassert solution(\"3776\") == \"Good\"\nassert solution(\"3745\") == \"Bad\"\nassert solution(\"98765\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"3777\") == \"Bad\"\nassert solution(\"377711\") == \"Bad\"\nassert solution(\"377711\") == \"Good\"\nassert solution(\"3777111\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Good\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 4''') == '3.5'\n'''\nThe input looks like this:\n\nN\nv_1 v_2\nThis means that you have a pot with 2 ingredients, and there are 3 and 4 ingredients, respectively.\nNext, the first line tells you how many times you will iterate.\nIn each of these iterations, you will take the top 2 ingredients from the pot.\nYou will then put them back in the pot, which will create a new ingredient whose value is (3 + 4) / 2 = 3.5.\nIn this iteration, you will have 2 ingredients in the pot, and the values of the two ingredients are 3 and 4, respectively.\nThe maximum value of this ingredient is 3.5.\nThis is one way to approach the problem, and it is also the only way to approach it.\n\n-----Note-----\nThe way to approach this problem is to find a pattern in the input that you can understand, and write the solution in a very short way.\nThe output should be correctly formatted, and it can be judged by a number of small digits.\nThe input will always be correct.\n'''\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '3.5'\n'''\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4') == '3.5'\n\n'''"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"2\\n3 4\\n2\\n3 4\\n5\") == \"3.5\"\n\n-----Best Practice-----\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n3 4''') == '3.5'\n'''\n\"This is a sample test\"\n\"This is a multiline test\"\n'''\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3 4') == 3.5\nassert solution('3\\n4') == 3.5\nassert solution('3\\n4\\n5') == 2.5\nassert solution('3\\n4\\n5\\n6') == 2\nassert solution('4\\n4\\n4\\n4\\n4') == 3.5\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('2 3') == '3'\nassert solution('5') == '5'\nassert solution('8') == '8'\nassert solution('1 2') == '0.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 4''') == '3.5'\n'''"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '3.5'\nassert solution(input()) == '3.49999'\nassert solution(input()) == '3.49999999'\n\"\"\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n1 2\\n2 5 4\\n3 6') == '14'\nassert solution('4\\n1 2\\n2 5 4\\n3 6\\n4 7') == '14'\nassert solution('5\\n1 2\\n2 5 4\\n3 6\\n4 7\\n5 8') == '14'\nassert solution('6\\n1 2\\n2 5 4\\n3 6\\n4 7\\n5 8\\n6 9') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('1\\n2\\n3\\n4\\n5') == '15'\nassert solution('2\\n2 2\\n2 2') == '8'\nassert solution('1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n3 1 2\n2 5 4\n3 6\n''') == \"14\"\nassert solution(\n'''\n2\n3 1\n2 5\n''') == \"12\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4') == '14'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4') == '14'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4') == '14'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4') == '14'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n5 1 2\n4 8 2\n6 2''') == '50'\nassert solution('''5\n3 1 2 4 3\n7 2 5 5 3\n9 6 7 3 1''') == '56'\nassert solution('''7\n5 3 4 1 6 2 3\n8 7 1 2 3 5 6''') == '205'\nassert solution('''3\n10 4 5\n5 2 4\n5 4 4''') == '60'\n\nprint(solution('''8\n1 2 3 4 5 6 7 8\n5 2 4\n4 3 2\n3 3 4\n2 1 2\n4 4 2\n2 3 4\n4 5 1\n3 6 2'''))\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3\\n1\\n1\\n1') == '0'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3\\n1\\n1\\n1') == '6'\nassert solution('2\\n3 3\\n1 1\\n1 1') == '5'\nassert solution('2\\n3 3\\n1 1\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Takahashi went to an all-you-can-eat buffet with N kinds of dishes and ate all of them (Dish 1, Dish 2, \\ldots, Dish N) once.\\nThe i-th dish (1 \\leq i \\leq N) he ate was Dish A_i.\\nWhen he eats Dish i (1 \\leq i \\leq N), he gains B_i satisfaction points.\\nAdditionally, when he eats Dish i+1 just after eating Dish i (1 \\leq i \\leq N - 1), he gains C_i more satisfaction points.\\nFind the sum of the satisfaction points he gained.\\n') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n2 1 2\n2 5 4\n3 6''') == '15'\nassert solution('''3\n2 1 2\n2 5 4\n3 6''') == '15'\nassert solution('''3\n2 1 2\n3 5 4\n3 6''') == '15'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abcdefg\") == \"abcd\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ABCD\") == \"ABCD\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''50\nzabcdabczc''') == '3'\nassert solution('''20\nzzzzzzzzzzz''') == '9'\nassert solution('''30\nzABCDBABCQ''') == '6'\n'''\n\nimport sys\nassert len(sys.argv) == 2\nN = int(sys.argv[1])\nS = input()\nfor i in range(1, N):\n    if S[i-1:i+2] == 'ABC':\n        print(i-1)\n        exit()\nprint(0)\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ABCABCABCABC') == '3'\nassert solution('ABCABCABCABC') == '4'\nassert solution('ABCABCABCABC') == '5'\nassert solution('ABCABCABCABC') == '6'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('ABC') == ''\nassert solution('ZABCDBABCQ') == '2'\nassert solution('YXWVUTSRQPONMLKJIHGFEDCBA') == '9'\nassert solution('WXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABCYXYWXABC"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ZZABCDBABCQ') == 2\nassert solution('ZABCDBABCQ') == 2\nassert solution('XABCDBABCQ') == 0\nassert solution('ZABCDBABCQQ') == 0\nassert solution('ABAAB') == 2\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nAAABBBCCDD''') == '3'\nassert solution('''10\nAAABBBCCDDDDD''') == '4'\nassert solution('''10\nAAABABAAAB''') == '1'\nassert solution('''10\nAAAABBBB''') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"Z\") == \"\"\nassert solution(\"ZABCDBABCQ\") == \"\"\nassert solution(\"ZABCDBABCQQ\") == \"Q\"\nassert solution(\"ABCDBABCQ\") == \"AB\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''6\nABBcDdA''') == '3'\nassert solution('''7\nAABBbAA''') == '4'\nassert solution('''8\nAABAAABB''') == '6'\nassert solution('''9\nAABAAABBA''') == '5'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\n'''\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == 2\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcd') == 1\nassert solution('abcc') == 2\nassert solution('abcc') == 2\nassert solution('abc') == 3\nassert solution('abbc') == 4\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('OBIRA\\nMASHIKE\\nRUMOI\\nHABORO') == '2'\nassert solution('HABORO\\nMASHIKE\\nRUMOI\\nHOROKANAI') == '2'\nassert solution('HOROKANAI\\nMASHIKE\\nRUMOI\\nHABORO') == '2'\nassert solution('OBIRA\\nHABORO\\nMASHIKE\\nRUMOI\\nHOROKANAI') == '3'\nassert solution('OBIRA\\nHABORO\\nHOROKANAI\\nRUMOI\\nMASHIKE') == '3'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"MASHIKE\") == \"\"\nassert solution(\"MASHIKE OBIRA\") == \"\"\nassert solution(\"MASHIKE OBIRA HOROKANAI\") == \"\"\nassert solution(\"MASHIKE HOROKANAI OBIRA\") == \"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.rstrip('\\n')\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(10 ** 5)\nsys.path.append(\"../../../main\")\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('100 1') == 'No'\nassert solution('1 100') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'No'\nassert solution('1 1') == 'No'\nassert solution('0 0') == 'No'\nassert solution('0 1') == 'Yes'\nassert solution('1 0') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 3') == 'Yes'\nassert solution('0 1') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"7 3\") == \"No\"\nassert solution(\"7 1\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('2 3') == 'No'\nassert solution('6 2') == 'Yes'\nassert solution('6 2') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n1 0\\n2 0\\n0 1\\n0 2\\n1 2\") == \"Yes\"\nassert solution(\"3 3\\n0 0\\n1 0\\n2 0\\n0 1\\n0 2\\n1 2\") == \"No\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\") == \"Yes\"\nassert solution(\"1 1\\n0 0\") == \"Yes\"\nassert solution(\"1 1\\n1 1\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sippuu) == \"Yes\"\nassert solution(toddler) == \"Yes\"\nassert solution(wakefield) == \"Yes\"\nassert solution(wake_field) == \"Yes\"\nassert solution(mugatu) == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cappuccino\") == \"No\"\nassert solution(\"aaaaa\") == \"Yes\"\nassert solution(\"sippuucpp\") == \"Yes\"\nassert solution(\"sippuuaa\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('gipuio') == 'No'\nassert solution('si') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('gipuio') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sippuu') == \"Yes\"\nassert solution('sittttt') == \"No\"\nassert solution('sippuus') == \"Yes\"\nassert solution('spuuuuuiiiiii') == \"Yes\"\nassert solution('sippuuuu') == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"zzzzz\") == \"No\"\nassert solution(\"sippu\") == \"Yes\"\nassert solution(\"sssss\") == \"No\"\nassert solution(\"sippu\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuuu') == 'No'\nassert solution('sippuuy') == 'No'\nassert solution('sippuuuu') == 'No'\nassert solution('sippuuue') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sippuu') == \"Yes\"\nassert solution('cocacola') == \"No\"\nassert solution('sippu') == \"No\"\nassert solution('sippuuu') == \"No\"\nassert solution('sippuu') == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipps') == 'No'\nassert solution('sippus') == 'No'\nassert solution('sippe') == 'No'\nassert solution('sipp') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('asddeeef') == 'No'\nassert solution('sippuus') == 'No'\nassert solution('sippuuus') == 'No'\nassert solution('sippuufuu') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"mfmao\") == \"No\"\nassert solution(\"pppp\") == \"Yes\"\nassert solution(\"pqrst\") == \"No\"\nassert solution(\"qqqq\") == \"Yes\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '1'\nassert solution('4 50') == 'TLE'\nassert solution('3 70') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '4'\nassert solution('4 50') == '4'\nassert solution('7 50') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"1\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\n'''\n'''\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2\\n2 2') == '2'\nassert solution('1 1\\n1 1\\n2 2') == '2'\nassert solution('1 1000\\n1 1000\\n2 1000') == 'TLE'\nassert solution('1 1\\n1 1\\n2 1000') == 'TLE'\nassert solution('1 1000\\n1 1000\\n1 1000') == 'TLE'\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == 4\n\n-----\nInput\n5 10\n1 2\n2 3\n3 4\n4 5\n5 6\nOutput\n3\nExplanation\n\nThe first route takes him home at cost 1.\nThe second route takes him home at cost 2.\nThe third route takes him home at cost 3.\nThus, the cost 3 of the third route is the minimum.\n'''\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == '70'\nassert solution('1 80') == '80'\nassert solution('4 50') == '50'\nassert solution('2 50') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == 'TLE'\nassert solution('1 3') == 'TLE'\nassert solution('2 2') == 'TLE'\nassert solution('5 5') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '4'\nassert solution('4 50') == 'TLE'\nassert solution('') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('3 70\\n3 40\\n1 80\\n4 50\\n') == 'TLE'\nassert solution('3 70\\n3 40\\n1 80\\n4 50\\n') == 'TLE'\nassert solution('3 70\\n3 40\\n1 80\\n4 50\\n') == 'TLE'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 1 2') == '7'\nassert solution('5 0 2') == '5'\nassert solution('1 1 0') == '1'\nassert solution('2 3 4') == '4'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == \"8\"\nassert solution('2 5 10') == \"29\"\nassert solution('2 5 10') == \"29\"\nassert solution('5 10 5') == \"20\"\nassert solution('5 10 5') == \"20\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == 8\nassert solution('1 2 3') == 3\nassert solution('3 2 5') == 8\nassert solution('1 10 12') == 12\nassert solution('100000 3 10') == 9750\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 1 2') == '2'\nassert solution('1 3 3') == '2'\nassert solution('1 2 5') == '3'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('4 2 9') == '8'\nassert solution('2 2 3') == '5'\nassert solution('100 10 2') == '80'\nassert solution('100 9 2') == '80'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 11 1') == '15'\nassert solution('1 1 1') == '3'\nassert solution('0 0 0') == '0'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 1 1') == '0'\nassert solution('10 1 10') == '20'\nassert solution('10 0 10') == '10'\nassert solution('10 10 0') == '10'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8'"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"6 2 1\") == \"5\"\nassert solution(\"7 2 4\") == \"8\"\nassert solution(\"8 2 4\") == \"8\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == '''\n'''\nassert solution('a, b, c') == '''\n'''\nassert solution('a, b, c, d, e, f') == '''\n'''\nassert solution('a, b, c, d, e, f, g') == '''\n'''\nassert solution('a, b, c, d, e, f, g, h, i') == '''\n'''\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n\n''') == '1'\nassert solution('''\n4\nacornistnt\npeanutbomb\nconstraint\nacorns\n\n''') == '0'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"126\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"acornistnt\") == \"1\"\nassert solution(\"peanutbomb\") == \"1\"\nassert solution(\"constraint\") == \"1\"\nassert solution(\"lucidprogramming\") == \"3\"\nassert solution(\"algorithmically\") == \"7\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''dabaddabbb\nbbaaaaaaa\nbbbabbbab\nabaabaaab\naaabbbbb''') == '3'\nassert solution('''ttaggggct\ntgccgagac\ngggacgagct\nctccgagta\ngagagcgtc\ngcgctctag\nctgagctac\ntacgagctg\natgagctgc\nctgcgagct\nctacgagtg\nctctgctag\ncttacgagt\ngggtacgcg\ntgctagttg\ntacgagtcg\ntacgagtcg\ntgctgctag\ngctagttgt\nctctgctag\ntctctctag\ntacgctcag\nctgctgctg\ngcttacgag\ncttctgctc\nctgctcgtc\ntgtacctgc\ntacctgtga\nctctgctag\ntcttacctg\ncttgacctg\nctgcctgca\ntacgtgctg\ntgcgtgatg\ntgctgctag\ngctgctgtc\nctgctcctg\nctgctgctt\ncgtgctctg\ntgctctact\nctctgctga\ntctgctctg\nctgctcctg\ntctgctctg\nctgctcgtc\ntctcgtctg\ntgtgctctg\ntgcgtgatg\ntgctctact\ntgtctctga\ntgctgctct\ncttcttgca\ncgtgtgctg\ngcttgtgct\ncttgcgtga\ntgctctctg\ncttgacctg\ntgtgcttac\nctgcttgta\ntgctgcttc\ntgcgcgtgc\ntgccgagac\nctgctgctg\ncttctgctg\ntgctttatg\nctgcttgtc\nctgctgctg\nctgctgctg\nctctgcttc\ntgctgctct\ntgtctgtac\ntgctcgtct\ntgctctgag\ntcttgctta\ntgtctcgtc\nctctgctta\ntgccgagct\ntgtctgctg\ntgctgctct\nctttgcttc\ncttgctgcc\ntgttgcttt\ngcttgtgct\nctgctgctt\nctgctctct\ntgcgtgatc\ntgtgctcgt\ntgctcttct\ncttgcttct\ncgtgatgct\ntgccgagta\ncttgtgctc\ntgctgcttc\ntgcgctagc\ntgttgcttc\ntcttgtgat\ntgctctatg\ntgttgctct\ncttcgctta\ntgctgcttc\ntgctcttct\ncttcgctta\ntcttgtgat\ntgctcgtgc\ntgccgagac\ncttcgtgca\ntgtgctgct\ntgttgtgct\ncttcgctta\ntgttctgtc\ntgcgcttct\ntgtttcttc\ncttgctgct\ncttcgctta\ntcttgtgat\ntgctcgtct\ntgttgcttg\ncttcgcttg\ntgctcttct\ntgctcgtct\ntgtttcttg\ncttcgctta\ntgtgctgct\ntgtttcttc\ncttgctgct\ntgcttgtct\ntgcgctatg\ntgcgtgctg\ntgcgtgatg\ntgctgctct\ntgctgctct\ncttgctgct\ntgcgtgatg\ntgcttgtct\ntgcttcttg\ncttgctctt\ntgtgcttct\ntgctcttct\ntgtttcttg\ncgtgcttct\ntgcgtgatg\ntgttgcttc\ncttgtgctt\ntgtttcttg\ncttgctctt\ntgtttcttg\ncgtgcttct\ntgttgcttc\ntgttgcttg\ncttgctctg\ntgtttctct\ntgtttcttg\ncttgctctt\ntgccgagct\ntgcgtgatg\ntgttgcttc\ntgccgagta\ntgcgtgatg\ntgtttcttg\ntgccgagtt\ntgcgtgatg\ntgttgcttc\ntgccgagtc\ntgcgtgatg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgttgcttg\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgttgcttg\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgttgcttg\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgttgcttg\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgagct\ntgttgcttg\ntgttgcttc\ntgccgag"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('acornistnt') == '1'\nassert solution('peanutbomb') == '1'\nassert solution('constraint') == '1'\n\nassert solution('acornistnt') == solution('acornistnt')\nassert solution('peanutbomb') == solution('peanutbomb')\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('constraint\\nacornistnt\\npeanutbomb\\n') == '1'\nassert solution('constraint\\nacornistnt\\npeanutbomb\\npeanutbomb\\n') == '2'\nassert solution('constraint\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '3'\nassert solution('constraint\\nacornistnt\\npeanutbomb\\npeanutbomb\\npeanutbomb\\n') == '6'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('112123123412345$\\dots$') == '4'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '0'\nassert solution
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1\n3\n20\n38\n56\n''') == '1 2 5 2 0'\nassert solution('''\n4\n2132\n506\n999999999\n1000000000\n''') == '8 2 9 8'\nassert solution('''\n2\n5\n1\n2\n''') == '0 1'\nassert solution('''\n8\n2132\n506\n999999999\n1000000000\n''') == '8 2 9 8'\nassert solution('''\n4\n2132\n506\n999999999\n1000000000\n''') == '8 2 9 8'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('1$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('2$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('3$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('4$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 1\nassert solution('4') == 0\nassert solution('5') == 0\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n1\n1\n1\n1\n\"\"\"\n) == \"1111111111\"\n\nassert solution(\n\"\"\"\n1\n3\n20\n38\n56\n\"\"\"\n) == \"20215\"\n\nassert solution(\n\"\"\"\n1\n2132\n506\n999999999\n1000000000\n\"\"\"\n) == \"206\"\n\nassert solution(\n\"\"\"\n1\n3\n20\n38\n56\n\"\"\"\n) == \"206\"\n\nassert solution(\n\"\"\"\n1\n2132\n506\n999999999\n1000000000\n\"\"\"\n) == \"206\""
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"112123123412345$\\dots$\") == \"11212312341234512345612345671234567812345678912345678910\"\nassert solution(\"1$\\dots$\") == \"1123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"112123123412345$\\dots$\") == \"1\", \"The only difference between the easy and the hard versions is the maximum value of $k$.\"\nassert solution(\n\"1$\\dots$\") == \"1\", \"If a block consists of all consecutive integers, the first element should be 1, the second \u2014 2, the third \u2014 3, and so on.\"\nassert solution(\n\"1$\\dots$1$\\dots$\") == \"2\", \"The only difference between the easy and the hard versions is the maximum value of $k$.\"\nassert solution(\n\"1$\\dots$1$\\dots$1$\\dots$\") == \"3\", \"The only difference between the easy and the hard versions is the maximum value of $k$.\"\nassert solution(\n\"1$\\dots$1$\\dots$1$\\dots$1$\\dots$\") == \"4\", \"The only difference between the easy and the hard versions is the maximum value of $k$.\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\"\nassert solution(\"7 2\\n1 4\\n1 2\\n\") == \"1\"\nassert solution(\"100000 100000\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1'\nassert solution('10 4') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2\\n1 2 1 1 2'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1\\n1 1 1 1 1 1 1 1 1'\nprint(\"tests passed\")\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1\"\nassert solution(\"5 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\nassert solution(\"5 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 5\\n4 6\\n4 7\") == \"3\\n1 1 2 3 2 3 1 3 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 5\\n4 6\\n4 7\\n5 9\\n5 10\") == \"3\\n1 1 2 3 2 3 1 3 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 5\\n4 6\\n4 7\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n\"\"\") == \"2\\n1 2 1 1 2\\n\"\nassert solution(\"\"\"4 2\n3 1\n1 4\n1 2\n\n\"\"\") == \"1\\n1 1 1\\n\"\nassert solution(\"\"\"10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n\"\"\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"\nassert solution(\"\"\"1\n1\n\n\"\"\") == \"1\\n1\\n\"\nassert solution(\"\"\"20 10\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n8 10\n9 10\n9 11\n10 11\n10 12\n11 12\n11 13\n12 13\n12 14\n13 14\n13 15\n14 15\n14 16\n15 16\n15 17\n16 17\n16 18\n17 18\n17 19\n18 19\n18 20\n19 20\n19 21\n20 21\n20 22\n21 22\n20 23\n22 23\n20 24\n23 24\n20 25\n22 25\n20 26\n23 26\n20 27\n22 27\n20 28\n23 28\n20 29\n22 29\n20 30\n23 30\n20 31\n22 31\n20 32\n23 32\n20 33\n22 33\n20 34\n23 34\n20 35\n22 35\n20 36\n23 36\n20 37\n22 37\n20 38\n23 38\n20 39\n22 39\n20 40\n23 40\n20 41\n22 41\n20 42\n23 42\n20 43\n22 43\n20 44\n23 44\n20 45\n22 45\n20 46\n23 46\n20 47\n22 47\n20 48\n23 48\n20 49\n22 49\n20 50\n23 50\n20 51\n22 51\n20 52\n23 52\n20 53\n22 53\n20 54\n23 54\n20 55\n22 55\n20 56\n23 56\n20 57\n22 57\n20 58\n23 58\n20 59\n22 59\n20 60\n23 60\n20 61\n22 61\n20 62\n23 62\n20 63\n22 63\n20 64\n23 64\n20 65\n22 65\n20 66\n23 66\n20 67\n22 67\n20 68\n23 68\n20 69\n22 69\n20 70\n23 70\n20 71\n22 71\n20 72\n23 72\n20 73\n22 73\n20 74\n23 74\n20 75\n22 75\n20 76\n23 76\n20 77\n22 77\n20 78\n23 78\n20 79\n22 79\n20 80\n23 80\n20 81\n22 81\n20 82\n23 82\n20 83\n22 83\n20 84\n23 84\n20 85\n22 85\n20 86\n23 86\n20 87\n22 87\n20 88\n23 88\n20 89\n22 89\n20 90\n23 90\n20 91\n22 91\n20 92\n23 92\n20 93\n22 93\n20 94\n23 94\n20 95\n22 95\n20 96\n23 96\n20 97\n22 97\n20 98\n23 98\n20 99\n22 99\n20 100\n23 100\n20 101\n22 101\n20 102\n23 102\n20 103\n22 103\n20 104\n23 104\n20 105\n22 105\n20 106\n23 106\n20 107\n22 107\n20 108\n23 108\n20 109\n22 109\n20 110\n23 110\n20 111\n22 111\n20 112\n23 112\n20 113\n22 113\n20 114\n23 114\n20 115\n22 115\n20 116\n23 116\n20 117\n22 117\n20 118\n23 118\n20 119\n22 119\n20 120\n23 120\n20 121\n22 121\n20 122\n23 122\n20 123\n22 123\n20 124\n23 124\n20 125\n22 125\n20 126\n23 126\n20 127\n22 127\n20 128\n23 128\n20 129\n22 129\n20 130\n23 130\n20 131\n22 131\n20 132\n23 132\n20 133\n22 133\n20 134\n23 134\n20 135\n22 135\n20 136\n23 136\n20 137\n22 137\n20 138\n23 138\n20 139\n22 139\n20 140\n23 140\n20 141\n22 141\n20 142\n23 142\n20 143\n22 143\n20 144\n23 144\n20 145\n22 145\n20 146\n23 146\n20 147\n22 147\n20 148\n23 148\n20 149\n22 149\n20 150\n23 150\n20 151\n22 151\n20 152\n23 152\n20 153\n22 153\n20 154\n23 154\n20 155\n22 155\n20 156\n23 156\n20 157\n22 157\n20 158\n23 158\n20 159\n22 159\n20 160\n23 160\n20 161\n22 161\n20 162\n23 162\n20 163\n22 163\n20 164\n23 164\n20 165\n22 165\n20 166\n23 166\n20 167\n22 167\n20 168\n23 168\n20 169\n22 169\n20 170\n23 170\n20 171\n22 171\n20 172\n23 172\n20 173\n22 173\n20 174\n23 174\n20 175\n22 175\n20 176\n23 176\n20 177\n22 177\n20 178\n23 178\n20 179\n22 179\n20 180\n23 180\n20 181\n22 181\n20 182\n23 182\n20 183\n22 183\n20 184\n23 184\n20 185\n22 185\n20 186\n23 186\n20 187\n22 187\n20 188\n23 188\n20 189\n22 189\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3\\n1 2\\n1 4\\n2 5\\n2 6\\n3 8\\n3 9\\n4 5\\n4 7') == '1 1 1 1 2 2 2 3 3 3'\nassert solution('3 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n3 8\\n3 9') == '1 1 1 1 2 2 2 3 3 3'\nassert solution('10 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '1 1 1 1 2 2 2 3 3 3'\nassert solution('10 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '1 1 1 1 2 2 2 3 3 3'\nassert solution('10 2\\n3 1\\n1 4\\n1 2\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '1 1 1 1 2 2 2 3 3 3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 1') == '1 1 1'\nassert solution('5 2\\n4 1\\n2 3\\n3 1\\n1 4') == '2 1 1 2 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 1') == '1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 1\\n2 2') == '1 1 2 3 2 3 1 3 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2\\n3 2\") == \"2\"\nassert solution(\"2 3\\n1 2\\n3 2\") == \"2\"\nassert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n1 2\\n3 2\") == \"2\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"1\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('1\\n1\\n') == '1 1'\nassert solution('2\\n1 2\\n') == '2 2'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 4 4\n''') == '2 4'\n\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\n\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\n\nassert solution('''1000\n45554\n''') == '111458'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 4 4\n\n''') == '2 4'\n\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n\n''') == '3 8'\n\nassert solution('''7\n4 3 7 1 4 3 3\n\n''') == '3 6'\n\nassert solution('''5\n8 4 2 4 4 8\n\n''') == '3 6'\n\nassert solution('''7\n1 1 8 8 8 4 4 4\n\n''') == '4 7'"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'\nassert solution('2\\n5 5\\n') == '10 9\\n'"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2 4 4\n''') == '2 4'\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\nassert solution('''\n7\n4 3 7 1 4 3 3\n''') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 4 4\n''') == '2 4'\n\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 8'\nassert solution('4\\n1 1 2 2') == '2 4'\nassert solution('1\\n1') == '1'\nassert solution('0\\n0') == '0'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('15\\n13 10 9 7 5 8 4 6 2 1') == '14 21'\nassert solution('1\\n5') == '0 1'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"\nassert solution(\"3\\n1 1 0\\n\") == \"0 0\\n\"\nassert solution(\"2\\n0 0\\n\") == \"0 0\\n\"\n\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2 4 5'\n\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\n\nassert solution('''5\n7 14\n4 9\n3 2\n6 11\n1 5\n10 10\n''') == '6 7 8 9 10'\n\nassert solution('''5\n7 8\n4 9\n3 2\n6 7\n1 5\n10 10\n''') == '6 7 8 9 10'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('2\\n3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('3\\n3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('2\\n3\\n3 1\\n1 2\\n') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n2 3 1\\n1 3 2\\n3 2 1') == '3 1 2'\nassert solution('2 3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('1 2\\n2 3\\n1 3\\n') == '1 3 2'\nassert solution('3 1\\n1 2\\n2 3\\n') == '1 2 3'\nassert solution('1 2\\n2 3\\n3 1\\n') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n2 3\\n3 1\\n1 2') == '3 1 2'\nassert solution('3\\n2 3\\n1 4\\n1 2') == '3 1 2'\nassert solution('1\\n1\\n1 1\\n1 1') == '1'\nassert solution('3\\n3\\n1 4\\n1 2') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 1 2 4 5\"\nassert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5\"\nassert solution(\"5\\n3 5\\n3 4\\n3 2\\n2 4\\n4 1\\n1 2\\n1 3\\n\") == \"3 2 4 1 5\"\n\n\n\"\"\""
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1\n1 2\n2 3''') == '3 1 2'\nassert solution('''1\n3\n1 2\n2 3''') == '3 1 2'\nassert solution('''2\n2 1\n1 3\n2 3\n3 1\n\n''') == '1 3 2'\nassert solution('''3\n1\n2\n3\n1 2\n\n''') == '1 2 3'\nassert solution('''3\n1\n1\n1\n1\n\n''') == '1'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 1 2 4 5'\nassert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 1 2 4 5'\nassert solution('3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('3\\n3 1\\n1 2\\n') == '3 1 2'\nassert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 1 2 4 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5\\n5\") == \"\"\nassert solution(\"5\\n5\\n5\") == \"\"\nassert solution(\"5\\n5\\n5\\n5\") == \"\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n3\\n5\\n2\\n4\\n1\\n2') == '3 1 2 4 5'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '1'\nassert solution('100\\n3688 2463 1146 8436 4574 1888 3829 9842 984 3566 7974 9791 9934 7988 9989 99810 9815 9813 9818 9811 9819 9810 9821 9822 9817 9813 9826 9827 9820 9827 9829 9830 9822 9830 9834 9833 9835 9835 9837 9838 9832 9839 9840 9839 9841 9839 9843 9845 9846 9847 9849 9850 9848 9851 9852 9847 9853 9854 9847 9855 9856 9857 9859 9860 9860 9865 9867 9868 9869 9870 9869 9871 9872 9873 9874 9875 9876 9877 9878 9879 9880 9880 9879 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 9880 98809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880988098809880"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\") == \"3\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\") == \"1\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"10\"\nassert solution(\"10\\n1 1000 10000 10 100 1000000000\") == \"1\"\nassert solution(\"100\\n10\") == \"10\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 10 17 12 15 2''') == '3'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '10'\nassert solution('''6\n1 1000 10000 10 100 1000000000''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('6\\n1 9999999999 9999999999 9999999999 9999999999 9999999999') == '1'\nassert solution('7\\n1 99999999999 99999999999 99999999999 99999999999 99999999999') == '2'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == '-1'\nassert solution('1\\n0') == '-1'\nassert solution('2\\n5\\n1\\n2') == '-1'\nassert solution('2\\n5\\n1\\n3') == '-1'\nassert solution('2\\n5\\n1\\n4') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\") == \"4\\n-1\\n5\\n2\\n0\\n1\"\nassert solution(\"\"\"15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\n16 7 5 2\n20 5 7 3\"\"\") == \"4\\n0\\n5\\n2\\n0\\n1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('15\\n15\\n15\\n15\\n16\\n7\\n5\\n2') == '4'\nassert solution('10\\n15\\n3\\n2') == '-1'\nassert solution('10\\n15\\n3\\n2\\n8\\n2') == '0'\nassert solution('10\\n15\\n3\\n2\\n8\\n2\\n8\\n2') == '1'\nassert solution('10\\n15\\n3\\n2\\n8\\n2\\n8\\n2\\n8\\n2') == '2'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == result_for_input(input)\n\n\"\"\"\n\nimport sys\nsys.stdin = open(\"in/10-number-of-turns-to-win-game.in\")"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asd') == '-1'\nassert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == '-1'\nassert solution('1 1 1 1') == '0'\nassert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '5'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a?b?c?c?c?c?c\") == \"2835\"\nassert solution(\"????????\") == \"0\"\n\n\n\nn = int(stdin.readline())\ns = stdin.readline().strip()\n\nn = len(s)\nf = [[[0 for i in range(n)] for j in range(n)] for k in range(n)]\n\nfor i in range(n):\n    f[i][i][i] = 1\n\nfor i in range(n - 1):\n    if s[i] == '?':\n        f[i][i + 1][i + 1] = f[i][i + 1][i] + f[i][i][i + 1] + 1\n\nfor i in range(n - 2, -1, -1):\n    for j in range(i + 1, n):\n        if s[i] == '?':\n            for k in range(i + 1, j + 1):\n                f[i][j][k] = f[i][j][k] + f[i][k][j] + f[i][k][k]\n\nprint(sum([f[i][j][k] % (10 ** 9 + 7) for i in range(n) for j in range(i, n) for k in range(j, n)]) % (10 ** 9 + 7))"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\nassert solution(\"cccbbbaaa\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\nac?b?c\n''') == '24'\nassert solution('''\n7\n???????\n''') == '2835'\nassert solution('''\n9\ncccbbbaaa\n''') == '0'\nassert solution('''\n5\na???c\n''') == '46'\nassert solution('''\n8\naaa???\n''') == '2998'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''0'''\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6\nac?b?c\n''') == '24'\n\nassert solution('''\n7\n???????\n''') == '2835'\n\nassert solution('''\n9\ncccbbbaaa\n''') == '0'\n\nassert solution('''\n5\na???c\n''') == '46'\n\nassert solution('''\n4\n??a?\n''') == '4'"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\n\n\n\"\"\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\nassert solution(\"aabcbc\") == 2\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 0\") == \"16\"\nassert solution(\"1 2 3 4 5\") == \"18\"\nassert solution(\"1 2 8\") == \"5\"\nassert solution(\"1 3 10\") == \"16\"\nassert solution(\"1 4 7\") == \"17\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n2 3 5\n2 1 1\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15''') == '18'\n\nassert solution('''6 0\n1 3 3 7 9 10\n2 3 5\n2 1 1\n2 2 1\n3 4 3\n4 5 5\n5 6 10\n''') == '22'\n\nassert solution('''7 0\n1 3 3 7 9 10 11 12\n2 3 5\n2 1 1\n2 2 1\n3 4 3\n4 5 5\n5 6 10\n5 7 10\n6 7 11\n7 8 10\n8 9 10\n9 10 11\n''') == '32'"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '5'\nassert solution('3 4 5') == '15'\nassert solution('4 2 3 1') == '18'\nassert solution('5 4 1 2 3 4 5') == '18'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 0\\n1 2 3 4\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15') == '5'\nassert solution('5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15') == '18'\nassert solution('4 0\\n1 3 3\\n2 3 5\\n2 1 1') == '16'"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\""
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"12\"\n\n'''"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 3 3\\n2 3 5\\n2 1 1\\n') == '5'\nassert solution('4 0\\n1 3 3 7\\n2 3 5\\n2 1 1\\n') == '16'\nassert solution('5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '18'\nassert solution('7 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7') == '24'\nassert solution('3 5\\n1 3 2\\n2 3 1\\n3 1 4\\n1 4 2\\n3 1 5\\n1 2 1') == '20'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1 2 3\n2 1 1\n2 3 5''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n2 3 5\n2 1 1\n\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\n''') == '18'\n\n'''\n\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '14'\n\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n\n\n\"\"\"\n\nfrom functools import lru_cache\n\nfrom typing import List, Dict, Tuple\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 2 1\\n0 9\\n0 4\\n') == '13'\nassert solution('1 2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n0\\n1\\n1\\n1\\n0\\n0') == '45'\nassert solution('1\\n0\\n0\\n1\\n1\\n1\\n0\\n0') == '-1'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '-1'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '-1'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '45'\nassert solution(input()) == '45'\nassert solution(input()) == '45'\nassert solution(input()) == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\n''') == '14'\nassert solution('''10 1 1\n0 9\n0 5\n\n''') == '45'\nassert solution('''10 1 1\n0 9\n1 5\n\n''') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n0') == '1'\nassert solution('1\\n9\\n5\\n1') == '-1'\nassert solution('1\\n0\\n0\\n1\\n2\\n3') == '6'\nassert solution('1\\n2\\n2\\n2\\n2\\n2') == '8'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2') == '10'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 6') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 2 1') == 'No'\nassert solution('2 1 1') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 8 6\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"\nassert solution(\"9 9 2\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 5') == 'No'\nassert solution('5 7 5') == 'Yes'\nassert solution('5 7 5') == 'No'\nassert solution('5 7 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 7') == 'No'\nassert solution('5 7 7') == 'No'\nassert solution('5 7 5') == 'Yes'\nassert solution('5 1 5') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 2 4\") == \"No\"\nassert solution(\"1 1 5\") == \"No\"\nassert solution(\"5 1 5\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n\") == \"Yes\"\nassert solution(\"2 1 3\\n\") == \"No\"\nassert solution(\"3 2 1\\n\") == \"Yes\"\nassert solution(\"3 2 3\\n\") == \"No\"\nassert solution(\"3 3 3\\n\") == \"Yes\"\n\n-----Best-Case------\nO(1)\n\n------Worst-Case------\nO(1)\n\n-------\n\n------\nA = 1\nB = 2\nC = 3\n\nD = A * A + B * B\n\nD - B - C = D - 2B - C\n\nD - 2B - C = 0\nD - B - C = D - B - C\nD - 2B = D - B - C\n\nD = B^2 + C^2\n\nD - B^2 = (C^2 + D - B^2) / 2C\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^2)\n\nB = D / 2C\n\nB = sqrt(D - C^2)\n\nB = sqrt(D - C^"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5 7 5\"\"\") == \"\"\"Yes\"\"\"\n\nassert solution(\n\"\"\"7 7 7\"\"\") == \"\"\"No\"\"\"\n\nassert solution(\n\"\"\"4 5 6\"\"\") == \"\"\"No\"\"\"\n\nassert solution(\n\"\"\"7 4 7\"\"\") == \"\"\"No\"\"\"\n\nassert solution(\n\"\"\"5 7 4\"\"\") == \"\"\"Yes\"\"\""
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == 'Yes'\nassert solution('2 2 2') == 'Yes'\nassert solution('5 7 5') == 'Yes'\nassert solution('9 9 9') == 'Yes'\nassert solution('10 10 10') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('2 2 2') == 'Yes'\nassert solution('2 2 3') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 7 7\") == \"No\"\nassert solution(\"4 1 5\") == \"Yes\"\nassert solution(\"4 5 5\") == \"No\"\nassert solution(\"5 7 3\") == \"Yes\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('1\\n12 5\\n1000 2000') == '1'\nassert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('3\\n12 5\\n1000 2000') == '2'\nassert solution('4\\n12 5\\n1000 2000') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2\n12 5\n1000 2000''') == '1'\n\nassert solution(\n'''2\n12 5\n1000 2000''') == '1'\n\nassert solution(\n'''2\n12 5\n1000 2000''') == '1'\n\nassert solution(\n'''2\n12 5\n1000 2000''') == '1'\n\nassert solution(\n'''2\n12 5\n1000 2000''') == '1'"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('3\\n12 5\\n1000 2000 3000\\n') == '1'\nassert solution('5\\n12 5\\n1000 2000 3000 3000 400\\n') == '1'\nassert solution('6\\n12 5\\n1000 2000 3000 3000 400 4000\\n') == '1'\nassert solution('7\\n12 5\\n1000 2000 3000 3000 4000 4000 5000\\n') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n12 5\n1000 2000\n''') == '1'\n\nassert solution('''2\n13 5\n1000 2000\n''') == '2'\n\nassert solution('''2\n15 5\n1000 2000\n''') == '2'\n\nassert solution('''2\n16 5\n1000 2000\n''') == '1'\n\nassert solution('''2\n17 5\n1000 2000\n''') == '1'"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(1)\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == 1\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''3\n12 5\n1000 2000\n10000 5000''') == '2'\n'''"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\\n823 2826\") == \"0\"\nassert solution(\"2\\n12 5\\n1000 2000\\n823 2826\\n823 2826\") == \"0\"\nassert solution(\"2\\n12 5\\n1000 2000\\n823 2826\\n823 2826\\n823 2826\") == \"0\"\nassert solution(\"2\\n12 5\\n1000 2000\\n823 2826\\n823 2826\\n823 2826\\n823 2826\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''6 4''') == '0'\nassert solution('''3 4''') == '0'\nassert solution('''5 6''') == '4'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('3 5') == '2'\nassert solution('2 4') == '2'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 2 1') == ''\nassert solution('1 2 1 1') == ''\nassert solution('1 1') == ''\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '3'\nassert solution('2 3') == '0'\nassert solution('4 6') == '3'\nassert solution('4 0') == '4'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 0\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"10 5\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 1\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"4 1\") == \"2\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACTAC') == '0'\nassert solution('ACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACTACACT"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '''2\n0\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\n1 8\n1 8\n1 8''') == '''2\n0\n3\n0\n3\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8''') == '''2\n0\n3\n0\n3\n3\n3\n3\n3'''\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8''') == '''2\n0\n3\n0\n3\n3\n3\n3\n3\n3\n3'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n'''\n\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3'\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3'\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '''2\n0\n3\n'''\n\nassert solution('''ACACTACG\n3 7\n1 2\n''') == '''2\n0\n3\n'''\n\nassert solution('''ACACTACG\n3 7\n1 3\n''') == '''2\n0\n3\n'''\n\nassert solution('''ACACTACG\n3 7\n1 3\n3 7\n''') == '''2\n0\n3\n'''\n\nassert solution('''ACACTACG\n3 7\n3 4\n2 3\n1 8\n''') == '''3\n0\n3\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\n\"\"\""
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\n\"\"\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == 210\nassert solution('5 4\\n50 100 80 120 80') == 190\nassert solution('5 4\\n50 100 80 120 80\\n50 100 80 120 80') == 110\nassert solution('2 5\\n20 30 40 50') == 0\nassert solution('1 1\\n5 5') == 0\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 3') == '210'\nassert solution('4 1') == '5'\nassert solution('3 7') == '4'\nassert solution('5 3') == '210'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('1 1') == '0'\nassert solution('1 1\\n5 5') == '0'\nassert solution('1 2\\n5 7') == '4'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '210'\nassert solution('3 3') == '0'\nassert solution('5 1') == '10'\nassert solution('1 1') == '0'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n5 3 7\") == \"40\"\nassert solution(\"1 5\\n1 1 1\") == \"0\"\nassert solution(\"10 2\\n6 6\") == \"12\"\nassert solution(\"10 2\\n8 8\") == \"16\"\nassert solution(\"10 2\\n2 2\") == \"0\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('2 4\\n10 100 100') == '110'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('5 2\\n1 2 1 2 2') == '1'\nassert solution('5 2\\n10 100 100 100 100') == '60'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n50 100 80 120 80''') == '210'\nassert solution('''2 2\n100 100''') == '100'\nassert solution('''3 2\n50 100 80''') == '120'\nassert solution('''3 1\n10''') == '10'\nassert solution('''4 2\n10 11 12 13''') == '20'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3') == '210'\nassert solution('1 100') == '100'\nassert solution('10 10') == '100'\nassert solution('1 10') == '100'\nassert solution('1 1') == '100'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 3') == '210'\nassert solution('5 1') == '100'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '210'\nassert solution('10 3') == '95'\nassert solution('3 3') == '15'\nassert solution('20 3') == '200'\nassert solution('5 5') == '40'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 4 3') == '7'\nassert solution('1 5 2') == '5'\nassert solution('1 4 4') == '8'\nassert solution('1 7 7') == '10'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 2') == '7'\nassert solution('1 3 4 4') == '7'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '3'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '6'\nassert solution('1 1 1') == '1'\nassert solution('3 1 4') == '7'\nassert solution('2 1 1') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 3 4''') == '4'\nassert solution('''1 2 3''') == '2'\nassert solution('''1 2 3''') == '2'\nassert solution('''1 10 1''') == '11'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 3 4') == '7'\nassert solution('3 3 4') == '7'\nassert solution('4 3 4') == '7'\nassert solution('100 1 100') == '10'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 10 3\") == \"13\"\nassert solution(\"1 10 1\") == \"4\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"100 3 4\") == \"23\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"1 3 2\") == \"4\"\nassert solution(\"2 3 1\") == \"2\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('3 4 4') == '7'\nassert solution('2 1 1') == '4'\nassert solution('2 2 1') == '3'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 3 4') == '4'\nassert solution('5 6 7') == '7'\nassert solution('5 2 8') == '9'\nassert solution('1 1 2') == '2'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == \"0\"\nassert solution('0 2') == \"0\"\nassert solution('1 2') == \"10\"\nassert solution('3 1') == \"0\"\nassert solution('0 1') == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '0'\nassert solution('10 3') == '10'\nassert solution('0 0') == '0'\nassert solution('4 10') == '10'\nassert solution('100000 100000') == '1000000'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 3\") == \"10\"\nprint(solution(\"3 4\")) # 0\nprint(solution(\"9 1\")) # 10"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 4') == '10'\nassert solution('0 2') == '0'\nassert solution('0 3') == '10'\nassert solution('8 4') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 4') == '10'\nassert solution('0 1') == '0'\nassert solution('0 0') == '0'\nassert solution('9 9') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2,3) == \"0\"\nassert solution(3,4) == \"10\"\nassert solution(0,0) == \"0\"\nassert solution(3,3) == \"0\"\nassert solution(2,2) == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 1\") == \"10\"\nassert solution(\"1 1\") == \"10\"\nassert solution(\"3 6\") == \"0\"\nassert solution(\"2 3\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('4 0') == '10'\nassert solution('1 2') == '0'\nassert solution('9 3') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 0') == '10'\nassert solution('0 0') == '0'\nassert solution('0 1') == '10'\nassert solution('0 10') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4') == '1'\nassert solution('10 5') == '1'\nassert solution('100 9') == '1'\nassert solution('101 3') == '2'\nassert solution('1000 100') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('7 24') == '1'\nassert solution('7 11') == '0'\nassert solution('15 14') == '5'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4') == '1'\nassert solution('10000000 1000') == '1'\nassert solution('1000000000 1000') == '1'\nassert solution('5 9') == '1'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4') == '1'\nassert solution('8 6') == '1'\nassert solution('7 0') == '1'\nassert solution('9 9') == '1'\nassert solution('0 10') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4') == '1'\nassert solution('10 2') == '2'\nassert solution('10 3') == '3'\nassert solution('10 10') == '0'\nassert solution('20 5') == '10'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 4') == '1'\nassert solution('100 7') == '1'\nassert solution('1017 2') == '1'\nassert solution('10170 2') == '1'\nassert solution('10171 2') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"9 9\") == \"0\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"5 7 9\") == \"bust\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"5 7 9\") == \"bust\"\nassert solution(\"6 7 9\") == \"win\"\nassert solution(\"10 11 12\") == \"bust\"\nassert solution(\"13 15 16\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('10 3 2') == 'bust'\nassert solution('1 1 1') == 'win'\nassert solution('2 3 4') == 'win'\nassert solution('3 4 5') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 7 9''') == 'win'\nassert solution('''1 2 3''') == 'bust'\nassert solution('''3 3 3''') == 'win'\nassert solution('''2 2 2''') == 'bust'\nassert solution('''1 1 1''') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == 'win'\nassert solution(input()) == 'bust'\nassert solution(input()) == 'win'\nassert solution(input()) == 'bust'\nassert solution(input()) == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('2 1 1') == 'bust'"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 8') == 'bust'\nassert solution('5 8 7') == 'win'\nassert solution('5 8 9') == 'bust'\nassert solution('5 7 9') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 9 7\") == \"win\"\nassert solution(\"4 5 6\") == \"bust\"\nassert solution(\"3 9 1\") == \"win\"\nassert solution(\"1 2 3\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 3 4') == 'bust'\nassert solution('5 3 2') == 'win'\nassert solution('3 4 5') == 'bust'\nassert solution('0 0 0') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 7 9''') == \"win\"\nassert solution('''5 7 9''') == \"bust\"\nassert solution('''9 7 9''') == \"win\"\nassert solution('''8 7 9''') == \"win\"\nassert solution('''8 7 9''') == \"bust\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '12'\nassert solution('9') == '27'\nassert solution('20') == '84'\nassert solution('100') == '504'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"6\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1000\") == \"100\"\nassert solution(\"100000\") == \"100\"\nassert solution(\"1000000\") == \"100\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('42') == ''\nassert solution('4217') == '8229'\nassert solution('999999999') == '152841168'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('100000') == '40000'\nassert solution('9999999') == '9999996'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"27\") == \"\"\nassert solution(\"123456789\") == \"5\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6''') == ''\nassert solution('''5''') == ''\nassert solution('''2''') == ''\nassert solution('''4''') == ''\nassert solution('''1''') == ''\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('999') == '1'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('27') == '36'\nassert solution('28') == '29'\nassert solution('27') == '36'\nassert solution('25') == '25'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"3 10\") == \"3\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 7\") == \"2\"\nassert solution(\"10 3\") == \"1\"\nassert solution(\"5 7\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2') == '2'\nassert solution('6 2') == '2'\nassert solution('5 2') == '3'\nassert solution('10 1') == '8'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 2\") == \"4\"\nassert solution(\"7 4\") == \"3\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"7 7\") == \"3\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"4 6\") == \"4\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"6 6\") == \"6\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 2') == '2'\nassert solution('11 2') == '1'\nassert solution('100 2') == '1'\nassert solution('100 1') == '1'\nassert solution('20 3') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('16') == 'pon'\nassert solution('10') == 'pon'\nassert solution('123') == 'hon'\nassert solution('1001') == 'hon'\nassert solution('1002') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\nassert solution('9') == 'hon'\nassert solution('1234567') == 'pon'\nassert solution('1234567890123456789012345678901234567890') == 'hon'\nassert solution('111111111111111111111111111111111111111111') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'\nassert solution('38') == 'pon'\nassert solution('123') == 'bon'\nassert solution('999') == 'hon'\nassert solution('932') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(16) == \"pon\"\nassert solution(10) == \"pon\"\nassert solution(15) == \"bon\"\nassert solution(24) == \"bon\"\nassert solution(23) == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"bon\"\nassert solution(\"1 2\") == \"pon\"\nassert solution(\"1 3\") == \"hon\"\nassert solution(\"1 4\") == \"pon\"\nassert solution(\"1 5\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'pon'\nassert solution('7') == 'bon'\nassert solution('125') == 'bon'\nassert solution('1000') == 'bon'\nassert solution('99') == 'bon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"26\") == \"bon\"\nassert solution(\"84\") == \"hong\"\nassert solution(\"100\") == \"hon\"\nassert solution(\"999\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('16') == 'pon'\nassert solution('3') == 'bon'\nassert solution('0') == 'hon'\nassert solution('1') == 'bon'\nassert solution('2') == 'pon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"41\") == \"hon\"\nassert solution(\"51\") == \"bon\"\nassert solution(\"26\") == \"bon\"\nassert solution(\"15\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\nassert solution('73') == 'bon'\nassert solution('16') == 'pon'\nassert solution('74') == 'pon'\nassert solution('13') == 'pon'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 2\") == \"11\"\nassert solution(\"3\\n3 1 2\") == \"6\"\n\"\"\""
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('1\\n1') == '0'\nassert solution('3\\n1 2 3') == '6'\nassert solution('1\\n3') == '0'\nassert solution('5\\n6 1 4 3 2') == '18'\nprint(solution(stdin))"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == 11\nassert solution('3\\n3 1 2\\n2 1 1') == 5\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"3\\n2 2 1\") == \"11\"\nassert solution(\"3\\n1 1 1\") == \"11\"\nassert solution(\"3\\n2 1 1\") == \"11\"\nassert solution(\"3\\n3 1 1\") == \"11\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1 2') == '11'\nassert solution('2 3 4') == '11'\nassert solution('1 1 1') == '1'\nassert solution('1 3 4') == '5'\nassert solution('1 2 3') == '5'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n2 1 2') == '4'\nassert solution('1\\n1 1 1') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1') == '54'\nassert solution('7\\n1 1 1 1 1 1 1 1 1 1') == '43'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n') == '11'\nassert solution('5\\n1 2 3 4 5\\n') == '726'\nassert solution('10\\n
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n1 1 1') == '4'\nassert solution('3\\n1 1 2') == '6'\nassert solution('3\\n1 2 1') == '6'\nassert solution('3\\n1 2 3') == '9'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 2''') == '11'\nassert solution('''6\n3 1 2\n3 2 2\n3 3 2''') == '11'\nassert solution('''7\n3 1 2\n3 2 2\n3 3 2\n3 4 2\n3 5 2\n3 6 2''') == '35'\nassert solution('''8\n3 1 2\n3 2 2\n3 3 2\n3 4 2\n3 5 2\n3 6 2\n3 7 2''') == '84'\nassert solution('''9\n3 1 2\n3 2 2\n3 3 2\n3 4 2\n3 5 2\n3 6 2\n3 7 2\n3 8 2''') == '139'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n2 1') == '4'\nassert solution('4\\n2 3 1') == '9'\nassert solution('10\\n5 1 5 5 5 1 5 5 5 5 1 1') == '55'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('3\\n1\\n4') == '4\\n3\\n4'\nassert solution('3\\n1\\n4\\n2') == '4\\n3\\n4'\nassert solution('3\\n1\\n4\\n2\\n5') == '4\\n3\\n4'\n\n'''\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n2''') == '4\\n3\\n4'\nassert solution('''3\n1\n2\n3''') == '3\\n2\\n3'\nassert solution('''3\n1\n2\n3''') == '1\\n2\\n3'\nassert solution('''3\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '100\\n99\\n98\\n97\\n96\\n95\\n94\\n93\\n92\\n91\\n90\\n89\\n88\\n87\\n86\\n85\\n84\\n83\\n82\\n81\\n80\\n79\\n78\\n77\\n76\\n75\\n74\\n73\\n72\\n71\\n70\\n69\\n68\\n67\\n66\\n65\\n64\\n63\\n62\\n61\\n60\\n59\\n58\\n57\\n56\\n55\\n54\\n53\\n52\\n51\\n50\\n49\\n48\\n47\\n46\\n45\\n44\\n43\\n42\\n41\\n40\\n39\\n38\\n37\\n36\\n35\\n34\\n33\\n32\\n31\\n30\\n29\\n28\\n27\\n26\\n25\\n24\\n23\\n22\\n21\\n20\\n19\\n18\\n17\\n16\\n15\\n14\\n13\\n12\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''1\n1\n1\n1''') == '1\\n1\\n1\\n1'\nassert solution('''7\n1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1\\n1\\n1\\n1'\nassert solution('''100000\n1\n1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1\\n1\\n1\\n1\\n1'\n'''\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4\\n3\\n4'\nassert solution('2\\n1\\n2\\n3') == '3\\n2\\n3'\nassert solution('1\\n2\\n3\\n1') == '2\\n3\\n3'\n\n\"\"\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\nassert solution('''10\n11\n3\n8\n10\n7\n2\n1\n5\n6\n9''') == '1'\nassert solution('''10\n3\n2\n4\n6\n9\n5\n1\n10\n11\n7\n8''') == '1'\nassert solution('''20\n9\n1\n2\n4\n3\n6\n5\n7\n11\n8\n13\n10\n14\n16\n12\n15\n17\n18\n19\n20''') == '18'\nassert solution('''20\n19\n1\n2\n4\n3\n6\n5\n7\n11\n8\n13\n10\n14\n16\n12\n15\n17\n18\n19\n20''') == '16'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n4\\n2\") == \"4\\n4\\n4\"\nassert solution(\"2\\n3\\n2\") == \"3\\n3\\n3\"\nassert solution(\"2\\n3\\n1\") == \"3\\n3\\n3\"\nassert solution(\"2\\n2\\n2\") == \"2\\n2\\n2\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n2\\n') == '2'\nassert solution('3\\n1\\n2\\n3\\n') == '3'\nassert solution('4\\n1\\n2\\n3\\n4\\n') == '4'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n') == '5'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\nassert solution('''1\n1\n1\n1''') == '1'\nassert solution('''2\n1\n2''') == '2'\nassert solution('''5\n1\n2\n3\n4\n5''') == '3'\nassert solution('''4\n4\n4\n4\n4''') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n3\\n') == '4\\n3\\n4'\nassert solution('4\\n3\\n4\\n') == '4\\n4\\n4'\nassert solution('3\\n1\\n4\\n') == '4\\n4\\n4'\nassert solution('3\\n4\\n3\\n') == '4\\n4\\n3'\nassert solution('3\\n4\\n3\\n') == '4\\n4\\n4'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 4\\n\") == \"9\"\nassert solution(\"3 10\\n3 10\\n\") == \"27\"\nassert solution(\"4 3\\n2 4\\n3 2\\n\") == \"19\"\nassert solution(\"7 2\\n7 2\\n7 2\\n\") == \"16\"\nassert solution(\"5 3\\n5 2\\n3 2\\n\") == \"5\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"5 3\") == \"8\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n') == '9'\nassert solution('5 1\\n') == '6'\nassert solution('5 10\\n') == '45'\nassert solution('5 1\\n') == '6'\nassert solution('5 2\\n') == '7'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 5') == '15'\nassert solution('7 7') == '7'\nassert solution('5 7') == '10'\nassert solution('10 2') == '12'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"1 3 1\") == \"3\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == '9'\nassert solution('10 15') == '19'\nassert solution('10 15') == '19'\nassert solution('5 3') == '9'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '9'\nassert solution('3 2') == '1'\nassert solution('10 5') == '6'\nassert solution('10 5') == '6'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-30 -10 10 20 50') == '40'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '36'\nprint('Testcases passed')\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 3\"\n    \"-30 -10 10 20 50\"\n) == \"40\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '40'\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 3\",\n    \"-30 -10 10 20 50\",\n) == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-30 -10 10 20 50') == '40'\nassert solution('-10 -10 10 20 50') == '40'\nassert solution('-30 -10 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '40'\nassert solution('10 7') == '100'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"8\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"1 1\") == \"0\"\n\"\"\""
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '40'\nassert solution('5 3') == '40'\nassert solution('1 5') == '40'\nassert solution('1 2 3 4 5') == '200'\nassert solution('-5 -10 -5 -5 -5') == '200'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"7 4\") == \"75\"\nassert solution(\"10 10\") == \"250\"\nassert solution(\"5 10\") == \"250\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\nassert solution('20 4') == '2'\nassert solution('1 5') == '3'\nassert solution('2 3') == '4'\nassert solution('1000 3') == '7'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"8 13\") == \"2\"\nassert solution(\"15 56\") == \"2\"\nassert solution(\"10 9\") == \"2\"\nassert solution(\"10 20\") == \"0\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 13''') == \"2\"\nassert solution('''5 2''') == \"1\"\nassert solution('''4 6''') == \"1\"\nassert solution('''2 4''') == \"2\"\nassert solution('''3 4''') == \"2\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 13') == '2'\nassert solution('6 2') == '2'\nassert solution('2 1') == '0'\nassert solution('1 1') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 14') == '3'\nassert solution('8 15') == '4'\nassert solution('8 16') == '5'\nassert solution('8 17') == '6'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 13') == '2'\nassert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 100000') == '0'\nassert solution('1 999999') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 10') == '10'\nassert solution('5 15') == '2'\nassert solution('2 2') == '0'\nassert solution('1 10 1') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 9') == '1'\nassert solution('8 8') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 13''') == \"2\"\nassert solution('''8 16''') == \"1\"\nassert solution('''8 16''') == \"1\"\nassert solution('''8 20''') == \"1\"\nassert solution('''8 10''') == \"1\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"15 4\") == \"1\"\nassert solution(\"100000000 900000000\") == \"10\"\nassert solution(\"1019 869\") == \"9\"\nassert solution(\"100000000 900000000\") == \"10\"\n\"\"\""
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('10 2') == '3'\nassert solution('10 2') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4') == '3'\nassert solution('100 9') == '3'\nassert solution('100 9') == '3'\nassert solution('10 9') == '3'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"20 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"100 4\") == \"6\"\nassert solution(\"1 100\") == \"0\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 8') == '2'\nassert solution('10 9') == '1'\nassert solution('10 9') == '0'\nassert solution('10 9') == '0'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('2 5') == '3'\nassert solution('1 1') == '3'\nassert solution('5 1') == '4'\nassert solution('1 5') == '2'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 1\") == \"100\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 1 2 3\") == \"3\"\nassert solution(\"5 10 2 50\") == \"95\"\nassert solution(\"0 1 2 3 4\") == \"15\"\nassert solution(\"0 10 25 30 40 50\") == \"95\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'\nassert solution('50 25 50 25') == '25'\n\"\"\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"5 10 15 15\") == \"5\"\nassert solution(\"3 4 5\") == \"0\"\nassert solution(\"1 1 2 2\") == \"0\"\nassert solution(\"1 1 2 3\") == \"2\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 10') == '-1'\nassert solution('0 0 0 0') == '0'\nassert solution('0 10 1 1') == '1'\nassert solution('1 1 1 1') == '-1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n'''\n) == '2'\nassert solution(\n'''\n4\n'''\n) == '1'\nassert solution(\n'''\n20\n'''\n) == '0'\nassert solution(\n'''\n1000\n'''\n) == '0'\nassert solution(\n'''\n104\n'''\n) == '8'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '0'\nassert solution('5') == '1'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('    ') == ''\nassert solution('42') == ''\nassert solution('1') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"3\"\nassert solution(\"1000\") == \"20\"\nassert solution(\"10000\") == \"10\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 0\nassert solution(5) == 1\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('105') == '1'"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n') == '1'\nassert solution('1\\n') == '0'\nassert solution('7\\n') == '0'\nassert solution('200\\n') == '0'\nassert solution('7\\n') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''105''') == '1'\nassert solution('''2''') == '0'\nassert solution('''1''') == '1'\nassert solution('''101''') == '8'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '0'\nassert solution('10001') == '1'\nassert solution
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 0\nassert solution(\"105\") == 1\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 2') == '0'\nassert solution('5 2') == '1'\nassert solution('10000000000 100000000000') == '0'\nassert solution('10 100') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n---\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == 1\nassert solution('5 2') == 1\nassert solution('100 5') == 101\nassert solution('100 100') == 101\nassert solution('1 100') == 100"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 4') == '0'\nassert solution('3 5') == '1'\nassert solution('2 7') == '3'\nassert solution('3 7') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3''') == '1'\nassert solution('''7 3''') == '1'\nassert solution('''7 3''') == '1'\nassert solution('''7 5''') == '0'\nassert solution('''100 1''') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"7 3\") == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 3''') == '1'\nassert solution('''8 3''') == '2'\nassert solution('''5 3''') == '1'\nassert solution('''1 1''') == '0'\nassert solution('''5 3''') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4') == 1\nassert solution('1 1') == 0\nassert solution('5 3') == 1\nassert solution('6 5') == 3\nassert solution('10 5') == 5\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"123\"\nassert solution(\"111\") == \"111\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"1221\") == \"1221\"\nassert solution(\"1222\") == \"1222\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"111\") == \"111\"\nassert solution(\"11\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"101\") == \"101\"\nassert solution(\"12345678901234567890\") == \"12345678901234567890\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''111''') == '111'\nassert solution('''999''') == '999'\nassert solution('''123''') == '123'\nassert solution('''9991''') == '9991'\nassert solution('''99999''') == '99999'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\"\nassert solution(\"01\") == \"01\"\nassert solution(\"10\") == \"01\"\nassert solution(\"1110\") == \"1110\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '111'\nassert solution('22') == '222'\nassert solution('3333') == '333'\nassert solution('4444') == '444'\nassert solution('5555') == '555'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('111') == '111'\nassert solution('1111') == '111'\nassert solution('100') == '100'\nassert solution('1001') == '100'\nassert solution('111') == '111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('123') == '123'\nassert solution('456') == '456'\nassert solution('789') == '789'\nassert solution('88') == '88'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == '111'\nassert solution('123') == '123'\nassert solution('1234567') == '1234567'\nassert solution('11111') == '22222'\nassert solution('112233') == '333333'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '111'\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\nassert solution(\"101\") == \"101\"\nassert solution(\"100\") == \"100\"\nassert solution(\"101\") == \"101\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 6 3') == '5'\nassert solution('1 2 3') == '0'\nassert solution('1 10 100') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 -3\") == \"5\"\nassert solution(\"-3 1 1\") == \"2\"\nassert solution(\"-1 -1 -1\") == \"3\"\nassert solution(\"-5 -3 1\") == \"3\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\n\n'''\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 100\") == \"101\"\nassert solution(\"4 5 6\") == \"5\"\nassert solution(\"-1 -2 -3\") == \"0\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 3 4') == '8'\nassert solution('3 1 2') == '5'\nassert solution('3 5 1') == '7'\nassert solution('7 2 8') == '11'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('4 2 3') == '3'\nassert solution('1 100 100') == '101'\nassert solution('100 100 100') == '101'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n\n\"\"\"\na=\\{8,4,2,1,4,2,1,4,2,1,......\\}\n\n8<=s<=100\n8,4,2,1,4,2,1,4,2,1,......\n\ns=8\nf(0)=8\nf(1)=4\nf(2)=2\nf(3)=3\n\ns=4\nf(0)=4\nf(1)=2\nf(2)=3\nf(3)=3\n\ns=2\nf(0)=2\nf(1)=3\nf(2)=3\nf(3)=3\n\ns=1\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\ns=0\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=8\nf(1)=4\nf(2)=2\nf(3)=3\n\nf(0)=4\nf(1)=2\nf(2)=3\nf(3)=3\n\nf(0)=2\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)=3\nf(2)=3\nf(3)=3\n\nf(0)=1\nf(1)="
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''8''') == '5'\nassert solution('''1''') == '1'\nassert solution('''4''') == '2'\nassert solution('''9''') == '3'\nassert solution('''16''') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('34') == '23'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '5'\nassert solution('2') == '5'\nassert solution('1') == '5'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"8\"\n) == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('7') == '7'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"24\") == \"5\"\nassert solution(\"44\") == \"7\"\nassert solution(\"100\") == \"9\"\nassert solution(\"5000\") == \"10\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(8) == \"5\""
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 9 10') == 'Yes'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('1 0 1 1') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('5 5 5 5') == 'Yes'\nassert solution('5 5 5 5') == 'Yes'\nassert solution('5 5 5 5') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('100 100 100 100') == 'No'\nassert solution('1 2 3 4') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"2 3 4 5\") == \"No\"\nassert solution(\"2 3 3 2\") == \"Yes\"\nassert solution(\"2 3 1 1\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"5 5 5 5\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 9 10 10''') == 'No'\nassert solution('''10 9 10 11''') == 'Yes'\nassert solution('''20 21 22 23''') == 'Yes'\nassert solution('''1 1 1 1''') == 'No'\nassert solution('''1 1 1 2''') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 9 10 10''') == 'Yes'\nassert solution('''1 1 1 1''') == 'Yes'\nassert solution('''9 9 9 9''') == 'No'\nassert solution('''101 101 101 101''') == 'No'\nassert solution('''100 0 0 0''') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n10 2\\n6 3') == '10'\nassert solution('2\\n10 2\\n6 3') == '10'\nassert solution('2\\n10 2\\n6 3') == '10'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 2 5\n6 3 4''') == '5'\nassert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''1\n1\n1''') == '0'\nassert solution('''1\n10\n10''') == '10'\nassert solution('''100\n1\n1''') == '0'\n'''\nfrom math import sqrt\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == '2'\nassert solution('1\\n1\\n2') == '1'\nassert solution('1\\n1\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n3') == '3'\nassert solution('1\\n1\\n2\\n3\\n1') == '3'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1\\n0'\nassert solution('1\\n1\\n1\\n1') == '2\\n1'\nassert solution('2\\n2') == '0\\n0'\nassert solution('3\\n3') == '0\\n1'\nassert solution('4\\n4\\n4') == '2\\n2'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''3\n1 1 2\n1 1 1''') == '0'\nassert solution('''6\n3 1 1 2 3 3 4\n10 2 5 4''') == '4'\nassert solution('''10\n6 1 1 2 3 3 4 6 7 8 9 10\n20 2 5 4 6 8 9 10 12 13 14 15 16 17 18 19''') == '17'\n\n'''"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[18:22]\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3\n10 2 5\n6 3 4'''\n) == '5'\n\nassert solution(\n'''3\n5 3 4\n6 2 4'''\n) == '3'\n\nassert solution(\n'''4\n10 2 5 4\n6 3 4 2'''\n) == '6'\n\nassert solution(\n'''4\n1 1 1 1\n2 2 2 2'''\n) == '3'\n\nassert solution(\n'''1\n1'''\n) == '0'"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('#.#') == '#'\nassert solution('..#') == '.'\nassert solution('..#') == '.'\nassert solution('..#') == '.'\nassert solution('...#') == '.'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n#') == '#'\nassert solution('2 2\\n##') == '##'\nassert solution('1 1\\n##') == '#'\nassert solution('2 2\\n..') == '..'\nassert solution('1 1\\n##') == '#'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"5 3\\n##..\\n....\\n##..\\n.#.#\\n\") == \"..#\\n###\\n###\\n\"\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''\n4 4\n.##.\n....\n##.\n.#.\n''') == '###'\nassert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''\n10 10\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###\\n###\\n.##\\n'\nassert solution('''6 4\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''H W\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''H 4\n####\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\nassert solution('''2 4\n##..\n##..''') == '..'\nassert solution('''2 2\n..\n..''') == '..'\nassert solution('''1 1\n..\n''') == '.'\nassert solution('''2 3\n##..\n....\n##..''') == '##.'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_output['input']) == input_output['output']\nprint('All set! Click \"Check\" now')\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###\\n###\\n.##\\n'\nassert solution('''3 1\n..#\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.5663706143591721943'\nassert solution('3') == '17.8683473875'\nassert solution('4') == '22.8340455098'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.566370614359172'\nassert solution('3') == '17.510975922546827'\nassert solution('4') == '25.126147940075684'\nassert solution('5') == '34.764156862745098'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 6.28318530717958623\nassert solution('2') == 6.283185307179586\nassert solution('3') == 6.2831853071795864\nassert solution('4') == 6.2831853071795901\nassert solution('5') == 6.2831853071795949\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 6.28318530717958623\nassert solution('0') == 0\nassert solution('2') == 12.566370614359172\nassert solution('3') == 19.775790943335301\nassert solution('4') == 22.8582530641609133\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.56637061435917218'\nassert solution('3') == '19.0721359863'\nassert solution('4') == '32.4908822636'\nassert solution('5') == '55.849382717'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('3') == 3\nassert solution('-100') == 0\nassert solution('6') == 6\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('5') == ''\nassert solution('10') == ''\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"0\") == \"0.0\"\nassert solution(\"2\") == \"3.469387755102040816\"\nassert solution(\"5\") == \"14.142135623730949\"\nassert solution(\"9\") == \"49.710873664362037\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.566370614359172'\nassert solution('100') == '5069.619496212158'\n\nprint(solution('1'))\nprint(solution('2'))\nprint(solution('100'))"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == \"\"\nassert solution('a') == \"\"\nassert solution('4') == \"\"\nassert solution('abc') == \"\"\nassert solution('abcdefg') == \"\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AS\") == \"No\"\nassert solution(\"ASSAASA\") == \"Yes\"\nassert solution(\"ASAS\") == \"No\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AASA') == 'No'\nassert solution('ASSA') == 'Yes'\nassert solution('AASASA') == 'No'\nassert solution('ASAS') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"ASD\") == \"No\"\nassert solution(\"DDDD\") == \"Yes\"\nassert solution(\"ASDASD\") == \"Yes\"\nassert solution(\"AABB\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASSAAS\") == \"No\"\nassert solution(\"AAAS\") == \"Yes\"\nassert solution(\"AAS\") == \"Yes\"\nassert solution(\"SAS\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('SSS') == 'No'\nassert solution('SSSS') == 'No'\nassert solution('ASASAS') == 'Yes'\nassert solution('ASASASA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ASAA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAAA\") == \"Yes\"\nassert solution(\"ABBB\") == \"No\"\nassert solution(\"AAAB\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AA\") == \"Yes\"\nassert solution(\"ABA\") == \"No\"\nassert solution(\"AAAA\") == \"Yes\"\nassert solution(\"ABBA\") == \"Yes\"\nassert solution(\"ABBA\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABBCABBAA\") == \"No\"\nassert solution(\"AAAAC\") == \"Yes\"\nassert solution(\"ABBCABB\") == \"Yes\"\nassert solution(\"ABBCABB\") == \"Yes\"\nassert solution(\"ABBCABBB\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ASSS') == 'No'\nassert solution('ASSa') == 'Yes'\nassert solution('ASSsa') == 'No'\nassert solution('Aass') == 'Yes'\nassert solution('ASAS') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASS') == 'No'\nassert solution('ASSA') == 'Yes'\nassert solution('ASSS') == 'No'\nassert solution('SSAS') == 'No'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 9\") == \"0\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"0 11\") == \"0\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"3 3\\n\")) == '-10'\nassert solution(input(\"-5 -5\\n\")) == '-15'\nassert solution(input(\"-1 -5\\n\")) == '-5'\nassert solution(input(\"5 5\\n\")) == '10'\nassert solution(input(\"5 -5\\n\")) == '-5'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1 2\")) == \"1\"\nassert solution(input(\"3 4\")) == \"6\"\nassert solution(input(\"-34 -23\")) == \"-58\"\nassert solution(input(\"3 4\")) == \"6\""
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('13 3') == '-10'\nassert solution('0 0') == '0'\nassert solution('-1 -1') == '-1'\nassert solution('-2 -3') == '-1'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"13 3\") == \"-16\"\nassert solution(\"13 -3\") == \"-39\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-13 3') == '-10'"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-134 -23') == '-16'\nassert solution('-13 -23') == '-9'\nassert solution('-13 -32') == '-13'\nassert solution('-13 -23') == '-9'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"-10\"\nassert solution(\"10 -4\") == \"-7\"\nassert solution(\"2 8\") == \"-4\"\nassert solution(\"1 -2\") == \"0\"\nassert solution(\"0 -1\") == \"-1\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '-10'\nassert solution(input()) == '-16'\nassert solution(input()) == '-39'"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 5 6 8\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"2 2 2 3\") == \"1\"\nassert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 2 1 1\") == \"2\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n') == '0'\nassert solution('4\\n1 2 3 4\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\nassert solution('6\\n1 2 3 4 5 6\\n') == '3'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '4'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == 3\nassert solution(\"1 2 3 5\") == 3\nassert solution(\"4 5 6 8\") == 3\nassert solution(\"1 2 1 4\") == 2\nassert solution(\"4 6 5 2\") == 2\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''6\n9 5 4 4 6 2''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9'\nassert solution('''6\n7 7 7 6 6 5''') == '8'\nassert solution('''8\n7 7 7 6 6 5 6 7''') == '10'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 5 6 8\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 5 6 8') == '3'\n\"\"\"\n\n\"\"\"\nsolution('''\n4\n6 5 6 8\n''')\n\n\"\"\"\n\n\"\"\"\nsolution('''\n5\n10 10 10 10 10\n''')\n\n\"\"\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1\\n'\nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 3 4 5\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5') == '3\\n2 2 1'\nassert solution('4\\n1 1 1 1') == '4\\n1 1 1 1'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n3 4'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 1 2 1\n''') == '3'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n7\n1 2 3 4 5 6 7\n''') == '2'\nassert solution('''\n7\n2 2 2 2 2 2 2\n''') == '7'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '''2\n3 4 \n'''\nassert solution('''4\n1 1 1 1\n''') == '''4\n1 1 1 1 \n'''\nassert solution('''5\n1 2 1 2 1\n''') == '''1\n5 \n'''"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n6\\n7') == '1\\n7\\n4'\nassert solution('2\\n3\\n6\\n7') == '1\\n2\\n1'\nassert solution('3\\n6\\n7') == '1\\n7\\n4'\nassert solution('7\\n21\\n28') == '7\\n4\\n3333333333'\nassert solution('9999999999\\n999999984') == '3333333333\\n3333333328'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"7\n3\n6\n7\n21\n28\n999999999\n999999984\"\"\"\n) == \"\"\"1\n2\n1\n7\n4\n333333333\n333333328\"\"\"\n)\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''21\n999999999\n999999984\n''') == '1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''28\n999999999\n999999984\n''') == '1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''999999999\n999999984\n''') == '1\\n7\\n4\\n333333333\\n333333328'"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1') == 1\nassert solution('4 2\\n2') == 2\nassert solution('4 2\\n3') == 1\nassert solution('4 2\\n4') == 4\nassert solution('4 2\\n5') == -1\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '2'\nassert solution('3\\n3') == '3'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3\\n6\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n1\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n1\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n1\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n1\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input('')) == str(2)\nassert solution(input('')) == str(3)\nassert solution(input('')) == str(1)\nassert solution(input('')) == str(7)\nassert solution(input('')) == str(4)\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\"\"\") == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3') == '1\\n'\nassert solution('2\\n6') == '2\\n'\nassert solution('999999999\\n999999984\\n') == '1\\n7\\n'\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('1000000000 7') == '1'\nassert solution('1000000000 6') == '1'\nassert solution('1000000000 4') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n\n\nMore examples can be found here."
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nprint(solution('512 4'))\nprint(solution('1000000000 9'))\nassert solution('50 9') == '49'\nassert solution('1000000000 9') == '1'\nprint(solution('50 9'))\nassert solution('51 9') == '50'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('5 1000000000 9') == '4'\nassert solution('10000000000 9') == '0'\nassert solution('10000000001 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"9 7 9 3 4 8 6 6 7 9\") == \"893614\"\nassert solution(\"99 4\") == \"94\"\n\n\n\n\n\"\"\""
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Solution-----\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5\\n2 1 1 2 3\\n'\n\nassert solution('''\n5\n3 7 5 1 5\n''') == '2\\n5 5 \\n'\n\nassert solution('''\n3\n5 1 4\n''') == '2\\n5 5 \\n'\n\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7\\n1 2 2 2 2 3 2\\n'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n5 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"\nassert solution(\"8\\n5 6 3 3 6 6 3 5\\n\") == \"3\\n5 6 6 3 3 5 6\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n3 4 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n5 5'"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\nassert solution('10\\n3 7 5 1 5 2 2 1 3') == '2\\n5 5 5 5 5 5 5 5 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5\\n2 1 1 2 3'\nassert solution('''5\n3 7 5 1 5''') == '2\\n5 5'\nassert solution('''3\n5 1 4''') == '2\\n5 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result\nprint(result)\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\nassert solution('4 10') == '-1'\nassert solution('4 16') == '-1'\nassert solution('5 4') == '3'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\n\n\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '0'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '0'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4\\n5 4') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4\\n5 4\\n5 4') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '-1'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('5 5\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n') == '-1'\nassert solution('5 5\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n') == '-1'\nassert solution('5 5\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n') == '-1'\nassert solution('5 5\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n') == '-1'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('leset') == 'abcef'\nassert solution('quid') == 'abcde'\nassert solution('matt') == 'vwxyz'\nassert solution('ptwopq') == 'puqwst'\nassert solution('xzxz') == 'xyzz'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\n\n'''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n        '''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n'''\n        ) == '''tleelte\nqwerty\nvvvvvv\nabcde'''\n\nassert solution(\n        '''\n1\n2 2 1\n3 3 2\n4 4 3\n5 5 3\n6 6 3\n7 7 3\n8 8 3\n9 9 3\n10 10 3\n11 11 3\n12 12 3\n13 13 3\n14 14 3\n15 15 3\n16 16 3\n17 17 3\n18 18 3\n19 19 3\n20 20 3\n'''\n        ) == '''TLE\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR\nLTFR"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\nassert solution('12345') == '12345'\nassert solution('1234567') == '1234567'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') in ['tleelte', 'qwerty', 'vvvvvv', 'abcde']\nassert solution('''6 2 1\n5 2 2''') in ['tee', 'qwerty', 'vvvvv', 'abcde']\nassert solution('''5 2 2\n5 2 2''') in ['ee', 'qwerty', 'vvvvv', 'abcde']\nassert solution('''7 3 1\n6 1 1\n5 2 2''') in ['qwe', 'zxcv', 'vbnm', 'abcde']\nassert solution('''7 4 1\n5 2 2''') in ['fgh', 'iey', 'qw', 'rty']\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == \"tleelte\\nqwerty\\nvvvvvv\\nabcde\"\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == \"tleelte\\nqwerty\\nvvvvvv\\nabcde\"\n\"\"\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\n\n'''"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '12'\n'''\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12' # only 2 lines of code are counted\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1' # only 1 line of code is counted\nassert solution('1 1 1') == '1'\n\n\"\"\""
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 12 6''') == '12'\nassert solution('''100 10 1''') == '45'\nassert solution('''100 30 10''') == '45'\nassert solution('''10 10 10''') == '0'\nassert solution('''1 10 1''') == '1'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 12 6') == '12'\n\n'''\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 21 12') == '31'\nassert solution('20 22 11') == '33'\nassert solution('200 20 12') == '80'\nassert solution('200 22 11') == '82'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"25 1 2\") == \"3\"\nassert solution(\"30 9 4\") == \"6\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"4 1 3\") == \"3\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"\"\"[Hint]\nN = 20\nT = 12\nX = 6\n[Output]\n12\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"2 2 1\") == \"2\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('7') == '1'\nassert solution('4') == '1'\nassert solution('3') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == '5'\nassert solution('4') == '0'\nassert solution('1') == '0'\nassert solution('5') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 1\nassert solution('5') == 2\nassert solution('10') == 3\nassert solution('15') == 4\nassert solution('20') == 5\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == 2\nassert solution('3') == 1\nassert solution('5') == 0\nassert solution('10') == 3\nassert solution('1') == 0\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('123') == '1'\nassert solution('1000000000') == '1'\nassert solution('100000000') == '2'\nassert solution('100000000000') == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\nassert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('6') == '3'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"16\") == \"3\"\nassert solution(\"64\") == \"6\"\nassert solution(\"96\") == \"7\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9') == '3'\nassert solution('10') == '4'\nassert solution('100') == '9'\nassert solution('1000') == '49'\nassert solution('10000') == '49'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == '2'\nassert solution('8 2 3 4 5 6 7 8 9') == '2'\nassert solution('8 8 8 8 8 8 8 8') == '3'\nassert solution('8 8 8 8 8 8 8 8 1') == '3'\nassert solution('8 8 8 8 8 8 8 8 1 2') == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '5'\nassert solution('2 1') == '2'\nassert solution('1 3') == '3'\nassert solution('2 1') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 2') == '2'\nassert solution('10 10') == '5'\nassert solution('100 1') == '100'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '3'\nassert solution('1 1') == '3'\nassert solution('3 1') == '3'\nassert solution('1 1') == '3'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 10') == '0'\nassert solution('100 100') == '0'\nassert solution('30 2') == '0'\nassert solution('35 0') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 1') == '1'\nassert solution('2 4') == '2'\nassert solution('5 6') == '3'\nassert solution('2 10') == '4'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 5') == '4'\nassert solution('2 9') == '4'\nassert solution('2 3') == '2'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 2') == '1'\nassert solution('2 4') == '2'\nassert solution('2 4') == '1'\nassert solution('2 4') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 4') == '4'\nassert solution('5 10') == '5'\nassert solution('3 4') == '3'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"2 10\") == \"3\"\nassert solution(\"1 100\") == \"4\"\nassert solution(\"10 100\") == \"5\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 12\\n\") == \"16\"\nassert solution(\"1 2\\n\") == \"3\"\nassert solution(\"3 4\\n\") == \"7\"\nassert solution(\"4 1\\n\") == \"2\"\nassert solution(\"4 10\\n\") == \"9\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 3') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('2 4') == '1 2'\nassert solution('3 4') == '1 2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4, 12) == \"16\"\nassert solution(1, 1) == \"0\"\nassert solution(1, 2) == \"1\"\nassert solution(12, 1) == \"12\"\nassert solution(12, 2) == \"11\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 2') == '2 1'\nassert solution('4 12') == '16'\nassert solution('8 19') == '15'\nassert solution('3 7') == '6'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 12') == '16'\nassert solution('1 2') == '3'\nassert solution('1 10') == '9'\nassert solution('6 15') == '1'\nassert solution('10 15') == '-5'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('2 4') == '2 4'\nassert solution('2 4') == '0 2'\nassert solution('3 4') == '-1 2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '11'\nassert solution('2 12') == '1'\nassert solution('3 13') == '4'\nassert solution('4 14') == '0'\nassert solution('5 15') == '5'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"takahashi\") == \"No\"\nassert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokuda') == 'No'\nassert solution('', '') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudaizcanbeobtainedbyappendingzathendofchokudai') == 'No'\nassert solution('chokudai') == 'Yes'\nprint(\"Test case passed!\")\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudai') == 'No'\nassert solution('chokudai', 'chokudaizz') == 'No'\nassert solution('chokudai', 'chokudaizzz') == 'No'\nassert solution('chokuda', 'chokudaizzz') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('chokudai', 'chokudaiz') == \"Yes\"\nassert solution('a', 'a') == \"Yes\"\nassert solution('a', 'b') == \"No\"\nassert solution('z', 'a') == \"No\"\nassert solution('', 'a') == \"No\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a', 'b') == \"No\"\nassert solution('chokudai', 'chokudaiz') == \"Yes\"\nprint(solution(input(), input()))\n\"\"\"\n\nfrom itertools import permutations"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('aa') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('abcxyz') == 'No'\nassert solution('abczabc') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudaiz', 'chokudai') == 'No'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 8') == 'IMPOSSIBLE'\nassert solution('3 10') == '9'\nassert solution('7 0') == 'IMPOSSIBLE'\nassert solution('7 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 16''') == \"9\"\nassert solution('''0 1''') == \"IMPOSSIBLE\"\nassert solution('''1 0''') == \"IMPOSSIBLE\"\nassert solution('''1 2''') == \"IMPOSSIBLE\"\nassert solution('''2 2''') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 14') == 'IMPOSSIBLE'\nassert solution('2 16') == '9'\nassert solution('9 10') == 'IMPOSSIBLE'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 9') == 'IMPOSSIBLE'\nassert solution('7 10') == '9'\nassert solution('4 9') == 'IMPOSSIBLE'\nassert solution('7 11') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''2 16''') == '9'\nassert solution('''-2 -1''') == 'IMPOSSIBLE'\nassert solution('''0 0''') == 'IMPOSSIBLE'\nassert solution('''0 10''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('0 10') == 'IMPOSSIBLE'\nassert solution('0 3') == '3'\nassert solution('2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 16') == '9'\n\nprint(solution('2 16'))\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('3 1000000000') == '9'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"100 123\") == \"IMPOSSIBLE\"\nassert solution(\"2 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"1000\") == \"No\"\nassert solution(\"719\") == \"Yes\"\nassert solution(\"1009\") == \"No\"\nassert solution(\"717\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"117\") == \"Yes\"\nassert solution(\"999\") == \"No\"\nassert solution(\"9999\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"1337\") == \"Yes\"\nassert solution(\"73\") == \"No\"\nassert solution(\"567\") == \"No\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"715\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"971\") == \"No\"\nassert solution(\"999\") == \"Yes\"\nassert solution(\"976\") == \"No\"\n\nassert solution(\"123\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('5') == None\nassert solution('7') == None\nassert solution('717') == None\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(117) == 'Yes'\nassert solution(999) == 'No'\nassert solution(100) == 'No'\nassert solution(1000) == 'No'\nassert solution(10000) == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(907) == \"No\"\nassert solution(898) == \"No\"\nassert solution(897) == \"Yes\"\nassert solution(894) == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\n\nassert solution(str(117)) == \"Yes\"\nassert solution(str(117) + \"1\") == \"No\"\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12''') == 'Yes'\nassert solution('''102''') == 'No'\nassert solution('''98''') == 'No'\nassert solution('''100''') == 'Yes'\nassert solution('''1''') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('101') == 'Yes'\nassert solution('1011') == 'No'\nassert solution('11') == 'Yes'\nassert solution('111') == 'No'\nassert solution('13') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('1 2 3 4 5') == 'No'\nassert solution('10 1 2 3 4 5 6 7 8 9 10') == 'Yes'\nassert solution('10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 'No'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"0\"\n) == \"No\"\nassert solution(\n\"1\"\n) == \"No\"\nassert solution(\n\"11\"\n) == \"No\"\nassert solution(\n\"100\"\n) == \"Yes\"\nassert solution(\n\"1000\"\n) == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10) == \"No\"\nassert solution(12) == \"Yes\"\nassert solution(23423) == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123) == \"Yes\"\nassert solution(1234) == \"No\"\nassert solution(0) == \"Yes\"\nassert solution(12345) == \"Yes\"\nassert solution(123456) == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asd\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0 0 0 1) == \"-1 1 -1 0\"\n\nprint(solution(0 0 0 1))\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0,0,0,1) == \"-1 1 -1 0\"\nassert solution(0,0,1,1) == \"-1 -1 0 1\"\nassert solution(0,0,0,0) == \"-1 -1 -1 -1\"\nassert solution(0,0,1,0) == \"-1 -1 -1 1\"\nassert solution(0,0,0,1) == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 2 3 4\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 1\") == \"-1 -1 -1 -1\"\nassert solution(\"1 1 1 1\") == \"-1 -1 -1 -1\"\nassert solution(\"2 1 4 4\") == \"-1 -1 -1 -1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 0 0 1') == '-1 1 -1 0'\nassert solution('2 0 0 1') == '-1 1 -1 0'\nassert solution('2 1 0 1') == '-1 1 -1 0'\nassert solution('2 1 2 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\nassert solution(\"0 0 1 1\") == \"-1 -1 -1 1\"\nassert solution(\"0 0 0 0\") == \"-1 -1 -1 -1\"\nassert solution(\"-1 -1 -1 -1\") == \"-1 -1 -1 -1\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('red blue\\n3 4\\nred\\nred\\nred\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nblue\\nblue\\nblue\\nblue') == '0 0'\nassert solution('red blue\\n3 4\\nblue\\nblue\\nblue\\nblue\\nblue') == '3 4'\nassert solution('red blue\\n3 4\\nblue\\nblue\\nblue\\nblue\\nblue') == '0 0'\nassert solution('red blue\\n3 4\\nblue\\nblue\\nblue\\nblue\\nblue') == '3 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('i love you') == 'love you'\nassert solution('I love you') == 'I love you'\nassert solution('Alice loves Bob') == 'Alice loves Bob'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abac') == 'No'\nassert solution('abcde') == 'No'\nassert solution('aabde') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcab') == 'No'\nassert solution('abcabcabc') == 'Yes'\nassert solution('abcabcabcab') == 'No'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabc') == 'No'\nassert solution('abcbcc') == 'Yes'\nassert solution('abcccc') == 'No'\nassert solution('aabcccc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcabcabcabcabcabcabcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == 'Yes'\nassert solution('2\\n1') == 'No'\nassert solution('3\\n1') == 'Yes'\nassert solution('4\\n1') == 'No'\nassert solution('5\\n1') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcabc') == \"Yes\"\nassert solution('abcabc') == \"No\"\nassert solution('abcabc') == \"No\"\nassert solution('aabab') == \"No\"\nassert solution('aabb') == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('a') == 'No'\nassert solution('abcd') == 'Yes'\nassert solution('a'*1000) == 'Yes'\nassert solution('ab'*1000) == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\nabcabc''') == 'Yes'\nassert solution('''9\nzzz\nyyy\nxxx\nyyy\nzzz''') == 'No'\nassert solution('''1\na\n''') == 'No'\nassert solution('''3\nabc\nabc\nabc''') == 'Yes'\nassert solution('''4\nabc\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3.000000 0'\n'''"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 0') == '0.000000'\nassert solution('1 0 0 0') == '0.000000'\nassert solution('2 1 2 2') == '2.000000'\nassert solution('2 2 2 2') == '2.000000'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''0\n3\n0 0\n2 2\n3'''\n) == \"3.000000 0\"\n\nassert solution(\n'''2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\n-----6.32%-----\n\n'''"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 1 1 1\") == \"0.000000 1\"\nassert solution(\"3 5 3 2\") == \"2.000000 1\"\nassert solution(\"4 5 3 2\") == \"0.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 4 3') == \"3.000000 0\"\nassert solution('0 1 4 2') == \"0.000000 0\"\nassert solution('1 1 1 0') == \"0.000000 1\"\nassert solution('0 0 0 4') == \"0.000000 0\"\nassert solution('3 3 2 2') == \"1.000000 0\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('G W Y P P Y P G') == 'Three'\nassert solution('G W P P G W G') == 'Three'\nassert solution('G W P P G P Y') == 'Three'\nassert solution('G P G W G W Y') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Three') == 'Three'\nassert solution('Four') == 'Four'\nassert solution('P Y W') == 'Three'\nassert solution('P W G') == 'Four'\nassert solution('P W G Y') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"Four\"\nassert solution(input(\"\")) == \"Three\"\nassert solution(input(\"\")) == \"Four\"\nassert solution(input(\"\")) == \"Three\"\nassert solution(input(\"\")) == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\nP W G Y P G') == 'Three'\nassert solution('6\\nP Y W G G P') == 'Four'\n\"\"\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P W G Y P G') == 'Three'\nassert solution('P P P P P') == 'Three'\nassert solution('P P P P Y') == 'Four'\nassert solution('G P G P W') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Three') == 'Three'\nassert solution('Four') == 'Four'\nassert solution('Three') == 'Three'\nassert solution('One') == 'One'\nassert solution('Two') == 'Two'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('G W P P W') == 'Three'\nassert solution('P P G G P') == 'Four'\nassert solution('P P G P P') == 'Three'\nassert solution('P P G G P Y') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"P W G Y P Y W\") == \"Four\"\nassert solution(\"P P P P P P\") == \"Three\"\nassert solution(\"P W G Y P P\") == \"Three\"\nassert solution(\"P P P P P Y\") == \"Four\"\nassert solution(\"P P P P P G\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 6 10 3') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 4 5 6\\n1 2 3 4 5\") == '4'\nassert solution(\"0 1 2 3 4\\n2 1 2 3 4\") == '4'\nassert solution(\"0 1 2 3 4\\n3 1 2 3 4\") == '4'\nassert solution(\"0 1 2 3 4\\n4 1 2 3 4\") == '2'\nassert solution(\"0 1 2 3 4\\n5 1 2 3 4\") == '4'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n'''\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n') == '2'\nassert solution('2\\n3 4\\n') == '4'\nassert solution('3\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('4\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('input.txt') == '2'\n\nassert solution('input1.txt') == '8'\n\nassert solution('input2.txt') == '3'\n\nassert solution('input3.txt') == '2'\n\nassert solution('input4.txt') == '0'"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 2') == '2'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 6 10 3') == '2'\nassert solution('6 5 4') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"\n\n\n\n-----"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 2\") == \"2\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\""
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '''7'''\nassert solution('''4 8 2 6 2''') == '''0'''\nassert solution('''4 5 4 1 3''') == '''7'''\nassert solution('''1 3 2 4''') == '''0'''\nassert solution('''1 3 2 4''') == '''0'''\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''8\n4 1 3 2 4 6 2 5 1 3\n4 4 4 4 6 2 5 6 2 4\n''') == '12'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\") == \"7\"\nassert solution(\"4\\n1 3 2 4\\n4 5 4 1 3\") == \"0\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n\nassert solution('''8\n5 6 6 1 5 3 6 7\n6 1 4 3 4 3 2 4\n''') == '15'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n1 2 3 4\n5 4 3 2\n''') == '0'\nassert solution('''4\n1 2 3 4\n2 3 4 5\n''') == '0'\nassert solution('''4\n1 3 2 4\n4 3 2 1\n''') == '4'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '7'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\n\"\"\"\n\n\"\"\"\nsolution\n\nMishka got an integer array $a$ of length $n$ as a birthday present (what a surprise!).\n\nMishka doesn't like this present and wants to change it somehow. He has invented an algorithm and called it \"Mishka's Adjacent Replacements Algorithm\". This algorithm can be represented as a sequence of steps:  Replace each occurrence of $1$ in the array $a$ with $2$;  Replace each occurrence of $2$ in the array $a$ with $1$;  Replace each occurrence of $3$ in the array $a$ with $4$;  Replace each occurrence of $4$ in the array $a$ with $3$;  Replace each occurrence of $5$ in the array $a$ with $6$;  Replace each occurrence of $6$ in the array $a$ with $5$;  $\\dots$  Replace each occurrence of $10^9 - 1$ in the array $a$ with $10^9$;  Replace each occurrence of $10^9$ in the array $a$ with $10^9 - 1$. \n\nNote that the dots in the middle of this algorithm mean that Mishka applies these replacements for each pair of adjacent integers ($2i - 1, 2i$) for each $i \\in\\{1, 2, \\ldots, 5 \\cdot 10^8\\}$ as described above.\n\nFor example, for the array $a = [1, 2, 4, 5, 10]$, the following sequence of arrays represents the algorithm: \n\n$[1, 2, 4, 5, 10]$ $\\rightarrow$ (replace all occurrences of $1$ with $2$) $\\rightarrow$ $[2, 2, 4, 5, 10]$ $\\rightarrow$ (replace all occurrences of $2$ with $1$) $\\rightarrow$ $[1, 1, 4, 5, 10]$ $\\rightarrow$ (replace all occurrences of $3$ with $4$) $\\rightarrow$ $[1, 1, 4, 5, 10]$ $\\rightarrow$ (replace all occurrences of $4$ with $3$) $\\rightarrow$ $[1, 1, 3, 5, 10]$ $\\rightarrow$ (replace all occurrences of $5$ with $6$) $\\rightarrow$ $[1, 1, 3, 6, 10]$ $\\rightarrow$ (replace all occurrences of $6$ with $5$) $\\rightarrow$ $[1, 1, 3, 5, 10]$ $\\rightarrow$ $\\dots$ $\\rightarrow$ $[1, 1, 3, 5, 10]$ $\\rightarrow$ (replace all occurrences of $10$ with $9$) $\\rightarrow$ $[1, 1, 3, 5, 9]$. The later steps of the algorithm do not change the array.\n\nMishka is very lazy and he doesn't want to apply these changes by himself. But he is very interested in their result. Help him find it.\n\n\n-----Input-----\n\nThe first line of the input contains one integer number $n$ ($1 \\le n \\le 1000$) \u2014 the number of elements in Mishka's birthday present (surprisingly, an array).\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint $n$ integers \u2014 $b_1, b_2, \\dots, b_n$, where $b_i$ is the final value of the $i$-th element of the array after applying \"Mishka's Adjacent Replacements Algorithm\" to the array $a$. Note that you cannot change the order of elements in the array.\n\n\n-----Examples-----\nInput\n5\n1 2 4 5 10\n\nOutput\n1 1 3 5 9\n\nInput\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\nOutput\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999\n\n\n\n-----Note-----\n\nThe first example is described in the problem statement.\n\n\"\"\"\n\nfrom itertools import product\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n\") == \"1 1 3 5 9\"\nassert solution(\"3\\n\") == \"1 2 4\"\nassert solution(\"10\\n\") == \"1 1 3 5 9\"\n\n\n\n'''\n\n'''\n    \n    \n    \n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"\n\n\n-----"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''\n2\n1 2\n''') == '1 1'\nassert solution('''\n3\n1 2 4 5\n''') == '1 1 3'\nassert solution('''\n4\n1 2 4 5 6\n''') == '1 1 3 4'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n3\\n1') == '1'\nassert solution('2\\n4\\n1') == '3'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nprint(\"Passed. (Add more tests to be more sure!)\")\n'''\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n269 271\\n269 272\\n269 273\\n269 274\\n269 275\\n269 276\\n269 277\\n269 278\\n269 279\\n269 280\\n269 281\\n269 282\\n269 283\\n269 284\\n269 285\\n269 286\\n269 287\\n269 288\\n269 289\\n269 290\\n269 291\\n269 292\\n269 293\\n269 294\\n269 295\\n269 296\\n269 297\\n269 298\\n269 299\\n269 300\\n269 301\\n269 302\\n269 303\\n269 304\\n269 305\\n269 306\\n269 307\\n269 308\\n269 309\\n269 310\\n269 311\\n269 312\\n269 313\\n269 314\\n269 315\\n269 316\\n269 317\\n269 318\\n269 319\\n269 320\\n269 321\\n269 322\\n269 323\\n269 324\\n269 325\\n269 326\\n269 327\\n269 328\\n269 329\\n269 330\\n269 331\\n269 332\\n269 333\\n269 334\\n269 335\\n269 336\\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('1 1\\n1 2\\n2 1\\n') == '3'\nassert solution('1 1\\n1 2\\n2 3\\n3 1\\n') == '1'\nassert solution('1 1\\n1 2\\n2 3\\n3 4\\n4 3\\n') == '5'\nassert solution('1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n') == '6'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == '2'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n1 4\\n4 5\\n2 5\\n3 4\\n5 1\\n2 4\\n5 4\\n1 3\\n') == '3'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n1 4\\n4 5\\n2 5\\n3 4\\n5 1\\n2 4\\n5 4\\n1 3\\n5 1\\n1 2\\n3 1\\n1 5\\n3 2\\n5 2\\n1 2\\n3 1\\n1 5\\n1 2\\n4 1\\n2 4\\n3 4\\n5 4\\n1 3\\n') == '2'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n1 4\\n4 5\\n2 5\\n3 4\\n5 1\\n2 4\\n5 4\\n1 3\\n5 1\\n1 2\\n3 1\\n1 5\\n3 2\\n5 2\\n1 2\\n3 1\\n1 5\\n1 2\\n4 1\\n2 4\\n3 4\\n5 4\\n1 3\\n') == '1'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 1\\n1"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\nassert solution('''5 2\n1 2\n1 1''') == '0'\nassert solution('''10 5\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17''') == '4'\nassert solution('''13 6\n1 2\n1 3\n2 3\n2 4\n1 5\n1 6\n1 7\n3 8\n5 9\n9 10\n9 11\n10 11\n11 12\n12 13\n13 14''') == '3'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[2]\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n\n\n\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '4'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '0'\n\nassert solution('''4\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3\n1 1 2\n1 2\n2 3\n''') == '0'\nassert solution('''3\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n0 0 0 1 2\") == \"\"\nassert solution(\"3\\n1 1 2\") == \"\"\nassert solution(\"6\\n1 0 2 3 4 5\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n1 3') == 0\nassert solution('1 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10') == 1\nassert solution('1 0 0 1 2\\n2 3\\n2 4\\n3 5\\n4 6\\n4 7\\n4 8\\n5 9\\n6 10\\n6 11\\n6 12\\n6 13\\n6 14\\n6 15\\n6 16\\n6 17\\n6 18\\n6 19\\n6 20\\n6 21\\n6 22\\n6 23\\n6 24\\n6 25\\n6 26\\n6 27\\n6 28\\n6 29\\n6 30\\n6 31\\n6 32\\n6 33\\n6 34\\n6 35\\n6 36\\n6 37\\n6 38\\n6 39\\n6 40\\n6 41\\n6 42\\n6 43\\n6 44\\n6 45\\n6 46\\n6 47\\n6 48\\n6 49\\n6 50\\n6 51\\n6 52\\n6 53\\n6 54\\n6 55\\n6 56\\n6 57\\n6 58\\n6 59\\n6 60\\n6 61\\n6 62\\n6 63\\n6 64\\n6 65\\n6 66\\n6 67\\n6 68\\n6 69\\n6 70\\n6 71\\n6 72\\n6 73\\n6 74\\n6 75\\n6 76\\n6 77\\n6 78\\n6 79\\n6 80\\n6 81\\n6 82\\n6 83\\n6 84\\n6 85\\n6 86\\n6 87\\n6 88\\n6 89\\n6 90\\n6 91\\n6 92\\n6 93\\n6 94\\n6 95\\n6 96\\n6 97\\n6 98\\n6 99\\n6 100\\n6 101\\n6 102\\n6 103\\n6 104\\n6 105\\n6 106\\n6 107\\n6 108\\n6 109\\n6 110\\n6 111\\n6 112\\n6 113\\n6 114\\n6 115\\n6 116\\n6 117\\n6 118\\n6 119\\n6 120\\n6 121\\n6 122\\n6 123\\n6 124\\n6 125\\n6 126\\n6 127\\n6 128\\n6 129\\n6 130\\n6 131\\n6 132\\n6 133\\n6 134\\n6 135\\n6 136\\n6 137\\n6 138\\n6 139\\n6 140\\n6 141\\n6 142\\n6 143\\n6 144\\n6 145\\n6 146\\n6 147\\n6 148\\n6 149\\n6 150\\n6 151\\n6 152\\n6 153\\n6 154\\n6 155\\n6 156\\n6 157\\n6 158\\n6 159\\n6 160\\n6 161\\n6 162\\n6 163\\n6 164\\n6 165\\n6 166\\n6 167\\n6 168\\n6 169\\n6 170\\n6 171\\n6 172\\n6 173\\n6 174\\n6 175\\n6 176\\n6 177\\n6 178\\n6 179\\n6 180\\n6 181\\n6 182\\n6 183\\n6 184\\n6 185\\n6 186\\n6 187\\n6 188\\n6 189\\n6 190\\n6 191\\n6 192\\n6 193\\n6 194\\n6 195\\n6 196\\n6 197\\n6 198\\n6 199\\n6 200\\n6 201\\n6 202\\n6 203\\n6 204\\n6 205\\n6 206\\n6 207\\n6 208\\n6 209\\n6 210\\n6 211\\n6 212\\n6 213\\n6 214\\n6 215\\n6 216\\n6 217\\n6 218\\n6 219\\n6 220\\n6 221\\n6 222\\n6 223\\n6 224\\n6 225\\n6 226\\n6 227\\n6 228\\n6 229\\n6 230\\n6 231\\n6 232\\n6 233\\n6 234\\n6 235\\n6 236\\n6 237\\n6 238\\n6 239\\n6 240\\n6 241\\n6 242\\n6 243\\n6 244\\n6 245\\n6 246\\n6 247\\n6 248\\n6 249\\n6 250\\n6 251\\n6 252\\n6 253\\n6 254\\n6 255') == 0\nassert solution('1 0 0 1 2\\n2 3\\n2 4\\n3 5\\n4 6\\n4 7\\n4 8\\n5 9\\n6 10\\n6 11\\n6 12\\n6 13\\n6 14\\n6 15\\n6 16\\n6 17\\n6 18\\n6 19\\n6 20\\n6 21\\n6 22\\n6 23\\n6 24\\n6 25\\n6 26\\n6 27\\n6 28\\n6 29\\n6 30\\n6 31\\n6 32\\n6 33\\n6 34\\n6 35\\n6 36\\n6 37\\n6 38\\n6 39\\n6 40\\n6 41\\n6 42\\n6 43\\n6 44\\n6 45\\n6 46\\n6 47\\n6 48\\n6 49\\n6 50\\n6 51\\n6 52\\n6 53\\n6 54\\n6 55\\n6 56\\n6 57\\n6 58\\n6 59\\n6 60\\n6 61\\n6 62\\n6 63\\n6 64\\n6 65\\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\n\n>>> solution('''\n... 5\n... 2 0 0 1 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... ''')\n'1'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... 2 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'1'\n>>> solution('''\n... 10\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... 5 6\n... 6 7\n... 7 8\n... 8 9\n... 9 10\n... ''')\n'9'\n>>> solution('''\n... 15\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... 5 6\n... 6 7\n... 7 8\n... 8 9\n... 9 10\n... 10 11\n... 11 12\n... 12 13\n... 13 14\n... 14 15\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'2'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 1 2\n... 2 1\n... ''')\n'0'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'2'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'2'\n>>> solution('''\n... 3\n... 1 0 0 0\n... 2 0 0 1\n... 1 1\n... ''')\n'2'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 3 4\n... 4 5\n... 2 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2 5\n... 1 1\n... ''')\n'0'\n>>> solution('''\n... 5\n... 1 0 0 0 2\n... 1 2\n... 2 3\n... 2 4\n... 2"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '0'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('1\\n1 1 2\\n2 3\\n3 4\\n4 5\\n') == '0'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n1 1 1\n1 2\n1 3\n1 4\n2 4\n2 3\n2 2''') == '0'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n1 1 1\n1 2\n1 3\n1 4\n2 4\n2 3\n2 2''') == '4'\nassert solution('''7\n1 1 1 1 1 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n2 1\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7''') == '6'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 0 0 1 2') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2') == '4'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5') == '0'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '0'\nassert solution('2\\n1 1\\n1 3') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 0 1 2') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2 2 0 0') == '1'\nassert solution('2 3') == '0'\nassert solution('2 3 3 4 5') == '1'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nprint('passed')\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\naz''') == 'a'\nassert solution('''1\naz''') == 'a'\nassert solution('''1\naz''') == 'a'\n\nassert solution('''2\nafogk''') == 'fgk'\nassert solution('''2\naz''') == 'a'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"pqqsz\"\n\"\"\""
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nassert solution('''3\nnn\ngnl\n''') == 'nn'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\naz\\nbf') == 'bc'\nassert solution('5\\nafogk\\nasdji') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp') == 'qoztvz'\n\n\n\"\"\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdji') == 'qoztvz'\nassert solution('nijfvj') == 'tvqhwp'\nassert solution('nijfvj') == 'tvqhwp'\nassert solution('nijfvj') == 'tvqhwp'\nassert solution('nijfvj') == 'tvqhwp'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nassert solution('''1\n1\n''') == '1'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"asd\") == \"fas\"\nassert solution(\"abd\") == \"abd\"\nassert solution(\"afk\") == \"afk\"\nassert solution(\"bghjk\") == \"bghjk\"\nassert solution(\"az\") == \"az\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('7 6\\n
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n') == 'YES\\n1 2 3'\nassert solution('2 3 4\\n') == 'NO'\nassert solution('2 3 5\\n') == 'YES\\n1 2 3'\nassert solution('2 3 4\\n') == 'NO'\nassert solution('1 2 3\\n') == 'YES\\n1 2 3'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'NO'\nassert solution('''\n4 4\n20 10 40 30\n''') == 'YES'\nassert solution('''\n4 5\n10 9 10 11\n''') == 'NO'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\\n\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"3 6\") == \"NO\\n\"\nassert solution(\"20 10 40 30\") == \"YES\\n1 2 3 4 5\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'YES\\n1 2 5'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES\\n1 2 3 4'\nassert solution('4 5') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'YES\\n1 2 3 4'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('2 3 4 5') == 'YES'\nassert solution('3 4 5 6') == 'NO'\nassert solution('3 4 5 7') == 'YES'\nassert solution('3 4 5 7') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('1 1\\n1 1\\n') == 'NO'\nassert solution('3 4\\n10 5 10 1\\n') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\"\nassert solution(\"4 4\\n20 10 40 30\") == \"NO\"\nassert solution(\"2 2\\n10 5 10\") == \"YES\\n1 2\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''6\n1 1 2 2 3 4 5 6''') == 'NO'\nassert solution('''8\n1 2 4 0 2 3 4 5 6 7''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n5\n1 3 6 8 2 9 0 10\"\"\") == 'YES'\nassert solution(\"\"\"5\n1 2 4 0 2\"\"\") == 'NO'\nassert solution(\"\"\"1\n4\n1 1 1 1 1\"\"\") == 'YES'\nassert solution(\"\"\"1\n4\n1 1 1 1 1\"\"\") == 'NO'\nassert solution(\"\"\"10\n7\n
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''2\n1 2 0''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'YES'\nassert solution('''6\n1 2 4 0 2 3 6''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n3\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"2\\n2\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n1 1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\nassert solution('''5\n1 0 0 0 0''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 0 2\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"1 2 4 0 2\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'\nassert solution('''6\n1 2 3 4 5 6 7\n''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == 'NO'\nassert solution('''8\n2 3 1 4 5 6 7 8\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1 3 3\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('1\\n2 1 3 3\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n1234 1 100 199') == '3\\n0\\n1134\\n0'\nassert solution('1\\n2 1 3 3\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('1\\n2 1 3 3\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000\\n1234 1 100 199') == '3\\n0\\n1134\\n0'\nassert solution('1\\n2 1 3 3\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000\\n1234 1 100 199\\n100 51 51 51') == '3\\n0\\n1134\\n0'\n\"\"\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 4\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 4\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 4\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 4\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''1\n1 1 1 1''') == '0\\n'\nassert solution('''2\n1 1 1 1''') == '0\\n0'\nassert solution('''4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '3\\n0\\n0\\n0'\nassert solution('''3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '3\\n0\\n0\\n0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"0\"\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\nassert solution('10\\n0 1 1 1\\n1 2 3 5\\n1 3 1 3\\n1 4 6 11\\n1 5 1 1\\n1 6 2 2\\n1 7 1 1\\n1 8 1 1\\n1 9 1 1\\n1 10 1 1\\n') == '6\\n1\\n4\\n1\\n2\\n0\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('10\\n0 1 1 1\\n1 2 3 5\\n1 3 1 3\\n1 4 6 11\\n1 5 1 1\\n1 6 2 2\\n1 7 1 1\\n1 8 1 1\\n1 9 1 1\\n1 10 1 1\\n') == '9\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n2 3 5 1\\n3 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1 1 1\\n1 2 2 2\\n1 1"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0') == '1\\n'\nassert solution('1\\n1') == '0\\n'\nassert solution('2\\n1\\n1\\n2') == '0\\n2\\n'\nassert solution('2\\n1\\n1\\n2\\n2\\n3') == '1\\n2\\n3\\n'\nassert solution('4\\n3\\n1\\n1\\n1\\n1') == '1\\n'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''1\n1\n1\n1''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''1\n1\n1\n1''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\n\n\n'''\n\n'''"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''2\n1 1 1 1\n1 1 1 1''') == '0'\nassert solution('''6\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000''') == '1134'\nassert solution('''7\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000''') == '0'\nassert solution('''10\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000\n100000000000 1 1 1000000000''') == '2'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == input\n\n'''\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nprint('All tests past.')"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nassert solution('22') == '126464252047126464252047'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('4') == 3\nassert solution('3') == 2\nassert solution('2') == 1\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''50''') == '616637752641504960390411258938643796284659823151135182403137945656916698730372180798012066731218225910193402230376958499334714551915507509324402881291569188906881756257021509411405895114770862540429301739404913637787770280595908851113335053814293820931597397430801808576083439069181888444655940375820446525553283335465690478186883105996289010316296231454111737262085876743681844998836155930196694037908745853984111609632354362302468146025474730374067678423980024620684045227807168290883120128557787178004656759331767498099780136822404255399714941654280278555904148937370857940118458699091597269661097936304683376012891348191854583493658558399573890834387598280088590795429977787629409341953950579460638037800811265969495565902653097921956559988384294645391006644413904278560432969806669111009670544361993722558006958592539167295208915664473557871733170516253012107893453138633887760295589628274819613546172969821620961168702310997075722557011497252473802226349633092426806834439542899580158129679077268918052875331618569926228345894325155538589908498211751067589984886817771757200138481606945279516643864937306857236020939800706847969887634952794241879928077888245800791653590494699684534459767600691169818542988327397212116433463722529950388901833799216964368538438675776528291433107840910766978892599107942858692666875635049836683068996660698532870531209467908711673081664185575404567478322003246890803699702974828207927492535946500178610388097439065262901872937862705206068376545681360581358302920382235354516890070980073565749593026899624021673379400182716366696987682667630140997435757315983664249852149914079278887303813142884544287362139980448868369977139049970164402513993309477576992410582056213156700255775823998112959309001757859052964560559500084800904554267633502585992600342223161919220092025849997472228928347266614871457298220849265533726673094599621737631260421819300719034088835644614917089939185251660408014501592864762219122711847348569220032411928581259409222285606878963400248564304414408140003710832638558728996036497018475551455258941904518901258370452905976177229916839960924974966379524087738530605320904036897153914364530859730365502776178294088556920912841266004216968472306344044894966120690440213022250932145459099605940600577778568996613654725082236837779968416362927537509630546586382172920710144191508353570154305718493314684855804784646988363439509580014193372492738687813337273039477646893142994342909849353715524906398874602971568170788993881882562154439013684076865798424135624958176576979573098234655292957345814603752806404151652729238269517898308414759372968852547191517604448853312794986456489797411690492768646899844167665967307057365859319382989744339989784878545098233889792595376181356287670424716139915699097343637230835293730539946098395824272499276214555814871857821348304889781609322265618748098265058946524805430241194097992866893468829742077839097839988580088422770873813758592285342053111413931029737720462930985638089404524231293935923962083300206406660162765949851688795416447917303588189876038279888897482708253715874349913489298937671925474329002438663175788681474574229323594540288609209625368202380876817584103889927092145566309565085212441329"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n\n\n\"\"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\nprint(solution(input()))\n\n\"\"\"\n\n\"\"\"\nGiven two strings s and t, determine if they are isomorphic.\n\nTwo strings are isomorphic if the characters in s can be replaced to get t.\n\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\n\nFor example,\nGiven \"egg\", \"add\", return true.\nGiven \"foo\", \"bar\", return false.\nGiven \"paper\", \"title\", return true.\nGiven \"ab\", \"aa\", return false.\n\"\"\"\n\n\"\"\"\nWe use a dictionary to map from each character to the next character. If the next character is not in the dictionary, we insert it into the dictionary.\n\nThen we iterate through the first string and go through the second string, comparing the characters in the dictionary. If we find that the next character in the second string is not in the dictionary, we return false immediately. Otherwise, we remove the current character from the dictionary. If this is the last character in the dictionary, we know that the characters map to each other. \n\nTime complexity: O(n)\nSpace complexity: O(1)\n\"\"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\nprint(solution(\"input\"))\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nprint(solution(input()))\n\n'''\nThe dance circle consists of n people, each person is\nindistinguishable from the other n-1 people.\n\nFor example, if n = 2, then the dance circle consists of\ntwo people and two round dances can be made:\n1. [1, 2] and [2, 1]\n2. [1, 2] and [2, 3]\n3. [1, 3] and [3, 1]\n4. [3, 1] and [2, 1]\n\nThus, we have 4^(n-1) ways of making two round dances.\n\nIf n = 4, then the dance circle consists of four people,\nthere are eight ways of making two round dances:\n1. [1, 2] and [2, 1]\n2. [1, 2] and [3, 4]\n3. [1, 3] and [2, 4]\n4. [1, 4] and [2, 3]\n5. [2, 3] and [1, 4]\n6. [2, 4] and [1, 3]\n7. [3, 4] and [2, 1]\n8. [3, 4] and [1, 2]\n\nNote that the number of ways is not same for n > 4.\n'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('ab') == ''\nassert solution('a') == 'a'\nassert solution('bb') == 'bb'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n15 3\ncccaabababaccbc\n''') == 'cccbbabaccbc'\nassert solution('''\n15 9\ncccaabababaccbc\n''') == 'cccccc'\nassert solution('''\n1 1\nu\n''') == ''\nassert solution('''\n1 1\na\n''') == ''\nassert solution('''\n1 1\n''') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\nTest case\n15 1\ncccaabababaccbc\n\nOutput\ncccbbabaccbc\n\n15 2\ncccaabababaccbc\n\nOutput\ncccccc\n\"\"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('cccc') == ''\nassert solution('cccabababac') == 'cccbbabaccbc'\nassert solution('cccbbababac') == 'cccccc'\nassert solution('cccbbababac') == 'cccccc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n'''"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.rstrip()\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''15 3''') == 'cccbbabaccbc'\nassert solution('''1 1''') == 'def'\nassert solution('''12 7''') == ''\nassert solution('''abcde''') == 'abcd'\nassert solution('''abcdef''') == 'abcde'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == ''\nassert solution('''cccaabababaccbc''') == ''\nassert solution('''cccccc''') == ''\nassert solution('''cccaabababaccbc''') == 'cccccc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == ''\nassert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20'\nassert solution('1 2\\n2 1\\n1 2\\n') == '2'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8'\nassert solution('1 2\\n2 1\\n1 2\\n') == '2'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == \"8\"\nassert solution('''4 2\n4 2\n4 2\n4 2\n1 2\n1 5\n2 3''') == \"20\"\nassert solution('''5 3\n1 3\n3 3\n3 3\n3 3\n1 2\n1 5\n2 3''') == \"20\"\nassert solution('''5 4\n3 3\n3 3\n3 3\n3 3\n1 2\n1 5\n2 3\n1 3\n1 3\n1 3\n1 3''') == \"7\"\nassert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n5 5\n2 3\n2 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3''') == \"8\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 0 2 0') == 8\nassert solution('2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == 20\nassert solution('2 4\\n4 1\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == 22\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5''') == '8'\n\nassert solution('''2 1\n1 1\n''') == '0'\n\nassert solution('''2 1\n2 1\n''') == '0'\n\nassert solution('''1 1\n1 1\n''') == '0'\n\nassert solution('''1 1\n1 1\n1 1\n''') == '0'"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''4 2\n2 3\n4 2\n2 3\n''') == '9'\n\nassert solution('''8 9\n2 4\n1 1\n2 1\n3 1\n1 1\n4 1\n2 1\n3 1\n1 1\n3 1\n2 1\n''') == '10'\n\nassert solution('''8 9\n2 4\n1 1\n2 1\n3 1\n1 1\n4 1\n2 1\n3 1\n1 1\n3 1\n2 1\n''') == '9'"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 4\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''3 3\n3 2 1\n2 3\n1 3\n''') == '3'\nassert solution('''2 1\n1 2\n3 4\n''') == '3'\nassert solution('''1 1\n2 1\n''') == '2'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''2 2\n1 2\n''') == '0'\nassert solution('''7 7\n3 5 3 5 3 5 3\n6 4\n2 4\n4 6\n3 4\n2 3\n1 2\n2 3\n2 4\n2 4\n2 5\n2 5\n2 6\n2 6\n2 6\n2 7\n1 7\n2 7\n3 7\n2 7\n2 7\n2 7\n2 8\n2 9\n2 10\n3 10\n2 10\n2 11\n2 11\n2 11\n2 11\n2 11\n2 11\n2 11\n2 12\n2 12\n2 12\n2 12\n2 12\n2 12\n2 13\n2 13\n2 13\n2 13\n2 13\n2 14\n2 14\n2 14\n2 14\n2 14\n2 14\n2 15\n2 15\n2 15\n2 15\n2 15\n2 16\n2 16\n2 16\n2 16\n2 16\n2 17\n2 17\n2 17\n2 17\n2 17\n2 17\n2 17\n2 18\n2 18\n2 18\n2 18\n2 18\n2 18\n2 18\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n2 19\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''5 4\n4 2 1 3 2\n1 5\n2 3\n3 4\n4 5\n''') == '7'\n\nassert solution('''3 3\n1 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''5 4\n4 2 1 3 2\n4 2\n1 5\n2 3\n3 4\n4 5\n''') == '6'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........'''\n    ) == '3'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....'''\n    ) == '3'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....'''\n    ) == '-1'\nassert solution(\n'''3 3\n*.*\n.*.\n*.*\n'''\n    ) == '-1'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....'''\n    ) == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n....') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n....') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n....') == '-1'\nassert solution('3 3\\n*.*\\n.*\\n*.*\\n') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 8''') == '''3\n3 4 1\n3 5 2'''\nassert solution('''6 7''') == '''-1'''\nassert solution('''5 6''') == '''3\n2 2 1'''\nassert solution('''5 7''') == '''-1'''\nassert solution('''5 6''') == '''-1'''\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('input/grid1.txt').read()) == '3 4 1'\nassert solution(open('input/grid2.txt').read()) == '3 5 2'\nassert solution(open('input/grid3.txt').read()) == '3 5 1'\nassert solution(open('input/grid4.txt').read()) == '2 3 1'\nassert solution(open('input/grid5.txt').read()) == '3 3 1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5 7\n***.*\n*.**.\n*.***\n**.*.\n.*.*.*\n''') == '2'\nassert solution('''\n5 7\n....*....\n....*....\n....*....\n....*....\n....*....\n''') == '-1'\nassert solution('''\n5 7\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n''') == '-1'\nassert solution('''\n5 7\n*.**.\n.*.*.*\n.*.*.*\n.*.*.*\n.*.*.*\n''') == '-1'\nassert solution('''\n5 7\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n.*.*.*.*.*\n''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '3'\n\nassert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''7 4\n.*.*.\n.*..*\n.*.*.\n*.*.*\n...**\n....*\n''') == '2'\n\nassert solution('''4 7\n*...\n..**\n.*.*\n.*.*\n''') == '3'\n\nassert solution('''8 8\n..**.\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n.*.*.\n''') == '3'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n....*...') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n3 4 1\\n3 5 2\"\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '3'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == \"Yes\"\nassert solution(575) == \"Yes\"\nassert solution(1) == \"No\"\nassert solution(567) == \"No\"\nassert solution(6) == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == 'No'\nassert solution('1') == 'Yes'\nassert solution('76543') == 'No'\nassert solution('57343') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1') == 'No'\nassert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(test_input) == \"Yes\"\nprint(solution(read_input()))\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"567\") == \"No\"\nassert solution(\"567\") == \"No\"\nassert solution(\"567\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n100\n''') == 'Yes'\nassert solution('''\n101\n''') == 'No'\nassert solution('''\n10\n''') == 'Yes'\nassert solution('''\n1010\n''') == 'No'\nassert solution('''\n112\n''') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"572\") == \"Yes\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"333\") == \"No\"\nassert solution(\"333\") == \"No\"\nassert solution(\"333\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"5755\") == \"No\"\nassert solution(\"574\") == \"Yes\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"9999\") == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Draw'\nassert solution('1 2') == 'Bob'\nassert solution('3 4') == 'Bob'\nassert solution('1 2') == 'Alice'\nassert solution('2 2') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"6 8\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"\nassert solution(\"2 4\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('5 4') == 'Bob'\nassert solution('10 9') == 'Draw'\nassert solution('5 5') == 'Draw'\nassert solution('10 11') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"8 7\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"\nassert solution(\"8 9\") == \"Alice\"\nassert solution(\"9 3\") == \"Bob\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('10 5') == 'Bob'\nassert solution('2 3') == 'Draw'\nassert solution('1 3') == 'Alice'\nassert solution('1 2') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 6') == 'Bob'\nassert solution('1 13') == 'Draw'\nassert solution('1 11') == 'Alice'\nassert solution('8 11') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('2 7') == 'Bob'\nassert solution('4 3') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('2 5') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 7') == 'Alice'\nassert solution('8 7') == 'Bob'\nassert solution('7 9') == 'Bob'\nassert solution('3 7') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"8 6\"\n) == \"Alice\"\nassert solution(\n    \"9 2\"\n) == \"Bob\"\nassert solution(\n    \"10 2\"\n) == \"Draw\"\nassert solution(\n    \"1 2\"\n) == \"Alice\"\nassert solution(\n    \"1 2\"\n) == \"Bob\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''happy,newyear,enjoy''') == 'happy newyear enjoy'\nassert solution('''NewYear''') == 'NewYear'\nassert solution('''New,Year''') == 'New,Year'\nassert solution('''Happy,New,Year''') == 'Happy,New,Year'\nassert solution('''y,e,s,a,r,p,p,y''') == 'y e s a r p y'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"h,i,s,a,,m,a,o,,,a,n,y,e,p,p,i,n,g,e\") == \"h i s a m a o n y e p p i n g e\"\nassert solution(\"a,b,c,d,e\") == \"a b c d e\"\nassert solution(\"a,b,c,d,e,f,g,h\") == \"a b c d e f g h\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l\") == \"a b c d e f g h i j k l\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"sunshine,newyear,enjoy\") == \"sunshine newyear enjoy\"\nassert solution(\"sunshine,newyear,enjoy,farewell\") == \"sunshine newyear enjoy farewell\"\nassert solution(\"i,love,computers\") == \"i love computers\"\nassert solution(\"one,two,three,four,five\") == \"one two three four five\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,world\") == \"hello world\"\nassert solution(\"and,apple,a\") == \"and apple a\"\nassert solution(\"and,apple,a,my,sand,e,s,and,many,sand,s,s,and,one,sand,s,and,sand,sand,many,sand,s,sand,sand,many,sand,s,sand,sand,sand,sand,sand,sand,sand,and,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,sand,"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"enjoy,frisbee,tron,wiz,wb\") == \"enjoy frisbee tron wb\"\nassert solution(\"wa,wb,bw,wz,zw,rz,wz\") == \"wa wb wz rz wz zw\"\nassert solution(\"s,k,r,c,a,n,g,h,o,d,f,z,l,p,b,v,e,m,u,t,w,y,j,i,u,n,g,h,o,b\") == \"s k r c a n g h o b v e m u t w y j i u n g h o b\"\nassert solution(\"g,y,b,c,a,n,d,f,w,o,b,g,g,h,e,v,a,c,e,n,p,e,t,a,g,f,v,c,b,n,l,e,e,r,g,m,a,n,c,h,u,d,p,u,h,v,w,l,n,i,e,s,t,o,r,g,b,a,e,r,h,b,g,i,l,p,e,a,o,t,o,m,c,t,h,e,r,a,r,e,g,b,s,r,r,b,a,n,a,t,e,f,e,c,p,u,w,r,r,h,b,g,e,r,b,v,a,g,l,f,v,c,b,v,b,v,g,s,t,h,o,b,g,n,g,g,a,y,o,r,e,b,g,s,h,o,p,p,h,h,p,u,m,a,y,a,g,l,h,w,n,a,h,w,n,s,t,n,s,c,g,a,y,c,w,t,n,s,a,g,s,h,o,c,b,o,g,n,h,e,v,b,v,c,b,t,g,m,u,c,e,f,o,t,d,w,c,h,e,w,b,v,o,c,r,g,d,r,e,h,d,i,p,u,g,b,b,g,e,a,y,h,a,r,e,b,w,a,g,t,c,e,n,b,v,e,n,r,a,u,v,h,o,u,n,w,h,t,o,u,a,p,r,b,a,o,a,g,n,a,e,o,u,d,h,a,r,s,t,p,b,g,v,c,g,h,o,n,e,w,a,o,p,d,n,u,w,b,g,e,n,e,v,c,p,a,w,w,b,a,s,f,w,o,v,e,c,n,a,g,a,r,e,n,p,e,s,u,b,w,g,f,w,v,a,n,r,e,f,l,e,l,a,a,b,t,r,g,e,p,b,n,e,v,f,c,r,p,e,c,r,b,g,v,t,f,t,p,p,r,e,r,d,u,e,d,o,f,r,d,a,g,s,a,r,e,l,e,m,b,d,a,e,v,s,r,h,e,r,a,b,s,t,e,u,a,f,e,a,w,b,g,u,p,s,b,w,b,g,t,f,a,w,v,h,a,e,g,b,a,w,a,n,g,s,e,f,s,a,e,a,e,a,a,s,t,o,m,b,g,g,s,c,r,g,e,u,g,h,t,b,s,t,a,g,b,c,e,d,n,e,p,s,w,a,w,w,w,w,g,e,c,d,a,b,a,g,a,s,g,g,e,e,v,t,e,f,w,b,f,p,a,r,e,f,c,p,d,v,s,b,v,f,a,g,f,a,w,g,e,p,u,t,g,a,h,v,v,o,g,g,h,b,g,a,s,f,r,g,u,s,r,g,c,v,a,c,w,g,w,b,e,g,n,s,e,s,r,f,r,d,e,s,w,g,s,w,s,r,b,r,f,g,g,r,b,n,g,c,a,p,s,r,p,o,e,g,g,g,r,a,d,d,s,t,g,t,p,e,f,r,f,g,a,w,d,s,t,c,g,a,e,b,a,n,a,e,a,t,e,b,p,r,g,s,r,g,w,t,o,g,b,g,g,g,v,u,e,v,p,r,b,g,a,a,g,p,e,w,a,e,g,v,r,b,g,s,t,w,e,a,c,g,t,e,v,a,g,p,o,g,n,d,a,g,g,e,r,f,t,a,w,v,o,b,t,g,v,f,g,v,h,w,a,c,w,v,h,e,a,v,h,a,d,e,v,b,g,b,p,t,e,g,e,b,p,e,w,t,o,g,w,b,g,v,p,b,g,h,w,r,b,e,g,s,d,w,v,h,h,d,a,a,g,t,b,p,c,g,t,r,g,b,g,e,w,g,a,p,r,b,s,t,g,a,g,a,s,a,s,e,w,a,f,c,g,g,a,r,f,g,g,e,g,e,g,g,g,g,w,f,g,e,r,w,w,f,r,e,w,g,e,f,e,t,g,e,r,g,b,g,g,r,e,p,e,v,c,a,g,t,g,e,g,r,f"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('x,y,z') == 'x y z'\nassert solution('x,y,z,a,b,c,d') == 'x y z a b c d'\nassert solution('x,y,z,a,b,c,d,e,f,g,h,i,j,k,l') == 'x y z a b c d e f g h i j k l'\nassert solution('x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('u,i,u,t,s,s,i,t,i,a,t,h') == 'u i u t s s i a t h'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,world,people\") == \"hello world people\"\nassert solution(\"hello,world,people\") == \"hello world people\"\nassert solution(\"hello,world,people\") == \"hello world people\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '1\\n2\\n'\nassert solution('2 2\\n2 0\\n0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n') == '1\\n2\\n'\nassert solution('3 3\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '2\\n1\\n'\nassert solution('3 3\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '2\\n1\\n'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0') == '1\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1\\n1'\nassert solution('2 1\\n2 0\\n0 0\\n0 0\\n0 0') == '2\\n1'\nassert solution('2 1\\n2 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1\\n1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\n\"\"\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\nassert solution('5 1\\n3 1\\n4 1\\n5 1\\n1 0') == '1\\n2\\n3\\n4\\n5'\nassert solution('5 1\\n3 1\\n4 1\\n5 1\\n2 0') == '1\\n2\\n3\\n4\\n5'\nassert solution('5 1\\n3 1\\n4 1\\n5 1\\n0 0') == '1\\n2\\n3\\n4\\n5'\nassert solution('5 1\\n3 1\\n4 1\\n5 1\\n-1 0') == '1\\n2\\n3\\n4\\n5'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"-1 0\") == \"2\"\nassert solution(\"1 0\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1\\n'\nassert solution(\n'''2 2\n2 0\n0 0\n1 0\n-1 0\n1 0''') == '2\\n1\\n'\nassert solution(\n'''2 2\n2 0\n2 0\n2 0\n2 0''') == '2\\n2\\n'\nassert solution(\n'''2 2\n-1000000000 1000000000\n1 0\n0 0\n1000000000 0\n0 0''') == '2\\n2\\n'\nassert solution(\n'''4 5\n0 0\n1 1\n0 2\n3 2\n0 2\n-1 3\n2 3\n0 3\n1 2\n0 2\n3 2\n3 0\n1 0\n2 0\n2 0\n3 0\n1 3\n1 0\n0 3\n1 2\n0 2\n3 2\n3 0\n0 0\n0 0\n1 0\n0 0\n1 0\n2 0\n2 0\n3 0\n1 0\n1 0\n1 0\n2 0\n0 2\n1 2\n1 0\n0 1\n0 0\n1 3\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n3 2\n1 2\n2 2\n3 0\n0 2\n2 2\n2 2\n3 0\n0 0\n3 0\n1 2\n0 2\n3 2\n1 2\n3 2\n0 2\n2 2\n3 0\n0 0\n2 2\n0 2\n3 2\n3 0\n0 0\n2 2\n3 2\n0 2\n3 2\n1 2\n2 2\n3 0\n0 0\n1 0\n1 0\n1 0\n3 2\n0 2\n1 2\n0 2\n1 2\n0 2\n3 2\n1 2\n0 2\n1 2\n1 0\n0 2\n1 2\n3 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 0\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n1 2\n1 2\n1 2\n0 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n0 2\n1 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n0 2\n1 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n1 2\n1 2\n0 2\n0 2\n0 2\n0 2\n1 2\n0 2\n0 2\n0"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\"\n) == \"2\\n1\\n\"\nassert solution(\n\"3 3\\n0 1 2\\n0 0 0\\n1 0 2\\n1 1 1\\n2 1 2\\n2 2 1\\n\"\n) == \"1\\n2\\n1\\n\"\nassert solution(\n\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\"\n) == \"2\\n1\\n\"\nassert solution(\n\"2 2\\n1 0\\n0 0\\n0 0\\n0 0\\n\"\n) == \"2\\n1\\n\"\nassert solution(\n\"10 10\\n1 2 3 4 5 6 7 8 9 10\\n10 10 10 10 10 10 10 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n5 6 7 8 9 10\\n\"\n) == \"1\\n2\\n3\\n4\\n5\\n\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == \"2\\n1\"\nassert solution('''2 2\n2 0\n0 0\n-1 0\n-1 0''') == \"1\\n1\"\nassert solution('''2 2\n1000000 1\n1000000 1''') == \"1\\n1\"\nassert solution('''2 1\n2\n2\n2\n2''') == \"1\\n2\"\nassert solution('''2 100\n2\n2\n2\n2''') == \"1\\n1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n2 1\n2 1''') == '1'\n'''\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 14\n'''\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '14'\nassert solution('''3''') == '21'\nassert solution('''4''') == '25'\nassert solution('''5''') == '49'\nassert solution('''6''') == '81'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == 14\n\n'''\n\na = int(input())\nprint(a+a**2+a**3)"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 14\nassert solution(3) == 44\nassert solution(4) == 108\nassert solution(5) == 244\nassert solution(6) == 352\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == 14\nassert solution(3) == 26\nassert solution(4) == 40\nassert solution(5) == 55\nassert solution(6) == 66\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 14\nprint('Test 1 PASSED!!!\\n')\n\nassert solution('3') == 30\nprint('Test 2 PASSED!!!\\n')\n\nassert solution('4') == 40\nprint('Test 3 PASSED!!!\\n')\n\nassert solution('5') == 100\nprint('Test 4 PASSED!!!\\n')\n\nassert solution('6') == 216\nprint('Test 5 PASSED!!!\\n')"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 14\nassert solution(3) == 37\nassert solution(4) == 50\nassert solution(5) == 73\nassert solution(10) == 495\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '3'\nassert solution('3') == '9'\nassert solution('10') == '55'\nassert solution('100') == '3370'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 14\nassert solution(3) == 34\nassert solution(4) == 46\nassert solution(5) == 65\nassert solution(6) == 76\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 1\nassert solution('2') == 3\nassert solution('5') == 19\nassert solution('10') == 95\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#."
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"1 2\\n1.\\n.\\n.\\n.\\n\") == \"No\"\nassert solution(\"1 1\\n#\\n#\\n#\\n#\\n\") == \"Yes\"\nassert solution(\"1 1\\n#\\n#\\n#\\n#\\n\") == \"No\"\nassert solution(\"1 1\\n#\\n#\\n#\\n#\\n\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n#.#\\n.#.\") == \"Yes\\n\"\nassert solution(\"3 4\\n.##.\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n\") == \"No\\n\"\nassert solution(\"2 2\\n#.#\\n.#.\") == \"Yes\\n\"\nassert solution(\"5 5\\n.#.#.\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n\") == \"Yes\\n\"\nassert solution(\"5 4\\n.#.#.\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n.#.#.\\n\") == \"No\\n\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('#.#\\n.#.\\n#.#\\n#.\\n#.#') == \"Yes\"\nassert solution('#.\\n#.\\n#.\\n#.\\n#.#') == \"No\"\nassert solution('#.#\\n.#.\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\\n#.#') == \"Yes\"\nassert solution('#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#') == \"No\"\nassert solution('#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#') == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"#.#\") == \"Yes\"\nassert solution(\"#.#\\n#.#\") == \"Yes\"\nassert solution(\"#.#\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"#.#\\n#.#\\n#.#\\n#.#\") == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"#.#\") == \"Yes\"\nassert solution(\"..#\") == \"Yes\"\nassert solution(\"#.\") == \"No\"\nassert solution(\"#\") == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 1 3') == '4'\nassert solution('4 1 4') == '10'\nassert solution('1 5 2') == '53'\nassert solution('1 1 3') == '4'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5 3') == '53'\nassert solution('1 5 2') == '53'\nassert solution('9 2 3') == '36'\nassert solution('2 2 4') == '2'\nassert solution('1 2 3') == '4'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 3 2') == '9'\nassert solution('1 3 9') == '18'\nassert solution('1 5 9') == '15'\nassert solution('1 5 9') == '15'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3''') == '53'\nassert solution('''1 5 2''') == '53'\nassert solution('''2 4 5''') == '13'\nassert solution('''5 3 1''') == '9'\nassert solution('''2 4 1''') == '5'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 5 2') == '53'\nassert solution('1 2 2') == '5'\nassert solution('7 8 6') == '18'\nassert solution('1 2 3') == '4'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '53'\nassert solution('1 5 2') == '53'\nassert solution('10 9 8') == '108'\nassert solution('1 8 3') == '108'\nassert solution('3 8 6') == '63'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"53\""
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('5 1 2') == '53'\nassert solution('2 1 2') == '22'\nassert solution('9 7 8') == '53'\nassert solution('9 7 8') == '53'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 6 2') == '45'\nassert solution('7 8 2') == '47'\nassert solution('1 2 2') == '2'\nassert solution('1 9 2') == '7'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    4980\n    7980\n    6980\n    \"\"\"\n) == \"15950\"\n\nassert solution(\n    \"\"\"\n    5\n    40\n    14\n    44\n    15\n    29\n    \"\"\"\n) == \"10125\"\n\nassert solution(\n    \"\"\"\n    5\n    100\n    80\n    70\n    60\n    50\n    \"\"\"\n) == \"10125\"\n\nassert solution(\n    \"\"\"\n    5\n    19\n    27\n    25\n    23\n    22\n    \"\"\"\n) == \"18550\"\n\nassert solution(\n    \"\"\"\n    5\n    30\n    24\n    23\n    22\n    \"\"\"\n) == \"19600\""
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n5\\n7\") == \"11\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''2\n1500\n2000\n3000''') == '3500'\nassert solution('''2\n2000\n3000\n6000''') == '4900'\nassert solution('''4\n100000\n900000\n800000\n500000''') == '900000'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5080\\n3920\\n7980\") == \"15950\"\nassert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\nassert solution(\"2\\n5080\\n3920\") == \"15950\"\nassert solution(\"1\\n5080\") == \"3920\"\nassert solution(\"0\") == \"\"\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n828\\n150\\n') == '1116'\nassert solution('3\\n164\\n266\\n') == '4499'\nassert solution('4\\n874\\n1580\\n220\\n') == '17554'\nassert solution('5\\n773\\n1566\\n1464\\n1461\\n') == '24525'\nassert solution('6\\n719\\n1582\\n1507\\n1599\\n1668\\n') == '29351'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n4980\n7980\n6980'''\n) == '15950'\n\nassert solution(\n'''2\n5\n4\n3\n2\n1'''\n) == '6'\n\nassert solution(\n'''2\n5\n6\n3\n2\n1'''\n) == '7'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('2\\n1\\n5') == '3'\nassert solution('3\\n1\\n4') == '7'\nassert solution('4\\n1\\n2\\n3') == '7'\nassert solution('5\\n3\\n2\\n1') == '10'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n1\\n') == '0\\n'\nassert solution('2\\n2\\n') == '2\\n'\nassert solution('3\\n1\\n2\\n') == '2\\n'\nassert solution('3\\n2\\n1\\n') == '3\\n'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('9\\n8\\n7\\n6\\n5') == '15'\nassert solution('4\\n1\\n2\\n3') == '3'\nassert solution('5\\n6\\n7\\n8\\n9') == '6'\nassert solution('6\\n7\\n8\\n9\\n10') == '7'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AB') == '2'\nassert solution('ABC') == '5'\nassert solution('ABCD') == '7'\nassert solution('ABCDE') == '8'\nassert solution('ABCDEFG') == '11'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"123\\n123\\n123\\n123\\n123\") == \"0\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"0\"\nassert solution(\"3\\n3\\n3\\n3\\n3\") == \"0\"\nassert solution(\"8\\n8\\n8\\n8\\n8\") == \"0\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''29\n20\n7\n35\n120''') == '215'\n'''\nassert solution('''29\n20\n7\n35\n120''') == '215'\n'''\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"\") == \"\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"\"\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom operator import mul"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC Don\\nARC Curry\\nAGC Pasta\\nAPC Ramen\\nATC Hanbagu\\n\") == \"215\"\nassert solution(\"30\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n11\") == \"11\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n15\") == \"15\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n13\") == \"13\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n21\") == \"21\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 30\") == \"7.5\"\nprint(solution(stdin))\n'''\n\n'''\nExplanation of solution:\n- In an equation, x is the variable representing A[i], and y is the variable representing the sum of A[i] and 1.\n- The equation is: A[i] + 1 = y, which means x = y - A[i], which is the inverse of A[i].\n- The above equation is not mathematically equivalent to: A[i] = (y - A[i]) / A[i], but it is equivalent to A[i] = (y - A[i]) * A[i] / A[i]^2\n- For example, say we have two equations:\nA[0] = 10, A[1] = 30\n10 + 1 = 31\n30 + 1 = 31\n31 / 31 = 0\n31 / 31 * 31 / 31 = 0\n31 / 31 * 31 / 31 * 31 / 31 = 1\nA[1] / A[0] = 31 / 10 = 7.5\n'''\n\n'''\nAlternate solution:"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n10 30\n''') == '7.5'\nassert solution('''\n3\n10 30 100\n''') == '7.49999'\nassert solution('''\n5\n1 2 3 4 5\n''') == '0.0'\nassert solution('''\n3\n5 9 4 3\n''') == '2.5'\nassert solution('''\n2\n10 5\n''') == '1.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"7.5\"\nprint(solution(input))\n\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30') == '7.5'\n'''"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n10 30'''\n) == '7.5'\nassert solution(\n'''2\n10 30'''\n) == '7.5'\n\nassert solution(\n'''3\n10 30 100'''\n) == '5.0'\nassert solution(\n'''3\n10 30 100'''\n) == '5.0'\nassert solution(\n'''4\n10 30 100 1000'''\n) == '0.25'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n10 30\\n') == '7.5'\nassert solution('2\\n10 30\\n') == '7.5'\nassert solution('2\\n10 30\\n') == '7.5'\nassert solution('2\\n10 30\\n') == '7.5'\nassert solution('2\\n10 30\\n') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('1 2 3 4 5') == '1'\nassert solution('10 30') == '7.5'\nassert solution('1 2 3 4 5') == '1'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '7.5'\nprint(solution(stdin))\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n10 30\\n') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('20 100') == '4.5'\nassert solution('100 30') == '7.5'\nassert solution('1000 1000') == '4.5'\nassert solution('1000 1000') == '4.5'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('2 2\\n1\\n1\\n2') == '0'\nassert solution('2 3\\n1\\n2\\n3\\n4\\n5\\n6') == '1'\nassert solution('2 2\\n1\\n1\\n2') == '0'\nassert solution('2 3\\n1\\n2\\n3\\n4\\n5\\n6') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('3 2') == '1'\nassert solution('15 3') == '1'\nassert solution('2 2') == '0'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 1\n1000\n2000\n3000\n4000\n5000''') == '0'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '0'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '0'\nassert solution('''2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n'''\nfrom math import *"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 1') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == \"2\"\nassert solution('''5 4\n10\n15\n11\n14\n12''') == \"1\"\nassert solution('''1 2\n1000\n1000\n1000\n1000\n1000''') == \"0\"\nassert solution('''10 5\n2\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == \"2\"\nassert solution('''10 5\n9\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == \"0\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == \"2\"\nassert solution('''5 3\n10\n15\n11\n14\n12''') == \"2\"\nassert solution('''5 4\n1\n1\n1\n1\n1''') == \"0\"\nassert solution('''2 2\n1\n1''') == \"0\"\nassert solution('''6 10\n10\n10\n10\n10\n10\n10''') == \"0\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('10\\n15\\n11\\n14\\n12\\n13\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '0'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('Bb') == 'a'\nassert solution('Ab') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('A') == 'a'\nassert solution('b') == 'b'\nassert solution('B') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('b') == 'a'\nassert solution('B') == 'a'\nassert solution('Bb') == 'a'\nassert solution('bB') == 'a'\nassert solution('Bb') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"A\") == \"a\"\nassert solution(\"b\") == \"a\"\nassert solution(\"B\") == \"a\"\nassert solution(\"BA\") == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"A\"\n\nprint(solution(\"a\"))\nprint(solution(\"B\"))"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('BO') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2') == '6'\n\n\"\"\"\n\n\"\"\"\nThe description of the problem is quite straightforward:\n\nFor a set of positive integer K and a positive integer S,\nthe problem is to count the number of ways to make a subset of {0, 1,..., K-1} of length S that have no common elements.\n\nAn array A is a subset of {0, 1,..., K-1} if A is a subset of {0, 1,..., K-1} and no element a in A is equal to a in A.\n\nFor example, {0, 1, 2} is a subset of {0, 1, 2} and no element a in {0, 1, 2} is equal to a in {0, 1, 2}.\n\nGiven a sequence A of length S, the goal is to count the number of ways to make a subset of A that have no common elements.\n\nInput\nThe first line contains a single integer T denoting the number of test cases.\nThe first line of each test case contains two space-separated integers K and S.\nThe second line contains a single integer A of length at most 10000.\n\nOutput\nFor each test case, output a single integer denoting the number of ways to make a subset of A that have no common elements.\n\nConstraints\n1\u2264T\u226410\n0\u2264K\u226450 \n0\u2264S\u226450 \n0\u2264A\u226410 \n\nExamples\n\nInput\n3 \n2 4\n0 1\n2 3\n0 1\n0\n0\n0\n2\n3\n3\n3\n3\n1\n3\n0\n\nOutput\n4\n2\n3\n1\n0\n\nExplanation\n\nTest Case 0:\nThere are four ways to make a subset of {0, 1, 2} that have no common elements.\n- {0, 1, 2} \n- {0, 1} \n- {0} \n- {1, 2}\n\nTest Case 1:\nThere are two ways to make a subset of {0, 1, 2} that have no common elements.\n- {0, 1} \n- {1, 2}\n\nTest Case 2:\nThere is one way to make a subset of {0, 1, 2} that has no common elements.\n- {0}\n\nTest Case 3:\nThere is no way to make a subset of {0, 1, 2} that has no common elements.\n- There are no common elements.\n\nTest Case 4:\nThere is no way to make a subset of {0, 1, 2} that has no common elements.\n- There are no common elements.\n\n\"\"\"\n\nT = int(input())\nfor t in range(1, T + 1):\n    K, S = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    s = []\n    for i in range(len(A)):\n        if A[i] not in s:\n            s.append(A[i])\n    if len(s) == S:\n        print(1)\n    else:\n        print(S - len(s))\n\n\"\"\"\nNote:\nThe idea is to consider the following example.\n\nWe have to make the subset of {0, 1, 2} that is possible to have no common elements.\n\nA subset of {0, 1, 2} is possible to have no common elements if one of the elements in the subset is equal to all the elements in the subset.\n\nFor example,\n- A subset of {0, 1, 2} is possible to have no common elements if one of the elements in the subset is equal to {0}.\n- A subset of {0, 1, 2} is possible to have no common elements if one of the elements in the subset is equal to {1}.\n- A subset of {0, 1, 2} is possible to have no common elements if one of the elements in the subset is equal to {2}.\n\nNow, we only need to find the number of ways in which we can make the subset that has no common elements.\n\nFor the previous example, we have four ways to make the subset {0, 1, 2} that has no common elements.\n\nLet F(S) be the number of ways in which we can make the subset that has no common elements.\n\nFor example,\n\nF(2) = 4\n\nF(3) = 8\n\nF(4) = 16\n\nWe can see that F(S) is equal to F(3) * F(2) = 8 * 4 = 16.\n\nF(S) = F(S-1) + F(S-2) + F(S-3) + F(S-4)\n\nF(S-1) = F(S-1) + F(S-2) + F(S-3) + F(S-4)\n\nF(S-2) = F(S-1) + F(S-3) + F(S-4)\n\nF(S-3) = F(S-1) + F(S-2)\n\nF(S-4) = F(S-1)\n\nSo, we can deduce that F(S) = F(S-1) + F(S-2) + F(S-3) + F(S-4) = F(S-1) + F(S-2) + F(S-3) + F(S-4) = 2 * F(S-2) + 2 * F(S-3) + 2 * F(S-4) = 2 * (F(S-2) + F(S-3) + F(S-4))\n\nThis is the formular of the binomial coefficient.\n\nInput\nThe first line contains an integer T denoting the number of test cases.\nThe first line of each test case contains two space-separated integers K and S.\nThe second line contains a single integer A of length at most 10000.\n\nOutput\nFor each test case, output a single integer denoting the number of ways to make a subset of A that have no common elements.\n\nConstraints\n1\u2264T\u226410\n0\u2264K\u226450 \n0\u2264S\u226450 \n0\u2264A\u226410 \n\nExamples\n\nInput\n3 \n2 4\n0 1\n2 3\n0 1\n0\n0\n0\n2\n3\n3\n3\n3\n3\n1\n3\n0\n\nOutput\n4\n2\n3\n1\n0\n\nExplanation\n\nTest Case 0:\nThere are four ways to make a subset of {0, 1, 2} that have no common elements.\n- {0, 1, 2} \n- {0, 1} \n- {0} \n- {1, 2}\n\nTest Case 1:\nThere are two ways to make a subset of {0, 1, 2} that have no common elements.\n- {0, 1} \n- {1, 2}\n\nTest Case 2:\nThere is one way to make a subset of {0, 1, 2} that has no common elements.\n- {0}\n\nTest Case 3:\nThere is no way to make a subset of {0, 1, 2} that has no common elements.\n- There are no common elements.\n\nTest Case 4:\nThere is no way to make a subset of {0, 1, 2} that has no common elements.\n- There are no common elements.\n\n\"\"\"\n\nT = int(input())\nfor t in range(1, T + 1):\n    K, S = [int(i) for i in input().split()"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 2\") == \"6\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"8 11\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 4\") == \"0\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 2\") == \"6\"\nassert solution(\"1 0\") == \"3\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 2\") == \"6\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 2\n''') == '6'\n\nassert solution('''2 1\n''') == '6'\n\nassert solution('''2 2\n''') == '2'\n\nassert solution('''2 2\n''') == '2'\n\nassert solution('''1000 100\n''') == '0'"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0, 2) == 6\nassert solution(2, 0) == 6\nassert solution(2, 2) == 12\nassert solution(2, 2) == 12\nassert solution(2, 2) == 12\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 5') == '5'\nassert solution('1 1') == '0'\nassert solution('1000 2') == '0'\nassert solution('1 1000000000') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '0'\nassert solution('2 4') == '2'\nassert solution('10 6') == '3'\nassert solution('10 7') == '1'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '1905'\n) == 'YYMM'\nassert solution(\n    '0105'\n) == 'AMBIGUOUS'\nassert solution(\n    '1501'\n) == 'NA'\nassert solution(\n    '0515'\n) == 'YYMM'\nassert solution(\n    '0515'\n) == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('190501') == 'AMBIGUOUS'\nassert solution('051905') == 'YYMM'\nassert solution('05190501') == 'AMBIGUOUS'\nassert solution('19050101') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1905') == '1905'\nassert solution('1905') == '1905'\nassert solution('1905') == '1905'\nassert solution('1905') == '1905'\nassert solution('1905') == '1905'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1905') == '1905'\nassert solution('XX19') == '1905'\nassert solution('1905') == '1905'\nassert solution('MMXX19') == '1905'\nassert solution('1905') == '1905'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('0519') == 'MMYY'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"1905\"\nassert solution(\"0909\") == \"0909\"\nassert solution(\"199101\") == \"YYMM\"\nassert solution(\"09091\") == \"AMBIGUOUS\"\nassert solution(\"199101\") == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YYMM\"\n\nAssume that:\n 1 <= |S| <= 10^5\n 0 <= int(S[i]) <= 9\n'''\n\nfrom datetime import datetime"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0113\") == \"MMYY\"\nassert solution(\"1901\") == \"AMBIGUOUS\"\nassert solution(\"2100\") == \"NA\"\nassert solution(\"1905\") == \"YYMM\"\n\"\"\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('05') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('0912') == 'AMBIGUOUS'\nassert solution('091225') == 'AMBIGUOUS'\nassert solution('090225') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 2\nassert solution('2') == 1\nassert solution('1') == 1\nassert solution('1') == 1\nassert solution('0') == 0\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '10'\nassert solution('30') == '889861'\nassert solution('15') == '345228'\n\n\"\"\"\n\n\"\"\"\nThis is a variation of the above problem. \n\nThe idea is to use simple formulae to calculate the number of ways to choose a pair of an even number and a odd number from the positive integers between 1 and K (inclusive).\n\nHere are some important facts:\n\nThe number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K (inclusive) is given by the sum of the ways to choose a pair of an even number and an odd number from the positive integers between 1 and K/2 (inclusive).\n\nAnother way to calculate the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K/2 (inclusive) is to use the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive).\n\nIn the first case, the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive) is equal to the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive) - the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive).\n\nIn the second case, the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive) is equal to the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive) + the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive).\n\nHere is the algorithm to solve the above problem:\n\nSort the positive integers from 1 to K in ascending order.\nCalculate the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive).\nCalculate the number of ways to choose a pair of an even number and a positive odd number from the positive integers between 1 and K/2 (inclusive).\nThe result is the sum of the above two numbers.\n\nTime Complexity:\nO(K/2)\n\nSpace Complexity:\nO(1)\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '2'\nassert solution('''6''') == '5'\nassert solution('''10''') == '9'\nassert solution('''4''') == '1'\nassert solution('''5''') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == 2\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(4) == 0\nassert solution(7) == 0\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '6'\nassert solution('10') == '21'\nassert solution('100') == '2340'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\nassert solution('5\\n') == '0'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == '2'\nassert solution(2) == '2'\nassert solution(1) == '0'\n\"\"\"\n\nimport sys\nfrom math import factorial"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 10') == '19'\nassert solution('5 11') == '19'\nassert solution('9 14') == '25'\nassert solution('23 17') == '19'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 19') == '18'\nassert solution('9 22') == '19'\nassert solution('11 22') == '23'\nassert solution('12 22') == '0'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '11'\nassert solution('2 1\\n') == '10'\nassert solution('8 0\\n') == '18'\nassert solution('11 9\\n') == '24'\nassert solution('23 5\\n') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('1 22') == '23'\nassert solution('1 24') == '0'\nassert solution('2 22') == '2'\nassert solution('5 22') == '5'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 12') == '21'"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'\n\nassert solution('9 4') == '19'\n\nassert solution('11 17') == '21'\n\nassert solution('11 9') == '20'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[1]"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0:4]\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == 3719\n\"\"\"\n\nN, R = [int(x) for x in stdin.split()]\nprint(R - 100 * (10 - min(10, N)))\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 72919') == '28979'\nassert solution('2 2919') == '3719'\nassert solution('2 72919') == '28979'\nassert solution('2 72919') == '28979'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"3 0\") == \"0\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 2920') == '4021'\nassert solution('1 0') == '-1'\nassert solution('3 2') == '-1'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 0') == '0'\nassert solution('3 100') == '99'\nassert solution('5 5') == '50'\nassert solution('5 5') == '50'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3719\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('5 11') == '9'\nassert solution('10 10') == '9'\nassert solution('100 100') == '99'\nassert solution('9 2') == '14'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[1]"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 2') == '4'\nassert solution('13 3') == '2'\nassert solution('11 1') == '2'\nassert solution('5 7') == '2'\nassert solution('8 17') == '2'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"11 2\"\n) == \"4\"\n\nassert solution(\n    \"23 4\"\n) == \"1\"\n\nassert solution(\n
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(11, 2) == 4\nassert solution(111, 11) == 4\nassert solution(111, 12) == 4\nassert solution(1111, 11) == 4\nassert solution(1111, 12) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 2') == '4'\n\"\"\""
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\nassert solution('100 10') == '1'\nassert solution('1110 1111 1111 1111 1111 1111 1111') == '17'\nassert solution('8 6') == '3'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11 2') == '4'\nassert solution('13 19') == '7'\nassert solution('2 3') == '1'\nassert solution('5 10') == '1'\nassert solution('10 10') == '2'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11, 2) == 4\nassert solution(77, 2) == 3\nassert solution(1101, 2) == 4\nassert solution(1111, 2) == 2\nassert solution(100000000, 2) == 8\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n        \"11 2\") == \"4\"\nassert solution(\n        \"11 3\") == \"1\"\nassert solution(\n        \"10 13\") == \"2\"\nassert solution(\n        \"10 9\") == \"2\"\nassert solution(\n        \"10 14\") == \"1\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\n\"\"\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\n\n'''\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '3'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"30\") == \"7\"\nassert solution(\"60\") == \"8\"\nassert solution(\"100\") == \"10\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\n\nprint(solution('5'))\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '1'\nassert solution('3') == '3'\nassert solution('2') == '0'\nassert solution('1') == '0'\nprint('Test cases passed')\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('100') == '10'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '3'\nassert solution('''10''') == '5'\nassert solution('''20''') == '10'\n'''\n\nimport sys"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"6\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('2 1') == 'Yay!'\nassert solution('3 1') == 'Yay!'\nassert solution('4 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"4 1\") == \"Yay!\"\nassert solution(\"3 3\") == \"Yay!\"\nassert solution(\"2 2\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4') == 'Yay!'\n\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('10 10') == 'Yay!'\nassert solution('5 7') == 'Yay!'\nassert solution('5 9') == 'Yay!'\nassert solution('2 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 2\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"16 16\") == \"Yay!\"\nassert solution(\"10 4\") == \"Yay!\"\nassert solution(\"2 4\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('10 12') == 'Yay!'\nassert solution('20 4') == 'Yay!'\nassert solution('2 4') == 'Yay!'\nassert solution('7 4') == 'Yay!'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567878') == '43'\nassert solution('123456789') == '0'\nassert solution('1234567891') == '1'\nassert solution('12345678912') == '10'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '34'\nassert solution('12345') == '34'\nassert solution('123') == '34'\nassert solution('1234') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\nassert solution('12345678765') == '34'\nassert solution('12345678765') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567891234567891234567891234567891234567890') == '34'\nassert solution('123456789123456789123456789123456789123456789123456789') == '34'\nassert solution('123456789123456789123456789123456789123456789123456789123456789') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1234567876) == \"34\"\nassert solution('123456789') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567') == '34'\nassert solution('12345') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"2234567876\") == \"27\"\nassert solution(\"234567876\") == \"35\"\nassert solution(\"1234abcd\") == \"15\"\nassert solution(\"1234567\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('7654321') == '34'\nassert solution('12345') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567890') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1123456789') == '34'\nassert solution('1234567891') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567890') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567874') == '40'\nassert solution('1234567869') == '22'\nassert solution('1234567889') == '66'\nassert solution('123456789') == '0'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1234567876) == \"34\"\nassert solution('1234567876') == '34'\nassert solution
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 9') == '1 7'\nassert solution('2\\n2 1000000000 4 6 8 4 2') == '2999999987 2'\nassert solution('3\\n3 12 6') == '5 3'\nassert solution('7\\n13 52 0 13 26 52') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3\\n'\nassert solution('2\\n2 9\\n') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '2999999987 2\\n'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13\\n'\nassert solution('2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '2999999987 2'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1 1\"\nassert solution(\"1\\n2\") == \"1 2\"\nassert solution(\"3\\n1 3 2 1\") == \"1 2\"\nassert solution(\"3\\n1 7 6 1\") == \"1 2\"\nassert solution(\"3\\n3 2 1\") == \"3 1\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3\\n3 12 6\\n'\n    '3 12 6\\n'\n) == '5 3'\nassert solution(\n    '2\\n2 9\\n'\n    '2 9\\n'\n) == '1 7'\nassert solution(\n    '7\\n2 1000000000 4 6 8 4 2\\n'\n    '2 1000000000 4 6 8 4 2\\n'\n) == '2999999987 2'\n'''\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"12 13\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''1\n1''') == '1 1'\n'''\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''7\n13 977 17 49 8 24 6 3''') == '11 16'"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1 2\"\nassert solution(\"3\\n12 6\\n\") == \"3 3\"\nassert solution(\"3\\n12 6\\n2 3\\n\") == \"3 4\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''7\n1 1 1 1 1 1 1''') == '7'\nassert solution('''10\n1 1 1 1 1 1 1 1 1''') == '7'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\\n4 5 6\") == \"\"\nassert solution(\"1 2 3\\n4 5 6\") == \"\"\nassert solution(\"1 2 3\\n4 5 6\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 4 1\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\n\n'''\n\n'''\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\n\nprint(solution(input()))\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''4 1\n1 2\n2 3\n3 4\n''') == '2'\n\nassert solution('''5 3\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n1 3\\n2 3') == '2'\nassert solution('4 1\\n2 1\\n1 2\\n2 3\\n1 3\\n1 4') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('4 4\\n1 2\\n2 3\\n3 4\\n1 4') == '2'\nassert solution('4 1\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n1 4\n2 4\n3 4\n4 5\n''') == '4'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2\\n2 3\\n') == '2'\nassert solution('2 1\\n1 2\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('4 2\\n1 2\\n2 3\\n') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 4\n3 4\n''') == '1'\nassert solution('''4 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '3'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0') == '1'\nassert solution('1 0') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('2 1') == '2 1'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"0\"\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n1 2\\n2 3\\n7 5\\n7 4\\n') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\n\n-----\n\nSuccess\nDetails\nRuntime: 100 ms, faster than 22.10% of Python3 online submissions for Maximum Weight of a Subset of Vertices.\nMemory Usage: 14.3 MB, less than 6.46% of Python3 online submissions for Maximum Weight of a Subset of Vertices.\n\n'''\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == '4'\nassert solution('2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n2 1 1 1 1 1 1\\n6 1') == '7'"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"\nprint('Test passed')\n\n\"\"\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'\nprint(solution(stdin))\n\"\"\"\nfrom collections import defaultdict\nfrom collections import deque"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\\n\"\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 2 3\") == \"1 1\"\nassert solution(\"1 1 2\") == \"1 1\"\nassert solution(\"2 3\") == \"1 9\"\nassert solution(\"1 1 2 3\") == \"1 1\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994'\n\n\n'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\nassert solution('''3 3''') == '''1 5\n2 1\n2 9999999994'''\nassert solution('''3 3\n5 100000000000\n5 6 9999999999''') == '''1 5\n2 1\n2 9999999994'''\nassert solution('''3 3\n1 9\n1 10\n2 11\n3 12''') == '''1 1\n1 9\n2 2\n2 13'''\nassert solution('''3 3\n1 9\n1 10\n2 11\n3 12''') == '''1 1\n1 9\n2 2\n2 13'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n5 10000000000\n5 6 9999999999''') == '''1 1\n1 9\n2 2'''\n\nassert solution('''3 3\n3 6 9\n3 9 10 11 12''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\"\n) == \"\"\"1 1\n1 9\n2 2\n2 13\n3 1\n3 12\"\"\"\n\nassert solution(\n    \"\"\"2 3\n5 10000000000\n5 6 9999999999\n\"\"\"\n) == \"\"\"1 5\n2 1\n2 9999999994\"\"\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994'\nassert solution('3 6\\n10 15 12\\n1 9 12 23 26 37\\n') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9\\n') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n6 7\\n6 8\\n6 9\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\\n7 7\\n7 8\\n7 9\\n8 1\\n8 2\\n8 3\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\\n8 9\\n9 1\\n9 2\\n9 3\\n9 4\\n9 5\\n9 6\\n9 7\\n9 8\\n9 9'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3') == '1 5'\nassert solution('5 6 9999999999') == '2 1'\nassert solution('2 3') == '1 1'\nassert solution('5 10000000000') == '2 9999999994'\nassert solution('10 15 12') == '1 9'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6\\n10 15 12\\n1 9 12 23 26 37') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994\\n'\nassert solution('2 3\\n5 1000000000\\n5 6 999999\\n') == '1 5\\n2 1\\n2 999999\\n'\nassert solution('1 3\\n1\\n2\\n') == '1 1\\n1 2\\n'\n\"\"\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '1 1 1'\nassert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n\n\n\"\"\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n\nprint('Passed')\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4\\n') == '2 1 3\\n'\nassert solution('40 40 40 60\\n') == '20 20 20\\n'\nassert solution('201 101 101 200\\n') == '1 100 100\\n'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '2 1'\nassert solution('2 1') == '1 2'\nassert solution('1 1 1') == '2 1'\nassert solution('2 1 1') == '1 2'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\\n\") == \"2 1 3\"\nassert solution(\"40 40 40 60\\n\") == \"20 20 20\"\nassert solution(\"201 101 101 200\\n\") == \"1 100 100\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"2\\n\") == \"1\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6 5 4''') == '''2 1 3'''\nassert solution('''40 40 40 60''') == '''20 20 20'''\nassert solution('''201 101 101 200''') == '''1 100 100'''\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n9\nRBGRRBRGG\n\n''') == '2\\nRBGRGBRGR\\n'\n\nassert solution('''\n8\nBBBGBRRR\n\n''') == '2\\nBRBGBRGR\\n'\n\nassert solution('''\n13\nBBRRRRGGGGGRR\n\n''') == '6\\nBGRBRBGBGBGRG\\n'\n\nassert solution('''\n5\nRRRRRRRRR\n\n''') == '4\\nRRRRRRRR\\n'\n\nassert solution('''\n6\nRRRRRRRBB\n\n''') == '4\\nRRRRRRRR\\n'"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"input.txt\") == \"9\\nBRBGBRGRGBGRG\""
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == ''\n\n\n\nIn [1]: solution(input)\nOut[1]: 'RBGBRBGRGBRGRGBRBGBR'\n\n\nIn [2]: solution(input)\nOut[2]: 'BBBGBRRRBBBBGBRRRB'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG'\nprint(solution(stdin))\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n9\nRBGRRBRGG\n\"\"\") == \"\"\"\n2\nRBGRGBRGR\n\"\"\"\n\nassert solution(\n\"\"\"\n8\nBBBGBRRR\n\"\"\") == \"\"\"\n2\nBRBGBRGR\n\"\"\"\n\nassert solution(\n\"\"\"\n13\nBBRRRRGGGGGRR\n\"\"\") == \"\"\"\n6\nBGRBRBGBGBGRG\n\"\"\"\n\nassert solution(\n\"\"\"\n7\nBRBRRRGGGGGB\n\"\"\") == \"\"\"\n5\nBGBGBGRGRGRG\n\"\"\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\nR') == '1\\nR'\nassert solution('2\\nRGR') == '1\\nRBG'\nassert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR\n''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '''2\nRBGRGBRGR'''\nassert solution('''8\nBBBGBRRR''') == '''2\nBRBGBRGR'''\nassert solution('''13\nBBRRRRGGGGGRR''') == '''6\nBGRBRBGBGBGRG'''\nassert solution('''2\nBBRRRRGGGGGRR''') == '''2\nBBBGBRGR'''\nassert solution('''1\nR''') == '''0\nR'''\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR\n''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\nprint('Success')\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '1\\n1 4'\nassert solution('10\\n10 9 8 7\\n') == '1\\n1'\nassert solution('7\\n1 3 5 2 4 6\\n') == '1\\n1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6') == '2\\n1 4'\nassert solution('4\\n10 9 8 7') == '1\\n1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9'\nassert solution('10\\n6 7 8 3 4 5 9 10 11 12') == '6\\n1 2 3 4 7 8 9'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4'\nassert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''4\n10 9 8 7''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6'\nassert solution('''9\n1 3 5 2 4 6''') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4'\nassert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '1'\nassert solution('''4\n10 9 8 7''') == '1'\n\nassert solution('''\n''') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\n\"\"\"\n\nN = int(input())\nA = list(map(int,input().split()))"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 5 2 4 6') == '4'\nassert solution('10 9 8 7') == '1'\nassert solution('6 7 8 3 4 5 9 10 11') == '6'\nassert solution('9 6 7 8 3 4 5 9 10 11') == '2'\nassert solution('10 9 8 7') == '1'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'Yes'\nassert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('1 3') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1''') == \"Yes\"\nassert solution('''3 2''') == \"No\"\nassert solution('''10 3''') == \"Yes\"\nassert solution('''1 1''') == \"Yes\"\nassert solution('''5 2''') == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('2 1\\n')) == 'Yes'\nassert solution(input('3 1\\n')) == 'No'\nassert solution(input('3 2\\n')) == 'Yes'\nassert solution(input('3 3\\n')) == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 3') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('3 1') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 4\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '110'\nassert solution(input()) == '58'\nassert solution(input()) == '81'\n\n\"\"\"\n\n\"\"\"\n\nExplanation:\nI can use the special ticket to reduce the fare.\n\n\"\"\"\n\nX, Y = map(int, input().split())\nprint(X + (X+Y)//2)\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"X: \") + \"\\n\" + input(\"Y: \")) == input(\"answer: \")\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('81 58') == '110'\nassert solution('18 75') == '69'\nassert solution('20 30') == '40'\nassert solution('37 50') == '160'\nassert solution('49 100') == '195'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('81 58') == '110'\nassert solution('16 25') == '20'\nassert solution('51 81') == '220'\nassert solution('100 100') == '0'\nassert solution('36 30') == '30'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('81 58') == '110'\nassert solution('40 22') == '120'\nassert solution('40 22') == '120'\nassert solution('40 22') == '120'\nassert solution('40 22') == '120'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('81 58') == 110\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('121 36') == '38'\nassert solution('101 76') == '148'\nassert solution('42 12') == '10'\nassert solution('81 58') == '110'\n\"\"\"\n\nx, y = [int(x) for x in stdin.split()]"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"81 58\") == \"110\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('81 58') == '110'\nprint(solution(''))\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 8\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('\\t') == ''\nassert solution('1') == ''\nassert solution('9') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"12\") == \"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == '11'\nassert solution('2') == '4'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '27'\nassert solution('4') == '156'\nassert solution('5') == '248'\nassert solution('6') == '456'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '8'\nassert solution('3\\n') == '24'\nassert solution('4\\n') == '105'\nassert solution('5\\n') == '210'\nassert solution('6\\n') == '0'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('9') == '6'\nassert solution('11') == '10'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n2\\n') == ''\nassert solution('2\\n1\\n') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == \"YES\"\nassert solution('7') == \"NO\"\nassert solution('9') == \"NO\"\nassert solution('3') == \"NO\"\nassert solution('1') == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n4\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n3\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == \"YES\"\nassert solution('7') == \"YES\"\nassert solution('3') == \"NO\"\nassert solution('9') == \"NO\"\nassert solution('1') == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('10') == 'YES'\nassert solution('11') == 'NO'\nassert solution('100') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"5\") == \"YES\"\nassert solution(\n\"4\") == \"NO\"\nassert solution(\n\"8\") == \"YES\"\nassert solution(\n\"9\") == \"YES\"\nassert solution(\n\"123\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"8\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('7') == 'NO'\nassert solution('3') == 'NO'\nassert solution('9') == 'YES'\nassert solution('9') == 'NO'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC999'\nassert solution('1000') == 'ABD999'\nassert solution('1001') == 'ABE999'\nassert solution('1002') == 'ABC999'\nassert solution('1003') == 'ABC999'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1998') == 'ABD'\nassert solution('1000') == 'ABD'\nassert solution('1998') == 'ABD'\nassert solution('1999') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == 'ABC'\nassert solution('''100\n''') == 'ABC'\nassert solution('''999\n''') == 'ABC'\nassert solution('''2000\n''') == 'ABC'\nassert solution('''0\n''') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('998') == 'ABD'\nassert solution('997') == 'ABE'\nassert solution('996') == 'ABF'\nassert solution('995') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC999'\nassert solution('1234') == 'ABDCD'\nassert solution('1234') == 'ABCD'\nassert solution('1234') == 'ABD'\nassert solution('1234') == 'CD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC999\"\n\"\"\""
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ABD\"\nassert solution(\"3\") == \"ABC\"\nassert solution(\"4\") == \"ABD\"\nassert solution(\"5\") == \"ABC\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ABC999\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n7\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n10\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n11\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''1\n2\n4\n8\n9\n15'''\n) == 'Yay!'\nassert solution(\n    '''1\n2\n4\n8\n9\n16'''\n) == 'Yay!'\nassert solution(\n    '''1\n1\n2\n4\n8\n9\n15'''\n) == 'Yay!'\nassert solution(\n    '''1\n1\n2\n4\n8\n9\n16'''\n) == 'Yay!'\nassert solution(\n    '''1\n2\n4\n8\n9\n16'''\n) == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n30\") == \":(\\n\"\n\"\"\""
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15\n10\n12\n14\n16\n18\n19\n21\n23\n25\n27\n29\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100\n102\n104\n106\n108\n110\n112\n114\n116\n118\n120\n122\n124\n126\n128\n130\n132\n134\n136\n138\n140\n142\n144\n146\n148\n150\n152\n154\n156\n158\n160\n162\n164\n166\n168\n170\n172\n174\n176\n178\n180\n182\n184\n186\n188\n190\n192\n194\n196\n198\n200\n202\n204\n206\n208\n210\n212\n214\n216\n218\n220\n222\n224\n226\n228\n230\n232\n234\n236\n238\n240\n242\n244\n246\n248\n250\n252\n254\n256\n258\n260\n262\n264\n266\n268\n270\n272\n274\n276\n278\n280\n282\n284\n286\n288\n290\n292\n294\n296\n298\n300\n302\n304\n306\n308\n310\n312\n314\n316\n318\n320\n322\n324\n326\n328\n330\n332\n334\n336\n338\n340\n342\n344\n346\n348\n350\n352\n354\n356\n358\n360\n362\n364\n366\n368\n370\n372\n374\n376\n378\n380\n382\n384\n386\n388\n390\n392\n394\n396\n398\n400\n402\n404\n406\n408\n410\n412\n414\n416\n418\n420\n422\n424\n426\n428\n430\n432\n434\n436\n438\n440\n442\n444\n446\n448\n450\n452\n454\n456\n458\n460\n462\n464\n466\n468\n470\n472\n474\n476\n478\n480\n482\n484\n486\n488\n490\n492\n494\n496\n498\n500\n502\n504\n506\n508\n510\n512\n514\n516\n518\n520\n522\n524\n526\n528\n530\n532\n534\n536\n538\n540\n542\n544\n546\n548\n550\n552\n554\n556\n558\n560\n562\n564\n566\n568\n570\n572\n574\n576\n578\n580\n582\n584\n586\n588\n590\n592\n594\n596\n598\n600\n602\n604\n606\n608\n610\n612\n614\n616\n618\n620\n622\n624\n626\n628\n630\n632\n634\n636\n638\n640\n642\n644\n646\n648\n650\n652\n654\n656\n658\n660\n662\n664\n666\n668\n670\n672\n674\n676\n678\n680\n682\n684\n686\n688\n690\n692\n694\n696\n698\n700\n702\n704\n706\n708\n710\n712\n714\n716\n718\n720\n722\n724\n726\n728\n730\n732\n734\n736\n738\n740\n742\n744\n746\n748\n750\n752\n754\n756\n758\n760\n762\n764\n766\n768\n770\n772\n774\n776\n778\n780\n782\n784\n786\n788\n790\n792\n794\n796\n798\n800\n802\n804\n806\n808\n810\n812\n814\n816\n818\n820\n822\n824\n826\n828\n830\n832\n834\n836\n838\n840\n842\n844\n846\n848\n850\n852\n854\n856\n858\n860\n862\n864\n866\n868\n870\n872\n874\n876\n878\n880\n882\n884\n886\n888\n890\n892\n894\n896\n898\n900\n902\n904\n906\n908\n910\n912\n914\n916\n918\n920\n922\n924\n926\n928\n930\n932\n934\n936\n938\n940\n942\n944\n946\n948\n950\n952\n954\n956\n958\n960\n962\n964\n966\n968\n970\n972\n974\n976\n978\n980\n982\n984\n986\n988\n990\n992\n994\n996\n998\n1000\n1002\n1004\n1006\n1008\n1010\n1012\n1014\n1016\n1018\n1020\n1022\n1024\n1026\n1028\n1030\n1032\n1034\n1036\n1038\n1040\n1042\n1044\n1046\n1048\n1050\n1052\n1054\n1056\n1058\n1060\n1062\n1064\n1066\n1068\n1070\n1072\n1074\n1076\n1078\n1080\n1082\n1084\n1086\n1088\n1090\n1092\n1094\n1096\n1098\n1100\n1102\n1104\n1106\n1108\n1110\n1122\n1124\n1126\n1128\n1130\n1132\n1134\n1136\n1138\n1140\n1142\n1144\n1146\n1148\n1150\n1152\n1154\n1156\n1158\n1160\n1162\n1164\n1166\n1168\n1170\n1172\n1174\n1176\n1178\n1180\n1182\n1184\n1186\n1188\n1190\n1192\n1194\n1196\n1198\n1200\n1202\n1204\n1206\n1208\n1210\n1212\n1214\n1216\n1218\n1220\n1222\n1224\n1226\n1228\n1230\n1232\n1234\n1236\n1238\n1240\n1242\n1244\n1246\n1248\n1250\n1252\n1254\n1256\n1258\n1260\n1262\n1264\n1266\n1268\n1270\n1272\n1274\n1276\n1278\n1280\n1282\n1284\n1286\n1288\n1290\n1292\n1294\n1296\n1298\n1300\n1302\n1304\n1306\n1308\n1310"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n20') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n20\\n25') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n20\\n25\\n30') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n20\\n25\\n30\\n35') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 4 8 9 15') == 'Yay!'\nassert solution('1 2 4 8 9 10') == '(1, 2)'\nassert solution('1 2 4 8 9 11') == '(1, 2)'\nassert solution('1 2 4 8 9 11 12') == '(2, 3)'\nassert solution('1 2 4 8 9 11 12 13') == '(2, 3)'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\nassert solution('''3\n2\n7\n1\n5\n2\n''') == 'Yay!'\nassert solution('''4\n7\n1\n5\n2\n''') == 'Yay!'\nassert solution('''8\n1\n5\n2\n''') == 'Yay!'\nassert solution('''9\n1\n5\n2\n''') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Yay!'\nassert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3200\\npink\\n') == 'pink'\nassert solution('3200\\nred\\n') =='red'\nassert solution('2800\\nabc\\n') == 'abc'\n\nTest case 0:\n3200\npink\n\n3200 is less than 3200, so we print s = pink.\n\nTest case 1:\n2800\nabc\n\n2800 is less than 3200, so we print s = abc.\n\nTest case 2:\n2800\nred\n\n2800 is less than 3200, so we print s = red.\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('pink') == 'pink'\nassert solution('red') =='red'\nassert solution('yellow') =='red'\nassert solution('black') =='red'\nassert solution('white') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == ''\nassert solution('a\\na') =='red'\nassert solution('\\na') =='red'\nassert solution('\\n\\na') =='red'\nassert solution('\\na\\na') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('3200\\ngreen') == 'green'\nassert solution('3200\\nwhite') == 'white'\nassert solution('3200\\nblack') == 'black'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"3200\\npink\\n\") == \"pink\"\nassert solution(\n\"3200\\nrjdkd\\n\") == \"red\"\nassert solution(\n\"3200\\nrdcw\\n\") == \"red\"\nassert solution(\n\"3200\\nqnjzm\\n\") == \"red\"\nassert solution(\n\"3200\\nqjgfj\\n\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3200\npink''') == 'pink'\nassert solution('''1\na''') == 'a'\nassert solution('''2\nab''') == 'ab'\nassert solution('''2\nca''') == 'ca'\nassert solution('''3\nab''') == 'ab'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('12000\\nred') =='red'\nassert solution('3201\\nred') =='red'\nassert solution('3200\\nblue') == 'blue'\nassert solution('3200\\nwhite') == 'white'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('2500\\ngreen') == 'green'\nassert solution('3200\\nblue') == 'blue'\nassert solution('2000\\ntan') == 'tan'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\npink') == 'pink'\nassert solution('3200\\npink') == 'pink'\nassert solution('3200\\npink') == 'pink'\nassert solution('3200\\npink') == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3200\\npink') == 'pink'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution('1199') == 'ABC'\nassert solution('1209') == 'ARC'\nassert solution('2189') == 'AGC'\nassert solution('2499') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('2999') == 'AGC'\nassert solution('3213') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('2300') == 'ARC'\nassert solution('1200') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20')('20') == 'ABC'\nassert solution('11')() == 'ABC'\nassert solution('2')() == 'ARC'\nassert solution('201')() == 'ARC'\nassert solution('200')() == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1299') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('2199') == 'ARC'\nassert solution('2499') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == 'ABC'\nassert solution('1199') == 'ABC'\nassert solution('2000') == 'ARC'\nassert solution('25') == 'ARC'\nassert solution('3000') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1199) == 'ARC'\nassert solution(1200) == 'ARC'\nassert solution(1201) == 'AGC'\nassert solution(1302) == 'AGC'\nassert solution(1301) == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1199''') == 'ABC'\nassert solution('''3''') == 'ARC'\nassert solution('''5000''') == 'AGC'\nassert solution('''1218''') == 'ARC'\nassert solution('''2800''') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"2748\") == \"AGC\"\nassert solution(\"2748\") == \"AGC\"\nassert solution(\"2748\") == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'ABC'"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('119') == '991'\nassert solution('9') == '9'\nassert solution('1') == '9'\nassert solution('9') == '9'\nassert solution('99') == '999'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a1') == 'a1'\nassert solution('1a') == '1a'\nassert solution('999') == '999'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"111\") == \"999\"\nassert solution(\"99\") == \"999\"\nassert solution(\"998\") == \"991\"\nassert solution(\"97\") == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('119') == '991'\nassert solution('123456789') == '123456789'\nassert solution('111') == '999'\nassert solution('99') == '999'\nassert solution('9') == '9'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('119') == '991'\nassert solution('123456789') == '987654321'\nassert solution('1234') == '1234'\nassert solution('12345') == '12345'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\nassert solution('959') == '991'\nassert solution('111') == '9'\nassert solution('567') == '567'\nassert solution('638') == '638'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(119) == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(119) == \"991\"\nassert solution(111) == \"991\"\nassert solution(569) == \"911\"\nassert solution(998) == \"979\"\nassert solution(928) == \"888\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(119) == \"991\"\nassert solution(111) == \"1\"\nassert solution(912) == \"912\"\nassert solution(909) == \"909\"\nassert solution(123) == \"321\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '11'\nassert solution('119') == '991'\nassert solution('11101') == '11111'\nassert solution('1111101') == '1111111'\nassert solution('11111101') == '11111111'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n1\nabbac\nab\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n3\na\nab\nc\nd\nab\nc\na\n''') == 'a'\nassert solution('''\n6\na\naa\naa\naaa\naaaa\naaaaa\naaaaaa\n''') == 'aaa'\nassert solution('''\n6\na\naa\naaa\naaaa\naaaaa\naaaaaa\n''') == 'aaaaa'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('ab') == 'ba'\nassert solution('abcd') == 'cdab'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz''') == \"abac\"\nassert solution('''7\naabaa\naa\naaaaa\naaaaaa\naaaaaaa\naaaaaaaa\naaaaaaaaa''') == \"aaaaaaaaaaaa\"\nassert solution('''9\nbbbbbb\nbb\nb\nb''') == \"b\"\nassert solution('''7\nb''') == \"b\"\nassert solution('''11\naabbabababababaababaaba\naabbabababababaabababaab''') == \"aabbabababababaabababaab\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''10\naaaaa\naaaaaa\naaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa\naaaaaaaa''') == 'aaaaaaaaaaaaaaaaa'\nassert solution('''2\naaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaa''') == 'aaaaaaaaaaaaaaaaa'\n'''\n    ) == 'aaaaaaaaaaaaaaaaa'\n\nassert solution('''2\nabac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''2\nabac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n\"\"\") == \"abac\"\nassert solution(\n\"\"\"\n3\nabcddz\nzab\nqwqwe\n\"\"\") == \"zab\"\nassert solution(\n\"\"\"\n2\nxyxy\nxx\n\"\"\") == \"x\"\n\"\"\"\nimport sys\n\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    b = sys.stdin.readline().strip()\n    if len(b) > 2:\n        print(solution(b))\n    else:\n        print(b)\n\"\"\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''2\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''2\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''1\na\n''') == 'a'\nassert solution('''1\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\n\nassert solution('''abc\nbca\ncab\ndab\nfgh\n''') == 'abc'\n\nassert solution('''cba\nbac\ncaa\nbca\n''') == 'cba'\n\nassert solution('''aba\nbaa\nbab\nbac\n''') == 'aba'\n'''\nassert solution('''zzz\nzzz\nzzz\nzzz\n''') == 'zzz'"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('1000000') == '1'\nassert solution('123456789') == '15'\nassert solution('1000000000') == '16'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5\\n') == '0 1 2 3 4 5'\nassert solution('1 2 3 4\\n') == '1 1 2 2 2'\nassert solution('1 2 3 4 5\\n') == '3 4'\nassert solution('1 2 3 4 5 6\\n') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13\\n') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n\") == \"0\\n1\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n0\\n\"\nassert solution(\"10\\n100\\n\") == \"1\\n1\\n\"\nassert solution(\"10\\n100\\n\") == \"1\\n1\\n\"\nassert solution(\"0\\n1\\n\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"9\") == \"\"\nassert solution(\"9 9\") == \"\"\nassert solution
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2\\n5\\n4\\n333\\n0\\n'\nassert solution('''100 13\n13 9\n100 13\n123 456\n92 46\n''') == '1\\n0\\n4\\n333\\n0\\n'\nassert solution('''123 456\n92 46\n''') == '1\\n0\\n4\\n333\\n0\\n'\nassert solution('''123 456\n92 46\n''') == '1\\n0\\n4\\n333\\n0\\n'\n'''\n'''"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\n'''"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1\n1 1\n1 1\n1 1\n2 2'''\n) == '''0\n1\n2\n4\n333\n0'''\n\nassert solution(\n'''2\n2 3\n5 4\n8 7\n10 9'''\n) == '''1\n0\n1\n4\n333\n0'''\n\n) == '''3\n1\n1\n0\n333\n0'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3') == '1'\nassert solution('3 2') == '3'\nassert solution('8 5') == '2'\nassert solution('2 3') == '0'\nassert solution('10 4') == '2'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n1\") == \"2\"\nassert solution(\"4\\n2\\n1\") == \"4\"\nassert solution(\"2\\n2\\n1\") == \"0\"\nassert solution(\"2\\n4\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n\") == \"0.0\"\nassert solution(\"1 1\\n\") == \"0.5\"\nassert solution(\"2 4\\n\") == \"2.0\"\nassert solution(\"5 3\\n\") == \"1.75\"\nassert solution(\"4 3\\n\") == \"1.66\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.666666666666667\""
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.666666666666667'\n'''\nfrom math import ceil, floor, sqrt, log2\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n3 4 1 2''') == '2.666666666666667'\nassert solution('''1 1\n1 1 1''') == '0'\n'''\nimport sys\nsys.setrecursionlimit(5000)"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2.6666666666666667\n\nInput\n3 2\n1 2 3\n\nOutput\n1.5\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4 1 2\\n') == '2.666666666666667'\n\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution('3\\n3 4 1 2\\n')\n'2.666666666666667'\n\n>>> solution"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\nInput\n1 1\n3\n\nOutput\n0.3333333333333333\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 3\\n3 4 1 2\") == \"2.666666666666667\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"4 1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n') == 'YES'\nassert solution('1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n') == 'NO'\nassert solution('1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n') == 'NO'\n\n\n\n\"\"\""
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''2 1\n1 1\n1 2\n2 1''') == 'YES'\nassert solution('''2 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''2 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nprint(solution('''2 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''))\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'NO'\nassert solution('2 3 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('4 2') == 'YES'\nassert solution('4 1 2 3') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''2 1\n1\n2\n1\n2\n2\n1\n2''') == 'NO'\nassert solution('''1 1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"test\") == \"\"\n\nassert solution
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n6\\n1 2\\n3 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3') == 'YES'\nassert solution('1\\n6\\n1 2\\n3 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3') == 'NO'\nassert solution('1\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n1\\n2') == 'NO'\nassert solution('1\\n3\\n1\\n2') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''3 2 1''') == 'NO'\nassert solution('''1 2''') == 'YES'\nassert solution('''4 2''') == 'YES'\nassert solution('''4 1 2 3''') == 'YES'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('bab') == 'bab'\nassert solution('baab') == 'bbaa'\nassert solution('baabbb') == 'baabbb'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nbaabbb\n''') == 'bab'\nassert solution('''10\nooopppssss\n''') == 'oops'\nassert solution('''1\nz\n''') == 'z'\nprint('All set! Click \"Check\" now to earn cool rewards!')"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\n\nassert solution('''\n10\nooopppssss\n''') == 'oops'\nassert solution('''\n1\nz\n''') == 'z'\nassert solution('''\n12\nooooooo\n''') == 'ooooooo'\nassert solution('''\n8\nqweqwe\n''') == 'qweqwe'"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('za') == 'za'\nassert solution('bab') == 'bab'\nassert solution('baabbb') == 'bab'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"bab\"\nassert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''baabbb''') == 'bab'\nassert solution('''oOOPPPPSSSS''') == 'oops'\nassert solution('''bbbbbb''') == 'bbbbbb'\nassert solution('''bbbbbb''') == 'bbbbbb'\nassert solution('''b''') == 'b'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'\nassert solution('''\n1\nz\n''') == 'z'\nassert solution('''\n2\no\n''') == 'o'\nassert solution('''\n3\no\n''') == 'o'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '0'\nassert solution('3 3') == '0'\nassert solution('1 0') == '0'\nassert solution('5 6') == '2'\nassert solution('8 7') == '3'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"4 3\n2 1 3\n4 3 4\n2 4 1\n\"\"\") == \"0\"\nassert solution(\"\"\"3 3\n1 2 1\n2 3 2\n1 3 3\n\"\"\") == \"0\"\nassert solution(\"\"\"3 3\n1 2 1\n2 3 2\n1 3 3\n\"\"\") == \"1\"\nassert solution(\"\"\"1 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'\n'''\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3\\n1 2 1\\n4 3 4\\n2 4 2\\n1 4 2\\n1 5 3\\n2 6 3\\n1 6 3') == '1'\nassert solution('3 3\\n1 2 1\\n4 3 4\\n2 4 2\\n1 4 2\\n1 5 3\\n2 6 3\\n1 6 3') == '0'\nassert solution('3 3\\n1 2 1\\n4 3 4\\n2 4 2\\n1 4 2\\n1 5 3\\n2 6 3\\n1 6 3') == '1'\nassert solution('1 0') == '0'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n2 6 3\\n1 6 3') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == 0\nassert solution('3 3') == 0\nassert solution('1 0') == 0\nassert solution('5 6') == 2\nassert solution('1 2 2') == 0\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0\\n'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '1\\n'\nassert solution('8 9\\n1 2 1\\n2 3 2\\n1 3 3\\n2 4 1\\n1 4 2\\n1 5 3\\n2 5 4\\n4 5 3\\n6 7 1\\n3 7 2\\n7 6 3\\n') == '2\\n'\nassert solution('2 2\\n1 2 1\\n2 1 2\\n') == '0\\n'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\nassert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\nassert solution('8 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"GBGBGBR\") == \"GRBGGRB\"\nassert solution(\"GBGBGB\") == \"RG\"\nassert solution(\"GBRGRB\") == \"RG\"\nassert solution(\"RBGBGR\") == \"GB\"\nassert solution(\"RBGBGRB\") == \"RBGRBG\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('BBBBBBBBBB') == None\nassert solution('RBG') == 'RBG'\nassert solution('RBRGB') == 'RB'\nassert solution('RBRGBRB') == 'RB'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"\"\nassert solution(\"ABC\") == \"\"\nassert solution(\"ABC\") == \"\"\nassert solution(\"ABC\") == \"\"\nassert solution(\"ABC\") == \"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\nBRB\n''') == '''\n1\nGRB\n'''\n\nassert solution('''\n7\nRGBGRBB\n''') == '''\n3\nRGBRGBR\n'''\n\nassert solution('''\n10\nn''') == '''\n10\n
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"GB\") == \"GB\"\nassert solution(\"RGBG\") == \"RGBG\"\nassert solution(\"RR\") == \"RR\"\nassert solution(\"GB\") == \"GB\"\nassert solution(\"RBGB\") == \"RBGB\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RGBGRBB') == 'GRB'\nassert solution('GB') == 'GB'\nassert solution('BRB') == 'GRB'\nassert solution('GB') == 'GB'\nassert solution('R') == 'R'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3\nBRB\n''') == '1'\nassert solution(\n'''\n7\nRGBGRBB\n''') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1000 JPY\\n1000 BTC') == '0.01'\nassert solution('2\\n1 BTC\\n2 JPY') == '0.01'\nassert solution('10\\n0.001 BTC\\n10 JPY') == '0.1'\nassert solution('2\\n1 BTC\\n2 JPY') == '0.01'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 JPY\\n0.10000000 BTC') == '48000'\nassert solution('100000000 JPY\\n100000000 BTC') == '1000000000'\nassert solution('100000000 JPY\\n100000000 BTC') == '100000000000'\nassert solution('100000000 JPY\\n100000000 BTC') == '1000000000000'\nassert solution('100000000 JPY\\n100000000 BTC') == '1000000000000000'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('3\\n10 JPY\\n10 BTC\\n20 JPY\\n20 BTC') == '18000.0'\nassert solution('3\\n10 JPY\\n0.10000000 BTC\\n10 BTC\\n20 JPY\\n20 BTC') == '18000.0'\nassert solution('1\\n100 JPY\\n0.10000000 BTC') == '100.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000000 JPY\n10000000 BTC''') == '48000000.0'\nassert solution('''3\n100000 JPY\n1000000 BTC\n1000000 JPY\n1000000 BTC''') == '96000048000.0'\nassert solution('''3\n10000000 JPY\n10000000 BTC\n1000000 JPY\n1000000 BTC\n''') == '96000048000.0'\nassert solution('''3\n0.10000000 BTC\n10000000 JPY\n1000000 BTC\n''') == '48000000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2\n10000 JPY\n0.10000000 BTC'''\n) == '48000.0'\nassert solution(\n'''3\n50000000 JPY\n2.50000000 BTC\n50000000 JPY\n0.50000000 BTC\n50000000 JPY'''\n) == '3147508.0'\nassert solution(\n'''6\n500000 JPY\n0.50000000 BTC\n50000000 JPY\n0.50000000 BTC\n50000000 JPY\n0.50000000 BTC'''\n) == '4290680.0'\nassert solution(\n'''1\n10000000 JPY\n10000000 JPY'''\n) == '10000000.0'\nassert solution(\n'''1\n50000000 JPY\n0.50000000 BTC'''\n) == '50000000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[3:-3]\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n\"\"\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 JPY\\n20 BTC\\n') == '48000'\nassert solution('1 BTC\\n1 JPY\\n') == '0.1'\nassert solution('1 JPY\\n1 BTC\\n') == '0.1'\nassert solution('1 JPY\\n1 BTC\\n') == '0.1'\nassert solution('1 JPY\\n1 BTC\\n') == '0.1'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 JPY') == '48000.0'\nassert solution('0.1 BTC') == '38000.0'\nassert solution('10000 JPY') == '48000.0'\nassert solution('0.10000000 BTC') == '38000.0'\nassert solution('100BTC') == '48000.0'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4, 2) == 3\nassert solution(5, 3) == 4\nassert solution(10, 4) == 7\nassert solution(11, 4) == 8\nassert solution(12, 4) == 9\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(3)\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\nassert solution('1 5') == '4'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '2'\nassert solution('10 1') == '9'\nassert solution('100 2') == '99'\nassert solution('100 1') == '100'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('abcd') == 'abcd'\nassert solution('ipcc') == 'icpc'\nassert solution('icpc') == 'ipcc'\nassert solution('ccp') == 'ccp'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"cat\") == \"at\"\nassert solution(\"cat cat\") == \"atat\"\nassert solution(\"cat cat cat\") == \"atatat\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ip cc\") == \"icpc\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('itcs') == 'itcsc'\nassert solution('ab') == 'ab'\nassert solution('bb') == 'ba'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\nstdin = input()\nassert solution(stdin) == stdin"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"kqjcckb j\") == \"qkcbkc\"\nassert solution(\"a  b\") == \"ab\"\nassert solution(\"a   b\") == \"a   b\"\nassert solution(\"a b\") == \"ab\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('aaaabbbccccdddd') == 'aaaaaaabbbbccccccdddd'\nassert solution('bbbbbbbccccccdddd') == 'bbbbbbbbbbbbbbbbbbccccccccccccccdddd'\nassert solution('cccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ppp') == 'pppp'\nassert solution('cse') == 'ccse'\nassert solution('dcd') == 'dcdcd'\nassert solution('zbc') == 'zbczbc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('kkk') == 'kkkkkk'\nassert solution('aaa') == 'aaaa'\nassert solution('bb') == 'bbbb'\nassert solution('cc') == 'cccccc'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"BABA\") == \"Yes\"\nassert solution(\n\"BBAB\") == \"No\"\nassert solution(\n\"BBAB\") == \"Yes\"\nassert solution(\n\"ABBA\") == \"Yes\"\nassert solution(\n\"AABA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABBA') == 'Yes'\nassert solution('AABA') == 'Yes'\nassert solution('AABAA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is True\nassert solution('ABA') is True\nassert solution('ABAB') is True\nassert solution('BABA') is True\nassert solution('ABABBA') is True\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABAB\") == \"Yes\"\nassert solution(\"ABBA\") == \"No\"\nassert solution(\"BABA\") == \"Yes\"\nassert solution(\"ABABBA\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"AAA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABB') == 'Yes'\nassert solution('BAB') == 'Yes'\nassert solution('ABA') == 'Yes'\nassert solution('ABAB') == 'No'\nassert solution('BABA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABA') == \"Yes\"\nassert solution('BBA') == \"Yes\"\nassert solution('AAB') == \"Yes\"\nassert solution('ABB') == \"No\"\nassert solution('ABA') == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'AB'\n) == 'Yes'\nassert solution(\n    'ABA'\n) == 'Yes'\nassert solution(\n    'AB'\n) == 'No'\nassert solution(\n    'ABAB'\n) == 'Yes'\nassert solution(\n    'AB'\n) == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BABA\") == \"Yes\"\nassert solution(\"ABBA\") == \"No\"\nassert solution(\"BABA\") == \"No\"\nassert solution(\"ABA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('ABB') == 'Yes'"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '0'\nassert solution('RSR') == '1'\nassert solution('RRRR') == '0'\nassert solution('RRSRS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RRRRR\") == \"1\"\nassert solution(\"RRRRS\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"1\"\nassert solution(\"RRSRS\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"RS\") == 0\nassert solution(\"RRRRS\") == 3\nassert solution(\"RRRRSRS\") == 4\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRSRS\") == \"2\"\nassert solution(\"RRSRSRS\") == \"4\"\nassert solution(\"RRSRSRSRS\") == \"6\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '3'\nassert solution('RRSRS') == '3'\nassert solution('RRRRRR') == '4'\nassert solution('RRRRSR') == '4'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"RRRRS\") == 3\nassert solution(\"RRSRRS\") == 3\nassert solution(\"RRSRSRS\") == 4\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('RRR') == 0\nassert solution('RRRR') == 1\nassert solution('RRSRSRRSRSRSRSRSRSRSRSRSRSRSR') == 0\nassert solution
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('RRR') == 1\nassert solution('S') == 1\nassert solution('R') == 0\nassert solution('RRS') == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"SRSRRSRRS\") == \"5\"\nassert solution(\"RRSRS\") == \"2\"\nassert solution(\"RRRS\") == \"2\"\nassert solution(\"RRSR\") == \"1\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == 2\nassert solution(\"RRR\") == 1\nassert solution(\"S\") == 0\nassert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"9 7 4\") == \"4 9 7\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"8 5 2\") == \"2 8 5\"\nassert solution(\"8 5 2\") == \"2 8 5\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 3 2\") == \"2 1 3\"\nassert solution(\"1 3 2 4\") == \"2 4 1 3\"\nassert solution(\"1 2 3 4\") == \"4 3 2 1\"\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 1\") == \"1 1 2\"\nassert solution(\"1 1 2\") == \"2 1 1\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"2 3 1\") == \"1 3 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"1 1 3\") == \"3 1 2\"\nassert solution(\"2 2 2\") == \"2 2 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 5') == '3 1 2'\nassert solution('5 1 3') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"9 9 6\") == \"6 9 9\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 3 2\") == \"2 1 3\"\nassert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"1 3 2\") == \"2 1 3\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('3 2 1') == '1 2 3'\nassert solution('5 6 7') == '7 5 6'\nassert solution('50 21 22') == '21 22 50'\nassert solution('100 100 100') == '100 100 100'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('30 100') == '100'\nassert solution('6 100') == '60'\nassert solution('6 0') == '60'\nassert solution('13 18') == '106'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 10\") == \"100\"\nassert solution(\"30 100\") == \"100\"\nassert solution(\"12 100\") == \"50\"\nassert solution(\"50 100\") == \"50\"\nassert solution(\"5 6\") == \"15\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('0 100') == '0'\nassert solution('100 200') == '200'\nassert solution('100 100') == '0'\nassert solution('15 6') == '7'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A 100') == '100'\nassert solution('Takahashi, who is A years old, is riding a Ferris wheel.\\nIt costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge.\\n(Yen is the currency of Japan.)') == '100'"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('30 100') == '100'\nassert solution('50 100') == '100'\nassert solution('0 100') == '0'\nassert solution('13 12') == '3'\nassert solution('15 50') == '15'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''30 100'''\n) == '100'\nassert solution(\n'''5 6'''\n) == '30'\nassert solution(\n'''5 7'''\n) == '65'\nassert solution(\n'''5 9'''\n) == '110'\nassert solution(\n'''5 11'''\n) == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\nassert solution('1 100') == '50'\nassert solution('1 1') == '0'\nassert solution('1 100') == '50'\nassert solution('4 50') == '0'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == '2'\nassert solution(\"-++-\") == '-3'\nassert solution(\"+-++-\") == '-2'\nassert solution(\"--++-\") == '-2'\nassert solution(\"+-++-+\") == '-2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--++\") == \"0\"\nassert solution(\"+-+++\") == \"1\"\nassert solution(\"++++\") == \"0\"\nassert solution(\"+-++-\") == \"-1\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-++-++') == '3'\nassert solution('-++-++-++-++-++-++-++-++-++-++-++') == '10'\nassert solution('++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++') == '6'\nassert solution('+-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++') == '6'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+++') == '2'\nassert solution('+++++') == '2'\nassert solution('+--++') == '0'\nassert solution('++--++') == '0'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+-++') == \"2\"\nassert solution('-++-') == \"1\"\nassert solution('+++-') == \"0\"\nassert solution('--++') == \"-1\"\nassert solution('---+') == \"0\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-++-++') == '0'\nassert solution('++-++-++') == '-2'\nassert solution('--++') == '-2'\nassert solution('++--++') == '1'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('+-++') == '2'\nassert solution('+') == '+'\nassert solution('+') == '+'\nassert solution('++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--++\") == \"1\"\nassert solution(\"--+++\") == \"0\"\nassert solution(\"++++++\") == \"5\"\nassert solution(\"--++-++-++\") == \"3\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-++') == '2'\nassert solution('+-++-++-++-++') == '2'\nassert solution('+-++-++-++-++-++-++') == '2'\nassert solution('+-++-++-++-++-++-++-++') == '2'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/01') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2023/04/30') == 'Heisei'\nassert solution('2023/04/29') == 'TBD'\nassert solution('2023/04/30') == 'Heisei'\nassert solution('2023/04/31') == 'TBD'\nprint('Passed')\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"Heisei\"\nassert solution(\"2019/05/01\") == \"Heisei\"\nassert solution(\"2019/05/32\") == \"Heisei\"\nassert solution(\"2019/06/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/30') == 'TBD'\nassert solution('2019/06/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Heisei'\n\"\"\"\n\n\"\"\"\nACCEPTED\nhttps://www.hackerrank.com/challenges/the-time-in-words/problem\n\"\"\""
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2020/04/30') == 'TBD'\nassert solution('2039/04/30') == 'TBD'\nassert solution('2034/04/30') == 'Heisei'\nassert solution('2031/04/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/02/30\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"Heisei\"\nassert solution(\"2019/09/30\") == \"TBD\"\nassert solution(\"2019/06/29\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Heisei\""
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'\nassert solution('1337 1337 1337') == '3'\nassert solution('6 6 6 3 6 1000000000 3 3 6 6') == '9'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''18''') == '''14'''\nassert solution('''2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10''') == '''9'''\nassert solution('''10''') == '''3'''\nassert solution('''6 6 6 3 6 1000000000 3 3 6 6''') == '''9'''\nassert solution('''1337 1337 1337''') == '''3'''\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4') == '2'\nassert solution('1 1 1\\n1 2 3 4') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14\\n'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9\\n'\nassert solution('3\\n1337 1337 1337\\n') == '3\\n'\nassert solution('6\\n1337 1337 1337') == '9\\n'\nassert solution('10\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14\\n'\n\"\"\"\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(5000)\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"1337 1337 1337\") == \"3\"\nassert solution(\"100000 100000 100000\") == \"1\"\nassert solution
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''3\n1337 1337 1337\n''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\n'''\nassert solution('''5\n1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('input/quals/polycarp/1.in') == '9'\nassert solution('input/quals/polycarp/2.in') == '9'\nassert solution('input/quals/polycarp/3.in') == '3'\nassert solution('input/quals/polycarp/4.in') == '3'\nassert solution('input/quals/polycarp/5.in') == '6'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\n\nassert solution('''4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '4'\n\nassert solution('''4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == '2'"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\nassert solution('100 200\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\nassert solution('100 200\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\nassert solution('100 200\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('3 1') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1\\n1 2 3') == '2'\nassert solution('2 3\\n1 2 3') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\n\nn, k = map(int, stdin.readline().split())\nids = map(int, stdin.readline().split())\nconversations = [[]]*n\nfor i in range(n):\n    conversations[i] = ids[i]\n    ids.remove(ids[i])\n    ids.append(ids[i])\nprint(len(conversations))\nstdout.write(' '.join(map(str, conversations)))"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"7 4\") == \"3\"\nassert solution(\"10 5\") == \"6\"\nassert solution(\"10 6\") == \"6\"\nassert solution(\"6 5\") == \"5\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '1\\n1 1\\n'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 2 1\") == \"3\"\nassert solution(\"4 1\\n1 1\") == \"0\"\nassert solution(\"7 4\\n1 2 3 2 1 3 2\") == \"5\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\nq = deque([0])\nfor i in range(n):\n    if len(q) < k:\n        q.append(ids[i])\n    elif q[0] == ids[i]:\n        q.popleft()\n    else:\n        q.append(ids[i])\n        q.popleft()\nprint(len(q))\nprint(*q)\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('1 1\\n1') == '1'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5'\nassert solution('2 4 8 2 4') == '2 4'\nassert solution('5 4') == '2 2'\nassert solution('14') == '2'\nassert solution('10') == '1'\n\n\n\"\"\""
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n2\\n2\") == \"1\\n1\\n1\\n1\"\nassert solution(\"1\\n2\\n2\\n2\\n2\") == \"1\\n1\\n1\\n1\"\nassert solution(\"1\\n2\\n2\\n2\\n2\") == \"1\\n1\\n1\\n1\"\nassert solution(\"1\\n2\\n2\\n2\\n2\") == \"1\\n1\\n1\\n1\"\nassert solution(\"1\\n2\\n2\\n2\\n2\") == \"1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\nPolycarp wants to know the minimum number of coins he needs to obtain the value $b$. The value of the $i$-th coin is $a_i$, it is guaranteed that all the values are integer powers of $2$.\n\nPolycarp has $n$ coins, the value of the $i$-th coin is $a_i$. It is guaranteed that all the values are integer powers of $2$ (i.e. $a_i = 2^d$ for some non-negative integer number $d$).\n\nPolycarp wants to know answers on $q$ queries. The $j$-th query is described as integer number $b$. Polycarp can use only the first $n$ coins. The answer to the $j$-th query is the minimum number of coins that is necessary to obtain the value $b$ using some subset of the coins ($n \\le j \\le 2 \\cdot 10^5$). If Polycarp can't obtain the value $b$, the answer to the $j$-th query is -1.\n\nThe queries are independent (the answer on the query doesn't affect Polycarp's coins).\n'''\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"2 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"2 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"2 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"1 2\\n1 1\\n2 1\\n3 1\\n4 1\") == \"3\\n2\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == \\\n'''1\n-1\n3\n2\n2'''\n\nassert solution(\n    '''6 7\n1\n1\n1\n2\n1\n1''') == \\\n'''2\n2\n2\n2\n1\n1'''\n\nassert solution(\n    '''2 2\n1\n1\n2\n2''') == \\\n'''2\n2\n2\n1\n1'''\n\nassert solution(\n    '''2 1\n2''') == \\\n'''1\n1\n1\n1'''\n\nassert solution(\n    '''1 1\n1''') == \\\n'''1\n1\n1\n1\n1'''"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\"\n\n\n\"\"\""
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 2 8 5 5 8 2 2 8 5 2') == '21'\nassert solution('1 2 2 5') == '0'\nassert solution('1 2 3') == '0'\nassert solution('9 9 9 9 9 9 9 9 9') == '0'\nassert solution('9 9 9 9 9 9 9 9 9 9 9 9') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\") == \"21\"\nassert solution(\"4 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('2 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '21'\nassert solution('2 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('2 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '21'\nassert solution('2 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\ncards = list(map(int, stdin.readline().split()))\nfav = list(map(int, stdin.readline().split()))\nmax_happy = 0\n\nfor t in range(1, k*n+1):\n    h = 0\n    for i in range(n):\n        if cards[i] == fav[i]:\n            h += 1\n    if h == 0:\n        max_happy = 0\n    else:\n        max_happy = max(max_happy, h)\n\nprint(max_happy)\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''6 6\n6 6 6 6 6 6 6\n1 2 3\n2 4 5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''3 3\n9 9 9 9 9 9 9 9\n1 2 3\n2 6 7\n''') == '0'\nassert solution('''4 3\n4 6 3 4 2 4 7 6 2 2 8\n4 2 2 6\n5 4 5 3 4 7 6 8\n4 1 1 1\n4 1 1 1\n''') == '14'\n'''\n'''"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"2 4 1 2 1 3 1 3\") == \"3\"\nassert solution(\"2 5 1 3 1 1 3 1 3\") == \"6\"\nassert solution(\"3 5 1 3 1 1 3 1 3\") == \"9\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''6\n1 1 1 1 1 1''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\nassert solution(\"2 4 6 6 6\") == \"\"\nassert solution(\"2 4 6 6 6\") == \"\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''3\n1 1 1''') == '2'\nassert solution('''6\n1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '2'\nassert solution('''2 4 6 6 6''') == '2'\nassert solution('''3''') == '2'\nassert solution('''2 8 10''') == '2'\nassert solution('''4''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''3\n2 8 10\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\"\nassert solution(\"5\\n2 8 10\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"3\\n2 8 10\") == \"2\"\nassert solution(\"1\\n1 1 1 1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''2\n1 1''') == '2'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1\\n1\\n1\\n1'\nassert solution('2\\n3\\n4\\n5') == '1\\n1\\n1\\n1'\nassert solution('3\\n2\\n4\\n5\\n6') == '2\\n1\\n1\\n1'\nassert solution('4\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n1\\n2\\n3\\n4') == '1\\n2\\n2\\n1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution('2\\n2 1\\n01') == '0'\nassert solution('2\\n2 2\\n00') == '1'\nassert solution('2\\n2 2\\n00') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"10101\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('0') == '1'\nassert solution('10010001') == '1'\nassert solution('10001010') == '2'\nassert solution('10001010') == '2'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('0001') == '0'\nassert solution('1101') == '0'\nassert solution('110101') == '0'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n\nassert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n\nassert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1') == '0'\nassert solution('5 2') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0''') == '0'\nassert solution('''1''') == '0'\nassert solution('''100000''') == '0'\nassert solution('''110000''') == '0'\nassert solution('''00100000''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10010001') == '1'\nassert solution('10000010') == '0'\nassert solution('00000000') == '0'\nassert solution('00100000') == '0'\nassert solution('10100100') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('0'*100) == 0\nassert solution('1'*100) == 0\nassert solution('00'*100) == 0\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('00') == '0'\nassert solution('10101') == '2'\nassert solution('100010') == '1'\nassert solution('11111111') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"\"\nassert solution(\"4\\n2\\n3\\n3\\n4\\n4\") == \"\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''2 2\n1 1\n2 1\n''') == '0'\nassert solution('''7 1\n29 30\n30 30\n29 29\n28 30\n30 30\n29 29\n29 29\n''') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 1\") == \"3\"\nassert solution(\"2 3\\n2 3\\n2 2\\n2 3\\n2 3\\n2 3\") == \"3\"\nassert solution(\"3 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\") == \"1\"\nassert solution(\"2 2\\n2 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"1\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''11\n11''') == '3'\nassert solution('''11\n11''') == '3'\nassert solution('''2\n3''') == '1'\nassert solution('''2\n3''') == '1'\nassert solution('''3\n3''') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '1'\nassert solution('3 1\\n2 3\\n3 3\\n2 3\\n2 3\\n2 3') == '4'\nassert solution('4 1\\n2 3\\n3 3\\n2 3\\n2 3\\n2 3') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''10 1\n99999999999999999 999999\n1 1\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n99999999999999999 999999\n''') == '5'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''4 1\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''3 1\n20 21\n20 19\n19 21\n''') == '0'\nassert solution('''1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\nassert solution('''3\n1\n0\n1\n0\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n0\n0\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0\n0\n1\n0\n1\n1\n0\n1\n1\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n1\n0\n0\n1\n1\n0\n1\n0\n1\n0\n1\n0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n0\n1\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n1\n1\n0\n1\n1\n0\n0\n0\n1\n1\n0\n0\n0\n1\n0\n1\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n1\n0\n0\n1\n1\n0\n0\n1\n0\n0\n1\n1\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n0\n1\n1\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n1\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n1\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n2 2 2''') == '10'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n2 1 2''') == '9'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 1 1''') == '8'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\\n\"\nassert solution(\"5\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"72\\n76\\n60\\n46\\n36\\n34\\n32\\n30\\n28\\n26\\n24\\n22\\n20\\n18\\n16\\n14\\n12\\n10\\n8\\n6\\n4\\n2\\n0\\n-2\\n-4\\n-6\\n-8\\n-10\\n-12\\n-14\\n-16\\n-18\\n-20\\n-22\\n-24\\n-26\\n-28\\n-30\\n-32\\n-34\\n-36\\n-38\\n-40\\n-42\\n-44\\n-46\\n-48\\n-50\\n-52\\n-54\\n-56\\n-58\\n-60\\n-62\\n-64\\n-66\\n-68\\n-70\\n-72\\n-74\\n-76\\n-78\\n-80\\n-82\\n-84\\n-86\\n-88\\n-90\\n-92\\n-94\\n-96\\n-98\\n-100\\n\"\nassert solution(\"5\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"74\\n76\\n60\\n46\\n36\\n34\\n32\\n30\\n28\\n26\\n24\\n22\\n20\\n18\\n16\\n14\\n12\\n10\\n8\\n6\\n4\\n2\\n0\\n-2\\n-4\\n-6\\n-8\\n-10\\n-12\\n-14\\n-16\\n-18\\n-20\\n-22\\n-24\\n-26\\n-28\\n-30\\n-32\\n-34\\n-36\\n-38\\n-40\\n-42\\n-44\\n-46\\n-48\\n-50\\n-52\\n-54\\n-56\\n-58\\n-60\\n-62\\n-64\\n-66\\n-68\\n-70\\n-72\\n-74\\n-76\\n-78\\n-80\\n-82\\n-84\\n-86\\n-88\\n-90\\n-92\\n-94\\n-96\\n-98\\n-100\\n\"\nassert solution(\"5\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n2') == '1'\nassert solution('2\\n1\\n2\\n2') == '3'\nassert solution('2\\n1\\n2\\n2') == '2'\nassert solution('3\\n2\\n3\\n3') == '4'\nassert solution('3\\n2\\n3\\n3') == '4'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n4 3 4\n''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n4 4 4\n''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input() # ignored\n'''\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n3\n1 1 1\n2 3 2\n2 3 2''') == '3'\nassert solution('''3\n3\n4 2 2\n2 1 2\n2 3 2''') == '2'\nassert solution('''3\n3\n1 1 1\n1 1 1\n1 1 1''') == '3'\nassert solution('''3\n3\n3 3 3\n1 1 1\n1 1 1\n1 1 1''') == '3'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"30 31 10\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n1 3 3') == '2\\n2\\n2'\nassert solution('2\\n2\\n2\\n2') == '4'\nassert solution('3\\n2\\n1 2') == '2'\nassert solution('1\\n3\\n1 3 3') == '2\\n2\\n2'\nassert solution('5\\n5') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n4 6 3''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n4 6 3''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3 4''') == '11'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1'\n'''\n1. Write a program to compute the maximum number of students in each team.\n2. Implement a version of this problem where each student can participate in more than one team.\n'''\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\nkey = [(a,b,a-b) for a in stdin for b in stdin]"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n\"\"\") == \"\"\"\n2\n1\n2\n1\n\"\"\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n2') == '2'\nassert solution('0\\n2\\n4\\n') == '4'\nassert solution('0\\n1\\n1\\n') == '1'\nassert solution('0\\n1\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2\\n1\\n2\\n1'\nassert solution(\n'''1\n1\n0''') == '0'\nassert solution(\n'''1\n3\n1 2 3 4 5 6''') == '0'\nassert solution(\n'''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1'\nassert solution(\n'''1\n4\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1\\n'\nassert solution('''4\n5\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '3\\n'\nassert solution('''2\n5\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1\\n'\nassert solution('''3\n3\n1 2 3\n1\n2 3\n1\n''') == '2\\n'\nassert solution('''2\n2\n1 2\n1\n2\n1\n''') == '2\\n'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\"\"\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"\"\"1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\"\"\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"\"\"1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\"\"\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"\"\"1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\"\"\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"\"\"1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\"\"\") == \"NO\\nNO\\nNO\\nYES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n10 9 8 7\n4 5 6 7''') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'NO'\n\n\n\n\n\n\"\"\"\n\n\"\"\"\n-----Input-----\n\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\n-----Output-----\n\nYES\nNO\nNO\nYES\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nNO\\nNO\\nNO'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n1 1 1 1 1') == 'YES\\nYES\\nYES\\nYES'\n\n\n-----Note-----\n\n1. $a \\ge b$\n2. All test cases will have at least one answer.\n3. The answer in any case is either 'YES' or 'NO'.\n4. The input and output format are case-insensitive.\n5. You are not allowed to use any built-in BigInteger library or convert the inputs to integer directly.\n\"\"\""
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('2 2 1 1\\n3 3 2 1\\n1 1 2 1\\n2 2 1 1\\n2 2 1 2\\n2 2 1 3\\n1 1 1 2\\n1 1 1 1\\n2 2 1 1\\n3 3 1 1\\n2 2 1 2\\n2 2 1 3\\n1 1 1 2\\n1 1 1 1\\n2 2 1 1\\n3 3 1 1') == 'YES\\nYES\\nNO\\nNO\\nNO\\nYES'\n\n-----How to run-----\n\n```console\npython3 -m algorithms.numerical_comparison_integer_test_solutions"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n1 1 1 1 1\\n') == 'YES\\n0\\n1 1 1 1 1\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 1 5 3') == 'YES\\n1\\n3 7\\n5'\nassert solution('7 2 7 3 3 1 4') == 'YES\\n2\\n3 7\\n5'\nassert solution('5') == 'NO'\nassert solution('7 2 7 3 3 1 4 0') == 'NO'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == \"YES\"\nassert solution('''5\n4 3 1 5 3\n''') == \"YES\"\nassert solution('''5\n0 1 2 1 2\n''') == \"NO\"\nassert solution('''5\n0 1 2 3 4\n''') == \"YES\"\nassert solution('''5\n0 1 2 3 4\n''') == \"NO\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES\\n1\\n3\\n4\\n5 4 3 1\\n'\nassert solution('''5\n0 1 2 1 2\n''') == 'NO\\n'\nassert solution('''5\n0 1 2 1 2\n''') == 'NO\\n'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0\") == \"NO\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"0\\n1\") == \"NO\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"2\\n1 2\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"7\\n7\\n7\\n7\\n7\") == \"YES\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"YES\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\\n\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1\\n\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0') == '8'\nassert solution('1 1\\n1 0 1') == '-1'\nassert solution('3 3\\n2 2 2\\n3 1 1\\n2 1 1') == '4'\nassert solution('7 1\\n1 0 1\\n1 1 1') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"-1\"\"\"\nassert solution(input()) == \"\"\"-1\"\"\"\nassert solution(input()) == \"\"\"-1\"\"\"\nassert solution(input()) == \"\"\"-1\"\"\"\nassert solution(input()) == \"\"\"-1\"\"\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\n\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\n\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n\nassert solution('''10 10\n23 0 0\n8 0 0\n8 1 0\n9 0 1\n5 0 0\n11 0 0\n5 0 1\n7 0 0\n5 1 0\n5 0 0\n''') == '46'\n\nassert solution('''20 10\n20 2 0\n17 1 0\n16 0 1\n15 1 0\n16 1 0\n12 0 0\n15 0 1\n15 0 0\n13 1 0\n16 0 1\n15 1 0\n18 0 0\n17 1 0\n16 0 1\n15 1 0\n15 1 0\n14 1 0\n15 0 1\n12 0 0\n16 0 1\n15 1 0\n18 0 0\n17 1 0\n16 0 1\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n14 1 0\n15 0 1\n12 0 0\n16 0 1\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n14 1 0\n15 0 1\n12 0 0\n16 0 1\n15 1 0\n18 0 0\n17 1 0\n16 0 1\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n15 1 0\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\"\"[Finished in 0.3s]\"\"\"\n\nprint(solution(input))\nassert solution(input) == \"\"\"[Finished in 0.3s]\"\"\""
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 4\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 4\\n5 0 0\\n5 0 0\\n5 0 0\\n5 0 0\\n5 0 0\\n3 0 0\\n') == '-1'\nassert solution('5 4\\n5 0 0\\n5 0 0\\n5 0 0\\n5 0 0\\n5 0 0\\n5 0 0\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\"\nassert solution(\"4 2\\n7 0 0\\n2 0 0\\n4 1 0\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"-1\"\nassert solution(\"4 2\\n7 1 0\\n2 0 0\\n4 1 0\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"8\"\nassert solution(\"4 3\\n7 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"-1\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n\n''') == '-1'\nassert solution('''8 3\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n''') == '18'\nassert solution('''5 3\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n-1\\n7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n7 4 8 9 1 2 3 4 5 6 7 8 9''') == '2\\n6\\n7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n8 4 6 4 3 2 1''') == '2\\n6\\n7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\\\n6\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\\\n6\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\\\n7\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\\\n7\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n' +\n        '5 1\\n' +\n        '1 1 2 3 1\\n' +\n        '4 2\\n' +\n        '6 4 8 5\\n' +\n        '2 2\\n' +\n        '1 6\\n' +\n        '3 5\\n' +\n        '5 2 5\\n'\n        ) == '6'\nassert solution('4\\n' +\n        '5 1\\n' +\n        '1 1 2 3 1\\n' +\n        '4 2\\n' +\n        '6 4 8 5\\n' +\n        '2 2\\n' +\n        '1 6\\n' +\n        '3 5\\n' +\n        '5 2 5\\n' +\n        '1 6\\n' +\n        '3 5\\n' +\n        '5 2 5\\n'\n        ) == '-1'\nassert solution('4\\n' +\n        '5 1\\n' +\n        '1 1 2 3 1\\n' +\n        '4 2\\n' +\n        '6 4 8 5\\n' +\n        '2 2\\n' +\n        '1 6\\n' +\n        '3 5\\n' +\n        '5 2 5\\n'\n        ) == '7'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'\n\nassert solution('''\n5\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'\n\nassert solution('''\n2\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'\n\nassert solution('''\n3\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'\n\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n') == '1'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '6'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n5\\n6\\n7') == '-1'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n6\\n7') == '7'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\n\"\"\""
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''5'''\nassert solution('''12''') == '''0'''\nassert solution('''15''') == '''3'''\nassert solution('''4 8 4 15 16 8 23 15 16 4 42 23 42''') == '''3'''\nprint(\"Passed all tests!\")\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\"\"\") == \"0\"\nassert solution(\"\"\"4 8 4 15 16 8 22 23 15 16 4 42 22 42\"\"\") == \"3\"\nassert solution(\"\"\"4 8 4 15 16 8 22 23 15 16 4 42 22 23 42\"\"\") == \"3\"\nassert solution(\"\"\"4 8 4 15 16 8 22 23 15 16 4 42 22 22 42\"\"\") == \"3\"\nassert solution(\"\"\"4 8 4 15 16 8 22 23 15 16 4 42 22 23 44\"\"\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '0'\nassert solution('5\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '5'\nassert solution('6\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '3'\nassert solution('10\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '7'\nassert solution('15\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '10'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"15\") == \"\"\nassert solution(\"4 8 15 16 23\") == \"\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '0'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '3'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 8 15 16 23\\n\") == \"5\"\nassert solution(\"4 8 4 15 16 8 23 15 16 4 42 23 42\\n\") == \"0\"\nassert solution(\"12\\n\") == \"5\"\nassert solution(\"4 8 4 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('\\n') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n4 8 15 16 23') == '5'\nassert solution('12\\n4 8 4 15 16 8 16 22 23 22 23') == '0'\nassert solution('15\\n4 8 4 15 16 8 16 22 22 23 42 42') == '3'\n\n-----"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5\\n13 42\\n18 4') == '0\\n3\\n2'\nassert solution('5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n\n\n\n'''\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '3'\nassert solution('3 5') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\n\nfor i in range(T):\n    A, B = map(int, sys.stdin.readline().strip().split())\n    print(abs(A-B)+max(A,B))"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('''2 2\n1 1\n2 2''') == '0\\n0\\n0'\nassert solution('''2 2\n1 2\n2 1''') == '1\\n0\\n0'\n'''\nThe first test case, consists of a single test case.\n\nIn the second test case, the following sequence of moves can be applied: $13 \\rightarrow 12 \\rightarrow 10$.\n\nIn the third test case, the following sequence of moves can be applied: $18 \\rightarrow 14 \\rightarrow 10$.\n'''\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\n\nassert solution('''5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\n\nassert solution('''5\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'\n\nassert solution('''5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '92'\n\nassert solution('''5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '87654322'"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13 42\\n18 4') == '0\\n3'\nassert solution('1337 420\\n123456789 1000000000\\n100500 9000') == '2\\n92\\n87654322\\n9150'\n\n\n'''\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 11') == '3'\nassert solution('5 9') == '0'\nassert solution('13 42') == '2'\nassert solution('18 4') == '3'\nassert solution('1337 420') == '92'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n3') == '0'\nassert solution('3\\n1\\n1') == '3'\nassert solution('3\\n4\\n3') == '1'\nassert solution('3\\n1\\n4') == '2'\nassert solution('3\\n2\\n4') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution(\n'''1\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\nassert solution(\n'''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '0'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '15'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '54306'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('input.txt') == '5'\n\n\n-----X-----\nIt is better to solve the problem before you try to think about solving it.\n\nThe code for the hint problem is provided in the editor below, and it has given you the answer (but with the help of a hint).\n\n-----Hint-----\n\nWe know that if $a \\bmod b = 0$ then $a = k \\bmod b$ for some $k$ with $0 \\le k < b$.\n\nYou can use this fact to check whether $k$ exists for a test case.\n\nFor example, let $x = 12345, y = 5, n = 100000, then $k$ is always the remainder $5$ modulo $12345$.\n'''"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"112345\") == \"12345\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"1234\") == \"1\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('''8\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('''8\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('''8\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '5'\nassert solution('''5,2,0''') == '2'\nassert solution('''5,0,0''') == '0'\nassert solution('''5,0,0''') == '0'\nassert solution('''7,5,12345''') == '12339'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15'\n\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '''12339\n0\n15\n54306\n999999995\n185\n999999998'''\n\n'''\n\n'''"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n\n\n\"\"\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == '1'\nassert solution('2 3') == '4'\nassert solution('2 3') == '4'\nassert solution('1 2 2 3 2 4 10') == '6'\nassert solution('1 2 2 3 2 4 6 10') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('5 10\\n1 2 2 3 2 4 5 6 7 8 9 10\\n') == '0'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == str(expected_output)\n'''\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nassert solution('8 3\\n1 2 2 3 2 4 6 10') == '4'\nassert solution('5 2\\n1 2 2 3 2 4') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2''') == '6'\nassert solution('''8 2''') == '8'\nassert solution('''7 3''') == '4'\nassert solution('''8 2''') == '4'\nassert solution('''7 4''') == '2'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 7\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '8'\nassert solution('8 3\\n1 2 2 3 2 4 6 10\\n') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\n\"\"\""
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hello') == 'hello'\nassert solution('hello') == 'hello'\nassert solution('hello') == 'hello'\nassert solution('abC') == 'aBC'\nassert solution('aBC') == 'aBC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1\\nABC\\n') == 'aBC'\nassert solution('3 5\\nAaBbCc\\n') == 'aaBbCc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == 'a'\nassert solution('B') == 'b'\nassert solution('C') == 'c'\nassert solution('ABC') == 'aBc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A\",\"1\") == \"a\"\nassert solution(\"ABC\",\"1\") == \"aBc\"\nassert solution(\"ABC\",\"2\") == \"Abc\"\nassert solution(\"ABC\",\"3\") == \"Abc\"\nassert solution(\"ABC\",\"4\") == \"Abc\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"a\"\nassert solution(\"2 1\") == \"ab\"\nassert solution(\"5 2\") == \"aBC\"\nassert solution(\"5 2\") == \"aBC\"\nassert solution(\"5 2\") == \"aBC\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'aBC'\nassert solution('3 5') == 'ABC'\nassert solution('3 2') == 'ABc'\nassert solution('3 4') == 'ABC'\nassert solution('3 11') == 'Abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc', '1', 'abc') == 'aBC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aBC') == 'aBC'\nassert solution('ABC') == 'abc'\nassert solution('aBc') == 'abc'\nassert solution('aBC') == 'abc'\nassert solution('Abc') == 'abc'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nmohai 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nmohai 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nmohai 40\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3 4 6 1 5 2'\nassert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nkhabarovsk 30\nmoscow 40\nkhabarovsk 50\nmoscow 30''') == '3 4 6 1 5 2'\n'''\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    'khabarovsk 20\\n'\n    'moscow 10\\n'\n    'kazan 50\\n'\n    'kazan 35\\n'\n    'moscow 60\\n'\n    'khabarovsk 40'\n) == '3\\n4\\n6\\n1\\n5\\n2'\n\n'''\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n4\\n6\\n1\\n5\\n2\"\n\n\"\"\"\n\nN = int(input())\nrestaurants = []\nfor _ in range(N):\n    city, score = input().split()\n    restaurants.append((city, int(score)))"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('6\\nkhabarovsk 2\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '2\\n4\\n6\\n1\\n5'\nassert solution('5\\nkhabarovsk 2\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '2\\n4\\n6\\n1\\n5'\nassert solution('5\\nkhabarovsk 2\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '2\\n4\\n6\\n1\\n5'\nassert solution('5\\nkhabarovsk 2\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '2\\n4\\n6\\n1\\n5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"1 3 4\") == \"1\"\nassert solution(\"1 3 4 5\") == \"1\"\nassert solution(\"1 3 2 4\") == \"3\"\nassert solution(\"1 3 2 4 5 6\") == \"3\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('''3\nkhabarovsk 10\nmoscow 20\nkazan 25''') == '1\\n2\\n3'\nassert solution('''3\nkhabarovsk 10\nmoscow 10\nkazan 25''') == '1\\n2\\n3'\nassert solution('''3\nkhabarovsk 10\nmoscow 20\nkazan 25''') == '1\\n2\\n3'\nassert solution('''3\nkhabarovsk 10\nmoscow 20\nkazan 25''') == '1\\n2\\n3'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('2\\n2\\n1\\n') == '2'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3 4 6 1 5 2'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3 4 6 1 5 2'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3 4 6 1 5 2'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3 4 6 1 5 2'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('100 5') == 'No'\nassert solution('1 2') == 'No'\nassert solution('3 10') == 'No'\nassert solution('2 10') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '2 900') == 'Yes'\nassert solution(\n    '3 4') == 'No'\nassert solution(\n    '3 10') == 'Yes'\nassert solution(\n    '10 1') == 'Yes'\nassert solution(\n    '10 2') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 4\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 6') == 'Yes'\nassert solution('5 4') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('6 1') == 'No'\nassert solution('1 1000') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 3\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 900') == 'No'\nassert solution('2 100') == 'Yes'\nassert solution('2 100') == 'No'\nassert solution('3 100') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'No'\nassert solution('5 50') == 'No'\nassert solution('2 50') == 'Yes'\nassert solution('0 10') == 'No'\nassert solution('2 0') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 500\") == \"No\"\nassert solution(\"1 100\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"\nassert solution(\"1 1000\") == \"No\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.145833333333'\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 10') == '0.145833333333'\nassert solution('10 100') == '0.0714285714285714'\nassert solution('0 10') == '0'\nassert solution('100 10') == '0'\nassert solution('100 100') == '1'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n        \"3 10\"\n    ) == \"0.145833333333\"\nassert solution(\n        \"5 4\"\n    ) == \"0.603846153846\"\nassert solution(\n        \"2 3\"\n    ) == \"0.26666666667\"\n\"\"\"\nfrom __future__ import annotations\n\n__all__ = [\"solution\"]\n\nfrom typing import Iterable, Tuple\n\nimport numpy as np\n\nfrom common.testutil import assert_equal\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10''') == '0.1458333333'\nassert solution('''1 10''') == '0.0'\nassert solution('''10 2''') == '1.0'\nassert solution('''5 3''') == '0.375'\n'''\nimport sys\nfrom math import *\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 10''') == '0.145833333333'\nassert solution('''10 100''') == '0.0'\nassert solution('''2 2''') == '0.5'\nassert solution('''2 100''') == '0.999999999999966'\nassert solution('''4 100''') == '0.999999999999999'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 10') == '0.145833333333'\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(7 / 48)\nassert solution(stdin) == str(7 / 48)\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"0.145833333333\"\nassert solution(\"10 1000\") == \"1.0\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"100000000000 1000\") == \"1.0\"\nassert solution(\"100 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.145833333333\"\nprint(solution(stdin))\n'''\nfrom fractions import Fraction\nfrom fractions import gcd"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '1'\nassert solution('WED') == '1'\nassert solution('THU') == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '0'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\nassert solution('THU') == '4'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('SUN') == 1\nassert solution('MON') == 2\nassert solution('TUE') == 3\nassert solution('WED') == 4\nassert solution('THU') == 5\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '7'\nassert solution('WED') == '14'\nassert solution('TUE') == '21'\nassert solution('THU') == '28'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SUN) == 1\nassert solution(MON) == 2\nassert solution(TUE) == 3\nassert solution(WED) == 4\nassert solution(THU) == 5\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('SUN') == ''\nassert solution('SAT') == '1'\nassert solution('WED') == '2'\nassert solution('THU') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAT) == 1\nassert solution(SUN) == 0\nassert solution(TUE) == 1\nassert solution(WED) == 2\nassert solution(THU) == 3\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"MON\") == 2\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 4\nassert solution(\"THU\") == 5\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SUN) == '1'\nassert solution(SAT) == '1'\nassert solution(MON) == '2'\nassert solution(WED) == '4'\nassert solution(THU) == '6'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == int(input)\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 22') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('3 8 16') == '60\\n140\\n280\\n560\\n840\\n1680\\n3440\\n6720\\n11840\\n25280'\nassert solution('4 5 5') == '20\\n40\\n80\\n120\\n160\\n200\\n240\\n280\\n320\\n360'\nassert solution('3 4 7') == '27\\n54\\n81\\n126\\n171\\n216\\n261\\n306\\n351'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('2 50 10') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('2 10 10') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('5 5 10') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('1 10 10') == '30 50 90 170 330 650 1290 2570 5130 10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 10 20''') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('''2 5 20''') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('''3 2 25''') == '30 50 90 170 220 230 170 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180 180"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2\\n\") == \"0\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"5\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"\nassert solution(\"4\\n1 3 2 1\\n\") == \"0\"\nassert solution(\"4\\n1 3 2 1\\n\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('5\\n1 3 2 1 4\\n') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n1 3 1 1 4\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"5\n1 3 2 1 4\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"3\n4 1 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"7\n1 2 3 4 7 8 9\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"7\n4 1 2 5 7 8 9\n\"\"\"\n) == \"9\""
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '0'\nassert solution('1\\n2\\n3\\n4') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 3 1 4\") == \"5\"\nassert solution(\"1 3 2 1 4\") == \"4\"\nassert solution(\"1 3 2 4\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n\nN = int(input())\nd = [int(x) for x in input().split()]\na = 0\nb = 0\nc = 0\nfor i in range(0, len(d)):\n    if i < len(d)/3:\n        a += d[i]\n    elif i < len(d)/2:\n        b += d[i]\n    else:\n        c += d[i]\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n1\\n1') == 'NO'\nassert solution('2\\n100\\n100') == 'NO'\nassert solution('2\\n100\\n200') == 'YES'\nassert solution('2\\n1000\\n1000000') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO\\n4 5 3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'NO\\n4 5 3\\n1 1 1\\nNO\\nNO\\nNO\\n1 1 1000000000\\nNO\\nNO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('foo') == 'NO'\nassert solution('bar') == 'NO'\nassert solution('bar') == 'YES'\nassert solution('bar') == 'YES'\nassert solution('foo') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"YES\"\n\"YES\"\n\"YES\"\n\"YES\"\n\"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n2\\n3\\n') == 'YES'\nassert solution('1\\n2\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2') == 'NO'\nassert solution('10 10 10') == 'YES'\nassert solution('1 1000000000 1000000000') == 'YES'\nassert solution('1 1000000000 1000000000') == 'YES'\nassert solution('1 1000000000 1000000000') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"100 100 100\\n\"\n    \"50 49 49\\n\"\n    \"10 30 20\\n\"\n    \"1 1000000000 1000000000\\n\"\n) == \"NO\\n\" + \\\n    \"3 2 1\\n\" + \\\n    \"YES\\n\" + \\\n    \"100 100 100\\n\" + \\\n    \"NO\\n\" + \\\n    \"NO\\n\" + \\\n    \"YES\\n\" + \\\n    \"1 1 1000000000\\n\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 3''') == 'YES'\nassert solution('''100 100 100''') == 'YES'\nassert solution('''50 49 49''') == 'NO'\nassert solution('''10 30 20''') == 'YES'\nassert solution('''1 1000000000 1000000000''') == 'YES'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '5 2 6'\n    '5 2 1 4 2'\n) == '4'\nassert solution(\n    '5 1 4'\n    '4 2 3 4 1'\n) == '1'\nassert solution(\n    '5 3 3'\n    '1 2 3 1 1'\n) == '5'\nassert solution(\n    '5 3 3'\n    '1 2 3 1 1'\n) == '5'\n\n\n\"\"\"\n\n\"\"\"\n\n---AC---\n\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '1'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\nassert solution('10 5 7\\n5 2 1 3 3 4 1 4 2 3 2 2 1 1 3 4 1 2 2 1 4 3 1 1 1 3 2 2 2 2 2 1 1 1 1 1 1 2 2 3 1 3 3 2 2 1 3 1 3 2 1 3 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 1 1 2 1 3 1 1 1 1 1 1 1 1 2 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n---\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\n'''"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\n\n\n'''"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\n\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '1'\n\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'\n\nassert solution('''5 4 4\n4 2 3 4 1\n''') == '4'\n\nassert solution('''3 2 4\n4 3 1 1\n''') == '1'"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom itertools import groupby"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\nassert solution('1 2 3 1 1') == '5'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom itertools import combinations\n\nstdin = '7 2\\nabacaba\\na b\\n'\nstdout = '12\\n'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2\\na b\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d') == '21'\nassert solution('7 1\\na a\\nb') == '0'\nassert solution('8 3\\nsadfasdfsdfsd\\nfadfasdfasdf\\nafasdfasdfsdfsdfsdfsdfsdf') == '3'\nassert solution('1000000000 0\\ntest') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaa\\nb\\n') == '0'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 1\\naaaaabbb\\nbb') == '12'\nassert solution('2 2\\naab\\nab') == '0'\nassert solution('3 1\\naab\\nab') == '6'\nassert solution('7 1\\naaaaabbb\\nbbb') == '2'\nassert solution('3 1\\naab\\nab') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\nassert solution('''7 1\nasdfasdfasdf\nb''') == '0'\nassert solution('''7 3\naaaaaaa\na b\na''') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 1') == 0\nassert solution('7 2') == 12\nassert solution('10 3') == 21\nassert solution('11 2') == 19\nassert solution('15 2') == 21\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('-1') == '1'\nassert solution('-2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n10') == '1'\nassert solution('2\\n-1 -2') == '-1'\nassert solution('3\\n1 2 3 -1 -2') == '3'\nassert solution('4\\n-1 -2 -1 -3') == '-2999999997'\nassert solution('4\\n1 2 3 -1 -2') == '6'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-2999999997'\nassert solution('''3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2','should work'\n\n'''\nSample 1\n\n5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\nExpected output\n\n2\n-1\n6\n-2999999997\n\n'''\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3 2 2\") == \"3\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n-1\\n-2') == '3'\nassert solution('2\\n-1\\n-2\\n-1\\n-3') == '-2'\nassert solution('3\\n-1\\n-2\\n-1\\n-3') == '-2'\nassert solution('3\\n-1\\n-2\\n-1\\n-3') == '-2'\nassert solution('3\\n-1\\n-2\\n-1\\n-3') == '-2'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\\n1 5\\n2 3\\n2 4\\n3 4\\n4 5\\n1 2\\n2 3\\n2 5\\n3 4\\n6 5\\n4 5\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n6 5\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 5\n1 2\n2 3\n3 5\n4 3\n1 5'''\n    ) == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution(\n'''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n'''\n    ) == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\n\nassert solution(\n'''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n'''\n    ) == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\n\nassert solution(\n'''10 11\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n6 7\n8 9\n9 10\n'''\n    ) == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\\n3 5\\n2 1\\n3 2\\n3 4\\n4 1\\n1 2\\n2 3\\n2 4\\n3 4\\n1 5\") == \"3 2\\n2 1\\n3 2\\n3 4\\n4 1\\n1 2\\n2 3\\n2 4\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 5\\n5 8\\n4 5\\n2 7\\n5 8\\n\\n4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\\n4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n\n\n\n-----\n\n##Wrong\n\nIn this example the number of edges of spanning tree incident to the vertex $2$ is $4$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\nPicture corresponding to the third example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $5$ is $3$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\nPicture corresponding to the fourth example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $7$ is $3$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\n##Correct\n\nPicture corresponding to the second example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $1$ is $3$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\nPicture corresponding to the third example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $2$ is $4$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\nPicture corresponding to the fourth example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $5$ is $3$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\nPicture corresponding to the fifth example: [Image]\n\nIn this example the number of edges of spanning tree incident to the vertex $7$ is $3$. It is the maximum degree over all vertices of the spanning tree. It is easy to see that we cannot obtain a better answer.\n\n\"\"\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5') == '3 2'\nassert solution('5 6') == '4 1'\nassert solution('8 9') == '3 2'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 5\\n5 6\\n4 5\\n2 7\\n5 8\\n') == '3 2'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 5\\n5 6\\n4 5\\n2 7\\n5 8\\n') == '3 2'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n') == '4 1\\n1 2\\n1 3\\n1 4\\n2 5\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom collections import defaultdict, Counter\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n2 5\\n1 2\\n') == '3 2\\n2 1\\n3 2\\n1 2\\n'\nassert solution('4 1\\n1 2\\n1 3\\n2 3\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n2 3\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n\n\"\"\"\nfrom collections import Counter\nfrom math import sqrt\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"3 5\"\nassert solution(\"4 6\") == \"4 1\"\nassert solution(\"8 9\") == \"3 2\"\nassert solution(\"5 4\") == \"3 2\"\nassert solution(\"7 7\") == \"3 2\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 10\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\n\nassert solution(\n'''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\nassert solution(\n'''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\nassert solution(\n'''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''5\n5''') == '0'\nassert solution('''1\n5''') == '0'\nassert solution('''5\n7''') == '2'\nassert solution('''8\n8''') == '0'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == 0\nassert solution('5') == 0\nassert solution('499993') == 0\nassert solution('499993\\n499993') == 0\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('499993') == '0'\nassert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('499993') == '40'\nassert solution('499993') == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n3''') == '0'\nassert solution('''10\n10\n10''') == '2'\nassert solution('''101\n0\n1''') == '2'\nassert solution('''10\n1\n1''') == '0'\nassert solution('''10\n2\n1''') == '0'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n499993') == '0\\n40\\n41664916690999888'\n\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n\"\"\") == \"\"\"\n0\n40\n41664916690999888\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 0\nassert solution('5') == 40\nassert solution('499993') == 41664916690999888"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n3\\n') == '0'\nassert solution('3\\n1\\n3\\n') == '40'\nassert solution('499903\\n1\\n3\\n') == '41664916690999888'\nassert solution('499903\\n2\\n3\\n') == '41664916690999888'\nassert solution('5\\n1\\n3\\n') == '16'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n5\n499993''') == '0'\nassert solution('''3\n1\n9\n471425125\n''') == '40'\nassert solution('''3\n1\n17\n456789123456789123456789\n''') == '41664916690999888'\nassert solution('''3\n1\n31\n100000000000000\n''') == '40'\nassert solution('''3\n1\n27\n276787654321\n''') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n5\n499993''') == '0'\nassert solution('''3\n1\n5\n499993''') == '40'\nassert solution('''3\n1\n5\n499993''') == '41664916690999888'\n\nassert solution('''7\n7\n9\n45\n8\n13\n11\n49\n5\n1\n7''') == '2'\nassert solution('''7\n7\n9\n45\n8\n13\n11\n49\n5\n1\n7''') == '6'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 2 3 4 5') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 2 3 4 5 6 7') == '1 1 1 2 -1 1 1 3 1 1 1'\nassert solution('1 2 3 4 5 6 7 8') == '1 1 1 2 -1 1 1 3 1 1 1 1'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 1 1 2 -1 1 1 3 1 1 1 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('9 7 4 4 3 2 2 3 1 1') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('7 1 2 3 4 4 5 5 6 7') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 1 2 3 4 4 5 5 6 7') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 1 2 3 4 4 5 5 6 7') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\\n\") == \"1 1 1 2 -1 1 1 3 1 1\""
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom functools import reduce\nfrom typing import List"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 5 7 6 7 5 4 4 6 4\\n') == '1 1 1 2 -1 1 1 3 1 1'\n\n----Note----\n\nOne more example of multiple choice\n\nFor $n = 10$,"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2 4 3 2 1') == '1 -1 1 -1 1 -1 -1 1 1 1 1 1'\nassert solution('1 3 1') == '-1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\nassert solution('1 1 1') == '1 1 1 1 1 1 1 1 1 1 1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n5 7 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"5\\n3 2 5 4 2 3 1\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"6\\n3 2 5 4 2 3 1\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"7\\n4 2 5 6 4 6 2 4\") == \"1 1 1 2 -1 -1 -1 -1\"\nassert solution(\"8\\n2 2 4 2 4 4 2 2\") == \"-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n64\") == \"NO\\nNO\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n32\") == \"NO\\nNO\\nNO\\nNO\"\nassert solution(\"5\\n97\") == \"NO\\nNO\\nNO\"\nassert solution(\"5\\n2\") == \"NO\\nNO\\nNO\"\nassert solution(\"5\\n12345\") == \"YES\\n2 4 8\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES' # 2 4 8\nassert solution(stdin) == 'NO' # 'NO'\nassert solution(stdin) == 'NO' # 'NO'\nassert solution(stdin) == 'NO' # 'NO'\nassert solution(stdin) == 'YES' # 3 5 823\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'YES'\nassert solution('64') == 'YES'\nassert solution('32') == 'YES'\nassert solution('97') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'YES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n2 4 8\\n'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n4') == 'YES'\nassert solution('1\\n5') == 'NO'\nassert solution('1\\n6') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == '''YES\n2 4 8'''\nassert solution('''64\n32\n97\n2\n12345\n''') == '''NO\nNO\nNO\nYES\n3 5 823\n'''\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8'''\nassert solution('''64\n32\n97\n2\n12345\n''') == '''NO\nNO\nNO\nYES\n3 5 823\n'''\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8'''\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES\\n2 4 8'\nassert solution('64') == 'NO'\nassert solution('32') == 'NO'\nassert solution('97') == 'NO'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"64\\n32\\n97\\n2\\n12345\") == \"2 4 8\"\n\"\"\""
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 'YES'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nbbbb\n''') == '2'\nassert solution('''6\nababab\n''') == '0'\nassert solution('''2\naa\n''') == '1'"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4\nbbbb'''\n    ) == '2'\n\nassert solution(\n'''6\nababab'''\n    ) == '0'\n\nassert solution(\n'''2\naa'''\n    ) == '1'\n\nassert solution(\n'''4\nbbb'''\n    ) == '1'\n\nassert solution(\n'''7\nabaa'''\n    ) == '0'"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ab') == \"ab\"\nassert solution('abab') == \"ba\"\nassert solution('ba') == \"ba\"\nassert solution('abba') == \"ba\"\nassert solution('aabbab') == \"aa\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\nassert solution('ababab') == ''\n\nassert solution('aa') == 'a'\n\nassert solution('bbb') == 'ab'\n\nassert solution('aaaaa') == 'ba'"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\nbbbb''') == \"2\\nabba\"\nassert solution('''6\nababab''') == \"0\\nababab\"\nassert solution('''2\naa''') == \"1\\nba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbbb') == '2'\nassert solution('abba') == '0'\nassert solution('ababab') == '1'\nassert solution('aa') == '1'\nassert solution('ba') == '1'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba') == 'ab'\nassert solution('abb') == 'aa'\nassert solution('baa') == 'b'\nassert solution('bba') == 'b'\nassert solution('baab') == 'a'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\nbbbb\n''') == '2'\n\nassert solution(\n'''\n6\nababab\n''') == '0'\n\nassert solution(\n'''\n2\naa\n''') == '1'\n\nassert solution(\n'''\n11\naaaaaaaaaaaaaaaaaaaa\n''') == '0'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abba') == \"abba\"\nassert solution('bbbb') == \"bbbb\"\nassert solution('ababab') == \"ababab\"\nassert solution('ababab') == \"ababab\"\nassert solution('ababab') == \"ababab\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\nimport sys\nfrom math import sqrt\nfrom collections import Counter, deque"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '15'\nassert solution('5') == '9'\n\nassert solution('2 1') == '9'\nassert solution('3 2') == '9'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n0') == '0'\nassert solution('1\\n1 1') == '1'\nassert solution('1\\n0 0') == '1'\nassert solution('1\\n1 0') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('7\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '3'\nassert solution('3\\n2 1\\n1 0\\n') == '9'\nassert solution('7\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '3'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3') == '9'\nassert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2') == '15'\nassert solution('1\\n0') == '0'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n1') == '1'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3''') == '9'\nassert solution('''5\n3 2\n1 0\n2 0\n3 2\n1 2''') == '6'\nassert solution('''8\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n4 3\n1 2''') == '15'\nassert solution('''9\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n4 3\n1 2\n2 1\n1 0''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1\\n1 2\\n2 3\\n3 1\\n') == '15'\nassert solution('5\\n0 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('5\\n0 1\\n1 0\\n2 0\\n3 2\\n0 3\\n2 1\\n') == '9'\nassert solution('5\\n0 1\\n1 0\\n2 0\\n3 2\\n0 3\\n2 1\\n1 4\\n') == '15'\nassert solution('5\\n0 1\\n1 0\\n2 0\\n3 2\\n0 3\\n2 1\\n1 4\\n1 3\\n') == '15'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('2\\n2\\n2') == '2'\nassert solution('2\\n1\\n1') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '1'\nassert solution('2\\n1') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3, 1) == 2\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n1') == '2'\nassert solution('3\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('3\\n4') == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('3\\n3') == '3'\nassert solution('3\\n3') == '3'\nassert solution('2\\n3') == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:1]\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"3\\n3\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1') == '2'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1.000000000000'\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('10') == '3.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('0.9') == '1.000000000000'\nassert solution('0.01') == '0.010000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.0\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('0') == '0'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('0') == '0.000000000000'\nassert solution('0.2') == '0.000000000000'\nassert solution('1000') == '1000.0000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('4') == '2.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('5') == '0.63557'\nassert solution('5 6 7') == '0.63557'\nassert solution('3 5 6 7') == '0.63557'\nassert solution('3 4 2 1') == '0.33333'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '0.000000000000'\nassert solution('1') == '0.9999999999999'\nassert solution('3') == '0.99999999999999'\nassert solution('1') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('1') == '0.5'\nassert solution('0') == '0'\nassert solution('0.1') == '0.1'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('4') == '1.2966676911'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2\\n1\\n1') == '1+1=2'\nassert solution('1\\n2\\n1\\n1') == 'Hello World'\nassert solution('2\\n2\\n2\\n1') == '1+2=3'\n\"\"\"\n\n\"\"\"\n---24.01.2021---\n\n-----Description-----\n\n- https://atcoder.jp/contests/abc192/editorial\n\n-----My Solution-----\n\nTakahashi, who is taking this exam, suddenly forgets his age.\n\nHe decides to write a program that first receives his age N (1 or 2) as input, then prints Hello World if N=1, and additionally receives integers A, B and prints A+B if N=2.\n\nWrite this program for him.  \n\n-----Constraints-----\n - N is 1 or 2.\n - A is an integer between 1 and 9 (inclusive).\n - B is an integer between 1 and 9 (inclusive).\n\n-----Input-----\nInput is given from Standard Input in one of the following formats:  \n1\n\n2\nA\nB\n\n-----Output-----\nIf N=1, print Hello World; if N=2, print A+B.  \n\n-----Sample Input-----\n1\n\n2\n1\n1\n\n-----Sample Output-----\nHello World\n\nAs N=1, Takahashi is one year old. Thus, we should print Hello World.\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'A+B'\nassert solution('A') == 'Hello World'\nassert solution('B') == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1') == 'Hello World'\nassert solution('1\\n2') == 'Hello World'\nassert solution('2\\n2') == '4'\nassert solution('3\\n3') == '6'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == \"Hello World\"\nassert solution('2') == \"A+B\"\nassert solution('1\\n') == \"Hello World\"\nassert solution('1\\nA\\nB') == \"A+B\"\nassert solution('2\\n1\\n2') == \"A+B\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\nassert solution(\"A\") == \"Hello World\"\nassert solution(\"B\") == \"3\"\nassert solution(\"1\\n2\\nA\\nB\\n\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2\\n2\\n') == '4'\nassert solution('2\\n1\\n2\\n') == '3'\nassert solution('2\\n2\\n') == '5'\nassert solution('2\\n1\\n2\\n') == '4'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n\n2\n10\n20\n''') == 'Hello World'\n\nassert solution('''\n2\n\n2\n10\n20\n''') == 'A+B'\n\nassert solution('''\n1\n\n1\n10\n20\n''') == 'Hello World'\n\nassert solution('''\n2\n\n2\n10\n20\n''') == 'A+B'\n\nassert solution('''\n1\n\n1\n10\n20\n''') == 'Hello World'"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == 'Hello World'\nassert solution('2\\n2\\n') == 4\nassert solution('2\\n1\\n3\\n') == 4\nassert solution('2\\n1\\n2\\n') == 3\nassert solution('2\\n1\\n1\\n') == 2\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('A') == 'Hello World'\nassert solution('B') == 'A+B'\nassert solution('1\\n2\\nA\\nB') == 'Hello World\\nA+B'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Hello World'\n\n------------------\ntakahashi_solution\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == '3333'\nassert solution('''1 2''') == '12'\nassert solution('''3 2''') == '213'\nassert solution('''42 42''') == '42'\nassert solution('''4 2''') == '12'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"5 1\") == \"5\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 4') == '4444'\nassert solution('4 8') == '3333'\nassert solution('4 8') == '4444'\nassert solution('3 4') == '4444'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'test\\n' +\n    '1 2\\n' +\n    '2 1') == '3333'\nassert solution(\n    'test\\n' +\n    '1 1\\n' +\n    '1 1') == '4444'\nassert solution(\n    'test\\n' +\n    '4 3\\n' +\n    '1 1') == '3333'\nassert solution(\n    'test\\n' +\n    '4 3\\n' +\n    '1 3') == '33333'\nassert solution(\n    'test\\n' +\n    '1 3\\n' +\n    '1 3') == '33333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 1') == '11111'\nassert solution('1 1') == '22222'\nassert solution('2 2') == '2222'\nassert solution('99 99') == '2222222222'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 1') == '11'\nassert solution('3 1') == '31'\nassert solution('9 9') == '999'\nassert solution('5 2') == '555'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3333'\nassert solution('4 3') == '3333'\nassert solution('5 3') == '4444'\nassert solution('6 7') == '55555'\nassert solution('2 5') == '333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3333\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == ''\nassert solution('aa') == 'b'\nassert solution('c') == 'd'\nassert solution('cab') == 'ad'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[1:]\n\n'''\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcdefghi') == 'abcdefghi'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('stu pd','stu') =='stupd'\nassert solution('stu', 'pd') =='stu'\nassert solution('n', 'ndn') == 'ndn'\nassert solution('aaaaa', 'b') == 'aaaaab'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"atcoder\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oder atc') == 'atcoder'\n\n\"\"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\nassert solution('abc', 'def') == 'abcdef'\nassert solution('xyz', '123') == 'x123yz'\nassert solution('xyz', '123') == 'x123yz'\nassert solution('xyz', '123') == 'x123yz'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oder atc', 'atcoder') == 'atcoder'\n\nassert solution('sharky', '!@') =='sharky!'\n\nassert solution('hacked', '@') == 'hackerhacked'\n\nassert solution('hackerhacked', '@') == 'hackerhacked'\n\"\"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == ''\nassert solution('''1 5 7 8 2''') == ''\nassert solution('''6''') == ''\nassert solution('''5 1 2 4 6 3''') == ''\nassert solution('''1000000 1000000''') == ''\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'\nassert solution('2') == '1000000'\nassert solution('3') == '12'\nassert solution('4') == '6'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n3') == '1'\nassert solution('2\\n4') == '2'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''3\n100000 999999 99998''') == '100000'"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '2'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '1'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '0'\nassert solution('2\\n1000000 1000000') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''7\n1000000001 1000001 1000003 1000005 1000007 1000009 10000101''') == '100000001'\nassert solution('''7\n1000000001 1000001 1000003 1000005 1000007 1000009 10000101''') == '100000001'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nprint(solution('''7\n1000000 1000000\n5 1 2 4 6 3'''))\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 10 50 12 1 8') == '5'\nassert solution('1 100') == '1'\nassert solution('7 4 2 1') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 100 99\") == \"5\"\nassert solution(\"7 4 2 1\") == \"6\""
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 3 4 5\") == \"3\"\nassert solution(\"1 4 3 2\") == \"3\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"1 5 3 2\") == \"3\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''7 4 2 1''') == '6'\nassert solution('''9 7 4 2 1''') == '7'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"3\\n4\\n2 2\\n1 3 4 2 1\") == \"5\"\nassert solution(\"3\\n4\\n2 1\\n1 3 4 2 1\") == \"5\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 0 6 10 12') == '3'\nassert solution('3 2 0 6 10 12') == '3 2 0 7 10 14'\nassert solution('1 2 0 4 5 3') == '1'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution(\n'''\n4 2\n0 1 2 3\n''') == '0'\nassert solution(\n'''\n5 5\n1 2 3 4 5\n''') == '3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n0 1 2 3\\n') == '0\\n0 1 2 3'\nassert solution('4 4\\n0 1 2 3 4\\n') == '0\\n0 1 2 3 4'\n\n\n\"\"\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3''') == '3'\nassert solution('''4 2''') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3') == '3'\nassert solution('4 2') == '0 1 2 3'\nassert solution('4 2') == '0 1 2 3'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''4 2\n3 2\n1 1\n2 2\n1 3''') == '20'\nassert solution('''4 2\n3 2\n1 1\n2 2\n1 3''') == '6'\nassert solution('''2 2\n1 1\n2 2\n2 1''') == '4'\nassert solution('''5 3\n4 2\n3 2\n1 1\n2 2\n1 3''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n4 2 1 3 2\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\") == \"20\"\nassert solution(\"5 6\\n1 2 0 2 0\\n2 4\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\") == \"20\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '20'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3') == '20'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution(\n'''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5''') == '20'\nassert solution('''9 10\n1 1 2 1 1 1 1 1 1 1 1\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n''') == '9'\nassert solution('''10 10\n1 1 2 1 1 1 1 1 1 1 1\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2 2\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n'''\n) == '8'\n\nassert solution(\n    '''5 2\n4 2\n3 1\n'''\n) == '3'\n\nassert solution(\n    '''1 1\n1 2\n'''\n) == '3'\n\nassert solution(\n    '''5 4\n1 1 1 1 1\n2 2\n3 3\n1 5\n1 2\n1 5\n2 3\n'''\n) == '8'\n\nassert solution(\n    '''2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n'''\n) == '2'"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"20\"\nassert solution(\"5 6\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 5\") == \"20\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 5\\n3 1\") == \"20\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 5\\n3 1\\n3 1\") == \"20\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asdf\") == \"\"\nassert solution(\"a\") == \"NO\"\nassert solution
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == 'YES'\nassert solution('''5\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == 'NO'\nassert solution('''5\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == 'NO'\nassert solution('''5\n1\n1 1 1 1 1\n1\n1 1 1 1 1\n1\n1 1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\nn''') == 'YES'\n\nassert solution('''2\n1\n1 1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n2\n1 1 1 1 1"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asdf\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1 2 2\") == \"YES\"\nassert solution(\"1 1 2 2\") == \"NO\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n5\n1 1 1 1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\\n1\") == \"NO\"\nassert solution(\"3\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n''') == 'NO'\n\nassert solution('''3\n1\n1 1 1\n1\n1 1 1\n''') == 'YES'\n\nassert solution('''3\n1\n1 1 1\n2\n1 1 1\n1\n1 1 1\n2\n1 1 1\n''') == 'NO'\n\nassert solution('''3\n1\n2\n1 1 1\n1\n1 1 1\n2\n1 1 1\n''') == 'NO'"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 50 10 25 100 100 50\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 50 10 25 100 100 50\n''') == 'NO'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 50 10 25 100 100 50\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 50 10 25 100 100 50\n''') == 'NO'"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nprint('ok')\n\"\"\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n\nprint('Test success!')\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\n\nassert solution(\n'''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nprint(solution('''6 10 15\n2 5 3\n5 3 4\n6 2 3\n3 2 7\n6 5 9\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1'''))\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\nassert solution(\"2 6 3\") == \"1\"\nassert solution(\"5 7 4\") == \"3\"\nassert solution(\"6 5 4\") == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\""
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    6 10 5\n    2 5 1\n    5 3 9\n    6 2 2\n    1 3 1\n    5 1 8\n    6 5 10\n    1 6 5\n    6 4 6\n    3 6 2\n    3 4 5\n    '''\n) == '3'\n\nassert solution(\n    '''\n    7 15 18\n    2 6 3\n    5 7 4\n    6 5 4\n    3 6 9\n    6 7 7\n    1 6 4\n    7 1 6\n    7 2 1\n    4 3 2\n    3 2 8\n    5 3 6\n    2 5 5\n    3 7 9\n    4 1 8\n    2 1 1\n    '''\n) == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4\") == \"4\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"2 3 6\") == \"3\"\nassert solution(\"1 3 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''10''') == '7486 3'\nprint(solution('''1 2 5 129 185 581 1041 1909 1580 8150'''))\n\n\n'''\n\nimport sys\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n\n\n\"\"\"\n\n\"\"\"\n-----my impression-----\nthe idea is to find the minimum divergence. the min is 0 - the sum of all skills - the total number of students.\n\nthis is because the number of teams is the same as the number of students in each team.\n\nso, we have to find the maximum divergence and the number of teams we can create.\n\nthe max divergence is the max of the skill gaps.\n\nfor each pair of students,\n    we calculate the max_diversity as the max of skill gaps - min_skill\n    update the max_diversity\n    update the number of teams\n\nthe end result should be the min number of teams.\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_divergences = [0] * (n + 1)\nmax_divergences[0] = sum(a)\n\nfor i in range(1, n):\n    max_divergences[i] = max_divergences[i-1] - min(a[:i]) + max(a[i:])\n\nmin_number_of_teams = min(i for i in range(3, n + 1, 2) if max_divergences[i] == max_divergences[i - 1])\n\nprint(min_number_of_teams)\n\nnumber_of_teams = [0] * min_number_of_teams\n\nfor i in range(1, min_number_of_teams):\n    for j in range(n - i + 1):\n        if max_divergences[j] == max_divergences[j + i - 1]:\n            number_of_teams[i] += 1\n\nprint(*number_of_teams)"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 2 5 12 13 2 15''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150''') == '7486 3'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n''') == 'All set? Click \"Check\" to earn cool rewards!\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1 1'\nassert solution('1 1 2 2 3') == '3 1'\nassert solution('1 1 2 2 3') == '3 1'\nassert solution('1 1 2 2 3') == '3 1'\nassert solution('1 1 2 2 3') == '3 1'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''10''') == '7486 3'\n'''\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''3 1'''\nassert solution('''6''') == '''7 2'''\nassert solution('''10''') == '''7486 3'''\nassert solution('''1 2 5 129 185 581 1041 1909 1580 8150''') == '''7486 3'''\n'''\nYour code should also pass the unit tests.\n'''\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n1 1 3 4 2\"\"\") == \"3 1\"\nassert solution(\"\"\"6\n1 5 12 13 2 15\"\"\") == \"7 2\"\nassert solution(\"\"\"10\n1 2 5 129 185 581 1041 1909 1580 8150\"\"\") == \"7486 3\""
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n\n\n\n------Alternate Solutions (Different Approach)-----"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"100 100\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"-15 -2 -6 -7\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"3\\n3\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"2\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\n21\\n12\\n12\\n2\") == \"3\\n5\\n2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"9\\n22\\n22\\n22\\n22\\n22\\n22\\n22\\n22\\n22\") == \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\"\nassert solution(\"1000\\n1001\\n1000\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('111') == '111'\nassert solution('9') == '9'\nassert solution('9') == '9'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000') == '1'\nassert solution('1001') == '1'\nassert solution('10') == '1'\nassert solution('11') == '2'\nassert solution('12') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3\\n2\\n1') == '2\\n1\\n0\\n0'\nassert solution('2\\n1') == '0\\n0'\nassert solution('2\\n4') == '0\\n0'\nassert solution('2\\n5') == '0\\n0'\nassert solution('2\\n8') == '0\\n0'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n\") == \"\"\nassert solution(\"3\\n5\") == \"\"\nassert solution(\"3\\n5\\n5 1 2 3 4\") == \"\"\nassert solution(\"3\\n5\\n5 1 2 3 4\\n5 3 4 1 2\") == \"\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3'\n\nassert solution('''6\n3\n1 2 3\n1\n2\n3\n4\n5\n6\n''') == '1 1 1 1 1'\n\nassert solution('''6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2'\n\nassert solution('''6\n6\n4 6 2 1 5 3\n5\n4 1 3 2\n6\n1 2 4 3 4 5\n5\n5 1 2 4 3\n''') == '1 1 1 1 1'"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n3\\n4\") == \"2 3 4\"\nassert solution(\"2\\n2\\n3\\n3\") == \"1 1 2\"\nassert solution(\"3\\n5\\n1 2 3 4 5\") == \"2 3 4\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\"\"\") == \"\"\"\"\"\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n6\\n5\\n1 2 3 4 5') == '1 1 1 1 1'\nassert solution('2\\n6\\n5\\n1 2 3 4 5') == '3 3 3'\nassert solution('3\\n6\\n5\\n1 2 3 4 5') == '3 3 3'\nassert solution('4\\n6\\n5\\n1 2 3 4 5') == '2 2 2 2'\nassert solution('5\\n6\\n5\\n1 2 3 4 5') == '2 3 2 2 2 2'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1'\n\nassert solution('''6\n6\n1 2 3 4 5 6\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 3 3 3'\n\nassert solution('''3\n2\n1 2\n2\n1 2\n''') == '2 2 2'\n\nassert solution('''4\n4\n2 3 4 1\n3\n1 2 3 4\n4\n1 2 3 4\n2\n1 2 3 4\n''') == '4 4 4 4'\n\nassert solution('''2\n2\n1 1\n2\n1 1\n''') == '2 2'"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\n'''\n\n'''\nSome solutions:"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom functools import lru_cache\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1\\n0\"\n'''\n'''\n## My solution: O(q * n * log(n) + n * q)\n## Time limit exceeded, check the examples from the past to see why\n## DFS?\n## Use binary search to get the min price"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\") == \"11\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\nassert solution('''2\n6\n3 4 5 6 7\n5\n1 2 3 4 5\n1 2 3 4 5\n''') == '5'\nassert solution('''2\n6\n3 4 5 6 7\n5\n1 2 3 4 5\n1 2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    5\n    1 2 3 4 5\n    3\n    1 2 2\n    4\n    1 1 1 1\n    ''') == '3\\n2\\n1\\n'\n'''\n[\n    [\n        [5, 4, 3, 2, 1],\n        [3, 2, 1]\n    ],\n    [\n        [1, 2, 2, 1, 1],\n        [1, 1, 1, 1]\n    ],\n    [\n        [1, 1, 1, 1, 1, 1],\n        [1, 1, 1, 1]\n    ]\n]\n'''"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"2\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"1\\n10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n1 2 2\\n4\\n1 1 1 1\") == \"10\\n9\\n1\"\nassert solution(\"2\\n10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n1 2 2\\n4\\n1 1 1 1\") == \"10\\n9\\n1\"\nassert solution(\"1\\n10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n1 2 2\\n4\\n1 1 1 1\") == \"10\\n9\\n1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1'\nassert solution('''1\n3\n2 3 1\n''') == '3'\nassert solution('''10\n100\n
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 2\n10 4 10 15\n1 2\n4 3\n\"\"\"\n) == '0 0 1 2'\n\nassert solution(\n\"\"\"10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\"\"\"\n) == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n5 5\\n6 4\\n2 2\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('3 2\\n5 4 1\\n1 2\\n1 2\\n2 3\\n') == '0 0 1 2\\n'\nassert solution('8 3\\n4 5\\n1 2\\n2 3\\n1 3\\n4 1\\n5 2\\n3 4\\n') == '3 2 0 4 3\\n'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\n\n\n-----Goal-----\n\nWrite 5 lines of code to test the correctness of solution:\nIn BerSoft $n$ programmers work, the programmer $i$ is characterized by a skill $r_i$.\n\nA programmer $a$ can be a mentor of a programmer $b$ if and only if the skill of the programmer $a$ is strictly greater than the skill of the programmer $b$ $(r_a > r_b)$ and programmers $a$ and $b$ are not in a quarrel.\n\nYou are given the skills of each programmers and a list of $k$ pairs of the programmers, which are in a quarrel (pairs are unordered). For each programmer $i$, find the number of programmers, for which the programmer $i$ can be a mentor.\n\nInp:\n4 2\n10 4 10 15\n1 2\n4 3\n\nOut:\n0 0 1 2\n\nInp:\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\nOut:\n5 4 0 5 3 3 9 0 2 5\n\n\n'''\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n5 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n5 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n5 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('7 2\\n1 2\\n5 3\\n3 4\\n4 6\\n4 5\\n6 7') == '0 0 1 2'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''2 2\n10 10\n1 1\n''') == '1'\n\nassert solution('''10 10\n5 5\n1 1\n''') == '0'\n\nassert solution('''3 3\n3 2 1\n2 3\n''') == '2'"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == \"YES\\nabb\"\nassert solution('''3 2\n1 3 2\n1 2 3''') == \"NO\"\nassert solution('''3 2\n1 3 2\n1 3 2''') == \"NO\"\nassert solution('''3 2\n1 2 3\n2 3 1''') == \"NO\"\nassert solution('''3 2\n1 2 3\n2 1 3''') == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == 'YES\\nabb'\nassert solution('3\\n1 3 2') == 'NO'\nassert solution('3\\n2 1 3') == 'NO'\nassert solution('3\\n2 3 1') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\", \"NO\"\n\n\"\"\"\n\"\"\"\nfrom collections import Counter\n\nn,k = map(int,stdin.split())\np = [int(x) for x in stdin.split()]\nq = [int(x) for x in stdin.split()]"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\""
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n1 3 2''') == 'YES'\nassert solution('''2 1\n2 1''') == 'NO'\nassert solution('''3 2\n1 2 3\n1 3 2''') == 'NO'\nassert solution('''7 6\n7 6''') == 'NO'\nassert solution('''1 2\n2 1''') == 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n3 2\n1 2 3\n1 3 2\n\"\"\") == \"YES\\nabb\"\nassert solution(\"\"\"\\\n3 2\n1 3 2\n1 2 3\n\"\"\") == \"YES\\nabc\"\nassert solution(\"\"\"\\\n4 1\n1 2 3 4\n2 1 4 3\n\"\"\") == \"YES\\nabcd\"\nassert solution(\"\"\"\\\n5 5\n1 2 3 4 5\n3 2 1 5 4\n\"\"\") == \"YES\\nabcd\"\nassert solution(\"\"\"\\\n6 4\n1 2 3 4 5 6\n3 2 1 5 4 6\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2\n''') == 'YES\\nabb'\n\nassert solution('''3 2\n1 3 2\n1 2 3\n''') == 'NO'\n\nassert solution('''3 2\n1 2 2\n1 2 2\n''') == 'NO'\n\nassert solution('''3 2\n1 1 2\n1 1 3\n''') == 'NO'\n\nassert solution('''3 2\n1 1 2\n2 2 3\n''') == 'YES\\nabc'"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('s,1\\n1,2,3\\n2,1,3\\n') == 'YES\\nabcd'\nassert solution('s,1\\n2,1,3\\n1,2,3\\n') == 'NO'\nassert solution('s,1\\n2,1,3\\n1,3,2\\n') == 'YES\\nabc'\nassert solution('s,1\\n2,1,3\\n1,3,2\\n2,1,3\\n') == 'NO'\nassert solution('s,1\\n2,1,3\\n1,3,2\\n2,1,3\\n2,3,1\\n') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 4 1\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\""
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10\\n') == '64'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\nassert solution('2\\n1 4\\n') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'\nassert solution('2\\n5 4\\n') == '6\\n2 1 4 3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"\"\nassert solution
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\nassert solution('2\\n4 1') == '2 1'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '20 10 20',\n])) == '43\\n1 3 2'\n\nassert solution('\\n'.join([\n    '4',\n    '10 10 10 10',\n])) == '64\\n2 1 4 3'\n\nassert solution('\\n'.join([\n    '6',\n    '5 4 5 4 4 5',\n])) == '69\\n6 1 3 5 2 4'\n\nassert solution('\\n'.join([\n    '2',\n    '1 4',\n])) == '3\\n2 1'\n\nassert solution('\\n'.join([\n    '5',\n    '5 4 5 4 4 5',\n])) == '25\\n1 2 4 3 5'\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '''43'''\nassert solution('''4''') == '''64'''\nassert solution('''6''') == '''69'''\nassert solution('''5''') == '''73'''\nassert solution('''2''') == '''3'''\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"3\\n20 10 20\\n\")) == \"43\"\nassert solution(input(\"4\\n10 10 10 10\\n\")) == \"64\"\nassert solution(input(\"6\\n5 4 5 4 4 5\\n\")) == \"69\"\nassert solution(input(\"2\\n1 4\\n\")) == \"3\"\nassert solution(input(\"6\\n5 4 5 4 4 5\\n\")) == \"69\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"\n\n\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '''43'''\nassert solution('''4''') == '''64'''\nassert solution('''6''') == '''69'''\nassert solution('''5''') == '''58'''\nassert solution('''2''') == '''3'''\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2\\n2') == '1'\nassert solution('2\\n2\\n1') == '1'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 5 1 3\\n') == '3'\nassert solution('1 2 3 4 5\\n') == '0'\nassert solution('4 1 5 2 3\\n') == '1'\nassert solution('1 2 4 5 3\\n') == '2'\nassert solution('1 3 2 4 5\\n') == '1'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == 3\nassert solution(\"5 4 2 3 1\") == 3\nassert solution(\"1 2 3 4\") == 3\nassert solution(\"1 2 4 3\") == 0\nassert solution(\"1 4 2 3\") == 0\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        '5'\n        '4 2 5 1 3'\n    ) == '3'\n\nassert solution(\n        '3'\n        '1 3 2'\n    ) == '1'\n\nassert solution(\n        '3'\n        '3 2 1'\n    ) == '2'\n\nassert solution(\n        '10'\n        '1 1 1 1 1 1 1 1 1 1'\n    ) == '1'\n\nassert solution(\n        '10'\n        '1 3 2 1 2 2 1 3 1'\n    ) == '2'"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\nassert solution('''1\n2''') == '2'\nassert solution('''2\n2''') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4 2 5 1 3''') == '3'\nassert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''7\n1 4 2 5 3 6''') == '3'\nassert solution('''8\n1 4 2 5 3 6 7''') == '3'\nassert solution('''10\n1 4 2 5 3 6 7 8 9 10''') == '3'\n'''"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('1 2 3') == '0'\nassert solution('4 2 1 3') == '0'\nassert solution('4 3 1 2') == '0'\nassert solution('2 1 3') == '0'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('3 2 1 4 5') == '3'\nassert solution('3 2 1 4 5') == '3'\nassert solution('5 4 3 2 1') == '3'\nassert solution('1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('5 1 2 4 3') == '3'\nassert solution('3 2 1 5 4') == '3'\nassert solution('4 1 5 2 3') == '2'\nassert solution('3 1 4 2 5') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('6\\n4 2 5 1 3') == '3'\nassert solution('7\\n4 2 5 1 3') == '4'\nassert solution('8\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 3 3 3\") == \"1\"\nassert solution(\"4\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"3\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"3\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"5\\n3 3 3 3 3 3\") == \"2\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '2'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 2 2') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '0'\nassert solution('3 3 3 3') == '0'\nassert solution('3 3 3 3') == '1'\nassert solution('1 3 3 3') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('4\\n4') == '1'\nassert solution('4\\n1') == '2'\nassert solution('4\\n3') == '1'\nassert solution('4\\n3') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"4 2 4 1 4 2 4\") == \"1\"\nassert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"2 4 1 4 2 4\") == \"2\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n\"\"\"\nNext step is to check if a_i is a good sequence. So, we can use the property that, if a is a good sequence, then the value of a_i must be equal to a_i.\n\na_1 = a_2 = a_3 = a_4 =... = a_i\na_i = a_i-1 = a_i-2 = a_i-3 =... = a_1\na_i = a_i+1 = a_i+2 = a_i+3 =... = a_N\n\nHere, the a_i, and a_i+1, and a_i+2, and a_i+3,..., a_1 must be equal to the a_i, and a_i+1, and a_i+2, and a_i+3, and a_1, respectively.\n\nTime Complexity: O(N)\nSpace Complexity: O(1)\n\n\"\"\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == 1\nassert solution('3 3 3 3') == 0\nassert solution('4 2 4 1 4 2 4 1 4 2') == 1\nassert solution('4 2 4 1 4 2 4 1 4 2 4 1 4 2') == 2\nassert solution('1 2 3 4 5 6 7 8 9 10') == 0\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 3 1 2 3 3 1 1 1 1 2 2 2 3 3 3 3 3 3 3 2 3 3 3 3 1 2 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"3 3 3 3\") == \"\"\nassert solution(\"1 1 1 1 1\") == \"\"\nassert solution(\"2 2\") == \"\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(x_1, x_2, x_3, x_4, x_5) == 1\n\"\"\"\n\nx_1, x_2, x_3, x_4, x_5 = map(int, stdin.split(\" \"))\nprint(x_1, x_2, x_3, x_4, x_5)\n\nprint(x_1)"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 4\") == \"2\"\nassert solution(\"0 2 3 4 1\") == \"0\"\nassert solution(\"0 2 3 4 1\") == \"1\"\nassert solution(\"0 2 3 4 1\") == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 0') == '0'\nassert solution('1 2 3 4 0') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2 3 4 5') == \"1\"\nassert solution('0 2 3 4 0') == \"3\"\nassert solution('-1 -2 -3 -4 -5') == \"-1\"\nassert solution('-1 -2 -3 -4 0') == \"-3\"\nassert solution('-1 -2 -3 0 -4') == \"-4\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"0 2 3 4 5\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"0 2 3 4 5\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"1 2 3 4 5\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"1 2 3 4 5\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"2 3 4 5 6\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"-1 -2 -3 -4 -5\") == \"-1\"\nassert solution(\"0 -1 -2 -3 -4\") == \"-1\"\nassert solution(\"-1 -1 -2 -3 -4\") == \"1\"\nassert solution(\"-1 -1 -2 -2 -4\") == \"-1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('3 2 0 4 0') == '2'\nassert solution('0 0 0 0 0') == '0'\nassert solution('1 2 3 4 5') == '0'\nassert solution('2 1 3 4 5') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == \"1\"\nassert solution('0 2 3 4 0') == \"1\"\nassert solution('0 2 3 4 5') == \"1\"\nassert solution('0 2 3 4 5') == \"1\"\nassert solution('0 2 3 4 5') == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 3 4 2 5') == '2'\nassert solution('5 4 3 2 1') == '4'\nassert solution('5 4 3 2 6') == '5'\nassert solution('5 4 3 2 7') == '3'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 1') == '0'\nassert solution('1 1') == '0'\nassert solution('2 10') == '1'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\nprint(solution(stdin))\n\"\"\"\n\nH, W = map(int, input().split())\n\nprint(min(H * W - H, H * W - W))\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == 0\nassert solution(\"3 2\") == 1\nassert solution(\"5 4\") == 0\nassert solution(\"7 8\") == 1\nassert solution(\"9 10\") == 2\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 3') == '0'\nassert solution('1 1') == '0'\nassert solution('100 100') == '0'\nassert solution('1000 1000') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 1') == '0'\nassert solution('2 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 3') == '-1'\nassert solution('1 2') == '-1'\nassert solution('5 7') == '4'\nassert solution('5 7') == '-1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"8 3\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"8 2\") == \"8\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 5\n''') == '0'\nassert solution(\n'''10 3\n''') == '8'\nassert solution(\n'''3 4\n''') == '0'\nassert solution(\n'''13 24\n''') == '10'\nassert solution(\n'''25 12\n''') == '13'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 5\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 2 3') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('4 4 4') == 'Yes'\nassert solution('5 5 5') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 10 100') == 'Yes'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n - 1):\n    if (a[i] * a[i + 1]) % 4!= 0:\n        print('No')\n        exit()\nprint('Yes')\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"1\\n1\") == \"No\"\nassert solution(\"3\\n1 2 3\") == \"Yes\"\nassert solution(\"3\\n3 3 3\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 2 3') == 'Yes'\nassert solution('3 2 1') == 'No'\nassert solution('1 10 100') == 'Yes'\nassert solution('1 10 100 2') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 1 100') == 'No'\nassert solution('1 2 1') == 'Yes'\nassert solution('4 2 1 1 4') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"Yes\"\nassert solution(\"1 100 100\") == \"No\"\nassert solution(\"2 4 2 3 4\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\nassert solution('atcoder') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('aaxbyc') == 'Yes'\nassert solution('axyxz') == 'No'\nassert solution('aaxxz') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('xy', 'xy') == 'Yes'\nassert solution('atcoder', 'atlas') == 'No'\nassert solution('abc', 'abd') == 'No'\nassert solution('yx', 'axy') == 'Yes'\nprint('All tests past.')\n\n'''\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('xy', 'ayx') == 'No'\nassert solution('a', 'a') == 'Yes'\nassert solution('', '') == 'Yes'\nassert solution('z', 'a') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('x') == 'Yes'\nassert solution('xab') == 'No'\nassert solution('xabc') == 'Yes'\nassert solution('xx') == 'Yes'\nassert solution('xabcab') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('xy') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('atlas') == 'No'\nassert solution('code') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('xy') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('xy') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('abc', 'abc') == 'Yes'\nassert solution('xy', 'xya') == 'Yes'\nassert solution('xy', 'xy') == 'No'\nassert solution('xy', 'yxa') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    'xy') == 'Yes'\nassert solution(\n    'xya') == 'Yes'\nassert solution(\n    'atcoder') == 'No'\nassert solution(\n    'atlas') == 'Yes'\nassert solution(\n    'abc') == 'Yes'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('a b c\\n')) == 'YES'\n\n'''\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 15 3') == 'YES'\nassert solution('6 7 3') == 'NO'\nassert solution('8 17 3') == 'YES'\nassert solution('1 3 3') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 5 1\\n') == 'YES'\nassert solution('4 3 1\\n') == 'YES'\nassert solution('1 2 3\\n') == 'NO'\nassert solution('14 7 1\\n') == 'YES'\nassert solution('3 4 1\\n') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 1') == 'YES'\nassert solution('7 5 1') == 'YES'\nassert solution('7 5 1') == 'YES'\nassert solution('7 1 4') == 'NO'\nassert solution('7 1 2') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 14 1') == 'YES'\nassert solution('10 100 1') == 'NO'\nassert solution('7 5 1') == 'YES'\nassert solution('7 5 1') == 'YES'\nassert solution('10 5 2') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == \"YES\"\nassert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 7 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 2\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 14') == 'YES'\nassert solution('8 12') == 'YES'\nassert solution('3 2 6') == 'NO'\nassert solution('3 4 6') == 'YES'\nassert solution('1 1 2') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 1') == 'NO'\nassert solution('7 1 1') == 'YES'\nassert solution('7 1 1') == 'NO'\nassert solution('7 1 1') == 'NO'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 6\") == \"20\"\nassert solution(\"10 10\") == \"25\"\nassert solution(\"100 100\") == \"50\"\nassert solution(\"1000000 10000000\") == \"50000\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 10\") == \"1\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 4') == '7'\nassert solution('100 200') == '49900'\nassert solution('100 1') == '100'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''2 10''') == '0'\nassert solution('''2 10''') == '0'\nassert solution('''2 10''') == '0'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"8 5\") == \"2\"\nassert solution(\"20 30\") == \"5\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 4 1') == '10'\nassert solution('10 12 1') == '10'\nassert solution('10 12 3') == '8'\nassert solution('10 13 1') == '10'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nX, Y, Z = map(int, input().split())\n\nprint(max(X - Y - 2 * Z, 0))\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 10 10\") == \"6\"\nassert solution(\"10 3 2\") == \"5\"\nassert solution(\"10 10 1\") == \"6\"\nassert solution(\"5 1 1\") == \"3\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('40 12 1') == '1'\nassert solution('28 2 2') == '1'\nassert solution('4 1 1') == '0'\nassert solution('2 1 2') == '0'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 3\n\"\"\"\n\nX, Y, Z = map(int, input().split())\nprint(min(X - Y - 2 * Z, Y - 1))\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"13 3 7\") == \"3\"\nassert solution(\"14 4 5\") == \"4\"\nassert solution(\"14 4 5 2\") == \"4\"\nassert solution(\"14 4 5 3\") == \"3\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\n- correct solution\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == 2\nassert solution(\"2 1\\n0 1\") == 2\nassert solution(\"3 2\\n1 0\") == 3\nassert solution(\"1 1\\n2 2\") == 1\nassert solution(\"4 5\\n1 3\\n2 4\\n3 4\") == 2\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2\\n1 3\\n2 4\\n3 4') == 2\nassert solution('2 3\\n0 4\\n1 3') == 2\nassert solution('0 0\\n1 0\\n2 0') == 1\nassert solution('0 0\\n1 1\\n2 1\\n3 1') == 3\nassert solution('0 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1') == 0\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n0 4\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n6 6\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n1 0\n2 1\n3 3''') == '4'\nassert solution('''5\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n1 0\n2 1\n3 3\n1 2\n2 3\n3 4''') == '6'\nassert solution('''7\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n1 0\n2 1\n3 3\n1 2\n2 3\n3 4\n1 4\n2 5\n1 5\n2 6\n3 7\n1 6\n2 7\n3 8\n1 7\n2 8\n3 9\n1 8\n2 9\n3 10\n1 9\n2 10\n3 11\n1 10\n2 11\n3 12\n1 11\n2 12\n3 13\n1 12\n2 13\n3 14\n1 13\n2 14\n3 15\n1 14\n2 15\n3 16\n1 15\n2 16\n3 17\n1 16\n2 17\n3 18\n1 17\n2 18\n3 19\n1 18\n2 19\n3 20\n1 19\n2 20\n3 21\n1 20\n2 21\n3 22\n1 21\n2 22\n3 23\n1 22\n2 23\n3 24\n1 23\n2 24\n3 25\n1 24\n2 25\n3 26\n1 25\n2 26\n3 27\n1 26\n2 27\n3 28\n1 27\n2 28\n3 29\n1 28\n2 29\n3 30\n1 29\n2 30\n3 31\n1 30\n2 31\n3 32\n1 31\n2 32\n3 33\n1 32\n2 33\n3 34\n1 33\n2 34\n3 35\n1 34\n2 35\n3 36\n1 35\n2 36\n3 37\n1 36\n2 37\n3 38\n1 37\n2 38\n3 39\n1 38\n2 39\n3 40\n1 39\n2 40\n3 41\n1 40\n2 41\n3 42\n1 41\n2 42\n3 43\n1 42\n2 43\n3 44\n1 43\n2 44\n3 45\n1 44\n2 45\n3 46\n1 45\n2 46\n3 47\n1 46\n2 47\n3 48\n1 47\n2 48\n3 49\n1 48\n2 49\n3 50\n1 49\n2 50\n3 51\n1 50\n2 51\n3 52\n1 51\n2 52\n3 53\n1 52\n2 53\n3 54\n1 53\n2 54\n3 55\n1 54\n2 55\n3 56\n1 55\n2 56\n3 57\n1 56\n2 57\n3 58\n1 57\n2 58\n3 59\n1 58\n2 59\n3 60\n1 59\n2 60\n3 61\n1 60\n2 61\n3 62\n1 61\n2 62\n3 63\n1 62\n2 63\n3 64\n1 63\n2 64\n3 65\n1 64\n2 65\n3 66\n1 65\n2 66\n3 67\n1 66\n2 67\n3 68\n1 67\n2 68\n3 69\n1 68\n2 69\n3 70\n1 69\n2 70\n3 71\n1 70\n2 71\n3 72\n1 71\n2 72\n3 73\n1 72\n2 73\n3 74\n1 73\n2 74\n3 75\n1 74\n2 75\n3 76\n1 75\n2 76\n3 77\n1 76\n2 77\n3 78\n1 77\n2 78\n3 79\n1 78\n2 79\n3 80\n1 79\n2 80\n3 81\n1 80\n2 81\n3 82\n1 81\n2 82\n3 83\n1 82\n2 83\n3 84\n1 83\n2 84\n3 85\n1 84\n2 85\n3 86\n1 85\n2 86\n3 87\n1 86\n2 87\n3 88\n1 87\n2 88\n3 89\n1 88\n2 89\n3 90\n1 89\n2 90\n3 91\n1 90\n2 91\n3 92\n1 91\n2 92\n3 93\n1 92\n2 93\n3 94\n1 93\n2 94\n3 95\n1 94\n2 95\n3 96\n1 95\n2 96\n3 97\n1 96\n2 97\n3 98\n1 97\n2 98\n3 99\n1 98\n2 99\n3 100\n1 99\n2 100\n3 101\n1 100\n2 101\n3 102\n1 101\n2 102\n3 103\n1 102\n2 103\n3 104\n1 103\n2 104\n3 105\n1 104\n2 105\n3 106\n1 105\n2 106\n3 107\n1 106\n2 107\n3 108\n1 107\n2 108\n3 109\n1 108\n2 109\n3 110\n1 109\n2 110\n3 111\n1 110\n2 111\n3 112\n1 111\n2 112\n3 113\n1 112\n2 113\n3 114\n1 113\n2 114\n3 115\n1 114\n2 115\n3 116\n1 115\n2 116\n3 117\n1 116\n2 117\n3 118\n1 117\n2 118\n3 119\n1 118\n2 119\n3 120\n1 119\n2 120\n3 121\n1 120\n2 121\n3 122\n1 121\n2 122\n3 123\n1 122\n2 123\n3 124\n1 123\n2 124\n3 125\n1 124\n2 125\n3 126\n1 125\n2 126\n3 127\n1 126\n2 127\n3 128\n1 127\n2 128\n3 129\n1 128\n2 129\n3 130\n1 129\n2 130\n3 131\n1 130\n2 131\n3 132\n1 131\n2 132\n3 133\n1 132\n2 133\n3 134\n1 133\n2 134\n3 135\n1 134\n2 135\n3 136\n1 135\n2 136\n3 137\n1 136\n2 137\n3 138\n1 137\n2 138\n3 139\n1 138\n2 139\n3 140\n1 139\n2 140\n3 141\n1 140\n2 141\n3 142\n1 141\n2 142\n3 143\n1 142\n2 143\n3 144\n1 143\n2 144\n3 145\n1 144\n2 145\n3 146\n1 145\n2 146\n3 147\n1 146\n2 147\n3 148\n1 147\n2 148\n3 149\n1 148\n2 149\n3 150\n1 149\n2 150\n3 151\n1 150\n2 151\n3 152\n1 151\n2 152\n3 153\n1 152\n2 153\n3 154\n1 153\n2 154\n3 155\n1 154\n2 155\n3 156\n1 155\n2 156\n3 157\n1 156\n2 157\n3 158\n1 157\n2 158\n3 159\n1 158\n2 159\n3 160\n1 159\n2 160\n3 161\n1 160\n2 161\n3 162\n1 161\n2 162\n3 163\n1 162\n2 163\n3 164\n1 163\n2 164\n3 165\n1 164\n2 165\n3 166\n1 165\n2 166\n3 167\n1 166\n2 167\n3 168\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6') == '1'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6\\n1 1\\n0 0') == '1'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6\\n1 1\\n0 0\\n1 1') == '2'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6\\n1 1\\n0 0\\n1 1\\n0 0') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n0 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\n\nassert solution('''4\n0 0\n2 0\n2 1\n1 1\n2 1\n2 1\n1 2\n1 3\n0 3\n2 2\n0 2''') == '8'\n\nassert solution('''3\n0 0\n0 1\n0 2\n1 1\n1 2\n1 3\n2 2\n2 3\n2 1\n0 3\n0 1''') == '3'\n\nassert solution('''4\n0 0\n0 1\n0 2\n0 3\n1 1\n1 2\n1 3\n1 4\n2 2\n2 3\n2 4\n2 1\n0 4\n0 1\n1 4\n1 3\n2 3\n2 1\n1 2\n2 2\n1 4\n1 3\n2 3\n1 2\n0 4\n0 1\n1 4\n1 3\n2 3\n2 1\n1 2\n2 2\n1 4\n1 3\n2 3\n1 2\n0 4\n0 1\n1 4\n1 3\n2 3\n2 1\n1 2\n2 2\n1 4\n1 3\n2 3\n1 2\n''') == '8'\n\nassert solution('''8\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 3\n3 4\n3 5\n3 6\n3 7\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7\n7 6\n7 5\n6 4\n5 4\n5 3\n5 2\n5 1\n4 4\n4 3\n4 2\n4 1\n3 3\n3 2\n3 1\n2 2\n2 1\n2 0\n1 1\n1 0\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 3\n3 4\n3 5\n3 6\n3 7\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7\n7 6\n7 5\n6 4\n5 4\n5 3\n5 2\n5 1\n4 4\n4 3\n4 2\n4 1\n3 3\n3 2\n3 1\n2 2\n2 1\n2 0\n1 1\n1 0\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 3\n3 4\n3 5\n3 6\n3 7\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7\n7 6\n7 5\n6 4\n5 4\n5 3\n5 2\n5 1\n4 4\n4 3\n4 2\n4 1\n3 3\n3 2\n3 1\n2 2\n2 1\n2 0\n1 1\n1 0\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 3\n3 4\n3 5\n3 6\n3 7\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7\n7 6\n7 5\n6 4\n5 4\n5 3\n5 2\n5 1\n4 4\n4 3\n4 2\n4 1\n3 3\n3 2\n3 1\n2 2\n2 1\n2 0\n1 1\n1 0\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n''') == '8'"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\nassert solution('''6\n2 1\n2 4\n1 3\n1 4\n3 4\n3 5\n2 4\n2 5\n''') == '3'\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n6 7\n6 8\n6 9\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10 11\n9 11\n''') == '2'\nassert solution('''8\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n8 10\n9 10\n10 11\n9 11\n''') == '3'\nassert solution('''9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n11 12\n9 12\n''') == '6'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2\\n'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n5 5') == '2\\n'\nassert solution('3\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6') == '3\\n'\nassert solution('3\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '0\\n'\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n5 5') == '0\\n'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('3 1\\n0 1\\n2 1\\n') == '4'\nassert solution('3 2\\n0 1\\n2 1\\n') == '4'\nassert solution('1000000 1000\\n0 1\\n1 1\\n') == '0'\nassert solution('1000000 1000\\n0 1\\n0 1\\n') == '0'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7'\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\nAssume that the shower will emit water for a total of X seconds.\nEach push, the shower will emit water for X seconds, for a total of X * N seconds.\n\"\"\"\n\nn, t = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n0 4\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n1 4\\n') == '7'\nassert solution('2 4\\n0 3\\n1 4\\n2 4\\n') == '7'\nassert solution('2 4\\n0 3\\n1 4\\n2 4\\n3 4\\n') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3\\n0 3\\n') == '7'\n\"\"\"\nfrom sys import stdin, stdout\nfrom math import gcd\nassert stdin == stdout\n\nN, T = map(int, stdin.readline().split())\nt = map(int, stdin.readline().split())"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[0:2]\n\"\"\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 3\\n0 3') == '7'\nassert solution('2 4\\n0 3') == '7'\nassert solution('10 3\\n0 3') == '10'\nassert solution('10 4\\n0 3') == '7'\nassert solution('10 4\\n0 3') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('5 4\\n3 2 1 0\\n') == '29'\nassert solution('10 7\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '99'\nassert solution('5 3\\n0 1 2 3 4\\n') == '29'\nassert solution('10 7\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '99'\n\"\"\"\nimport sys"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 3\\n2 4') == '7'\nassert solution('1 2\\n1 1\\n') == '2'\nassert solution('10 10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 3') == 7\nassert solution('1 2') == 5\nassert solution('3 4') == 12\nassert solution('5 7') == 19\nassert solution('9 7') == 27\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''\nL 100000\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''\nL 100000\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 100000\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 10\nR 115\n? 100\nR 110\n? 115\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 10\nR 115\n? 100\nR 110\n? 115\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"1\\n0\\n1\") == \"0\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '2'\n\n\n-----Acceptance-----\n\nTest #1\nok\n\nTest #2\nok\n\n\n\"\"\"\n\n\"\"\"\n---Solution---\n\n\"\"\""
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"1\\n1\\n2\"\nassert solution(\"10\") == \"0\\n2\\n1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hello world') == 'world hello'\nassert solution('hello\\nworld') == 'world hello'\nassert solution('Hello\\nworld') == 'world Hello'\nassert solution('Hello\\nworld\\nHello') == 'Hello world Hello'\nassert solution('Hello\\nworld\\nHello\\nworld') == 'Hello world Hello'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000000000000000000') == '-1'\nassert solution('100000000000000000') == '72'\nassert solution('1000000000000000') == '6'\nassert solution('1000000000000') == '6'\nassert solution('100000000') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == -1\nassert solution('2') == 0\nassert solution('1000000000000000000') == 72\nassert solution('10') == 4\nassert solution('25') == 6\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == 0\nassert solution('10') == 4\nassert solution('25') == 6\nassert solution('30') == 6\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000''') == '''0\n4\n6\n6\n-1\n6\n72\n-1\n72\n72\n-1\n72\n72'''\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n10\n25\n30\n14\n27\n1000000000000000000''') == '6'\nassert solution('''2\n10\n1000000000000000000''') == '-1'\nassert solution('''2\n10\n1000000000000000000''') == '6'\nassert solution('''3\n1000000000000000000\n1000000000000000000\n1000000000000000000''') == '6'\nassert solution('''1\n1000000000000000000''') == '0'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n1\\n2\\n3\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\") == \"\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output\n\n\"\"\""
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100\\n'\n) == 'YES'\nassert solution(\n    '5\\n'\n    '4\\n'\n    '1 3 4 2\\n'\n    '1\\n'\n    '100\\n'\n) == 'YES'\nassert solution(\n    '4\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100\\n'\n) == 'YES'\nassert solution(\n    '5\\n'\n    '4\\n'\n    '1 3 4 2\\n'\n    '1\\n'\n    '100\\n'\n) == 'YES'\nassert solution(\n    '4\\n'\n    '3\\n'\n    '1 3 4 2\\n'\n    '1\\n'\n    '100\\n'\n) == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n1 1 2\n2\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''3\n3\n1 1 2\n2\n1 1 2 1\n2\n11 11\n1\n2''') == 'NO'\nassert solution('''3\n3\n1 1 2\n2\n1 1 2 1\n2\n11 11\n2\n''') == 'NO'\nassert solution('''3\n3\n1 1 2\n2\n1 1 2 1\n2\n11 11\n2\n''') == 'YES'\nassert solution('''3\n3\n1 1 2\n2\n1 1 2 1\n2\n11 11\n2\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n2\n1\n2\n1\n1\n1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1\\n3') == 'YES'\nassert solution('1\\n3\\n1\\n2\\n1\\n3') == 'NO'\nassert solution('4\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('4\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('100\\n100\\n100\\n100\\n100') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\n\nassert solution('''\n3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\n\nassert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2\n1 1 1 1\n2"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2\n3\n1 1 3\n4\n1 1 2 1\n2''') == 'YES'\n\nassert solution(\n'''2\n3\n1 1 2 1\n2\n11 11\n1''') == 'NO'\n\nassert solution(\n'''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\nassert solution('''3\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''3\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n1\n1''') == 'YES'\n'''\nassert solution('''3\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == 'YES'\nassert solution(\"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n101\n\"\"\") == 'NO'\nassert solution(\"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == 'YES'\nassert solution(\"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == 'YES'\nassert solution(\"\"\"\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\"\"\") == 'NO'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert stdin == '7\\nabacaba\\nbacabaa'\nassert stdin == '5\\nzcabd\\dbacz'\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n\nn = int(input())\na = list(input())\nb = list(input())\n\ndp = [[0 for j in range(n + 1)] for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if a[i - 1] == b[j - 1]:\n            dp[i][j] = dp[i - 1][j - 1] + 1\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n\nprint(dp[n][n])"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aabcc') == 1\nassert solution('abbba') == 0\nassert solution('abccc') == 1\nassert solution('bbaaa') == 1\nassert solution('bbaaa') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\nabacaba\nbacabaa\n''') == '4'\nassert solution('''5\nzcabd\ndbacz\n''') == '0'\nassert solution('''4\naacdab\nabacaa\n''') == '4'\nassert solution('''3\naba\nbab\n''') == '3'\nassert solution('''2\nzd\na\n''') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\nassert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\nassert solution(\"8\\nzxcabdd\\nzxcadbd\") == \"0\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 4\nassert solution('bacabaa') == 0\nassert solution('zcabd') == 0\nassert solution('dbacz') == 0\nassert solution('pqr') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacaba\\nbacabaa') == 4\nassert solution('zcabd\\dbacz') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\n\"\"\"\n\nLets assume for simplicity that we are dealing with strings of length $n$, where $1 \\le n \\le 10^5$.\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 10^5$).\nThe second line contains the string $a$ consisting of exactly $n$ lowercase English letters.\nThe third line contains the string $b$ consisting of exactly $n$ lowercase English letters.\n\nWe will denote by $a$ the string of letters we are given to consider and by $b$ the string that we have to make equal to $a$ by applying some number of preprocess moves.\n\nIn the next line, you will receive a sequence of characters in the range of {'a', 'b', 'c', 'd'} separated by spaces. For each of them, you must find out the minimum number of preprocess moves that can be applied so that the resulting strings $a$ and $b$ are equal. If it is impossible to do so, print the string \"IMPOSSIBLE\".\n\nIn each of the next $n-1$ lines, you will receive a single character in the range of {'a', 'b', 'c', 'd'} in the range of {'a', 'b', 'c', 'd'} separated by spaces. A character indicates that you are allowed to replace the current character in $a$ with the next given one. The character \"?\" indicates that you are allowed to swap the current and next characters. The character \"*\" indicates that you are allowed to swap any two characters.\n\nThe final line of the input describes the number of preprocess moves that need to be applied.\n\nIn the end, we print the string $b$ if it is possible to obtain it by applying some number of preprocess moves. Otherwise, we print the string \"IMPOSSIBLE\".\n\nOutput examples:\n\nInput\n7\nabacaba\nbacabaa\n\nOutput\n4\n\nInput\n5\nzcabd\ndbacz\n\nOutput\n0\n\nInput\n7\nbababaa\naabaaba\n\nOutput\nIMPOSSIBLE\n\nInput\n5\nabcd\nbcad\n\nOutput\n0\n\nInput\n8\nabcdefg\nefgabcd\n\nOutput\nIMPOSSIBLE\n\nInput\n10\nbaaabbb\nbbbbaaa\n\nOutput\n1\n\nInput\n4\nbbaa\naaba\n\nOutput\nIMPOSSIBLE\n\n\"\"\"\n\"\"\"\n\n--- This is a solution to the above problem ---\n\n\"\"\""
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n') == '1'\nassert solution('1\\n0\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2\\n2\") == \"\"\nassert solution(\"2\\n2\\n2\") == \"\"\nassert solution(\"2\\n2\\n2\\n2\") == \"\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n\nassert solution('''6\n10 2 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n''') == '198\\n-17\\n2999999997\\n0\\n1\\n1\\n1'\n\nassert solution('''6\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n1 1 999999999\n''') == '198\\n-17\\n2999999997\\n0\\n1'\n\nassert solution('''3\n5 2 4\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '3\\n1\\n-1'\n\nassert solution('''4\n2 1 4\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999\n''') == '3\\n1\\n-1'"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2\\n3\\n100\\n1\\n4\\n1\\n100000\\n1\\n100\\n1\\n9\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('5\\n2\\n3\\n100\\n1\\n4\\n1\\n100000\\n1\\n100\\n1\\n9\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('5\\n2\\n3\\n100\\n1\\n4\\n1\\n100000\\n1\\n100\\n1\\n9\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('5\\n2\\n3\\n100\\n1\\n4\\n1\\n100000\\n1\\n100\\n1\\n9\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('5\\n2\\n3\\n100\\n1\\n4\\n1\\n100000\\n1\\n100\\n1\\n9\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 3''') == '8'\nassert solution('''100 1 4''') == '198'\nassert solution('''1 1000000000 1 6''') == '2999999997'\nassert solution('''1 1 1000000000''') == '0'\nassert solution('''1 1 999999999''') == '1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1\\n1 2 1\\n2 1 1\\n4 1 1\\n2 2 1\\n\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n4 1 1\\n2 2 1\\n\") == \"2\\n0\\n-1\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n2 1 1\\n4 1 1\\n2 2 1\\n\") == \"3\\n3\\n1\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n2 1 1\\n4 1 1\\n2 2 1\\n\") == \"3\\n3\\n1\"\nassert solution(\"4\\n1 1 1\\n1 2 1\\n2 1 1\\n4 1 1\\n2 2 1\\n\") == \"4\\n4\\n1\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1000000000') == '1'\nassert solution('1 1 999999999') == '0'\nassert solution('100 1 4') == '8'\nassert solution('100 1 4') == '8'\nassert solution('1 1000000000 1 6') == '2999999997'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"4\\n\") == \"-1\"\nassert solution(\"5\\n\") == \"-2\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('100\\n100\\n100\\n100') == '100'\nassert solution('100\\n1\\n100\\n100') == '1'\nassert solution('5\\n2\\n5\\n2') == '8'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n2\\n3') == '1\\n3\\n9\\n'\nassert solution('3\\n1\\n2\\n') == '1\\n2\\n3\\n'\nassert solution('3\\n1\\n2\\n4') == '1\\n3\\n'\nassert solution('3\\n1\\n2\\n5') == '1\\n2\\n4\\n'\nassert solution('3\\n1\\n2\\n100') == '1\\n2\\n4\\n'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('4\\n4') == '4'\nassert solution('5\\n5') == '5'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '1'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('2\\n1\\n2\\n2\\n2\\n2\\n2\\n2') == '1\\n1\\n2\\n2\\n2\\n2\\n2\\n2'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '''1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089'''\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '''1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\nThe Tested Code\n>>> solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''')\n'1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n10\n1000000000000000000\n''') == '1'\n\nassert solution('''8\n100\n1000000000000000000\n''') == '1'\n\nassert solution('''8\n999\n1000000000000000000\n''') == '2'"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043d\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0435\u0433\u043e \u0446\u0435\u043b\u043e\u0439 \u0447\u0430\u0441\u0442\u0438.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u0430 $30$ \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0435\u043b\u044c\u0437\u044f, \u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0446\u0435\u043b\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0432\u0438\u0434\u0435:\n\n$30 = 3^3 + 3^1$,  $1 = 3^0$,  $12 = 3^2 + 3^1$,  $2 = 3^0 + 3^0$,  $19 = 3^2 + 3^2 + 3^0$,  $20 = 3^2 + 3^2 + 3^0$\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n5\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u044b:\n\n1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089\n\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u043c, \u0442.\u043a. \u0432\u0441\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0439 \u0447\u0438\u0441\u043b\u043e \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u0432 \u0438\u0441\u043a\u043e\u043c\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043f\u0440\u0435\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0448\u0435 \u0438\u043b\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u0446\u0435\u043b\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430.\n\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0438\u043c\u0435\u044e\u0442 \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438\u0437 \u0434\u0432\u0443\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0442\u0435\u043f\u0435\u043d\u0435\u0439 \u0442\u0440\u0435\u0445. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0442\u0432\u0435\u0442 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430.\n\n\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0430\u0434\u043e \u043f\u043e\u043c\u043e\u0447\u044c, \u0442\u043e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0448\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430:\n\n1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n10\n13\n27\n6561\n19683\n1350851717672992089\n'''"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n1') == '1'\nassert solution('1\\n1\\n2\\n1\\n2') == '1'\nassert solution('1\\n1\\n2\\n1\\n2\\n1') == '1'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdfasfdsfasdfasdf') == 'asdfasfdsfasdfasdf'\nassert solution('12345') == '12345'\nassert solution('1234') == '1234'\nassert solution('123456789') == '123456789'\nassert solution('12345678901') == '12345678901'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a b x y n') == '10'\nassert solution('1 1 1 1 1 1') == '10'\nassert solution('2 2 2 2 2 2') == '10'\nassert solution('1000000000 1000000000 1 1 1') == '10'\nassert solution('1000000000 1000000000 1 1 1000000000') == '10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 10 8 5 3''') == '70'\nassert solution('''12 8 8 7 2''') == '77'\nassert solution('''12343 43 4543 39 123212''') == '177177'\nassert solution('''1000000000 1000000000 1 1 1''') == '999999999000000000'\nassert solution('''1000000000 1000000000 1 1 1000000000''') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"-1\"\"\"\n\n\"\"\"\nThis is a classic DP problem. There are two parts to this problem, the first part is about how to find the optimal result of multiplying a and b.\n\nIn the first part, we need to keep track of the result of multiplying a and b, then we choose the two numbers that we need to multiply. The following is the pseudo code.\n\n    for each test case, find the minimum result of multiplying $a$ and $b$ by using at most $n$ times.\n\nWe have the following three situations:\n\n1) $a$ is greater than $x$ and $b$ is less than $y$. So we multiply $a$ and $b$ in $n$ times, then we get the new result as $a * b = (a-1) * b + a * (b-1)$.\n2) $a$ is less than $x$ and $b$ is greater than $y$. So we multiply $a$ and $b$ in $n$ times, then we get the new result as $a * b = (a+1) * b - a * (b-1)$.\n3) $a$ and $b$ are equal to $x$ and $y$. So we multiply $a$ and $b$ in $n$ times, then we get the new result as $a * b = (a+b) * 1$.\n\nSo we can get the minimum result of multiplying $a$ and $b$ by using at most $n$ times.\n\nThen we can try to reduce the number of times we need to multiply by one. As we use at most $n$ times, we have three situations:\n\n1) $a$ is greater than $x$ and $b$ is less than $y$. So we multiply $a$ and $b$ in $n-1$ times, then we get the new result as $a * b = (a-1) * b + a * (b-1)$.\n2) $a$ is less than $x$ and $b$ is greater than $y$. So we multiply $a$ and $b$ in $n-1$ times, then we get the new result as $a * b = (a+1) * b - a * (b-1)$.\n3) $a$ and $b$ are equal to $x$ and $y$. So we multiply $a$ and $b$ in $n-1$ times, then we get the new result as $a * b = (a+b) * 1$.\n\nSo we can get the minimum result of multiplying $a$ and $b$ by using at most $n-1$ times.\n\nThen we try to reduce the number of times we need to multiply by two. As we use at most $n-1$ times, we have three situations:\n\n1) $a$ is greater than $x$ and $b$ is less than $y$. So we multiply $a$ and $b$ in $n-2$ times, then we get the new result as $a * b = (a-2) * b + 2 * a * (b-1)$.\n2) $a$ is less than $x$ and $b$ is greater than $y$. So we multiply $a$ and $b$ in $n-2$ times, then we get the new result as $a * b = (a+2) * b - 2 * a * (b-1)$.\n3) $a$ and $b$ are equal to $x$ and $y$. So we multiply $a$ and $b$ in $n-2$ times, then we get the new result as $a * b = (a+b) * 1$.\n\nSo we can get the minimum result of multiplying $a$ and $b$ by using at most $n-2$ times.\n\nFinally, we try to reduce the number of times we need to multiply by three. As we use at most $n-2$ times, we have three situations:\n\n1) $a$ is greater than $x$ and $b$ is less than $y$. So we multiply $a$ and $b$ in $n-3$ times, then we get the new result as $a * b = (a-3) * b + 3 * a * (b-1)$.\n2) $a$ is less than $x$ and $b$ is greater than $y$. So we multiply $a$ and $b$ in $n-3$ times, then we get the new result as $a * b = (a+3) * b - 3 * a * (b-1)$.\n3) $a$ and $b$ are equal to $x$ and $y$. So we multiply $a$ and $b$ in $n-3$ times, then we get the new result as $a * b = (a+b) * 1$.\n\nSo we can get the minimum result of multiplying $a$ and $b$ by using at most $n-3$ times.\n\nNow we can get the answer. As we can see, we will have $n-3$ times of binary search for the optimal result, and the answer is the minimum result of multiplying $a$ and $b$ by using at most $n-3$ times.\n\n\"\"\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2 1 1\\n10 10 8 5 3') == '70'\nassert solution('3 2 1 1\\n12 8 8 7 2\\n12343 43 4543 39 123212') == '77'\nassert solution('1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '55'\nassert solution('1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n10 11 2 1 5\\n10 11 9 1 10') == '10'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1\\n0\\n2\\n2\\n1'\n\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1\\n0\\n2\\n2\\n1'\n\nassert solution('''5\n2 3\n5 5\n2 4\n7 4\n9 3\n''') == '2\\n0\\n2\\n2\\n1'\n\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2\\n0\\n2\\n2\\n1'\n\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2\\n0\\n2\\n2\\n1'"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3') == '1'\nassert solution('10\\n10') == '0'\nassert solution('2\\n4') == '2'\nassert solution('7\\n4') == '1'\nassert solution('9\\n3') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('10 10\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\"\"\") == \"1\\n0\\n2\\n2\\n1\"\n\nassert solution(\n\"\"\"\n6\n2 3\n10 10\n2 4\n7 4\n9 3\n\"\"\") == \"0\\n1\\n2\\n2\\n1\"\n\nassert solution(\n\"\"\"\n1\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\"\"\") == \"0\\n1\\n1\\n2\\n1\"\n\nassert solution(\n\"\"\"\n3\n6 6\n2 3\n10 10\n2 4\n7 4\n9 3\n\"\"\") == \"1\\n1\\n2\\n2\\n1\"\n\nassert solution(\n\"\"\"\n3\n4 2\n1 5\n3 2\n3 2\n\"\"\") == \"0\\n0\\n1\\n2\\n3\""
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '1'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '0'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '2'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '1'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '1'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\n\"\"\"\n) == \"\"\"\n1\n0\n2\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\n\"\"\"\n) == \"\"\"\n1\n0\n2\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 1\n10 10\n2 4\n7 4\n9 3\n\n\"\"\"\n) == \"\"\"\n2\n0\n1\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n10\n2 3\n10 10\n2 4\n7 4\n9 3\n\n\"\"\"\n) == \"\"\"\n1\n0\n2\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n10\n2 3\n10 10\n2 4\n7 4\n9 3\n\n\"\"\"\n) == \"\"\"\n2\n0\n1\n1\n\"\"\""
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n7 4\\n9 3\\n') == '2\\n0\\n1\\n2'\nassert solution('10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2'\nassert solution('2 4\\n7 4\\n9 3\\n') == '0\\n0\\n1\\n2'\nassert solution('10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2'\nassert solution('2 4\\n9 3\\n') == '0\\n0\\n1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == '13'\nassert solution('''\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n''') == '60'\nassert solution('''\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '2828'\nassert solution('''\n4\n1\n22\n9999\n12345\n''') == '13'\nassert solution('''\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n''') == '29930'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36''') == '90'\nassert solution('''12\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0''') == '81'\nassert solution('''3\n1\n2\n3''') == '6'\nassert solution('''2\n101\n200''') == '6'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n2\n2\n2\n2''') == '5'\nassert solution('''3\n3\n3\n3\n3''') == '9'\nassert solution('''4\n4\n4\n4\n4''') == '8'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''22\n9999\n1\n777''') == '13'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '90'\nassert solution('''2\n1\n2\n3''') == '66'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '1'\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9''') == '66'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('22') == '13'\nassert solution('9999') == '90'\nassert solution('1') == '1'\nassert solution('777') == '66'\n\nimport sys\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n) == '2'\n\nassert solution(\n    '5\\n'\n    '9999\\n'\n    '3\\n'\n    '77\\n'\n    '22'\n) == '13'\n\"\"\"\n\"\"\"\nThis problem was asked by Apple.\n\nGiven a tree, find the maximum width of the tree. The width of a tree is the number of nodes on the longest path from the root node down to the farthest leaf node.\n\n\"\"\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''22''') == '13'\nassert solution('''1''') == '90'\nassert solution('''999''') == '1'\nassert solution('''777''') == '66'\nassert solution('''9999''') == '90'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('999') == '9'\nassert solution('99911') == '10'\nassert solution('99991') == '11'\nassert solution('97799') == '9'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"0\\n0\") == \"\"\n\nassert solution(\"2\\n2\") == \"2\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == 'YES\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1') == 'YES\\n2 6\\n1 2'\nassert solution('3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 2\\n5\\n2 2 2\\n3\\n2 2\\n5\\n2 2 2 2 2\\n') == 'NO\\n'\n\nassert solution('5\\n2 2 2 2 2\\n2\\n2 2 2\\n2\\n2 2\\n2\\n2 2') == 'YES\\n2 2\\n2 2\\n2 2'\nassert solution('6\\n1 1 2 2 2 1\\n2\\n2 2 2 2\\n2\\n2 2 2') == 'YES\\n2 2\\n2 2'\nassert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1') == 'YES\\n2 6\\n1 2'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'YES\\n2 6\\n1 2\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2''') == 'YES'\nassert solution('''5\n1\n5\n5\n1 1 1 1 1\n2\n2 2 2''') == 'NO'\nassert solution('''6\n2\n2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES\\n2 2\\n2 2'\nassert solution('2\\n1\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'NO'\nassert solution('3\\n1\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES\\n2 2\\n2 2'\nassert solution('3\\n1\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'NO'\nassert solution('4\\n6\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'YES\\n2 2\\n2 2'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1') == 'YES\\n2 6\\n1 2'\nassert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1') == 'NO'\nassert solution('1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n2\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''2\n2\n2\n2 2 2\n2\n2 2 2\n''') == 'NO'\nassert solution('''2\n3\n2\n2\n2\n2\n2 2\n''') == 'NO'\nassert solution('''4\n2\n2\n2 2 2\n2\n2 2 2 2\n2\n2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''3\n5\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\nassert solution('') == ''\nassert solution('123456789') == ''\nassert solution('34\\n23\\n9') == ''\nassert solution('12345\\n12345\\n12345\\n12345\\n12345\\n12345\\n12345') == ''\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n'''"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4,2,3') == 5\nassert solution('3,-1,0,2') == 6\nassert solution('2,-3,-1,5,-4') == 13\nassert solution('1,2,3') == 6\nassert solution('1,-2,-3') == 6\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-1\") == \"-1\"\nassert solution(\"1\\n-1\\n1\") == \"-1\"\nassert solution(\"1\\n-1\\n1\\n1\") == \"-1\"\nassert solution(\"1\\n-1\\n1\\n1\\n1\") == \"-1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"5\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([4, 2, 3], 1) == 5\nassert solution([3, -1, 0, 2], 3) == 6\nassert solution([2, -3, -1, 5, -4], 2) == 13\nassert solution([0, 0, 0, 0], 0) == 0\nassert solution([-1, 0, 2, -3, 5], 1) == 6\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n\n'''\nFor each i, we can choose to change it to -A[i],\nand we have to change the array K times.\nThe max sum is the result of A after K changes.\n'''\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4,2,3\"\"\") == \"5\"\nassert solution(\"\"\"3,-1,0,2\"\"\") == \"6\"\nassert solution(\"\"\"2,-3,-1,5,-4\"\"\") == \"13\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1,2\") == \"3\"\nassert solution(\"1,2,3\") == \"6\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == \"1\"\nassert solution(\"2 3 -1\") == \"3\"\nassert solution(\"2 3 -1 4\") == \"6\"\nassert solution(\"2 3 1 4\") == \"10\"\nassert solution(\"5 4 3 2 1\") == \"11\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"0 2 1 -6 6 -7 9 1 2 0 1\") == 'true'\nassert solution(\n    \"0 2 1 -6 6 -7 9 -1 2 0 1\") == 'false'\nassert solution(\n    \"3 3 6 5 -2 2 5 1 -9 4\") == 'true'\nassert solution(\n    \"3 3 6 5 -2 2 5 1 -9 -1 2 0 1\") == 'false'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == 'true'\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == 'false'\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == 'true'\n\"\"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == True\nassert solution(\"0 2 1 -6 6 -7 9 -1 2 0 1\") == False\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == True\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == False\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, 1, 2, 0, 1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([2,1,-1,2,0,-1,2,0,-1,2,0,1,1,-1,2,0,-1]) == True\nassert solution([-1,2,-1,0,-2,1,2,0,-1,2,1,0,1]) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'\nassert solution([-1,0,1,2,-1,-2,-2,-2,-2]) == 'true'\nassert solution([-1,0,1,2,0,-2,-2,-2,-2]) == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"true\"\n\"\"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 2 1 -6 6 -7 9 1 2 0 1''') == True\nassert solution('''0 2 1 -6 6 -7 9 -1 2 0 1''') == False\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == True\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == False\nassert solution('''0 2 1 -6 6 -7 9 -1 2 0 1''') == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\nassert solution([6,5,-2,2,5,1,-9,4]) == \"false\"\nassert solution([-3,3,6,5,-2,2,5,1,-9,4]) == \"false\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\n\"\"\""
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''1\nmama\ndada\n''') =='mama'\nassert solution('''4\nmama\ndada\npapa\nkaka\n''') =='mama'\nassert solution('''3\nmama\ndada\npapa\n''') == 'dada'\nassert solution('''3\nmama\ndada\npapa\n''') == 'papa'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"vet\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\\na\") == \"a\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\nbed\\nvet\") == \"bet\"\nassert solution(\"beat\\nbet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\nbed\\nvet\") == \"beet\"\nassert solution(\"beat\\nbet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\nbed\\nvet\") == \"vet\"\nassert solution(\"beat\\nbet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\nbed\\nvet\") == \"vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bet') == 'bet'\nassert solution('beet') == 'beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet'\nassert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') =='vet'\nassert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet'\nassert solution('''3\nab\ncd\ne\n''') == 'cd'\nassert solution('''3\nab\ncd\ne\n''') == 'ab'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\n'''\nassert solution('''7\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\nman\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet\\nvet'\nassert solution('''10\nb\nb\nb\nb\nb\nb\nb\nb\nb\nb\nb\nb\nb\n''') == 'b' * 10\nassert solution('''100\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n''') == 'a' * 100\nassert solution('''100\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n''') == 'a' * 100\nassert solution('''1000\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n''') == 'a' * 1000\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '8'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\"0\\n\") == None\nassert solution(\"0\\n0\") == None\nassert solution(\"1\\n0\") == None\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"4 8\") == \"8\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 2\") == \"\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 2') == '1'\nassert solution('2 2') == '2'\nassert solution('4 2 3') == '4'\nassert solution('3 3 3') == '1'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '8'\n\"\"\"\nimport sys\nsys.path.append(\"../../../datastuctures\")\nfrom datastuctures import ListNode, listFromArray, arrayFromList, listFromString"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\") == \"0\\n\"\nassert solution(\"1\\n2\\n1\") == \"2\\n\"\nassert solution(\"1\\n3\\n1\") == \"2\\n\"\nassert solution(\"1\\n10\\n1\") == \"4\\n\"\nassert solution(\"1\\n100\\n1\") == \"4\\n\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234\\n150\\n100\\n') == '84'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('0\\n0\\n0\\n') == '0'\nassert solution('10\\n100\\n100\\n') == '100'\nassert solution('1\\n100\\n100\\n') == '0'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\nassert solution(\"2 3 4\") == \"6\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"10 10 10\") == \"30\"\nassert solution(\"20 3 2\") == \"12\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1234 150 100\\n') == '1084'\nassert solution('10000000 10000000\\n') == '0'\nassert solution('10000000 10000001\\n') == '1101'\nassert solution('10000000 10000101\\n') == '10001'\nassert solution('10000000 10001001\\n') == '1010'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[-1]\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"1234\\n150\\n1000\") == \"0\"\nassert solution(\"10\\n150\\n100\") == \"5\"\nassert solution(\"10\\n100\\n100\") == \"0\"\nassert solution(\"0\\n150\\n100\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1234\n150\n100''') == '84'\nassert solution('''1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n12345678"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n\nassert solution(\"\\n\") == \"0\"\nassert solution(\"\\n100\\n150\\n0\\n\") == \"84\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"10000\\n9\\n10\") == \"1\"\nassert solution(\"15000\\n1000\\n10\") == \"2069\"\nassert solution(\"1000000\\n1000\\n1\") == \"1000000\"\nassert solution(\"10000\\n1000\\n1000\") == \"0\"\n\n\"\"\"\nX, A, B = [int(x) for x in stdin.split(\"\\n\")]\nprint(X - A - B)\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n100\\n50\") == \"84\"\nassert solution(\"1\\n100\\n50\") == \"84\"\nassert solution(\"2\\n100\\n50\") == \"84\"\nassert solution(\"2\\n100\\n10\") == \"10\"\nassert solution(\"0\\n100\\n50\\n200\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"5 6\") == \"1\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '8'\nassert solution('5 10') == '4'\nassert solution('5 10') == '8'\nassert solution('5 10') == '8'\nassert solution('100 997') == '23556888'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\"\n\n\"\"\"\nACADAD\nACBBAD\nBBACAD\nBBADAC\nABBCAD\nCABBAB\nABCAAB\n\n\"\"\""
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"4 2\") == \"80\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nfrom math import factorial as f\n\nA, B = [int(i) for i in sys.stdin.readline().strip().split()]"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\"\nassert solution(\"2 2\") == \"POSSIBLE\"\nassert solution(\"3 1\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 3\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n1 2\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 3\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 2\\na_1 b_1\\na_2 b_2\\n') == 'POSSIBLE'\nassert solution('2 2\\na_1 b_1\\na_2 b_2\\n') == 'POSSIBLE'\nassert solution('2 2\\na_1 b_1\\na_2 b_2\\na_1 b_2\\n') == 'IMPOSSIBLE'\nassert solution('2 2\\na_1 b_1\\na_2 b_2\\na_1 b_2\\na_1 b_3\\na_2 b_3\\na_3 b_1\\na_3 b_2\\na_1 b_4\\na_4 b_1\\na_1 b_5\\na_5 b_1\\na_1 b_6\\na_6 b_1\\na_1 b_7\\na_7 b_1\\na_1 b_8\\na_8 b_1\\na_1 b_9\\na_9 b_1\\na_1 b_10\\na_10 b_1\\na_1 b_11\\na_11 b_1\\na_1 b_12\\na_12 b_1\\na_1 b_13\\na_13 b_1\\na_1 b_14\\na_14 b_1\\na_1 b_15\\na_15 b_1\\na_1 b_16\\na_16 b_1\\na_1 b_17\\na_17 b_1\\na_1 b_18\\na_18 b_1\\na_1 b_19\\na_19 b_1\\na_1 b_20\\na_20 b_1\\na_1 b_21\\na_21 b_1\\na_1 b_22\\na_22 b_1\\na_1 b_23\\na_23 b_1\\na_1 b_24\\na_24 b_1\\na_1 b_25\\na_25 b_1\\na_1 b_26\\na_26 b_1\\na_1 b_27\\na_27 b_1\\na_1 b_28\\na_28 b_1\\na_1 b_29\\na_29 b_1\\na_1 b_30\\na_30 b_1\\na_1 b_31\\na_31 b_1\\na_1 b_32\\na_32 b_1\\na_1 b_33\\na_33 b_1\\na_1 b_34\\na_34 b_1\\na_1 b_35\\na_35 b_1\\na_1 b_36\\na_36 b_1\\na_1 b_37\\na_37 b_1\\na_1 b_38\\na_38 b_1\\na_1 b_39\\na_39 b_1\\na_1 b_40\\na_40 b_1\\na_1 b_41\\na_41 b_1\\na_1 b_42\\na_42 b_1\\na_1 b_43\\na_43 b_1\\na_1 b_44\\na_44 b_1\\na_1 b_45\\na_45 b_1\\na_1 b_46\\na_46 b_1\\na_1 b_47\\na_47 b_1\\na_1 b_48\\na_48 b_1\\na_1 b_49\\na_49 b_1\\na_1 b_50\\na_50 b_1\\na_1 b_51\\na_51 b_1\\na_1 b_52\\na_52 b_1\\na_1 b_53\\na_53 b_1\\na_1 b_54\\na_54 b_1\\na_1 b_55\\na_55 b_1\\na_1 b_56\\na_56 b_1\\na_1 b_57\\na_57 b_1\\na_1 b_58\\na_58 b_1\\na_1 b_59\\na_59 b_1\\na_1 b_60\\na_60 b_1\\na_1 b_61\\na_61 b_1\\na_1 b_62\\na_62 b_1\\na_1 b_63\\na_63 b_1\\na_1 b_64\\na_64 b_1\\na_1 b_65\\na_65 b_1\\na_1 b_66\\na_66 b_1\\na_1 b_67\\na_67 b_1\\na_1 b_68\\na_68 b_1\\na_1 b_69\\na_69 b_1\\na_1 b_70\\na_70 b_1\\na_1 b_71\\na_71 b_1\\na_1 b_72\\na_72 b_1\\na_1 b_73\\na_73 b_1\\na_1 b_74\\na_74 b_1\\na_1 b_75\\na_75 b_1\\na_1 b_76\\na_76 b_1\\na_1 b_77\\na_77 b_1\\na_1 b_78\\na_78 b_1\\na_1 b_79\\na_79 b_1\\na_1 b_80\\na_80 b_1\\na_1 b_81\\na_81 b_1\\na_1 b_82\\na_82 b_1\\na_1 b_83\\na_83 b_1\\na_1 b_84\\na_84 b_1\\na_1 b_85\\na_85 b_1\\na_1 b_86\\na_86 b_1\\na_1 b_87\\na_87 b_1\\na_1 b_88\\na_88 b_1\\na_1 b_89\\na_89 b_1\\na_1 b_90\\na_90 b_1\\na_1 b_91\\na_91 b_1\\na_1 b_92\\na_92 b_1\\na_1 b_93\\na_93 b_1\\na_1 b_94\\na_94 b_1\\na_1 b_95\\na_95 b_1\\na_1 b_96\\na_96 b_1\\na_1 b_97\\na_97 b_1\\na_1 b_98\\na_98 b_1\\na_1 b_99\\na_99 b_1\\na_1 b_100\\na_100 b_1\\na_1 b_101\\na_101 b_1\\na_1 b_102\\na_102 b_1\\na_1 b_103\\na_103 b_1\\na_1 b_104\\na_104 b_1\\na_1 b_105\\na_105 b_1\\na_1 b_106\\na_106 b_1\\na_1 b_107\\na_107 b_1\\na_1 b_108\\na_108 b_1\\na_1 b_109\\na_109 b_1\\na_1 b_110\\na_110 b_1\\na_1 b_111\\na_111 b_1\\na_1 b_112\\na_112 b_1\\na_1 b"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('4 2') == 'POSSIBLE'\nassert solution('2 2') == 'POSSIBLE'\nassert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('2 2') == 'POSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\nassert solution('2 3\\n2 3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"5 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"POSSIBLE\"\nassert solution(\"6 2\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"POSSIBLE\"\nassert solution(\"7 2\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('at') == 'at'\nassert solution('coder') == 'cder'\nassert solution('cod') == 'cod'\nassert solution('c') == 'c'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'bd'\nassert solution('abcd') == 'bd'\nassert solution('a') == 'a'\nassert solution('abc') == 'ac'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('asdfd') == 'adfds'\nassert solution('aa') == 'aa'\nassert solution('abc') == 'abc'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[1:3]\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcde') == 'acde'\nassert solution('a') == 'a'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"acde\") == \"acd\"\nassert solution(\"atco\") == \"a\"\nassert solution(\"atco\") == \"a\"\nassert solution(\"atco\") == \"a\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\nassert solution('abcdefghijklmnop') == 'acdefghijklmnop'\nassert solution('b') == 'b'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[2] == stdin[5] == stdin[8] == stdin[0] == stdin[3] == stdin[6]\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"rng gorilla apple\"\n) == \"YES\"\nassert solution(\n    \"rng ggor\"\n) == \"NO\"\nassert solution(\n    \"rng gorilla gorilla\"\n) == \"NO\"\nassert solution(\n    \"rng ggorappl\"\n) == \"NO\"\nassert solution(\n    \"rng ggorapplk\"\n) == \"YES\"\n\nprint('Test passed')\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng ogor\") == \"NO\"\nassert solution(\"rgogor\") == \"NO\"\nassert solution(\"rgogo\") == \"NO\"\nassert solution(\"gorgo\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng gorillaapple\") == \"YES\"\nassert solution(\"rnggorillaapple\") == \"YES\"\nassert solution(\"rnggorillagrapple\") == \"YES\"\nassert solution(\"rnggorillagrpgapple\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('dog cat cat dog') == 'NO'\nassert solution('dog cat dog') == 'NO'\nassert solution('dogcatdog') == 'YES'\nassert solution('dogcatcat') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\nassert solution('rng gorilla apple') == 'NO'\nassert solution('rng gorilla apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''rng gorilla apple''') == 'YES'\nassert solution('''rng gorilla apple''') == 'YES'\nassert solution('''rng rgorp lokagorap''') == 'YES'\nassert solution('''rng rgorp lokagorap''') == 'YES'\nassert solution('''rng rgorp lokagorap''') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''rng gorilla apple''') == 'YES'\nassert solution('''a b c''') == 'NO'\nassert solution('''a b c''') == 'NO'\nassert solution('''a b c''') == 'NO'\nassert solution('''a b c''') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng') == 'NO'\nassert solution('r') == 'NO'\nassert solution('gorilla') == 'NO'\nassert solution('gorilla gorilla') == 'YES'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 1') == 'GREATER'\nassert solution('11 0') == 'LESS'\nassert solution('11 1') == 'LESS'\nassert solution('1 1') == 'EQUAL'\nassert solution('5 5') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('16' == solution())\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'EQUAL'\nassert solution('3\\n2') == 'LESS'\nassert solution('36\\n24') == 'GREATER'\nassert solution('99\\n99') == 'EQUAL'\nassert solution('0\\n0') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"A: \")) == \"LESS\"\nassert solution(input(\"B: \")) == \"GREATER\"\nassert solution(input(\"A: 0\")) == \"EQUAL\"\nassert solution(input(\"B: 0\")) == \"EQUAL\"\nassert solution(input(\"A: 5\")) == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"GREATER\"\nassert solution(\"2\") == \"LESS\"\nassert solution(\"1\") == \"EQUAL\"\nassert solution(\"4\") == \"LESS\"\nassert solution(\"6\") == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''36\n24''') == \"GREATER\"\nassert solution('''0\n0''') == \"EQUAL\"\nassert solution('''3\n0''') == \"LESS\"\nassert solution('''-3\n-1''') == \"LESS\"\nassert solution('''99\n99''') == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n'''\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"EQUAL\"\nassert solution(\"2\\n1\") == \"GREATER\"\nassert solution(\"1\\n2\") == \"LESS\"\nassert solution(\"3\\n2\") == \"GREATER\"\nassert solution(\"2\\n3\") == \"LESS\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\napple\norange\napple\n1\ngrape'''\n    ) == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '3\\n'\n    'apple\\n'\n    'orange\\n'\n    'apple\\n'\n    '1\\n'\n    'grape'\n) == '2'\nassert solution(\n    '3\\n'\n    'apple\\n'\n    'orange\\n'\n    'apple\\n'\n    '1\\n'\n    'grape'\n) == '2'\nassert solution(\n    '5\\n'\n    'aab\\n'\n    'aac\\n'\n    'aab\\n'\n    'aac\\n'\n    'aab\\n'\n    'aac\\n'\n    'aab\\n'\n    'aac\\n'\n    'aab\\n'\n    'aac\\n'\n    'aab'\n) == '0'\nassert solution(\n    '3\\n'\n    'acb\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac\\n'\n    'bac'\n) == '4'\nassert solution(\n    '4\\n'\n    'bcb\\n'\n    'bca\\n'\n    'bcb\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca\\n'\n    'bca'\n) == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple') == '2'\nassert solution('banana') == '0'\nassert solution('grape') == '3'\nassert solution('grapes') == '3'\nassert solution('bananas') == '0'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''1\nhello\n''') == '0'\nassert solution('''2\naa\naa\n''') == '0'\nassert solution('''5\na\nb\nc\nd\ne\n''') == '0'\nassert solution('''5\nc\nc\nc\nc\nc\n''') == '0'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n') == '2'\nassert solution('2\\n1\\n1\\n') == '3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '6'\nassert solution('2\\n1\\n2\\n1\\n1\\n2\\n2\\n2\\n') == '3'\nassert solution('1\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n') == '4'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    3\n    apple\n    orange\n    apple\n    1\n    grape\n    ''') == '2'\nassert solution(\n    '''\n    5\n    bb\n    aa\n    aa\n    1\n    aa\n    ''') == '6'\nassert solution(\n    '''\n    5\n    ba\n    ba\n    ba\n    1\n    ba\n    ''') == '5'\nassert solution(\n    '''\n    3\n    bb\n    ba\n    ba\n    1\n    ba\n    ''') == '4'\nassert solution(\n    '''\n    3\n    bb\n    ba\n    ba\n    1\n    ba\n    ''') == '4'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\n\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"AA\") == \"T\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nprint(\"all tests past, you are good to go!\")"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"G\") == \"C\"\nassert solution(\"C\") == \"G\"\nassert solution(\"A\") == \"T\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\n\"\"\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"T\") == \"G\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"a\") == \"t\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"T\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '5'\n) == '14'\n'''\n\n'''\nSort the candies in the grid according to their values.\nFor each position, check whether we can walk to the right or down.\nIf we can walk to the right, there will be candies to collect at the current position.\nIf we can walk to the down, there will be candies to collect at the current position.\nAdd the candies of the current position to the number of candies to collect.\nIf the position is the top-left square, then there will be candies to collect at the current position.\nSet the number of candies to collected to zero.\nRun the following loop for every position (i, j):\n - If the current position is the top-left square,\n   and we have candies to collect at the current position,\n   then set the number of candies collected to the candies to collect at the current position.\n - Otherwise,\n   if we can walk to the right,\n   we will collect candies at the current position,\n   and we will not collect candies at the current position.\n   if we can walk to the down,\n   we will collect candies at the current position,\n   and we will not collect candies at the current position.\n - If we cannot walk to the right or down,\n   we will not collect candies at the current position.\n   Set the number of candies collected at the current position to zero.\nReturn the maximum number of candies collected.\n'''\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n3 2 2 4 1\n1 2 2 2 1\n\"\"\") == \"14\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution('''4\n1 2 2 1\n1 2 2 1\n1 2 2 1\n1 2 2 1\n''') == '8'\nassert solution('''3\n2 3 1\n2 3 1\n2 3 1\n''') == '6'\n'''\n'''"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 2 4 1') == '14'\nassert solution('1 2 2 2 1') == '14'\nassert solution('1 2 2 2 1') == '14'\nassert solution('1 2 2 2 1') == '14'\nassert solution('1 2 2 2 1') == '14'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n2\\n') == '3'\nassert solution('3\\n2\\n') == '3'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n        stdin) == \"14\"\n'''"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 2 4 1\") == \"14\"\nassert solution(\"3\\n3 2 2 4 1\") == \"6\"\nassert solution(\"4\\n4 4 4 4 1\") == \"16\"\nassert solution(\"2\\n1 1 1 1\") == \"3\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"21\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 2 4 1') == '14'\nassert solution('1 2 2 2 1') == '14'\nassert solution('4 2 2 4 1') == '16'\nassert solution('1 2 2 3 1') == '4'\nassert solution('5 5 5 5 5') == '30'\nprint('Test cases passed')\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n3 2 2 4 1''') == '14'\nassert solution('''7\n
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"2 2 2\\n\"\n    ) == \"1\\n\"\n\nassert solution(\n    \"3 3\\n\"\n    \"3 3 3\\n\"\n    ) == \"1\\n\"\n\nassert solution(\n    \"2 2\\n\"\n    \"1 1\\n\"\n    ) == \"2\\n\"\n\nassert solution(\n    \"2 2\\n\"\n    \"5 5 4\\n\"\n    ) == \"6\\n\"\n\nassert solution(\n    \"3 3\\n\"\n    \"3 3 3\\n\"\n    \"2 2 2\\n\"\n    ) == \"1\\n\""
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"3 3\\n2 2 2\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('3 3 2') == '1'\nassert solution('3 4 5') == '2'\nassert solution('0 2 3') == '-1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 1 3') == '2'\nassert solution('1 2 2 2 3') == '3'\nassert solution('1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n2 2 2') == '1'\nassert solution('3 3\\n2 2 2') == '1'\nassert solution('4 4\\n2 2 2 2') == '1'\nassert solution('5 4\\n2 2 2 2 2') == '2'\nassert solution('6 4\\n2 2 2 2 2 2') == '2'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4') == '2'\nassert solution('2 3') == '1'\nassert solution('5 3') == '2'\nassert solution('3 3') == '0'\nassert solution('0 4') == '0'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1''') == 'No'\nassert solution('''1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1''') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''2 0 0\n0 1 0\n0 0 1\n1 1 1''') == 'No'\nassert solution('''1 1 2\n1 1 2\n1 1 2''') == 'Yes'\nassert solution('''1 0 1\n1 0 1\n1 0 1''') == 'No'\nassert solution('''0 1 0\n0 1 0\n0 1 0''') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"2 0 2\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 0 1''') == \"Yes\"\nassert solution('''2 1 2''') == \"Yes\"\nassert solution('''1 0 1''') == \"No\"\nassert solution('''2 1 2''') == \"No\"\nassert solution('''1 0 1''') == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 1 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 1 1') == 'No'\nassert solution('1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n0 0 0\\n0 0 0') == 'No'\nassert solution('1 0 1\\n0 0 0\\n0 0 0') == 'Yes'\nassert solution('1 0 1\\n2 2 2\\n2 2 2') == 'No'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ARC\"\nprint(\"assertions passed\")\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(ABC) == ARC\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"AB\") == \"ABC\"\n\nprint(\"solution:\", solution(input()))\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'ARC'\n\"\"\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('10 12 31') == '4'\nassert solution('1 2 3') == '0'\nassert solution('100 200 301') == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8 2') == '3'\n\"\"\""
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 8 2''') == '3'\nassert solution('''3 3 4''') == '3'\nassert solution('''5 10 5''') == '0'\nassert solution('''3 9 5''') == '3'\nassert solution('''7 10 2''') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == input('')\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 3') == '1'\nassert solution('10 10 1') == '0'\nassert solution('-10 -10 1') == '0'\nassert solution('-10 -10 0') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('4 8 2') == '3'\nassert solution('4 10 1') == '0'\nassert solution('4 8 2') == '3'\nassert solution('4 0 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2') == '3'\nassert solution('3 3 5') == '3'\nassert solution('10 1 1000') == '0'\nassert solution('10 1 1000000000') == '0'\nassert solution('11 10 1') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 2') == '3'\nassert solution('4 2 2') == '3'\nassert solution('10 2 2') == '3'\nassert solution('10 10 10') == '0'\nassert solution('0 1 1') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8 2') == '3'"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('21') == 'Christmas Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Christmas'"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n------------------------------------------------------------------------------------------------------------------------"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve Eve'\nassert solution('23') == 'Christmas Eve'\nassert solution('22') == 'Christmas Eve Eve'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Christmas'\nprint(\"Test 1 passed.\")\n\nassert solution(stdin) == 'Christmas Eve'\nprint(\"Test 2 passed.\")\n\nassert solution(stdin) == 'Christmas Eve Eve'\nprint(\"Test 3 passed.\")\n\nassert solution(stdin) == 'Christmas Eve Eve Eve'\nprint(\"Test 4 passed.\")\n\nassert solution(stdin) == 'Christmas Eve Eve Eve Eve'\nprint(\"Test 5 passed.\")"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('10') == 'X'\nassert solution('24') == 'X Eve'\nassert solution('25') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Christmas\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Christmas\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n25\n'''\n) == '''\nChristmas\n'''\n\nassert solution(\n'''\n23\n'''\n) == '''\nXmas Eve Eve\n'''\n\nassert solution(\n'''\n23\n'''\n) == '''\nXmas Eve Eve Eve\n'''\n\nassert solution(\n'''\n22\n'''\n) == '''\nXmas Eve\n'''\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('4') == '2'\nassert solution('100') == '1'\nassert solution('100' * 100) == '2'\nassert solution('1' * 100) == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n7\n'''\n) == '4'\nassert solution(\n'''\n11\n'''\n) == '8'\nassert solution(\n'''\n2\n'''\n) == '1'\nassert solution(\n'''\n1\n'''\n) == '1'\nassert solution(\n'''\n1000000\n'''\n) == '1'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"45\") == \"5\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('8') == '4'\nassert solution('9') == '3'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '3'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '4'\nassert solution('3') == '0'\nassert solution('8') == '4'\nassert solution('2') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"11\") == \"2\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('2 2 2 2') == 'Yes'\nassert solution('3 3 3 3') == 'No'\nassert solution('4 7 9 3') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 7 9 5\") == \"No\"\nassert solution(\"2 6 3 6\") == \"Yes\"\nassert solution(\"2 6 3 7\") == \"No\"\nassert solution(\"1 5 6 2\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('1 2 3 3') == 'Yes'\nassert solution('1 2 3 4 5') == 'No'\nassert solution('1 2 3 4 5 6') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('3 8 2 4') == 'No'\nassert solution('1 2 1 3') == 'No'\nassert solution('5 6 3 4') == 'Yes'\nassert solution('7 3 4 5') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 6 2') == 'No'\nassert solution('7 7 7 7') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('1 2 2 1') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 7 9 3''') == 'Yes'\nassert solution('''4 7 9 3''') == 'Yes'\nassert solution('''1 1 1 1''') == 'No'\nassert solution('''1 1 1 1''') == 'No'\nassert solution('''5 10 11 0''') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 4') == 'No'\nassert solution('5 2 4 3') == 'Yes'\nassert solution('5 2 4 4') == 'No'\nassert solution('6 1 2 8') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 7 9 3''') == 'Yes'\nassert solution('''4 7 9 4''') == 'No'\nassert solution('''4 7 9 4''') == 'No'\nassert solution('''4 7 9 4''') == 'No'\nassert solution('''4 7 9 4''') == 'No'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('hello world') == ''\nassert solution('The quick brown fox jumps over the lazy dog') == 'TQJ'\nassert solution('Coding Ninjas') == 'CJN'\nassert solution('Coding Ninjas ') == 'CJN'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"ab cd ef gh ij\") == \"ABC\"\nassert solution(\"gk oo pq rs tu vw xy za\") == \"GK\"\nassert solution(\"njy vw jw kq uy pf mx bf qx jh qz bb qd\") == \"JKUQB\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder  beginner contest') == 'ABC'\nassert solution('atcoder  Beginner contest') == 'ABC'\nassert solution('atcoder  Beginner contest') == 'ABC'\nassert solution('atcoder  Beginer contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('a bc a') == 'ABA'\nassert solution('a b c') == 'ABC'\nassert solution('atcoder') == 'ATA'\nassert solution('abc') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('a b c') == 'ABC'\nassert solution('a b c d') == 'ABCD'\nassert solution('a b c d e') == 'ABCDE'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"\") == \"\"\nassert solution(\"C++\") == \"\"\nassert solution(\"C\") == \"C\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('a') == 'a'\nassert solution('a b') == 'aB'\nassert solution('a b c') == 'aBC'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"100 100 100\") == \"No\"\nassert solution(\"1000000 1 1000000\") == \"Yes\"\nassert solution(\"5 7 9\") == \"No\"\nassert solution(\"12 345 678\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 80') == 'No'\nassert solution('10 10 10') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('100 100 100') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''50 100 120''') == 'Yes'\nassert solution('''50 100 120''') == 'No'\nassert solution('''10 100 10''') == 'Yes'\nassert solution('''5000 100 500''') == 'Yes'\nassert solution('''1 2 3''') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 3') == 'Yes'\nassert solution('2 4 10') == 'No'\nassert solution('2 2 2') == 'Yes'\nassert solution('5 9 5') == 'No'\nassert solution('7 6 5') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 10 100\") == \"No\"\nassert solution(\"5 10 110\") == \"No\"\nassert solution(\"5 10 100\") == \"Yes\"\nassert solution(\"5 10 100\") == \"Yes\"\nassert solution(\"2 5 7\") == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('50 100 120') == 'Yes'\nassert solution('50 500 120') == 'No'\nassert solution('50 1 120') == 'No'\nassert solution('50 500 200') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 100') == 'No'\nassert solution('50 100 50') == 'Yes'\nassert solution('50 50 50') == 'No'\nassert solution('50 50 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yes'\n\"\"\""
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'No'\nassert solution('10 3 100') == 'No'\nassert solution('50 100 120') == 'Yes'\nassert solution('2 3 4') == 'Yes'\nassert solution('1000 1000 10') == 'Yes'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"4 8\\n7 9 8 9\\n8 9 7 8 9\\n9 7 8 9 7 8 9\") == \"5\"\nassert solution(\"4 8\\n6 5 6 4\") == \"1\"\nassert solution(\"4 8\\n5 3 5 6 4\") == \"2\"\nassert solution(\"4 8\\n1 2 1 3 4\") == \"0\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 8') == '5'\nassert solution('1 1') == '1'\nassert solution('5 4') == '5'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('10 10 10 10 10') == '5'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 8\") == \"5\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == 5\nassert solution(\"4 8\\n9 8 7 9\") == 1\nassert solution(\"4 8\\n9 8 9 9\") == 0\nassert solution(\"6 3\\n2 4 3 5 6 7\") == 3\nassert solution(\"6 3\\n2 4 3 5 6\") == 2\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8') == '5'\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nprint('Test success!')\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n7 9 8 9\\n\") == \"5\"\nprint(solution(\"4 8\\n7 9 8 9\\n\"))\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3 4 5') == '5 4 3 2 1'\nassert solution('2 4 3 1') == '1 2 4 3'\nassert solution('4 3 2 1') == '1 2 3 4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('2 1 3 4') == '4 3 2 1'\nassert solution('3 4 2 1') == '4 3 2 1'\nassert solution('2 3 4 1') == '1 3 4 2'\nassert solution('4 2 1 3') == '1 3 2 4'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '4 2 1 3'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2\\n2') == '2\\n2\\n2'\nassert solution('4\\n4\\n4\\n4') == '4\\n4\\n4\\n4'\nassert solution('2\\n1\\n2\\n3') == '3\\n2\\n1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"9748142991012908550986773\"\nprint(\"All test cases passed successfully!\")\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('5\\n1 2 3 4 5') == '5 2 3 1'\nassert solution('6\\n1 2 3 4 5 6') == '6 2 3 1'\nassert solution('7\\n1 2 3 4 5 6 7') == '7 2 3 1'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '8 2 3 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('2 3 1') == '3 2 1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1\\n2\") == \"2 1\"\nassert solution(\"2\\n1\") == \"1 2\"\nassert solution(\"2\\n2\") == \"2 1\"\nassert solution(\"2\\n3\") == \"3 1\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4 5\") == \"5 4 3 2 1\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 4\") == \"No\"\nassert solution(\"10 4\\n4 5 6\") == \"Yes\"\nassert solution(\"10 3\\n4 5 6\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 2\") == \"No\"\nassert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 2\") == \"No\"\nassert solution(\"10 3\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 3\\n4 5 6\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3''') == 'Yes'\nassert solution('''5 2''') == 'No'\nassert solution('''3 1''') == 'No'\nassert solution('''100 1''') == 'No'\nassert solution('''1 0''') == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('10 5\\n4 5 6') == 'No'\nassert solution('3 3\\n3 2 1') == 'No'\nassert solution('3 3\\n3 2 1') == 'Yes'\nassert solution('1 1\\n1') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\n'''\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 5 6') == 'Yes'\nassert solution('3 3\\n3 4 5 6') == 'No'\nassert solution('2 3\\n3 5 6') == 'No'\nassert solution('2 3\\n1 2 3') == 'No'\n\n\"\"\""
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 3') == 'Yes'\nassert solution('10 3') == 'No'\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"3\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"6\"\nassert solution(\"abaaba\") == \"6\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"6\"\nassert solution(\"abaabab\") == \"6\"\nassert solution(\"abaaba\") == \"6\"\nassert solution(\"aabab\") == \"4\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"0\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"0\"\nassert solution(\"abaaba\") == \"2\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ababab\") == \"ababab\"\nassert solution(\"abaababaab\") == \"abaababaab\"\nassert solution(\"xyxxxyxxxyzxyzxyzxy\") == \"xyxxxyxxxyzxyzxyzxy\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"aaabaa\") == \"aaabaa\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('ababab') == '4'\nassert solution('abcabcabc') == '0'\nassert solution('abcabc') == '3'\nassert solution('xyxyxyxy') == '0'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '0'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcdef') == '0'\nassert solution('ababab') == '2'\nassert solution('abcdef') == '0'\nassert solution('abcde') == '1'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abcdef\") == \"0\"\nassert solution(\"xyxyxyxyxyxyxyxy\") == \"12\"\nassert solution(\"xyx\") == \"3\"\nassert solution(\"xx\") == \"0\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('acb') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'Yes'\nassert solution('abac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"No\"\nprint(\"Testcases passed\")\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aac\") == \"Yes\"\nassert solution(\"abac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bac') == 'Yes'\n\n'''"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\n\"\"\""
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nprint(solution('bac'))\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('cba') == 'Yes'\nassert solution('cbac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nprint(\"OK\")\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nassert solution('''3\n1 3\n4 2\n3 4 1\n''') == '9'\nassert solution('''4\n1 3\n4 2\n3 4 1\n2 3 4\n''') == '3'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\n\nassert solution('''\\\n1\n1000000\n1000000\n''') == '757402647'\n\nassert solution('''\\\n2\n1 3\n4 2\n''') == '20'\n\nassert solution('''\\\n2\n1 1000000\n1 1000000\n''') == '757402647'\n\nassert solution('''\\\n10\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n''') == '6848596859723688'"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3\\n4 2\") == \"646\"\nassert solution(\"3\\n1 3\\n4 2\") == \"20\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"1\\n100000\\n100000\") == \"0\"\nassert solution(\"4\\n1 3\\n4 2\") == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"\nassert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\""
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"\nassert solution(\"2\\n2 3\\n4 2\\n\") == \"5\"\nassert solution(\"2\\n2 3\\n4 2\\n\") == \"5\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n3\\n') == '3'\nassert solution('2\\n3\\n') == '4'\nassert solution('1\\n5\\n') == '5'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '7'\nassert solution('3\\n1\\n') == '2'\nassert solution('4\\n1\\n') == '8'\nassert solution('5\\n1\\n') == '9'\n\n\"\"\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n7\\n2 1\\n8 4\\n5 3\\n9 7\\n9 7\\n7') == 17\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1') == '7'\nassert solution('7 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\nassert solution('7 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\n\n\n\n'''\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 4 5''') == '7'\nassert solution('''2 5 4 2 6 3 1''') == '7'\nassert solution('''2 1''') == '17'\nassert solution('''6 5''') == '17'\nassert solution('''2 1''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '7'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'\n\n\n\n'''\n\nimport sys"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '0'\nassert solution('3\\n2\\n2') == '6'\nassert solution('4\\n2\\n2\\n2') == '4'\nassert solution('7\\n2\\n2') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1') == '0'\nassert solution('4\\n2\\n5\\n4\\n2\\n1\\n1\\n1\\n2\\n1') == '10'\nassert solution('3\\n2\\n1') == '7'\nassert solution('5\\n2\\n5\\n4\\n2\\n1\\n1\\n1\\n2\\n1') == '17'\nassert solution('9\\n2\\n8\\n4\\n5\\n7\\n1\\n2\\n1\\n2\\n1') == '22'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '7'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5 4') == '7'\nassert solution('7 4 8') == '17'\nassert solution('9 4 8') == '17'\nassert solution('9 2') == '17'\nassert solution('5 1 4') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3 5''') == '17'\nassert solution('''2 5 4 2 6 3 1''') == '7'\nassert solution('''2 1''') == '7'\nassert solution('''6 5''') == '17'\nassert solution('''2 1''') == '7'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == '1'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '2'\nassert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '3'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n2 1''') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n2 3\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n4 6\\n5 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n') == '1'\nassert solution('100\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n4 11\\n4 12\\n4 13\\n4 14\\n4 15\\n4 16\\n4 17\\n4 18\\n4 19\\n4 20\\n') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12') == '0'\nassert solution('1\\n1\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100\\n100') == '1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100\\n100') == '0'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '1'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n4 6\n4 7\n5 6\n5 7\n5 8\n6 8\n6 9\n7 9\n7 10\n8 10\n8 11\n8 12\n9 10\n9 11\n9 12\n9 13\n10 11\n10 12\n10 13\n10 14\n10 15\n11 15\n11 16\n12 16\n12 17\n13 17\n13 18\n14 18\n14 19\n14 20\n14 21\n14 22\n15 22\n15 23\n15 24\n16 24\n16 25\n17 25\n17 26\n18 26\n18 27\n19 27\n19 28\n20 28\n20 29\n20 30\n20 31\n20 32\n20 33\n21 32\n21 33\n21 34\n22 34\n22 35\n22 36\n22 37\n22 38\n23 37\n23 38\n23 39\n24 39\n24 40\n25 40\n25 41\n26 41\n26 42\n27 42\n27 43\n28 43\n28 44\n29 44\n29 45\n30 45\n30 46\n31 46\n31 47\n32 47\n32 48\n33 48\n33 49\n34 49\n34 50\n35 50\n35 51\n36 51\n36 52\n37 52\n37 53\n38 53\n38 54\n39 54\n39 55\n40 55\n40 56\n41 56\n41 57\n42 57\n42 58\n43 58\n43 59\n44 59\n44 60\n45 60\n45 61\n46 61\n46 62\n47 62\n47 63\n48 63\n48 64\n49 64\n49 65\n50 65\n50 66\n51 66\n51 67\n52 67\n52 68\n53 68\n53 69\n54 69\n54 70\n55 70\n55 71\n56 71\n56 72\n57 72\n57 73\n58 73\n58 74\n59 74\n59 75\n60 75\n60 76\n61 76\n61 77\n62 77\n62 78\n63 78\n63 79\n64 79\n64 80\n65 80\n65 81\n66 81\n66 82\n67 82\n67 83\n68 83\n68 84\n69 84\n69 85\n70 85\n70 86\n71 86\n71 87\n72 87\n72 88\n73 88\n73 89\n74 89\n74 90\n75 90\n75 91\n76 91\n76 92\n77 92\n77 93\n78 93\n78 94\n79 94\n79 95\n80 95\n80 96\n81 96\n81 97\n82 97\n82 98\n83 98\n83 99\n84 99\n84 100\n85 100\n85 101\n86 101\n86 102\n87 102\n87 103\n88 103\n88 104\n89 104\n89 105\n90 105\n90 106\n91 106\n91 107\n92 107\n92 108\n93 108\n93 109\n94 109\n94 110\n95 110\n95 111\n96 111\n96 112\n97 112\n97 113\n98 113\n98 114\n99 114\n99 115\n100 115\n100 116\n101 116\n101 117\n102 117\n102 118\n103 118\n103 119\n104 119\n104 120\n105 120\n105 121\n106 121\n106 122\n107 122\n107 123\n108 123\n108 124\n109 124\n109 125\n110 125\n110 126\n111 126\n111 127\n112 127\n112 128\n113 128\n113 129\n114 129\n114 130\n115 130\n115 131\n116 131\n116 132\n117 132\n117 133\n118 133\n118 134\n119 134\n119 135\n120 135\n120 136\n121 136\n121 137\n122 137\n122 138\n123 138\n123 139\n124 139\n124 140\n125 140\n125 141\n126 141\n126 142\n127 142\n127 143\n128 143\n128 144\n129 144\n129 145\n130 145\n130 146\n131 146\n131 147\n132 147\n132 148\n133 148\n133 149\n134 149\n134 150\n135 150\n135 151\n136 151\n136 152\n137 152\n137 153\n138 153\n138 154\n139 154\n139 155\n140 155\n140 156\n141 156\n141 157\n142 157\n142 158\n143 158\n143 159\n144 159\n144 160\n145 160\n145 161\n146 161\n146 162\n147 162\n147 163\n148 163\n148 164\n149 164\n149 165\n150 165\n150 166\n151 166\n151 167\n152 167\n152 168\n153 168\n153 169\n154 169\n154 170\n155 170\n155 171\n156 171\n156 172\n157 172\n157 173\n158 173\n158 174\n159 174\n159 175\n160 175\n160 176\n161 176\n161 177\n162 177\n162 178\n163 178\n163 179\n164 179\n164 180\n165 180\n165 181\n166 181\n166 182\n167 182\n167 183\n168 183\n168 184\n169 184\n169 185\n170 185\n170 186\n171 186\n171 187\n172 187\n172 188\n173 188\n173 189\n174 189\n174 190\n175 190\n175 191\n176 191\n176 192\n177 192\n177 193\n178 193\n178 194\n179 194\n179 195\n180 195\n180 196\n181 196\n181 197\n182 197\n182 198\n183 198\n183 199\n184 199\n184 200\n185 200\n185 201\n186 201\n186 202\n187 202\n187 203\n188 203\n188 204\n189 204\n189 205\n190 205\n190 206\n191 206\n191 207\n192 207\n192 208\n193 208\n193 209\n194 209\n194 210\n195 210\n195 211\n196 211\n196 212\n197 212\n197 213\n198 213\n198 214\n199 214\n199 215\n200 215\n200 216\n201 216\n201 217\n202 217\n202 218\n203 218\n203 219\n204 219\n204 220\n205 220\n205 221\n206 221\n206 222\n207 222\n207 223\n208 223\n208 224\n209 224\n209 225\n210 225\n210 226\n211 226\n211 227\n212 227\n212 228\n213 228\n213 229\n214 229\n214 230\n215 230\n215 231\n216 231\n216 232\n217 232\n217 233\n218 233\n218 234\n219 234\n219 235\n220 235\n220 236\n221 236\n221 237\n222 237\n222 238\n223 238\n223 239\n224 239\n224 240\n225 240\n225 241\n226 241\n226 242\n227 242\n227 243\n228 243\n228 244\n229 244\n229 245\n230 245\n230 246\n231 246\n231"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\n\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\n\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == '1'\n\n'''\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7') == '0'\nassert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == answer(stdin)\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\nYou may assume that the input is valid\nEach test case is valid\n'''"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 7') == '10'\nassert solution('3 12') == '15'\nassert solution('4 1000000000') == '1999999999'\nassert solution('7 97') == '1000000001'\nassert solution('1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'\n\nassert solution('''\n1 1\n2 3\n3 5\n4 7\n5 9\n6 11\n7 13\n8 15\n9 17\n10 19\n''') == '1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n'\n\nassert solution('''\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '1\\n3\\n5\\n7\\n9\\n'\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''9\n4 7\n3 4\n2 1\n1 1000000000\n1 1000000000\n2 1\n1 1000000000\n1 1000000000''') == '100\\n150\\n1999999999\\n101\\n1000000001\\n1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n3 7''') == '10'\nassert solution('''4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '15'\nassert solution('''2 3\n1 2\n2 3''') == '1'\nassert solution('''100000000000 1000000000\n1 1''') == '1'\nassert solution('''1000000000 1000\n1 1''') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''2 1\n1 1000000000\n1000100000 1000000000''') == '1'\nassert solution('''7 97\n1000000000 1000000000\n1000100000 1000000000''') == '1'\nassert solution('''6 7\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''7 97\n1000000000 1000000000\n1000100000 1000000000''') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\"\"\\\n1\n2\n3\n4\n5\n6\n\"\"\") == \"6\"\nassert solution(\"\"\"\\\n1\n2\n3\n4\n5\n6\n\"\"\") == \"7\"\nassert solution(\"\"\"\\\n1\n2\n3\n4\n5\n6\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2'\nassert solution('1 2 3 2 1 3 2') == '2 1'\nassert solution('1 1 1 1 1 1') == '2'\nassert solution('1 2 3 4 5 6 7 8 9') == '0'\nassert solution('1 2 3 4 5 6 7 8 9') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '2 1 3 2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2''') == '''2'''\nassert solution('''5 3''') == '''3'''\nassert solution('''1 1''') == '''1'''\nassert solution('''2 2''') == '''2'''\nassert solution('''1 1 1''') == '''1'''\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2\\n'\nassert solution('7 4\\n2 3 3 1 1 2 1 2 3 3') == '2\\n2 1\\n'\n\n\n'''\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\n\n\n\n---------------------------------------------------------------------------------"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''7 3\n1 2 3 2 1 3 2''') == '2'\nassert solution('''8 4\n1 2 3 2 1 3 2 4''') == '3'\nassert solution('''7 4\n1 2 3 2 1 3 2 4''') == '2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, k = [int(i) for i in stdin.split()]\nli = [int(i) for i in stdin.split()]"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\""
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"7 2\n1 2 3 2 1 3 2\n\"\"\") == '2\\n2 1\\n'\nassert solution(\n\"\"\"10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == '3\\n1 3 2\\n'\nassert solution(\n\"\"\"100 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n\"\"\") == '20\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"0\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == '263'\nassert solution('''2\n2\n1 2\n1 2''') == '1'\nassert solution('''7\n7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7''') == '14'\nassert solution('''10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10''') == '60'\nassert solution('''20\n20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n1 20\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\nassert solution('''2\n2\n1 2\n1 3\n2\n1 1\n2 2\n2\n2\n1 3\n2\n1 1\n1 2\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n1 1\n1 1\n2 2\n2 1\n2 2\n1 2\n2\n1 3\n2\n1 3\n2\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '265'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 6\\n1 7\\n1 5\\n2') == '263'\nassert solution('4\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '271'\nassert solution('2\\n1') == '0'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n3\\n1 6\\n1 7\\n1 5\\n2') == '263'\n\n\n\"\"\""
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n\nassert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n\nassert solution('''\n2\n1\n1\n''') == '1'\n\nassert solution('''\n2\n1\n2\n''') == '2'\n\nassert solution('''\n3\n1\n2\n3\n''') == '3'"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''dffbccddbccdgdehghdhhkhhhkkkkkkkkkkkkkkkkkkkkkkk''') == '6'\nassert solution('''dffbccddbccdgdehghdhhkhhhkkkkkkkkkkkkkkkkkkkkkkk''') == '5'\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == '26'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abacaba''') == '''3'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''a''') == '''1'''\nassert solution('''b''') == '''1'''\nassert solution('''a''') == '''1'''\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''hacekfdowefhkocsfkpkjcw\n''') == '3'\nassert solution('''bcdefghijklmnopqrstuvwxyz''') == '26'\nassert solution('''defghiouzklmnpqrstuvwxyza''') == '6'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abacaba''') == 'a'\nassert solution('''dfcbbcfeeedbaea''') == 'ef'\nassert solution('''abcdef''') == 'abc'\nassert solution('''fzvjslajgtapxlqbhbvxgtywfwzgqheqgjywfwqdplmrfjlqzvqnrtmjvjvfmzkfvmhmpvnxuzacadqzrdzjosijqwuvrfzkxjqdvtgfhgtqobxjckxwzdgkmzdfbqzfzdzvqjgjgqxgvrdwjqxqdzfvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqjgjqhfzdvqjgjqzvqj"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''zfszgmnqzsxl''') == '6'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''fbbcdfbeeesba''') == '1'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('rqpvwzgzlgxuvygqpjgxgxzgqjvqzgqpwvqxgxzqgqpvwgxgxzqpvwgxgxqpvwgxgxzgqpvwgxgqpvwgxqpvwgxgxqpvwgxgxzqpvwgxgxzqpvwgxgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzgqpvwgxgxzg"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"codeforces\") == \"coder\"\nassert solution(\"abcabc\") == \"abc\"\nassert solution(\"dfcbbcfeeedbaea\") == \"e\"\nassert solution(\"aaabbbcccdccbdddaa\") == \"b\"\nassert solution(\"bbbbbbbbbbbbbbbbb\") == \"b\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''f''') == '1'\nassert solution('''f''') == '1'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacaba') == 'aba'\nassert solution('dfcbbcfeeedbaea') == 'c'\nassert solution('dfcbbcfeeedbaea') == 'c'\nassert solution('dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567481089''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n998236471\\n247789563\\n567481089'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n412345678''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n998236471\\n247789563\\n567481089'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n561389789''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n998236471\\n247789563\\n567481089'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n412345678''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n998236471\\n247789563\\n567481089'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n0''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n0'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n0\n134474384\n921336105\n568646819\n59150835\n32162634\n147470413\n8815084\n359130258\n621674726\n996637158''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n0\\n134474384\\n921336105\\n568646819\\n59150835\\n32162634\\n147470413\\n8815084\\n359130258\\n621674726\\n996637158'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n0\n134474384\n921336105\n568646819\n59150835\n32162634\n147470413\n8815084\n359130258\n621674726\n996637158\n174823388\n489921095\n493925293\n636184493\n739181461\n612624293\n470040359\n878269364''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n0\\n134474384\\n921336105\\n568646819\\n59150835\\n32162634\\n147470413\\n8815084\\n359130258\\n621674726\\n996637158\\n174823388\\n489921095\\n493925293\\n636184493\\n739181461\\n612624293\\n470040359\\n878269364'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('sudoku.txt').read()) == open('solution.txt').read()\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('123456789') == '987654321'\nassert solution('979410761') == '975314628'\nassert solution('637162843') == '243145874'\nassert solution('736676837') == '964780149'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9') == '154873396'\nassert solution('1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9') == '336592714'\nassert solution('1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9') == '729641835'\nassert solution('1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9') == '975314628'\nassert solution('1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9'\n    '2 3 4 5 6 7 8 9 1'\n    '3 4 5 6 7 8 9 1 2'\n    '4 5 6 7 8 9 1 2 3'\n    '5 6 7 8 9 1 2 3 4'\n    '6 7 8 9 1 2 3 4 5'\n    '7 8 9 1 2 3 4 5 6'\n    '8 9 1 2 3 4 5 6 7'\n    '9 1 2 3 4 5 6 7 8'\n    '1 2 3 4 5 6 7 8 9') == '412968357'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"404929728\\n831739561\\n581286248\\n501221876\\n358875911\\n214899211\\n542639481\\n911899265\\n879424341\") == \"404929728\\n581286248\\n501221876\\n358875911\\n214899211\\n542639481\\n911899265\\n879424341\"\nassert solution(\"839035038\\n489864458\\n928123557\\n883726004\\n752689436\\n853950802\\n219489949\\n332229807\\n578722515\") == \"839035038\\n489864458\\n928123557\\n883726004\\n752689436\\n853950802\\n219489949\\n332229807\\n578722515\"\nassert solution(\"729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n100000005\") == \"729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n100000005\"\nassert solution(\"1037203095\\n282691492\\n938410539\\n818386156\\n526631336\\n365589195\\n903159903\\n919133569\\n421595139\") == \"1037203095\\n282691492\\n938410539\\n818386156\\n526631336\\n365589195\\n903159903\\n919133569\\n421595139\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('154873296') == '154873396'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '863725145'\nassert solution('975314628') == '979314628'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3 6 8 -1 9 4\"\nassert solution(\"4 5\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3 6 8 -1 9 4\"\nassert solution(\"3 2\\n1 1\\n2 2\") == \"1 -1\"\nassert solution(\"3 2\\n1 1\\n2 2\") == \"1 -1\"\nassert solution(\"10 1\\n2 1\") == \"-1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == input\n\n\n>>> import sys\n>>> sys.stdin = open(\"input.txt\")\n>>> solution(sys.stdin.read())\n5\n>>> sys.stdin = open(\"input2.txt\")\n>>> solution(sys.stdin.read())\n9\n>>> sys.stdin = open(\"input3.txt\")\n>>> solution(sys.stdin.read())\n7\n>>> sys.stdin = open(\"input4.txt\")\n>>> solution(sys.stdin.read())\n4\n>>> sys.stdin = open(\"input5.txt\")\n>>> solution(sys.stdin.read())\n3\n>>> sys.stdin = open(\"input6.txt\")\n>>> solution(sys.stdin.read())\n2\n>>> sys.stdin = open(\"input7.txt\")\n>>> solution(sys.stdin.read())\n8\n>>> sys.stdin = open(\"input8.txt\")\n>>> solution(sys.stdin.read())\n6\n>>> sys.stdin = open(\"input9.txt\")\n>>> solution(sys.stdin.read())\n-1\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n4 3\n4 6\n4 8\n4 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n4 3\n4 6\n4 8\n4 9\n2 6\n2 8\n2 9\n5 6\n5 8\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n4 3\n4 6\n4 8\n4 9\n2 6\n2 8\n2 9\n5 6\n5 8\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n4 3\n4 6\n4 8\n4 9\n2 6\n2 8\n2 9\n5 6\n5 8\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6\n8 9\n9 6\n9 8\n9 9\n4 7\n4 9\n5 7\n5 9\n6 7\n6 9\n7 8\n7 9\n8 6"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n'\n'1 1 1 3 5 3 5 7\\n'\n'3 1\\n'\n'1 5\\n'\n'3 4\\n'\n'7 3\\n'\n'1 8\\n'\n'1 9\\n') == '3\\n6\\n8\\n-1\\n9\\n4'\n\nassert solution('6\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'1 1 1 1 1 1 1\\n'\n'"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\"\"\") == \"\"\"3\n6\n8\n-1\n9\n4\"\"\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n4 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n4 2\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n4 2\n6 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n4 2\n6 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2\\n1\\n'\nassert solution('4\\n1 1 1 4\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 4\\n4 1\\n4 2\\n4 3\\n4 4\\n5 1\\n5 2\\n5 3\\n5 4\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n7 4\\n8 1\\n8 2\\n8 3\\n8 4\\n9 1\\n9 2\\n9 3\\n9 4\\n') == '3\\n4\\n1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '45\\n50\\n42\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES\\nYES\\nNO\\nNO\\nYES\\n'\n\nassert solution('''1\n1 1 1 1\n2 2 2 2\n2 2 2 2\n2 2 2 2\n''') == 'NO\\n'\n\nassert solution('''1\n1 1 1 1\n2 2 2 2\n3 3 3 3\n3 3 3 3\n''') == 'YES\\n'\n\nassert solution('''1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO\\n'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO\\nNO\\nNO\\nNO\\nYES\\n'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\n\nassert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\nassert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution('''3\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\n\n'''\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3 2 1\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n'''"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''3\n2 1 3 2\n3 2 1 2\n5 1 4 2''') == 'YES'\nassert solution('''3\n2 1 3 2\n3 2 1 2\n5 1 4 2''') == 'NO'\nassert solution('''7\n1 5 3 2 4 6 7\n3 2 1 7 4 4\n3 2 1 3 1 7\n3 2 1 3 2 1\n7 1 5 3 2 6\n1 5 3 2 7\n''') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES\\nYES\\nNO\\nNO\\nYES'\nassert solution('''10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == 'YES\\nNO\\nYES\\nNO\\nNO\\nYES'\nassert solution('''10\n5 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == 'YES\\nYES\\nNO\\nNO\\nNO\\nYES'\nassert solution('''10\n5 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nYES'\nassert solution('''10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nYES'\n'''"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 3 2 2\") == \"YES\"\nassert solution(\"3 3 2 1\") == \"YES\"\nassert solution(\"5 3 2 8\") == \"YES\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 4\n1 2 3 4\n\"\"\") == \"\"\"3 4 6 5\"\"\"\n\nassert solution(\n\"\"\"5 5\n2 1 5 3 5\n\"\"\") == \"\"\"9 8 12 6 8\"\"\"\n\nassert solution(\n\"\"\"2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"\"\"3 3\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\nassert solution(\"5 4\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '3 4 6 5'\nassert solution('2 1 5 3 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('3 4') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('5 10\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\"\"(3, 4, 6, 5)\"\"\"\nassert solution(input2) == \"\"\"(9, 8, 12, 6, 8)\"\"\"\nassert solution(input3) == \"\"\"(3, 3)\"\"\"\nassert solution(input4) == \"\"\"(3, 3, 3)\"\"\"\nassert solution(input5) == \"\"\"(3, 3, 3, 3)\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'\nassert solution('3 10\\n1 2 1 3 1 2 3 2 1 2\\n') == '5 4\\n'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10') == '9 8 12 6 8'\nassert solution('5 5') == '3 3'\nassert solution('4 4') == '3 4 6 5'\nassert solution('10 10') == '9 9 9 9 9 9 9 9 9 9'\nassert solution('100 100') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '[3, 4, 6, 5, 8]'\n\n\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n\"\"\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"\n\n\n-----Best Practice----\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n\"\"\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''2 5\n1 4\n2 1\n3 4\n2 1\n1 3\n1 2''') == 'NO\\nNO'\n'''"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('8 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'NO\\n'\nassert solution('8 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'NO\\nNO\\n'\nassert solution('8 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\n'\nassert solution('8 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\n'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''2 3\n2 4\n1 2''') == 'YES'\nassert solution('''1 2\n1 3\n1 4''') == 'YES'\nassert solution('''1 2\n1 3\n2 3\n1 4''') == 'NO'\nassert solution('''1 2\n1 3\n2 3\n1 4\n2 4''') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\n\"\"\""
    }
]