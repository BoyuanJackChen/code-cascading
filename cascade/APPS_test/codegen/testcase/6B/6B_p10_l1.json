[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '8\\n' +\n    '1 2\\n' +\n    '2 3\\n' +\n    '3 4\\n' +\n    '4 5\\n' +\n    '4 6\\n' +\n    '3 7\\n' +\n    '3 8') == '5'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == '5'\n\nassert solution(\n    \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == '1 8 6'\n\nassert solution(\n    \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == '1 8 6'\n\nassert solution(\n    \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == '1 8 6'\n\nassert solution(\n    \"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == '1 8 6'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 5\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n2 4\n2 6\n2 7\n3 4\n3 8\n4 5\n5 7\n6 8\n8 9\n''') == '8'\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n2 4\n2 6\n2 7\n3 4\n3 8\n4 5\n5 7\n6 8\n8 9\n''') == '1 8 6'\nassert solution('''10\n1 2\n2 3\n2 4\n2 5\n3 4\n3 8\n4 5\n5 7\n6 8\n8 9\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 6\n''') == '1 8 6'\n\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 6\n5 4\n''') == '5 4 4'\n\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 6\n5 4\n''') == '1 8 6'\n\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 7\n6 7\n6 8\n8 9\n8 10\n9 10\n''') == '8'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '1 8 6'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '2 3 4'\nassert solution(input()) == '2 3'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(f\"Correct solution is '{expected}'\")\n\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n2 5') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n2 5\\n2 6') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n2 5\\n2 6\\n2 7') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n2 5\\n2 6\\n2 7\\n2 8') == '5\\n1 8 6'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 1'\nassert solution('1 2') == '1 1'\nassert solution('1 2 1') == '1 1'\nassert solution('1 2 1 1') == '1 1'\nassert solution('1 2 1 1 1') == '1 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n1 1 2 1 2 4 1 4 1 4 1 4 1 4 1') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '20 8'\n\"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '20 8'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    r\"\"\"\n        10\n        10 2 8 1 2 4 1 20 4 5\n    \"\"\") == r\"\"\"\n        20 8\n    \"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\nassert solution('''2\n1 2''') == '1 2'\n'''\nassert solution('''3\n1 2 3''') == '3 1'\n'''\nassert solution('''4\n1 2 3 4''') == '1 3'\n'''\nassert solution('''5\n1 2 3 4 5''') == '1 3'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    r = []\n    for i in l:\n        if i in r:\n            r.remove(i)\n        else:\n            r.append(i)\n    for i in l:\n        if i in r:\n            r.remove(i)\n    return''.join(str(i) for i in r)\nprint(solution('''10\n10 2 8 1 2 4 1 20 4 5'''))\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"20 8\"\nassert solution(\"10\\n2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10\\n2 8 1 2 4 1 20 4 5\\n2 8 1 2 4 1 19 1 1\") == \"20 8\"\n\n\n\"\"\"\n\n\"\"\"\n\nAnswers:\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '2 1'\nassert solution('2 2 1') == '2 1'\nassert solution('2 2 1') == '2 1'\nassert solution('2 2 1') == '2 1'\nassert solution('2 2 1') == '2 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"1\\n1 2 3\") == \"3 1\"\nassert solution(\"1\\n1 2 3 4 5\") == \"1 2\"\nassert solution(\"2\\n1 2 3 4 5\") == \"2 1\"\nassert solution(\"1\\n1 2 3 4 5\") == \"1 2\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == \"24\"\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6') == '18'\nassert solution('1 2 3 4 5 6 7') == '24'\nassert solution('1 2 3 4 5 6 7 8') == '30'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\nassert solution('6 5 1\\n1 2 3 4 5 6\\n7 8 5 1 2 3 4\\n8 4 4 1 1 1 6\\n3 4 1 5 1 5 1') == '34'\nassert solution('1000000000 1000000000 1000000000 1000000000\\
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"24\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"5 2 2 2\") == \"\"\nassert solution(\"7 1 1 4\") == \"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom collections import Counter\n\nn, m, k = map(int, stdin.readline().split())\na = [list(map(int, stdin.readline().split())) for i in range(n)]\n\ncounter = Counter(sum(row[i] for row in a) % k for i in range(m))\n\nprint(max(counter.values()))\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(stdin.splitlines())) == stdin\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6'\nassert solution('3\\n2 2 2\\n') == '1'\nassert solution('4\\n1 2 4 3\\n') == '4'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\n\nfrom collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = Counter(a)\ncount.pop(-1)\n\nk = len(count)"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"1 2 4 3 2\") == \"LRLR\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"1 2 4 3 2\") == \"LRLR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('1 2 4 3 2') == '4'\nassert solution('2 2 2') == '1'\nassert solution('1 3 5 6 5 4 2') == '6'\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\nassert solution('''4\n1 2 4 3''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_len = 1\nstack = []\n\nfor i in range(n):\n    if len(stack) == 0:\n        stack.append(a[i])\n        continue\n\n    if stack[-1] > a[i]:\n        if len(stack) > max_len:\n            max_len = len(stack)\n        stack.append(a[i])\n        continue\n\n    stack.pop()"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"R\"\nassert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"2 2 1\") == \"RRR\"\nassert solution(\"2 2 1 3\") == \"RRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4 3 2\") == 4\nassert solution(\"1 3 5 6 5 4 2\") == 6\nassert solution(\"2 2 2\") == 1\nassert solution(\"1 2 4 3 2\") == 4\nassert solution(\"1 3 5 6 5 4 2\") == 6\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    1 4 4 7 4 1\n''') == '3'\n\nassert solution('''\n    5\n    2 2 5 2 5\n''') == '3'\n\nassert solution('''\n    4\n    1 3 3 7\n''') == '-1'\n\nassert solution('''\n    2\n    2 8\n''') == '3'\n\nassert solution('''\n    3\n    1 1 3 1\n''') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1 2 3') == '-1'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n2') == '-1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('1\\n2') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6\n1 4 4 7 4 1\n'''\n) == '3'\n\nassert solution(\n'''\n5\n2 2 5 2 5\n'''\n) == '3'\n\nassert solution(\n'''\n4\n1 3 3 7\n'''\n) == '-1'\n\nassert solution(\n'''\n2\n2 8\n'''\n) == '3'\n\nassert solution(\n'''\n6\n1 1 1 1 1 1\n'''\n) == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n4 4 4 7 4 1\\n2 2 5 2 5\\n1 3 3 7') == '3'\nassert solution('3\\n4 4 4 7 4 1\\n2 2 5 2 5\\n1 3 3 7') == '3'\nassert solution('3\\n4 4 4 7 4 1\\n2 2 5 2 5\\n2 3 4 4 5\\n1 3 3 7') == '3'\nassert solution('3\\n4 4 4 7 4 1\\n2 2 5 2 5\\n2 2 4 4 5\\n1 3 3 7') == '3'\nassert solution('3\\n4 4 4 7 4 1\\n2 2 5 2 5\\n2 3 4 4 5\\n2 1 3 4 5\\n1 3 3 7') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n3\\n') == '3'\nassert solution('1\\n2\\n3\\n') == '-1'\nassert solution('1\\n1\\n3\\n') == '-1'\nassert solution('2\\n2\\n3\\n') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 3\nassert solution('2\\n3') == -1\nassert solution('1\\n3') == -1\nassert solution('2\\n7') == -1\nassert solution('1\\n7') == -1\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''5\n2 2 5 2 5\n''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'\nassert solution('''2\n2 8\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\n5\n1 3 3 1 3\n''') == '-1'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '-1'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES'\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"YES\"\nassert solution(\"0 0 7 4\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 4 4''') == \"NO\"\nassert solution('''1 1 3 5''') == \"NO\"\nassert solution('''3 1 5 5''') == \"YES\"\nassert solution('''0 0 1000000 1000000''') == \"NO\"\nassert solution('''0 0 499999 1000000''') == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'NO'\n\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES'\n\nassert solution('''5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n\nassert solution('''0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000''') == 'YES'\n\nassert solution('''0 0 1000000 1000000\n0 0 499999 1000000\n999999 0 1000000 1000000\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'NO'\nassert solution('1 2 3 4\\n1 1 3 5\\n3 1 5 5') == 'NO'\nassert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5') == 'YES'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('0 0 1000000 1000000') == 'YES'\nassert solution('3 3 7 5') == 'NO'\nassert solution('5 2 10 5') == 'YES'\nassert solution('8 1 11 7') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'YES'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''0 0 4 6''') == 'YES'\nassert solution('''0 0 7 4''') == 'YES'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"1098\"\"\"\n) == \"\"\"20\"\"\"\n\nassert solution(\n\"\"\"10\"\"\"\n) == \"\"\"19\"\"\"\n\nassert solution(\n\"\"\"101\"\"\"\n) == \"\"\"1\"\"\"\n\nassert solution(\n\"\"\"10099\"\"\"\n) == \"\"\"1010\"\"\"\n\nassert solution(\n\"\"\"1205\"\"\"\n) == \"\"\"10\"\"\""
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1000') == '0'\nassert solution('1098') == '20'\nassert solution('1099') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('2') == '1'\nassert solution('20') == '19'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10099''') == '101'\nassert solution('''1000''') == '1'\nassert solution('''10''') == '9'\nassert solution('''5000''') == '998'\nassert solution('''100''') == '98'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('9') == '18'\nassert solution('8') == '17'\nassert solution('7') == '16'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('123') == '2'\nassert solution('987') == '19'\nassert solution('9997') == '20'\nassert solution('1098') == '20'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\nassert solution('10099') == '101'\nassert solution('100') == '101'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('10098') == '101'\nassert solution('1') == '1'\nassert solution('1099') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1001') == '20'\nassert solution('1009') == '19'\nassert solution('99981') == '20'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 0 0 2 4\\n') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n0\\n') == '1\\n'\nassert solution('3\\n2\\n3\\n3\\n2\\n1\\n') == '3\\n'\nassert solution('3\\n1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n5 0 0 2 4\n\"\"\") == \"\"\"5 3 1 2 4\"\"\"\nassert solution(\n\"\"\"7\n7 0 0 1 4 0 6\n\"\"\") == \"\"\"7 3 2 1 4 5 6\"\"\"\nassert solution(\n\"\"\"7\n7 4 0 3 0 5 1\n\"\"\") == \"\"\"7 4 2 3 6 5 1\"\"\"\nassert solution(\n\"\"\"5\n2 1 0 0 0\n\"\"\") == \"\"\"2 1 4 5 3\"\"\"\nassert solution(\n\"\"\"7\n2 1 0 0 1 4 0 6\n\"\"\") == \"\"\"7 4 2 3 1 6 5 1\"\"\"\n\n\"\"\"\nIf there are several answers, you can print any.\n\nIf n is even, the answer is the set of answers. If n is odd, you may print any answer, but you should print at least one answer.\n\nEach answer should be in a new line.\n\nFor example, if you print the following, it should be correct:\n\"\"\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n2\\n') == '1 2'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3'\nassert solution('''\n7\n2 1 0 0 6 1 2\n''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2 2 3''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\nassert solution('''5 2\n1 2 1 2 1''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"NO\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3') == 'NO'\nassert solution('5 2\\n2 1 1 2 1') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1') == 'YES\\n1 1 2 1 1'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES' or solution(stdin) == 'NO'\n\n\"\"\""
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('1 2 2 3') == 'YES'\nassert solution('2 1 2 1') == 'YES'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 13 2') == '2'\nassert solution('11 1000 7') == '3'\nassert solution('11 110 6') == '2'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''11 5 2''') == '1'\nassert solution('''11 5 1''') == '3'\nassert solution('''11 5 3''') == '5'\nassert solution('''10 10 10''') == '0'\nassert solution('''10 10 2''') == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"11 5 2\") == \"1\"\n\nassert solution(\n    \"11 5 1\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, x, y = list(map(int, stdin.split(\" \")))\nA = stdin.split(\" \")\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('0 0 0') == None\nassert solution('1 0 0') == None\nassert solution('1 1 1') == None\nassert solution('1 1 0') == None\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_out\n\"\"\"\n\n\"\"\"\n\n.\n.\n.\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('111111111') == '15'\nassert solution('1' * 100) == '0'\nassert solution('1' * 1000) == '0'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''2\n3\n1 2 1\n3\n1 2 2 1\n''') == 'NO'\nassert solution('''1\n2\n1 2 1\n2\n1 2 1\n''') == 'YES'\nassert solution('''5\n2\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n2\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4') == 'NO'\nassert solution('1\\n2\\n3\\n4') == 'NO'\nassert solution('1\\n1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n2\\n1') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\\n\") == \"NO\\nNO\\nYES\\nNO\\nYES\\nNO\"\n\"\"\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n2') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('3\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('3\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('3\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('2\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO\\nNO\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''YES\nYES\nNO\nYES\nNO'''\n\nassert solution('''3''') == '''NO\nNO\nNO'''\n\nassert solution('''3\n3\n1 2 1''') == '''NO\nNO\nNO'''\n\nassert solution('''10\n1 1 2 2 3 3 4 4 5 5''') == '''NO\nNO\nYES\nYES\nNO\nNO\nNO\nNO\nNO\nNO\nNO'''\n\nassert solution('''3\n3\n1 2 1''') == '''NO\nNO\nNO'''"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 'NO'\nassert solution('''2\n3''') == 'NO'\nassert solution('''4\n1 2 1''') == 'YES'\nassert solution('''3\n1 2 1''') == 'YES'\nassert solution('''4\n1 2 2 1''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''3\n1 2 1\n3\n1 1 2''') == 'NO\\nYES\\nYES'\nassert solution('''3\n1 2 1\n3\n1 2 2''') == 'NO\\nNO\\nYES'\nassert solution('''3\n1 2 1\n3\n1 2 1''') == 'NO\\nNO\\nNO'\nassert solution('''3\n1 2 1\n3\n1 2 1\n2\n1 1 2''') == 'NO\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'NO'\nassert solution('ab') == 'NO'\nassert solution('aba') == 'NO'\nassert solution('abcd') == 'NO'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''4\n33\n1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''4\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\"\n\"\"\"\n\nfrom itertools import groupby\nfrom collections import defaultdict"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1553\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1') == '33'\nassert solution('2\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4 5') == '1545'\nassert solution('11111 9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"123456789\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"123456789\"\nassert solution(\"9 8 7 6 5 4 3 2 1\") == \"99987654321\"\nassert solution(\"9 8 7 6 5 4 3 2 1\") == \"99987654321\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9\\n') == '1557'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'\n\"\"\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1337\n1 2 5 4 6 6 3 1 9\n\n''') == '1553'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n\n''') == '33'\nassert solution('''\n5\n1 1 1 1 1 1 1\n\n''') == '99999'\nassert solution('''\n3\n123\n7 8 6\n\n''') == '357'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1553\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\"\nassert solution(\"2\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\"\nassert solution(\"2\\n0\\n9 1 1 1 1 1 1 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n\"\"\""
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '1'\nassert solution('100 100 101') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3\n123 321 456''') == '1 1 3'\nassert solution('''5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '4 8 16'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '4'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '102'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1 1 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\n\n-----Note-----\n\n$\\sqrt{1000}=7$\n\n$\\sqrt{10^{15}}=1$\n\n\n\"\"\""
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n\nassert solution('''\n5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n\nassert solution('''\n2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\n\nassert solution('''2\n1 100000\n''') == '0'\n\"\"\"\n\nn = int(input())\narr = [int(x) for x in input().split()]\n\nl, r = max(arr), min(arr)\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer_expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n3\\n7') == '2'\nassert solution('2\\n1000000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n') == '0'\nassert solution('2\\n2\\n2\\n') == '1'\nassert solution('2\\n1\\n1\\n') == '0'\nassert solution('2\\n2\\n2\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('3\\n1\\n2\\n') == '1'\nassert solution('4\\n1\\n2\\n3\\n4') == '0'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\") == \"1 2 3 0 3\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 4\\n4 7 2\\n1 10 3\\n8 9 1\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 2\\n4 7 2\\n1 10 3\\n8 9 1\") == \"-1\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2') == '1 2 3 0 3'\nassert solution('5 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 5') == '-1'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 1') == '1 2 0'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3\\n'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '-1\\n'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4\\n'\nassert solution('5 3\\n1 2 1\\n3 2 1\\n1 4 1\\n5 2 1') == '2 2 2 1 1 0 4 3 4 4\\n'\nassert solution('10 5\\n4 7 2\\n5 2 1\\n1 9 1\\n5 2 1\\n3 4 1\\n5 2 1\\n1 9 1') == '2 2 2 1 1 0 4 3 4 4 3 4 4 4 3 4 4\\n'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''3 2''') == '-1'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''3 3''') == '-1'\nassert solution('''7 2''') == '1 2 0 1 1 0 1 2 2'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 2\\n1 3 1\\n1 5 1') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"\"\"-1\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''9 6 2''') == '2 1 2 0 0 0 0 0 0 0'\nassert solution('''3 1''') == '-1'\nassert solution('''3 2''') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''100 1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '1'\nassert solution('''100 2\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '2'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2''') == '1 2 3 0 3'\nassert solution('''3 2''') == '-1'\nassert solution('''10 3''') == '2 2 2 1 1 0 4 3 4 4'\n\n\n\"\"\"\n\nfrom bisect import bisect_left\n\nn, m = [int(x) for x in input().split()]\n\nexams = []\n\nfor i in range(m):\n    s, d, c = [int(x) for x in input().split()]\n    exams.append([s, d, c])\n    \nexams.sort(key=lambda x: x[1])\n\nexams = sorted(exams, key=lambda x: x[0])\n\npassed = []\n\nfor s, d, c in exams:\n    if len(passed) == 0:\n        passed.append(s)\n    else:\n        k = bisect_left(passed, s)\n        if k == len(passed):\n            passed.append(s)\n        else:\n            passed[k] = s"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('42 42') == '0'\nassert solution('12 12') == '-1'\nassert solution('10 29') == '7'\nassert solution('48 72') == '-1'\nassert solution('4 6') == '3'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12 3') == '4'\nassert solution('24 6') == '-1'\nassert solution('48 72') == '-1'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('81 72') == '-1'\nassert solution('27 63') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('15 9') == '-1'\nassert solution('-14') == '-1'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 'cat') == 'ababababa'\nassert solution('cat', 'cat') == 'catcat'\nassert solution('cat', 'abc') == 'catabc'\nassert solution('ac', 'cat') == 'ac'\nassert solution('a', 'aa') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('a') == 'a'\nassert solution('aaba') == 'aabaa'\nassert solution('bbba') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''cct\n''') == 'cc'\nassert solution('''aaa\n''') == 'aa'\nassert solution('''bab\n''') == 'b'\nassert solution('''aaaaa\n''') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abc') == 'abcabc'\n\nprint(solution(stdin))"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nprint(\"Test passed\")\n\"\"\"\n\nn, k = map(int, input().split())\nt = input()\ns = ''\ns_length = n * k\nfor i in range(len(t) - k + 1):\n    substring = t[i:i+k]\n    if substring == substring[::-1]:\n        s += substring\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aba\", \"aba\") == \"ababababa\"\nassert solution(\"cat\", \"cat\") == \"catcat\"\nassert solution(\"cat\", \"ca\") == \"ca\"\nassert solution(\"cat\", \"ca\") == \"ca\"\nassert solution(\"cat\", \"cat\") == \"catcat\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n2\") == \"3\\n0\\n\"\nassert solution(\"2\\n2\\n2\") == \"2\\n0\\n\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"2\\n1\\n\"\nassert solution(\"1\\n1\\n1\") == \"0\\n\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n2 1 2 4\") == \"0\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4 5 6 7 8 9\") == \"3\"\nassert solution(\"8 3 5 2\") == \"0\"\nassert solution(\"4 8 3 2 1\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\n\n\n\n\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\ns = sum(arr)\nf = False\nfor i in range(n):\n    s -= arr[i]\n    if s == 0:\n        f = True\n        break\n        \n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n\n\n-----"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '1 2 4'\nassert solution('4\\n8 3 5 2\\n') == '0'\nassert solution('5\\n2 1 2 2 2\\n') == '0'\nassert solution('5\\n2 1 2 2 2\\n') == '0'\nassert solution('4\\n2 1 2 2\\n') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('4\\n2 1 2 4\\n') == '0'\nassert solution('4\\n2 1 2 3\\n') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3\\n4 1 5\\n'\nassert solution('''4\n8 3 5 2\n''') == '2\\n1 4 \\n'\nassert solution('''5\n2 1 2 4 3\n''') == '0\\n'\nassert solution('''5\n2 1 2 4 3\n''') == '0\\n'\nassert solution('''5\n2 1 2 4 3\n''') == '0\\n'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0\\n'\nassert solution('2\\n1 2') == '0\\n'\nassert solution('2\\n1 1') == '0\\n'\nassert solution('3\\n2 3') == '1\\n2'\nassert solution('3\\n2 1') == '1\\n2'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('asdf') == '4'\nassert solution('asd') == '3'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\nasdf''') == '4'\n\nassert solution('''5 6\naaaaa''') == '15'\n\nassert solution('''5 7\naaaaa''') == '-1'\n\nassert solution('''10 100\najihiushda''') == '233'\n\nassert solution('''10 100\nthis is a long text''') == '233'"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == -1\nassert solution('a') == -1\nassert solution('a') == -1\nassert solution('a') == -1\nassert solution('a') == -1\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef') == '4'\nassert solution('abcdefg') == '-1'\nassert solution('abcdefghij') == '15'\nassert solution('aaaaa') == '4'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '15'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"asdf\") == \"4\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 1''') == 'YES'\nassert solution('''4 5 3''') == 'NO'\nassert solution('''4 5 3''') == 'YES'\nassert solution('''4 4 3''') == 'NO'\nassert solution('''5 4 2''') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2 5 1') == 'YES'\nassert solution('2 5 3') == 'NO'\nassert solution('2 4 3') == 'NO'\nassert solution('1 2') == 'YES'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES', 'Example 1'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == 'NO', 'Example 2'\nassert solution('''4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES', 'Example 3'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4\n4 1\n2 3\n4 1\n2 3''') == 'NO', 'Example 4'\nassert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n4 1\n3 2\n2 4\n1 3\n3 4\n2 1\n3 4\n1 4\n3 2\n4 1\n1 2\n3 4\n2 3\n2 4\n1 3\n2 1\n3 4\n2 4\n1 3\n2 4\n1 2\n1 4\n2 3\n3 4\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n3 4\n2 4\n1 3\n2 4\n1 2\n1 4\n2 3\n3 4\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2 4\n1 3\n2 1\n1 4\n2 3\n3 4\n2 4\n3 2\n2"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'YES\\n2 1\\n2 3\\n3 4\\n1 2\\n1 4\\n7 1\\n8 1\\n9 1'\nassert solution('2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6') == 'YES\\n2 1\\n2 3\\n3 4\\n4 5'\nassert solution('3\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7') == 'NO'\nassert solution('1\\n1\\n1\\n2\\n2\\n3\\n4\\n5\\n5\\n6\\n6') == 'YES\\n1 1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6') == 'YES\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'NO'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom __future__ import annotations\n\nfrom typing import List\n\nYES = \"YES\"\nNO = \"NO\"\n\nEdges = List[List[int]]\nAdjacencyList = List[Edges]\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n4 1''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n4 1\n3 2\n2 4''') == 'NO'\nassert solution('''4 5 2\n1 2\n1 3\n2 3\n1 4\n4 2''') == 'YES'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n\nimport sys\nfrom typing import List, Tuple\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('10:30') == '11:00'\nassert solution('11:30') == '11:00'\nassert solution('11:00') == '11:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '10:30'\nassert solution('''10:30''') == '11:30'\nassert solution('''11:11''') == '11:11'\nassert solution('''01:02''') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"10:00\n11:00\"\"\"\n) == \"10:30\"\nassert solution(\n\"\"\"11:10\n11:12\"\"\"\n) == \"11:11\"\nassert solution(\n\"\"\"01:02\n03:02\"\"\"\n) == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10:00\n11:00\n\"\"\") == \"10:30\"\nassert solution(\n\"\"\"\n11:10\n11:12\n\"\"\") == \"11:11\"\nassert solution(\n\"\"\"\n01:02\n03:02\n\"\"\") == \"02:02\"\nassert solution(\n\"\"\"\n11:20\n09:39\n\"\"\") == \"11:39\"\nassert solution(\n\"\"\"\n10:43\n11:39\n\"\"\") == \"11:39\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\n\nprint(\"All set?\")\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\nassert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('42') == None\nassert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 3\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(1) == 1\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '2'\nassert solution('''27''') == '5'\nassert solution('''42''') == '6'\nassert solution('''129''') == '7'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nprint('Test success!')\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 4101 412 413 414 415 416 417 418 419 420 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 444 453 454 456 459 458 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 9"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3''') == '1'\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4''') == '2'\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''2\n3 10\n1 5\n''') == '7'\nassert solution('''1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\n\n'''\n\nfrom typing import List\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n2\") == \"3\"\nassert solution(\"1\\n3\\n0\\n4\\n1\\n20\\n0\\n4\") == \"1\"\nassert solution(\"3\\n10\\n1\\n20\\n0\\n4\") == \"7\"\nassert solution(\"4\\n5\\n2\\n3\\n10\\n1\\n20\\n0\\n4\") == \"2\"\nassert solution(\"3\\n10\\n1\\n20\\n0\\n4\") == \"0\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n1 3\n2 6\n0 4\n3 3\n\"\"\"\n) == '1'\n\n\nassert solution(\n\"\"\"\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\"\"\"\n) == '2'\n\n\nassert solution(\n\"\"\"\n3\n4 5\n1 2\n9 20\n\"\"\"\n) == '0'\n\n\nassert solution(\n\"\"\"\n2\n3 10\n1 5\n\"\"\"\n) == '7'\n\n\nassert solution(\n\"\"\"\n1\n2\n\"\"\"\n) == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('1\\n3 10\\n1 5\\n') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\nassert solution(\"1\\n3 10\\n1 5\\n\") == \"4\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\n\n\n\n'''\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n''') == 'NO'\n\nassert solution('''2\n10 10\n''') == 'YES'\n\nassert solution('''3\n2 1 1\n''') == 'NO'\n\nassert solution('''6\n3 2 1 1 2 5\n''') == 'YES'"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n1') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\\n1 2 1 3 4\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"10\\n2 1 1 2 5\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1 2\\n') == 'NO'\nassert solution('2\\n1 1\\n') == 'YES'\nassert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('10\\n
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'NO'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''6\n4 6 5 6 6 5\n''') == 'YES'\nassert solution('''2\n4 6 5\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4 5 3') == \"NO\"\nassert solution('3\\n5 3 1') == \"YES\"\nassert solution('1\\n10') == \"YES\"\nassert solution('3\\n3 3 3') == \"NO\"\nassert solution('3\\n3 3 3 2 3') == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n''') == 'NO'\n\nassert solution('''2\n10 10\n''') == 'YES'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n\n\n-----\n\n\"\"\"\n\nn = int(input())\nheights = list(map(int, input().split()))"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n') == 'YES'\nassert solution('3\\n3\\n') == 'NO'\nassert solution('2\\n1\\n1\\n2\\n2') == 'YES'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('5\\n1\\n1\\n2\\n5') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10\\n
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdfasd') == '-1'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\n\n\n-----\n\n\n\"\"\"\n\nfrom collections import Counter, defaultdict"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\n\n\n-----Links-----\n\n\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abaca\") == \"4\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"\") == \"-1\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"asdf\") == 4\nassert solution(\"aaaaa\") == 15\nassert solution(\"aaaaa\") == -1\nassert solution(\"aaaa\") == -1\nassert solution(\"\") == -1\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 50 10\") == \"45\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nnums = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\n'''"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 1\") == \"4\"\nassert solution(\"2 2 1\") == \"7\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"10 10 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n\n\"\"\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"30 22 10\") == \"39\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"Hello\") == \"NO\"\nassert solution(\"Hello\\nHello\") == \"NO\"\nassert solution(\"Hello\\nHello\\nHello\") == \"NO\"\nassert solution(\"Hello\\nHello\\nHello\\nHello\") == \"NO\"\nassert solution(\"Hello\\nHello\\nHello\\nHello\\nHello\") == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1 2 1') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/test_1') == 'YES'\nassert solution('inputs/test_2') == 'NO'\nassert solution('inputs/test_3') == 'YES'\nassert solution('inputs/test_4') == 'YES'\nassert solution('inputs/test_5') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"\"\"1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1 2\n1 1\n1 1\n1 2\n2 4\n1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2') == 'NO'\nassert solution('5 6') == 'NO'\nassert solution('5 7') == 'NO'\nassert solution('7 4') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n1 1''') == 'NO'\nassert solution('''1\n1\n1''') == 'YES'\nassert solution('''1\n1\n2\n1 1''') == 'NO'\nassert solution('''2\n1 1\n1 2''') == 'NO'\nassert solution('''2\n1 2\n1 1''') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9\\n4\\n9\\n8\\n9\\n5\\n7\\n8\\n9"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 2\") == \"YES\"\nassert solution(\"1 2\\n3 4\") == \"NO\"\nassert solution(\"1 2\\n2 2\") == \"NO\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"YES\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3\n''') == '0'\n\nassert solution(\n'''\n5\n''') == '1'\n\nassert solution(\n'''\n6\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('4') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('5 6 3 4 1 2') == '1'\nassert solution('3 4 2 1 1') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n\n\"\"\""
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1,2,3') == 0\nassert solution('2,1,3') == 0\nassert solution('1,2,3,4') == 1\nassert solution('3,2,1,4') == 1\nassert solution('4,3,2,1') == 1\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n2\") == \"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 0\nassert solution('5') == 1\nassert solution('6') == 1\nassert solution('4') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('(()())' == solution('((()))()'))\nassert solution('((()))()' == solution('((()))()'))\nassert solution('((()))()' == solution('((()))()'))\nassert solution('((()))()' == solution('((()))()'))\nassert solution('()((()))()' == solution('()((()))()'))\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()()') == '6'\nassert solution('((()))()') == '3'\nassert solution('(()()()()())()') == '1'\nassert solution('((()))()()()()') == '5'\nassert solution('(()((()))())(())()())') == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('())(') == 1\nassert solution(')(') == 0\nassert solution('((())))(') == 1\nassert solution('((())))(') == 1\nassert solution('())(()') == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(()())') == '5'\nassert solution('(()()))()') == '4'\nassert solution('()((()))()') == '0'\nassert solution('((()))()') == '4'\nassert solution('((()))') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('()()') == '4'\nassert solution('(()()())()') == '4'\nassert solution(')(()') == '0'\nassert solution(')(()())') == '4'\nassert solution('(()()()(()))') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"()\") == 1\nassert solution(\"((()))\") == 1\nassert solution(\"((()))()\") == 1\nassert solution(\"((()))()()\") == 1\nassert solution(\"(()(()))()\") == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"(()\") == \"\"\nassert solution(\"()()\") == \"2\"\nassert solution(\"()()()\") == \"4\"\nassert solution(\"(()(()))\") == \"8\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()') == 0\nassert solution('()()') == 1\nassert solution('((()))') == 1\nassert solution('((()))()') == 1\nassert solution('((()))()') == 1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    5071\n    '''\n    ) == '4'\n\nassert solution(\n    '''\n    704\n    '''\n    ) == '1'\n\nassert solution(\n    '''\n    121367\n    '''\n    ) == '-1'\n\nassert solution(\n    '''\n    12345567\n    '''\n    ) == '5'\n\nassert solution(\n    '''\n    123456789\n    '''\n    ) == '1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('7108') == '-1'\nassert solution('99999') == '-1'\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\n\"\"\"\n\n\"\"\"\nSOLUTION:\n\nBuild a count of the number of zeros (all digits in the number are 0)\n\nCount of zeros = number of trailing zeros\n\nFor every digit, we can replace it with a single zero and update the count of zeros\n\nHow can we count the number of trailing zeros? Let's start with the number 10!\n10! = 10 \u00d7 9!\n9! = 9 \u00d7 8!\n8! = 8 \u00d7 7!\n7! = 7 \u00d7 6!\n6! = 6 \u00d7 5!\n5! = 5 \u00d7 4!\n4! = 4 \u00d7 3!\n3! = 3 \u00d7 2!\n2! = 2 \u00d7 1!\n1! = 1\n\nSo we can count the number of trailing zeros using the following formula:\nzeros = zeros * 10 + 1\n\nSo, every time we replace a digit with a zero, the count of trailing zeros increases by 1.\n\nNow, we can count the number of zeros using the following formula:\nzeros = zeros * 10 + zeros\n\nFor example, 10 has two trailing zeros, so the number of zeros increases by 4.\n\nFor the last digit, we have 3 trailing zeros. There is no leading zero in the last digit.\n\nThus, the count of zeros increases by 3 + 4 + 4 + 3 + 3 + 3 + 3 + 3 = 39.\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('9') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('qwertyuiop') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabbcbb') == '1 1 2 1 2 1 2 1 2'\nassert solution('aaabbcbb') == '1 1 2 1 2 1 2 1 2'\nassert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('abcde') == '1 1 1 1 1 1'\nassert solution('abcd') == '1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'\nassert solution('''5\nabcde\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdefghi') == '1 2 3 4 5 6 7 8'\nassert solution('abcdedc') == '1 1 1 1 1 2 3'\nassert solution('aabbcbb') == '1 2 1 2 1 2 1 2'\nassert solution('aaabbcbb') == '1 1 2 2 1 2 1 2'\nassert solution('aaabbbbcbb') == '1 1 2 2 1 2 1 2 1 2 1 2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n    1''') == '1'\nassert solution('''1\n    2''') == '2'\nassert solution('''2\n    2''') == '1'\nassert solution('''2\n    1''') == '1'\nassert solution('''3\n    1''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abcdefg') == ''\nassert solution('a') == ''\nassert solution('aaaabcccdddd') == '1 1 1 1 1 1 1 1'\nassert solution('aaaabcccdddd') == '1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''9\nabacbecfd\n''') == '2'\n\nassert solution(\n'''8\naaabbcbb\n''') == '2'\n\nassert solution(\n'''7\nabcdedc\n''') == '3'\n\nassert solution(\n'''5\nabcde\n''') == '1'\n\nassert solution(\n'''5\nabcde\n''') == '1'"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcdedc\") == \"1 1 1 1 1 1 2 3 \"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 2 1 2 \"\nassert solution(\"abcde\") == \"1 1 1 1 1 1 \"\nassert solution(\"abcdef\") == \"1 1 1 1 1 1 1 1 1 \"\nassert solution(\"abcd\") == \"1 1 1 1 1 1 \"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'\nassert solution('''6\nabcdde\n''') == '1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacaba') == 'a'\nassert solution('qwerty') == 'NO'\nassert solution('a') == 'NO'\nassert solution('abcdef') == 'NO'\nassert solution('a') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abab') == 'NO'\nassert solution('abacaba') == 'YES'\nassert solution('qwerty') == 'NO'\nassert solution('qwerty') == 'NO'\nassert solution('qwerty') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('qwerty') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('qwerty') == 'NO'\nassert solution('abab') == 'NO'\nassert solution('aa') == 'NO'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('5\\n3\\na\\nb\\nabacaba\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab') == 'YES\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab\\na\\nb\\na\\nab'\n\nprint(solution(stdin))"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == 'NO'\nassert solution('abacaba') == 'YES'\nassert solution('qwerty') == 'NO'\nassert solution('asdfasdfasdfasdfasdfasdfasdfasdf') == 'NO'\nassert solution('abacabaasdfasdfasdfasdfasdfasdfasdf') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES\\na\\ba\\aba\\aba\\abacaba'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''5\nqwerty\nqwerty\nqwerty\n''') == 'YES\\nqwerty\\nqwerty\\nqwerty'\n\n\n'''\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'a'\nassert solution('aba') == 'a'\nassert solution('abacaba') == 'a'\nassert solution('ba') == 'ba'\nassert solution('aba') == 'aba'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES\\n' + 'a\\n' + 'ba\\n' + 'aba\\n' + 'aba\\n' + 'abacaba'\n\n\n-----\n\n'''\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES\\na\\ba\\aba\\aba\\abacaba'\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''\n5\nqwerty\nqwerty\nqwerty\n''') == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n''') == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution('''\n7\na\nb\nc\nd\ne\nf\ng\nh\n''') == 'NO'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"12 34 55 43 21\") == \"5\"\nassert solution(\"100 12 34 55 43 21\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4''') == '5'\nassert solution('''5 2\n3 1 2 1 3''') == '0'\nassert solution('''5 100\n12 34 55 43 21''') == '5'\nassert solution('''3 1 2 1 3''') == '3'\nassert solution('''1 2 1 3 1 4''') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n\n\n\"\"\"\nfrom collections import deque\n\nn, k = [int(x) for x in stdin.split()]\na = deque([int(x) for x in stdin.split()])\na.rotate(n - k)\nprint(sum(a))\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 3\\n1 3 2 1 5') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('3 1 2 1 3') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4\n''') == '5'\n\nassert solution('''5 2\n3 1 2 1 3\n''') == '0'\n\nassert solution('''5 100\n12 34 55 43 21\n''') == '5'\n\nassert solution('''5 1\n1 2 3 4 5\n''') == '0'\n\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9 10\n''') == '5'\n'''\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\nprint(\"All set! Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n') == '12'\nassert solution('3 9\\n') == '14'\nassert solution('3 6\\n') == '12'\nassert solution('506 2708\\n') == '3218'\nassert solution('5062 8038\\n') == '3062'\n\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdef') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\nabacbecfd\n\n''') == 'YES'\nassert solution('''8\naaabbcbb\n\n''') == 'YES'\nassert solution('''7\nabcdedc\n\n''') == 'NO'\nassert solution('''5\nabcde\n\n''') == 'YES'\nassert solution('''1\na\n\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''6\nabcde\n''') == 'NO'\nassert solution('''7\nabcdefg\n''') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n9\nabacbecfd\n''') == 'YES'\nassert solution('''\n8\naaabbcbb\n''') == 'YES'\nassert solution('''\n7\nabcdedc\n''') == 'NO'\nassert solution('''\n5\nabcde\n''') == 'YES'\nassert solution('''\n2\na\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'NO'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcdedc') == 'YES\\n01011011'\nassert solution('aaabbcbb') == 'YES\\n001010101'\nassert solution('aabbbcdeee') == 'YES\\n00100100100'\nassert solution('abcdeee') == 'NO'\nassert solution('aabbcbecee') == 'YES\\n00100100100'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES\\n01010101'\nassert solution('''8\naaabbcbb\n''') == 'YES\\n01011011'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES\\n00000'\nassert solution('''1\na\n''') == 'YES\\n0'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == \"YES\\n01010101\"\nassert solution('aaabbcbb') == \"YES\\n01011011\"\nassert solution('abcdedc') == \"NO\"\nassert solution('abcde') == \"YES\\n00000\"\nassert solution('asdfgh') == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''abacbecfd\n''') == 'YES'\n\nassert solution(\n'''aaabbcbb\n''') == 'YES'\n\nassert solution(\n'''abcdedc\n''') == 'NO'\n\nassert solution(\n'''abcde\n''') == 'YES'\n\nassert solution(\n'''123456\n''') == 'YES'"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacbecfd') == \"YES\\n\" + \"0000010101\"\nassert solution('aaabbcbb') == \"YES\\n\" + \"01011011\"\nassert solution('abcdedc') == \"NO\"\nassert solution('abcde') == \"YES\\n\" + \"00000\"\nassert solution('abcdefghi') == \"YES\\n\" + \"1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 10') == '-1'\nassert solution('2 2') == '25'\nassert solution('1 10') == '-1'\nassert solution('10 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == 25\nassert solution('1 1') == -1\nassert solution('1 2') == -1\nassert solution('2 2') == 25\nassert solution('2 1') == 25\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"25\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('5 4') == '27'\nassert solution('2 1') == '-1'\nassert solution('100 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == -1\nassert solution('1 1') == 1\nassert solution('1 2') == -1\nassert solution('1 2 2') == -1\nassert solution('2 2') == 2\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''2 2''') == '-1'\nassert solution('''4 2''') == '5'\nassert solution('''1 10''') == '0'\nassert solution('''5 10''') == '10'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''1 1''') == '-1'\nassert solution('''5 10''') == '25'\nassert solution('''3 8''') == '25'\nassert solution('''10 7''') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '-1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('10 22') == '13'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('26 6\\n') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3\\n') == 'NO\\n'\nassert solution('1 1\\n') == 'YES\\n1\\n'\nassert solution('9 4\\n') == 'NO\\n'\nassert solution('16 16\\n') == 'YES\\n
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\nassert solution('''26 4''') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\nassert solution('''5 4''') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\nInput\n1 1\n\nOutput\nYES\n1 \n\nInput\n2 1\n\nOutput\nNO\n\nInput\n100 5\n\nOutput\nYES\n1 2 3 4 5\n\nInput\n1 1\n\nOutput\nNO\n\nInput\n4 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 11\n\nOutput\nNO\n\nInput\n10 3\n\nOutput\nNO\n\nInput\n5 3\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n3 1\n\nOutput\nYES\n1\n\nInput\n3 1\n\nOutput\nNO\n\nInput\n1 2\n\nOutput\nNO\n\nInput\n2 2\n\nOutput\nNO\n\nInput\n10 3\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 6\n\nOutput\nNO\n\nInput\n10 7\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 9\n\nOutput\nNO\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 7\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 8\n\nOutput\nNO\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n10 6\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n10 7\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n10 6\n\nOutput\nNO\n\nInput\n10 8\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n10 6\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 8\n\nOutput\nNO\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 8\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n10 8\n\nOutput\nNO\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n10 8\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n10 8\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 10\n\nOutput\nNO\n\nInput\n10 9\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n5 9\n\nOutput\nNO\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n5 10\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n1 1\n\nOutput\nYES\n1\n\nInput\n5 7\n\nOutput\nNO\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n10 8\n\nOutput\nYES\n1 2 3 4 5 6 7 8 9 10\n\nInput\n5 8\n\nOutput\nNO\n\nInput\n5 9"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 8\") == \"NO\"\nassert solution(\"7 2\") == \"NO\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 3\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''26 6''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3''') == 'NO\\n'\nassert solution('''1 1''') == 'YES\\n1\\n'\nassert solution('''9 4''') == 'NO\\n'\nassert solution('''26 99''') == 'YES\\n1 2 4 5 6 8\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\n'''"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''3 3\n-1 -1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2'\nassert solution('''5 4\n-1 0\n0 1\n0 -1\n1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"5 20\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 10\") == \"3\"\nassert solution(\"7 100\") == \"2\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''10 4\n2 1\n1 4\n-4 1\n-3 1\n-1 2\n-1 1\n1 1\n1 1\n2 -1\n-2 1\n-4 1\n-6 1''') == '8'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''7 15\n0 1\n1 0\n1 -1\n2 0\n-1 1\n-3 1\n-5 1\n-7 1\n''') == '4'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '5'"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1\\n') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\nassert solution('5 2\\n40 45\\n34 -15\\n10 34\\n1 27\\n1 123\\n') == '5'\nassert solution('10 3\\n4 6\\n10 -2\\n8 -1\\n') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123''') == '3'\nassert solution('''7 10\n1 1\n-1 -2\n-1 -3\n2 2\n4 4\n10 -2\n1 -4\n5 0''') == '7'\nassert solution('''3 2\n1 -2\n1 -3\n2 2\n4 4\n10 -2\n1 -4\n5 0''') == '2'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3'\nassert solution('2 2\\n5 2\\n1 5') == '1'\nassert solution('2 2\\n5 2\\n1 5\\n5 2') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3'\nassert solution('1\\n300 300\\n1 299 300\\n1 123 300\\n1 123 300') == '2'\nassert solution('1\\n3\\n3\\n1\\n3\\n3\\n1') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''4 2\n7 -3\n7 -5\n3 -7\n-2 3\n0 -9''') == '2'\nassert solution('''5 3\n15 4 3 5\n10 -2\n7 -5\n-3 -5\n1 -2\n4 3\n7 8\n1 -1\n9 -4''') == '3'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution(' ') == 'NO'\nassert solution
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == 'YES'\nassert solution('''3\n1 1 1 1 1 3 3 3 3 3''') == 'NO'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'YES'\nassert solution('''1\n10''') == 'NO'\nassert solution('''1\n1''') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\n\"\"\""
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == ''\n'''\n'''"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_list) == expected_output\nprint(solution(input_list))\n\n'''\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(\"4\\n1 1 1 1 1 3 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\nassert solution(\"4\\n1 1 1 1 1 3 3 3 3 3\\n\") == \"NO\\n\""
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == ''\nassert solution(input(\"1\\n\")) == \"YES\\n1\\n\"\nassert solution(input(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\")) == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(input(\"4\\n1 1 1 1 1 3 3 3 3 3\\n\")) == \"NO\\n\"\nassert solution(input(\"3\\n1 1 1 1 1 3 3 3 3\\n\")) == \"NO\\n\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == 'NO'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('3 10') == 'NO'\nassert solution('4 3') == 'NO'\nassert solution('3 10') == 'YES'\nassert solution('4 4') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4\\n10\\n10\\n10\\n5\\n0\") == \"YES\"\nassert solution(\"1\\n-5\\n10\\n10\\n10\\n5\\n0\") == \"NO\"\nassert solution(\"2\\n-2\\n5\\n0\\n0\\n10\\n0\") == \"NO\"\nassert solution(\"1\\n-2\\n1\\n-1\") == \"YES\"\nassert solution(\"4\\n1\\n-5\\n10\\n5\\n10\\n0\") == \"NO\"\n\n\n\n\"\"\"\n\nimport sys\nfrom bisect import bisect_left"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 3\"\n    \"4 6\"\n    \"10 -2\"\n    \"8 -1\"\n) == \"YES\"\nassert solution(\n    \"3 5\"\n    \"4 -5\"\n    \"4 -2\"\n    \"1 3\"\n) == \"YES\"\nassert solution(\n    \"3 10\"\n    \"10 0\"\n    \"10 -10\"\n    \"30 0\"\n) == \"NO\"\nassert solution(\n    \"4 4\"\n    \"5 2\"\n    \"5 -3\"\n    \"2 1\"\n    \"4 -2\"\n) == \"YES\"\nassert solution(\n    \"4 4\"\n    \"5 2\"\n    \"5 -3\"\n    \"2 1\"\n    \"4 -2\"\n) == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 6\\n4 6\\n10 -2\\n8 -1\\n') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('10 15\\n15 10\\n10 -10\\n10 -15\\n10 -15\\n20 -20\\n') == 'NO'\nassert solution('4 1\\n3 5\\n1 -10\\n2 2\\n1 3\\n') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('4 6') == 'YES'\nassert solution('10 -2') == 'YES'\nassert solution('8 -1') == 'YES'\nassert solution('3 5') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 4\n4 6\n10 -2\n8 -1'''\n    ) == 'YES'\n\nassert solution(\n'''3 5\n4 -5\n4 -2\n1 3\n'''\n    ) == 'YES'\n\nassert solution(\n'''3 10\n10 0\n10 -10\n30 0\n'''\n    ) == 'NO'\n\nassert solution(\n'''3 10\n10 0\n10 -10\n30 0\n10 1\n10 0\n10 -10\n30 0\n'''\n    ) == 'NO'\n\nassert solution(\n'''3 10\n10 0\n10 -10\n30 0\n10 1\n10 0\n10 -10\n30 0\n10 1\n10 0\n10 -10\n30 0\n10 1\n10 0\n10 -10\n30 0\n'''\n    ) == 'NO'"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''10 1 3''') == 'NO'\n\n\n\n\n\n'''"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''7 3 2''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\n\n-----"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''10 1 3''') == 'NO'\n'''"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 11') == 'NO\\n'\nassert solution('10 1 3') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7 3 2'''\n) == 'YES'\nassert solution(\n'''10 1 11'''\n) == 'YES'\nassert solution(\n'''10 1 5'''\n) == 'YES'\nassert solution(\n'''7 3 2'''\n) == 'NO'\nassert solution(\n'''5 3 2'''\n) == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'\nassert solution('''2 2 1\n1\n''') == 'YES'\nassert solution('''10 1 3\n1\n''') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3 2\\n1 2 1') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5\\n3') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5\\n4') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2 1\\n1 2 1') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 1 5') == 'YES'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('zyxwvutsrqponmlkjihgfedcba', 'abcde') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('12345678901234567890', '12345678901234567890') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('asdf') == 0\nassert solution('ab') == 1\nassert solution('baaba') == 3\nassert solution('baaba') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bbaba','bb') == 3\nassert solution('baaba','ab') == 2\nassert solution('abcde','abcde') == 0\nassert solution('asdfasdf','fasd') == 3\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('vvvvsvvv', 'vvvvsvvv') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbaba', 'bb', T) == 3\nassert solution('baaba', 'ab', T) == 2\nassert solution('abcde', 'abcde', T) == 0\nassert solution('asdfasdf', 'fasd', T) == 3"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('aaaaa', 'aaaa') == 3\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(\"Passed all tests!\")\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\nassert solution(3.14) == \"3 1\"\n\n\"\"\"\n\n\"\"\"\npython3 -m solutions.implement_pow_and_rounding -v 3.0\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n\nprint(\"Testcase 1 passed.\")\n\nprint(\"Testcase 2 passed.\")\n\nprint(\"Testcase 3 passed.\")\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('12345678901234567890123456789012') == '1 2 3 4 5 6 7 8 9'\nassert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n'''"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n-----Note-----\nTest cases 1 and 2 are exactly the same, so they have the same answer in the output.\n\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\nprint(solution(float(input())))\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\n'''\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"NO\"\nassert solution(\"5 2 3\") == \"YES\"\nassert solution(\"5 3 2\") == \"NO\"\nassert solution(\"6 2 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 3') == 'NO'\nassert solution('6 2 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'NO'\nassert solution('1 2 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\nassert solution('8 8 6') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 3\\n') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n'\nassert solution('10 4 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n'\nassert solution('8 5 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n'\nassert solution('11 6 4\\n') == 'YES\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n7 11\\n'\nassert solution('1 2 3\\n') == 'NO\\n'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\n\nprint(solution('''10 5 3'''))\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == 'YES\\n4\\n1\\n2\\n5\\n3\\n7\\n9\\n10\\n8\\n11\\n12'\nassert solution('3 2 3\\n4 1 2\\n1 3 3') == 'NO'\nassert solution('3 2 3\\n2 3 3\\n3 2 3') == 'YES\\n2\\n3'\nassert solution('3 2 3\\n3 2 3\\n3 2 3') == 'YES\\n3\\n3'\nassert solution('3 2 3\\n3 2 3\\n3 2 3') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n7 3\\n\"\nassert solution(\"10 6 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n7 3\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2 3''') == 'YES'\nassert solution('''6 2 1''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''8 3 5''') == 'NO'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '110100'\nassert solution(stdin) == '101100'\nassert solution(stdin) == '110010'\nassert solution(stdin) == '100110'\nassert solution(stdin) == '011001'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '010100'\nassert solution('''10 10 10''') == '110100'\nassert solution('''100 100 100''') == '110100'\n\n\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('4 3 4') == '110010'\nassert solution('4 3 5') == '100110'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[2] + stdin[0] + stdin[1] + stdin[3]\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('3 3 1') == '1101'\nassert solution('2 3 5') == '110010'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('1 2 1') == '0011'\nassert solution('2 1 1') == '0110'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nab\nbc''') == 'YES'\nassert solution('''3\naa\nbc\n\nOutput''') == 'YES'\nassert solution('''1\ncb\nac\n\nOutput''') == 'NO'\nassert solution('''3\naa\nbc\n\nOutput''') == 'YES'\nassert solution('''4\nab\nba\n\nOutput''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\nab\\nbc\\n\") == \"YES\\nacbbac\"\nassert solution(\"2\\naa\\nbc\\n\") == \"YES\\ncacbacbab\"\nassert solution(\"3\\nbb\\nab\\n\") == \"NO\"\nassert solution(\"3\\nbb\\nab\\n\") == \"NO\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\\ncacbacbab\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == \"YES\\nacbbac\"\nassert solution('''3\naa\nbc\n''') == \"NO\"\nassert solution('''1\ncb\nac''') == \"YES\\ncacbacbab\"\nassert solution('''1\nbc\nac''') == \"YES\\ncacbacbab\"\nassert solution('''1\nbb\nca''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abc\") == \"YES\"\nassert solution(\"bca\") == \"NO\"\nassert solution(\"aab\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\n\nassert solution('''3\naa\nbc\n\n''') == 'YES\\ncacbacbab'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"YES\\nab\"\nassert solution(\"bc\") == \"YES\\nacbbac\"\nassert solution(\"aa\") == \"NO\"\nassert solution(\"cb\") == \"YES\\ncb\"\nassert solution(\"cbacbacbab\") == \"YES\\nacbabc\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\nab\nbc''') == 'YES'\nassert solution('''3\naa\nbc\n''') == 'YES'\nassert solution('''1\ncb\nac''') == 'YES'\nassert solution('''2\nab\nbc\n''') == 'NO'\nassert solution('''5\nab\nababab\n''') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\nab\nbc\n''') == \"YES\\nabacbc\"\nassert solution('''3\naa\nbc\n''') == \"YES\\ncbcacacbc\"\nassert solution('''1\ncb\nac\n''') == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"NO\"\nassert solution(\"abcc\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"abcc\") == \"YES\"\nassert solution(\"acb\") == \"YES\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n-1\") == \"\"\nassert solution(\"3\\n1\\n1\\n1\") == \"\"\nassert solution(\"3\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n\") == \"1 2 3\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1\"\nassert solution(\"6\\n1 1 1 1 1 1\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"7\\n1 1 1 1 1 1 1\\n\") == \"1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n-1 2\\n') == '1 2'\nassert solution('3\\n-1 1\\n') == '2 1 3'\nassert solution('3\\n-2 1\\n') == '2 1'\nassert solution('4\\n-1 1 1\\n') == '3 1 2'\nassert solution('4\\n-2 1 1\\n') == '3 2 1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n-1 1') == '-1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1 2'\nassert solution('2\\n2 1') == '2 1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1 2 2') == '1 2 3 4'\nassert solution('1 1 1 1') == '1 2 3 4'\nassert solution('4') == '-1'\nassert solution('-1 2 2') == '1 2 3 4'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n-1\\n2\\n') == '1 2\\n'\nassert solution('2\\n1\\n1\\n') == '-1'\nassert solution('2\\n1\\n1\\n1\\n') == '1'\nassert solution('3\\n-2 1\\n2 1\\n') == '3 1 2'\nassert solution('3\\n1 1\\n1 1\\n') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2') == '1 2 2'\nassert solution('2 3 4') == '3 1 4 2'\nassert solution('-2 1') == '-2 1'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 4 3 5 6'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''2 2 2 3 3''') == '2'\nassert solution('''9 9 9 9 9 9 9 9 9 9''') == '2'\nassert solution('''3 2 2 2 3''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''2\n1 2\n''') == '1'\nassert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'\nassert solution('''8\n3 1 2 4 5 1 2 2 4\n''') == '0'"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 2 2 3\") == \"2\"\nassert solution(\"3\\n2 2 2 3\") == \"2\"\nassert solution(\"3\\n2 2 1 3\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n2 2 2 3 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3\n1 2 3\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"5\n2 2 2 3 3\n\"\"\") == \"2\\n\""
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('3\\n2\\n2\\n3') == '2'\nassert solution('5\\n2\\n2\\n2\\n3') == '2'"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"2\"\n\n'''\n\nfrom typing import Iterator\nfrom functools import reduce\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n') == '5'\nassert solution('1\\n') == '0'\nassert solution('7\\n') == '4'\nassert solution('15\\n') == '5'\nassert solution('26\\n') == '8'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == 5\nassert solution('20') == 10\nassert solution('100') == 25\nassert solution('1000') == 500\nassert solution('10000') == 5000\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n') == '5'\nassert solution('10000\\n') == '5'\nassert solution('8\\n') == '5'\nassert solution('100000\\n') == '10'\nassert solution('1000000\\n') == '15'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == 5\nassert solution('1') == 0\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 2\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"25\"\nassert solution(\"1000\") == \"125\"\nassert solution(\"10^12\") == \"10^12\"\nassert solution(\"10^15\") == \"10^15\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5'\nassert solution('12') == '6'\nassert solution('100') == '20'\nassert solution('1000') == '32'\nassert solution('10000') == '128'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('10') == ''\nassert solution('2') == ''\nassert solution('10' * 11) == ''\nassert solution('2' * 3) == ''\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\nassert solution('100000') == '999999'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2''') == '0 1'\n\nassert solution(\n'''15''') == '0 15'\n\nassert solution(\n'''3''') == '3 3'\n\nassert solution(\n'''686''') == '22 334'\n\nassert solution(\n'''319''') == '119 226'\n\n\n\n\"\"\""
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 1') == '0 1'\nassert solution('1 1 0') == '1 1'\nassert solution('0 0 3') == '0 1'\nassert solution('3 0 0') == '1 1'\nassert solution('1 1 0') == '1 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 3''') == '3 3'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''5 5 5''') == '0 15'\nassert solution('''0 0 3''') == '3 3'\nassert solution('''0 0 0''') == '0 0'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '0 1'\nassert solution('''5 3 2''') == '0 3'\nassert solution('''3''') == '0 3'\nassert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '0 2'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3'\nassert solution('4\\n0 0 0\\n0 0 0') == '0 1'\nassert solution('5\\n0 0 0\\n0 0 0') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('6\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3 3'\nassert solution('9\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3 3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3'\nassert solution('-9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9') == '4'\nassert solution('1 2 3 4 5 6 7 8 9') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '3\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('''7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n1 1\\n5 6'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n5 6\\n7 8'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''10\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9\n''') == '1\\n2 3\\n4 5\\n6 7\\n8 9'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n7\n4 1 2 2 1 5 3\n\"\"\") == \"\"\"\n3\n7 7\n2 3\n4 5\n\"\"\"\nassert solution(\n\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\n2\n3 4\n1 1\n2 2\n4 4\n6 7\n8 9\n10 10\n\"\"\"\nassert solution(\n\"\"\"\n3\n1 1 1\n\"\"\") == \"\"\"\n3\n3 3\n1 1\n2 2\n3 3\n\"\"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('1 1 1 1') == '4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('1 1 1 1') == '4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('1 1 1 1') == '4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3\\n7 7\\n2 3\\n4 5\\n'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\"\nassert solution(\"5\\n4 1 2 2 1 5 3\\n3 2 1 1 2 1 1 2\\n1 1 1 2 2 1 1 1\\n2 1 1 1 1 1 2\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"3\\n4 4\\n1 1\\n2 2\\n7 7\\n3 3\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"5\\n4 1 2 2 1 5 3\\n3 2 1 1 2 1 1 2\\n1 1 1 2 2 1 1 1\\n2 1 1 1 1 1 2\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"3\\n4 4\\n1 1\\n2 2\\n7 7\\n3 3\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"5\\n4 1 2 2 1 5 3\\n3 2 1 1 2 1 1 2\\n1 1 1 2 2 1 1 1\\n2 1 1 1 1 1 2\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"3\\n4 4\\n1 1\\n2 2\\n7 7\\n3 3\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"5\\n4 1 2 2 1 5 3\\n3 2 1 1 2 1 1 2\\n1 1 1 2 2 1 1 1\\n2 1 1 1 1 1 2\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"3\\n4 4\\n1 1\\n2 2\\n7 7\\n3 3\\n4 4\\n1 1\\n2 2\\n3 3\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\nimport sys"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n'\nassert solution('''4\n1 1 1 1\n''') == '4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('''1\n1\n''') == '1\\n1\\n'\nassert solution('''5\n2 4 3 2 1\n''') == '2\\n2 3\\n2 2\\n2 3\\n2 3\\n'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 1 1''') == '3\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('''7\n4 1 2 2 1 5 3''') == '3\\n7 7'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n6 7 8 9 10\\n'\nassert solution('''7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\n''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n6 7 8 9 10 11\\n'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 1\") == \"NO\"\nassert solution(\"3\\n1 3 2\") == \"NO\"\nassert solution(\"3\\n3 3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 2 1\") == \"NO\"\nassert solution(\"3\\n2 3 1\") == \"NO\"\nassert solution(\"3\\n1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n3 1 2\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n3\n3 1 2\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n4\n4 1 2 3\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n4\n1 4 3 2\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n8\n3 3 3 3 3 3 3 3 3\n\"\"\"\n) == \"YES\""
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('3\\n1 3 2') == 'NO'\nassert solution('3\\n2 1 3') == 'NO'\nassert solution('3\\n2 3 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\\n\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\\n\"\nassert solution(\"3\\n3 3 1 2\\n\") == \"NO\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"\nassert solution(\"3\\n1 1 1 1\\n\") == \"YES\\n\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n1 2 3\n''') == \"YES\"\n\nassert solution(\n'''3\n3 1 2\n''') == \"NO\"\n\nassert solution(\n'''8\n2021 23 3 10 10 15 24 8\n''') == \"NO\"\n\nassert solution(\n'''5\n20 21 22 22\n''') == \"YES\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcd\", \"accd\") == \"-1\"\nassert solution(\"abcdef\", \"abdfec\") == \"4\"\nassert solution(\"abdcfe\", \"abdfec\") == \"3 5 4 5\"\n\n\n\"\"\"\n\nn = int(input())\ns = input()\nt = input()\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('abcd') == '-1'\nassert solution('abcef') == '4'\nassert solution('abcegk') == '4 5 4 5'\nassert solution('abcdef') == '4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('', 'ab') == '','should be empty'\nassert solution('ab', '') == '','should be empty'\nassert solution('abcd', 'abcde') == '','should be empty'\nassert solution('abc', 'cba') == '','should be empty'\nassert solution('abc', 'abc') == '','should be empty'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aaab') == 'aab'\nassert solution('aaabcc') == 'aab'\nassert solution('aaaa') == 'a'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcdef', 'abdfec') == '-1'\nassert solution('abcd', 'accd') == '-1'\nassert solution('abcd', 'defg') == '4'\nassert solution('12345', '23456') == '5'\nassert solution('abcdef', 'abcdef') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcd', 'abcd') == '0'\nassert solution('abcdef', 'abdfec') == '4'\nassert solution('abcd', 'accd') == '-1'\nassert solution('abcd', 'abcd') == '0'\nassert solution('abcdef', 'abcdef') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '0'\nassert solution('''\n6\nabcdef\nabdfec\n''') == '4\\n3 5 4 5'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcd', 'accd') == '-1'\nassert solution('abcdef', 'abdfec') == '4'\nassert solution('abcdef', 'abcd') == '3 5 4 5'\nassert solution('abcd', 'acdc') == '3 1 4 2 5'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PPS'\nassert solution('abc') == 'PPSS'\nassert solution('abc') == 'PPSS'\nassert solution('abcabc') == 'PPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aa') == 'SPS'\nassert solution('aab') == 'SPSS'\nassert solution('ba') == 'SPSPSPS'\nassert solution('bba') == 'SPSSPS'\nassert solution('ba') == 'PSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ab') == 'PS'\nassert solution('ba') == 'PSPPSPSPSP'\nassert solution('a') == 'PSS'\nassert solution('a') == 'SPS'\nassert solution('a') == 'SPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\naa\naa\na\n\n\"\"\") == \"SPPSPSPS\"\n\nassert solution(\n\"\"\"\n3\na\naa\naa\na\n\n\"\"\") == \"PS\"\n\nassert solution(\n\"\"\"\n2\na\nc\n\n\"\"\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba') == 'PS'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"PS\"\nassert solution(\"a\") == \"P\"\nassert solution(\"ba\") == \"SPPSPSPS\"\nassert solution(\"ba\") == \"SPPS\"\nassert solution(\"baba\") == \"PSPSPSP\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\nab') == 'PPS'\nassert solution('2\\nba') == 'PSP'\nassert solution('2\\naa') == 'PS'\nassert solution('2\\naa') == 'P'\nassert solution('2\\nc') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aba') == 'SP'\nassert solution('ac') == 'SP'\nassert solution('ca') == 'S'\nassert solution('aaa') == 'S'\nassert solution('ba') == 'PSP'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'P'\nassert solution('a') == 'S'\nassert solution('a') == 'P'\nassert solution('aa') == 'PSP'\nassert solution('abab') == 'SPSPSPS'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4 6 8 10''') == 1\nassert solution('''1 1 1 1 1 1 1 1 1''') == 0\nassert solution('''2 4 6 8 10''') == 1\nassert solution('''0 0 0 0 0 0 0 0 0''') == 0\nassert solution('''2 4 6 8 10''') == 1\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10') == 1\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"2 4 6 8 10\") == \"1\"\nassert solution(\n\"2 4 6 8 9 10\") == \"2\"\nassert solution(\n\"2 4 6 8 9 9 10\") == \"3\"\nassert solution(\n\"2 4 6 8 9 9 9 10\") == \"4\"\nassert solution(\n\"2 4 6 8 9 9 9 9 10\") == \"5\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 1 1 1 1') == '2'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '2'\nassert solution('1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''4 2 4 3 1''') == '1'\nassert solution('''3 4 6 8 10''') == '2'\nassert solution('''7 1 7 6 1''') == '2'\nassert solution('''3 4 5 6 7''') == '3'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 1 1 1 1') == '0'\nassert solution
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''8 7 6 5 4''') == '2'\nassert solution('''100 101 102 103 104''') == '4'\nassert solution('''100 101 102 103 104''') == '4'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''0 0 0 0 0 0 0 0 0 0''') == '1'\nassert solution
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution(\n'''5\n1 1 0 0 0\n''') == '0'\nassert solution(\n'''4\n1 1 1 1\n''') == '0'\n\nassert solution(\n'''15\n1 1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution(\n'''20\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == '2'\nassert solution('''5''') == '0'\nassert solution('''4''') == '0'\nassert solution('''3''') == '0'\nassert solution('''1 1 0 1 1 0 1 0 1 0''') == '2'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0') == '0'\nassert solution('2\\n1\\n0\\n0\\n0\\n1\\n1\\n1') == '2'\nassert solution('2\\n0\\n0\\n0\\n0\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('5\\n1\\n1\\n1\\n1\\n0') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''5\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 0 1 1 0 1 0 1 0\") == 2\nassert solution(\"5\") == 0\nassert solution(\"1 1 0 0 0\") == 0\nassert solution(\"1 1 1 1\") == 0\nassert solution(\"4 1 1 1 1\") == 0\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\nassert solution('''30\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0') == 2\nassert solution('5') == 0\nassert solution('1 1 0 0 0') == 0\nassert solution('4') == 0\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'\nassert solution('3\\n1 1 1\\n') == '2'\nassert solution('2\\n1 1\\n') == '2'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''30\n2 1 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3 2 1 1\\n') == '1'\nassert solution('2\\n3 2 3\\n') == '3'\nassert solution('2\\n3 3\\n') == '3'\nassert solution('2\\n3 3 1\\n') == '2'\nassert solution('2\\n3 1 3\\n') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\n\n'''\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('6\\n6 90 12 18 30 18\\n') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n3\\n') == '3'\nassert solution('4\\n4\\n') == '1'\nassert solution('5\\n5\\n') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '2'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''8\n14 10 10 18 28 22 28''') == '3'\nassert solution('''9\n9 9 9 9 9 9 9 9''') == '1'\nassert solution('''15\n
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"8\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 4 5 6') == '1'\nassert solution('1\\n2 3 4 5 10') == '2'\nassert solution('1\\n2 3 4 5 20') == '0'\nassert solution('1\\n2 3 4 5 1') == '0'\nassert solution('1\\n2 3 4 5 2') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''6\n1 2 3 4 5 6''') == '0'\nassert solution('''5\n6 90 12 18 30 18''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    1 2 4 3 3 2\n''') == '2'\n\nassert solution('''\n    1\n    100\n''') == '1'\n\nassert solution('''\n    6\n    1 2 4 3 3 2\n''') == '2'\n\nassert solution('''\n    1\n    1000\n''') == '1'\n\nassert solution('''\n    7\n    4 4 1 4 1 4 4\n''') == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6\n1 2 4 3 3 2'''\n) == \"2\"\n\nassert solution(\n'''1\n100'''\n) == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('1\\n100') == '1'\nassert solution('7\\n1 2 3 4 5 6 7') == '1'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('2\\n1 1') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n10''') == '1'\nassert solution('''3\n1 2 3''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 1 3 2\") == \"2\"\nassert solution(\"4\\n1 3 3 1\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 3 5\") == \"2\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''15\n1 2 4 3 3 2''') == '3'\nassert solution('''28\n10 20 30 40 50 60 70 80 90 100''') == '2'\nassert solution('''100\n1''') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 4 3 3 2') == 2\nassert solution('100') == 1\nassert solution('1 100') == 1\nassert solution('1 1 1 1 1 1') == 3\nassert solution
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 4 3 3 2\\n\") == 2\nassert solution(\"2 2 4 4 4 4\\n\") == 2\nassert solution(\"2 2 2 2 2 2\\n\") == 2\nassert solution(\"2 2 2 2 2 2\\n\") == 2\nassert solution(\"2 2 2 2 2 2\\n\") == 2\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('1\\n100') == '1'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '4'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 10') == '2'\nassert solution('1 0 0 0 0 1') == '3'\nassert solution('1 1 1 1 1 1') == '-1'\nassert solution('0 1 1 0 0 1') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2''') == '3'\nassert solution('''5 3''') == '2'\nassert solution('''10 3''') == '-1'\nassert solution('''10 10''') == '3'\nassert solution('''0 0 0 0 0 0 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n0') == '2'\nassert solution('3\\n1') == '-1'\nassert solution('3\\n0\\n0\\n0') == '-1'\nassert solution('5\\n1') == '2'\nassert solution('10\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '3'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/heaters.in') == '2'\nassert solution('inputs/heaters_1.in') == '3'\nassert solution('inputs/heaters_2.in') == '2'\nassert solution('inputs/heaters_3.in') == '3'\nassert solution('inputs/heaters_4.in') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''5 10\n0 0 0 0 0\n''') == '-1'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 1\n''') == '3'\nassert solution('''3 1\n0 0 1\n''') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '3'\nassert solution('''\n100\n''') == '24'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '3'\nassert solution('''30''') == '5'\n\nprint('Test complete!')\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '3'\nassert solution('''30''') == '0'\nassert solution('''1000''') == '3628800'\nassert solution('''1000000''') == '25164150'\nassert solution('''5000000''') == '315225100'\nprint('Passed!')\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''5''') == '3'\nassert solution('''9''') == '6'\nassert solution('''35''') == '9'\nassert solution('''99''') == '17'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('1000000') == '0'\nassert solution('5') == '3'\nassert solution('500000000') == '0'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('100') == '24'\nassert solution('1000') == '168'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"1\"\nassert solution(5) == \"3\"\nassert solution(100) == \"7\"\nassert solution(1000) == \"385\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"))((((\") == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('(((())))') == 3\nassert solution('()()()') == 0\nassert solution(')(') == 0\nassert solution(')((((((()))))))') == 0\nassert solution('((((((((()))))))))') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(((()))\") == \"((1))+1\"\nassert solution(\"()()()\") == \"((1)+1)+1\"\nassert solution(\"()()\") == \"((1)+1)\"\nassert solution(\"((((\") == \"((1)+1)\"\nassert solution(\")\") == \"((1)+1)\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()()()') == 0\nassert solution('(((()'): 0\nassert solution('()()()'): 3\nassert solution('))()'): 3\nassert solution('))()()'): 3\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('data/1.txt').read()) == 3\nassert solution(open('data/2.txt').read()) == 0\nassert solution(open('data/3.txt').read()) == 3\nassert solution(open('data/4.txt').read()) == 0\nassert solution(open('data/5.txt').read()) == 5\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('()') == 0\nassert solution(')(') == 0\nassert solution(')(()') == 2\nassert solution(')(())') == 2\nassert solution('()()') == 3\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == 0"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('abcde', 'abcd') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"aabc\", \"ab\") == 1\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('bb') == 1\nassert solution('bab') == 2\nassert solution('bbb') == 1\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nprint(\"Test cases passed\")"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '4'\nassert solution('2 3 3 1') == '6'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 2') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 3') == '0'\nassert solution('1 1 2 2') == '0'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 2 1 1') == '4'\nassert solution('2 2 1 1') == '4'\nassert solution('1 2 1 1') == '2'\nassert solution('2 2 1 1') == '4'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '4'\nassert solution('-2 1 1 1') == '-4'\nassert solution('1 -2 1 1') == '-2'\nassert solution('1 -2 -1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 1') == '2'\nassert solution('3 4 2 2') == '4'\nassert solution('10 30 2 2') == '0'\nassert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 1 1''') == '2'\nassert solution('''1 2 1 1''') == '2'\nassert solution('''-1 -2 -3 -4''') == '-8'\nassert solution('''1000 -2000 300 500''') == '2500'\nassert solution('''-2 2 -2 1''') == '-2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1, 2, 1, 1) == \"2\"\nassert solution(2, 1, 1, 1) == \"2\"\nassert solution(2, 4, 2, 2) == \"4\"\nassert solution(2, 4, 5, 3) == \"4\"\nassert solution(5, 5, 2, 1) == \"20\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"9 1 4 4 6 7\") == \"2\"\nassert solution(\"3 1 4 1\") == \"0\"\nassert solution(\"6 2 3 1 4 1 5\") == \"1\"\nassert solution(\"2 2 2 2 2 2 2 2 2\") == \"4\"\nassert solution(\"2 2 2 2 2 2 2 2 2\") == \"1\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n\n\"\"\"\nYou will receive a single line containing N, the number of problems.\nYou will then receive N problem-difficulty pairs, each of them a line, in the following format:\n\n{N}\n{d1 d2 d3... dN}\n\nIn the end of the input, there is a line containing 2\n\n{number of choices}\n\nAfter you receive the pairs, print the number of choices of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same.\n\n-----Input-----\n6\n9 1 4 4 6 7\n\n-----Output-----\n2\n\n-----Sample Input-----\n6\n9 1 4 4 6 7\n\n-----Sample Output-----\n2\n\n-----Explanation-----\nThe answer is 2, because there are two choices of K:\nK=5 or K=6, where Problem 1, 5, and 6 will be for ARCs, Problem 2, 3, and 4 will be for ABCs.\n\n-----Input-----\n2\n1 1\n\n-----Output-----\n1\n\n-----Sample Input-----\n2\n2 2\n\n-----Sample Output-----\n2\n\n-----Explanation-----\nThe answer is 1, because there is only one choice of K: K=2.\n\n\"\"\"\n\nN = int(sys.stdin.readline())\nproblems = [int(x) for x in sys.stdin.readline().split()]\nK = int(sys.stdin.readline())\n\nARCs = 0\nABCs = 0\n\nfor i in problems:\n    if i >= K:\n        ARCs += 1\n    else:\n        ABCs += 1\n\nprint(ARCs // K)\nprint(ABCs // K)\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('2\\n2') == '1'\nassert solution('6\\n9 1 4 4 6 7\\n2\\n2') == '1'\nassert solution('4\\n1 4 4 4\\n2\\n1') == '1'\nassert solution('5\\n4 5 4 4 6') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n4') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('2\\n1 2') == '0'\nassert solution('4\\n2 2 2 2') == '1'\nassert solution('5\\n1 1 1 1 1') == '0'\nassert solution('10\\n2 2 2 2 2 2 2 2') == '0'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == \"2\"\nassert solution('6\\n5 2 1 1 2') == \"2\"\nassert solution('6\\n6 4 1 1 1') == \"1\"\nassert solution('6\\n6 1 2 1 1') == \"1\"\nassert solution('6\\n6 1 2 2 1') == \"0\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\n7 7 7 7 7 7 7 7\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1 1 1\") == \"4\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"2\\n0 0\") == \"1\"\nassert solution(\"2\\n0 0\") == \"1\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('1 2 3 4 5 6 7 8 9') == '6'\nassert solution('2 4 3 1 2 4 4 6 7') == '2'\nassert solution('4 4 3 1 2 3 4 4 6 7') == '3'\nassert solution('4 4 3 1 2 3 2 4 4 6 7') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == \"2\"\nassert solution('6\\n9 1 5 4 6 7') == \"0\"\nassert solution('6\\n9 1 4 4 6 7') == \"2\"\nassert solution('8\\n7 8 9 10 11 12 13 14 15') == \"0\"\nassert solution('8\\n7 8 9 10 11 12 13 14 15') == \"4\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('1\\n1') == '1'\nassert solution('3\\n1 3 4') == '0'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 1 3') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '7 24 21 23' +\n    '16 17 14 20 20 11 22'\n) == '3'\n\n'''\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''3 1 2 3''') == '1'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''17 17 14 20 20 11 22''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''17 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '4'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n\n'''\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 3\n\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"16 17 14 20 20 11 22\") == \"3\"\n\"\"\"\n\n\nfrom functools import lru_cache\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('1\\n5') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''1000\n5000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n3 2 1 1 1 1 1''') == '3'\nassert solution('''2\n4 7 12 100 150 199''') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('50\\n2 10 50 110 250') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n\n\n\n\"\"\"\n\n\"\"\"\n\n-----A-On-Time-Programming-----\n\"\"\""
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n1 1 1 1 1 1 1 1''') == '1'\nassert solution('''6\n4 4 4 4 4 4 4 4''') == '0'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5\\n2 10 50 110 250') == '4'\nassert solution('10\\n4 7 12 100 150 199') == '3'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('11\\n4 7 12 100 150 199') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"10\n1 2 5 6 7 10 21 23 24 49\n\n\"\"\") == \"4\"\n\nassert solution(\"\"\"5\n2 10 50 110 250\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"6\n4 7 12 100 150 199\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6\n4 7 12 100 150 199\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n5 2 11 3 7') == '1 4'\nassert solution('2\\n5 2 11 3 7\\n6 2 11 3 7') == '1 2\\n2 4'\nassert solution('3\\n5 3 11 7') == '1 4'\nassert solution('3\\n5 3 11 7\\n4 5 11 7') == '1 2'\nassert solution('4\\n5 4 6 7 8') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2\\n2 1') == '1 2'\nassert solution('1 2\\n2 1\\n3 4') == '1 4'\nassert solution('5\\n2 4 8 3 6\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n2 4 8 3 6\\n2 4 8 3 6') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 2\"\n\"\"\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"5\\n5 2 11 3 7\") == \"\"\nassert solution(\"5\\n5 2 11 3 7\") == \"\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\n\nassert solution('''5\n5 2 11 3 7\n''') == '1 4'\n\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\n\nassert solution('''7\n5 2 11 3 7 8\n''') == '1 4'\n\nassert solution('''8\n5 2 11 3 7 8 9\n''') == '1 4'"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('1\\n1\\n1') == '1 1'\nassert solution('2\\n1') == '1 1'\nassert solution('2\\n2') == '2 2'\nassert solution('1\\n1\\n1') == '1 1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 11 3 7') == '1 4'\nassert solution('2 4') == '1 4'\nassert solution('5 2 11 3 7') == '2 4'\n\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\n\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n3 3 2 1 1 2''') == '1 2'\nassert solution('''4''') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''5\n5 2 11 3 7\n''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\nassert solution('''7\n2 5 11 3 7 1\n''') == '1 4'\nassert solution('''10\n2 5 11 3 7 1 4 8 9 10\n''') == '1 4'\n\n\n-----"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"001100\") == \"001110\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"00110\") == \"01110\"\nassert solution(\"00100\") == \"00111\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"211200\") == \"120120\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"120\") == \"021\"\nassert solution(\"1220\") == \"2220\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'\nassert solution('100100') == '100100'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('021') == '021'\nassert solution('121') == '021'\nassert solution('000000') == '021'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n121''') == '021'\nassert solution('''6\n000000''') == '001122'\nassert solution('''6\n211200''') == '211200'\nassert solution('''6\n120110''') == '120120'\nassert solution('''12\n121''') == '021'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"001122\") == \"120120\"\nassert solution(\"211200\") == \"120120\"\nassert solution(\"120110\") == \"120120\"\nassert solution(\"120130\") == \"120130\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('121') == '021'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'\nassert solution('210000') == '211100'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n3\n121\n''') == '021'\n\nassert solution('''\\\n6\n000000\n''') == '001122'\n\nassert solution('''\\\n6\n211200\n''') == '211200'\n\nassert solution('''\\\n6\n120110\n''') == '120120'"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"012\") == \"021\"\nassert solution(\"01212\") == \"012122\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('1 2 3') == '10'\nassert solution('2 1') == '2'\nassert solution('2 1 2') == '5'\nassert solution('4 1 3 2') == '23'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 1\n0\n1\n0\n0\n1\n1\n1''') == '4'\nassert solution('''0 1\n0\n1\n1\n0\n0\n1\n1\n1''') == '4'\nassert solution('''0 1\n0\n1\n0\n0\n1\n1\n1''') == '4'\nassert solution('''0 1\n0\n1\n1\n0\n0\n1\n1\n1''') == '4'\nassert solution('''0 1\n0\n1\n1\n1\n1\n1\n1\n1''') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"100 100\") == \"1\"\nassert solution(\"100 100\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 1\n3''') == '4'\nassert solution('''4 7\n1\n3\n4\n7''') == '1'\nassert solution('''1 1\n2\n''') == '0'\nassert solution('''1 1\n1\n1\n''') == '0'\nassert solution('''10 1\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '4875'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '3'\nassert solution('6 2') == '3'\nassert solution('6 2') == '3'\nassert solution('10 2') == '7'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n1\n0\n1\n0\n0\n1\n0\n1\n1\n0\n1\n0\n0\n1\n0\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n1\n1\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"7\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"8\"\nassert solution(\"8 10\") == \"45\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6 2 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n10 9 4\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n13 2 4\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n0 0 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n100 200 100\n\"\"\") == \"0\""
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-6 -4 2') == '-2'\nassert solution('2 4 6') == '-2'\nassert solution('-2 -4 -6') == '2'\nassert solution('3 1 4') == '1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 4''') == \"2\"\nassert solution('''8 3 4''') == \"1\"\nassert solution('''9 6 2''') == \"3\"\nassert solution('''7 6 2''') == \"4\"\nassert solution('''4 2 5''') == \"4\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 2 4\") == \"0\"\nassert solution(\"-1 2 4\") == \"0\"\nassert solution(\"0 1 4\") == \"0\"\nassert solution(\"5 10 3\") == \"3\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('3 2 3') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 2 2') == '1'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == input(\"\")\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('9 9 9') == '0'\nassert solution('1 0 4') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '2'\nassert solution(3) == '0'\nassert solution(4) == '4'\nassert solution(5) == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('-1') == ''\nassert solution('-1 0') == ''\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11''') == 2\nassert solution('''14''') == 0\nassert solution('''61441''') == 2\nassert solution('''571576''') == 10\nassert solution('''2128506''') == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\nprint(solution(int(stdin.readline())))\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 27\n-----\nimport sys\nsys.stdin = open(\"text.txt\")\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"27\"\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('3') == 9\nassert solution('10') == 55\nassert solution('100000000000000000') == 9223372036854775808\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 27\nassert solution('10') == 26\nassert solution('1') == 1\nassert solution('30') == 30\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"27\"\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 27\n'''\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(5) == 15\nassert solution(10) == 26\nassert solution(15) == 39\nassert solution(20) == 50\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3) == 27"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''13''') == '1'\nassert solution('''927''') == '1'\nassert solution('''48''') == '0'\n'''\n\nfrom functools import lru_cache\n\n@lru_cache\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\""
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"49\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"999\") == \"1\"\n\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('27') == '0'\nassert solution('27') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(927) == 1\nassert solution(48) == 0\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\n-----Solutions-----\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n2 5 3 1') == 4\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[3]\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(4)\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 3 1') == 4\nassert solution('2\\n3 5 3 1') == 4\nassert solution('2\\n2 2 2 2') == 8\nassert solution('2\\n2 2 2 2') == 8\nassert solution('2\\n2 2 2 2') == 8\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\n\nassert solution('''5 2\n8 1\n5 1\n999999733 999999732\n999999733 999999733''') == '8'\n\nassert solution('''3 3\n4 1\n6 3\n999999999''') == '1'\n\n\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n6 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7''') == '1\\n8\\n1\\n99999999\\n1'\nassert solution('''8 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7\n99999999 7''') == '1\\n8\\n1\\n99999999\\n1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\n1\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\n2\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\n\"\"\""
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\") == \"\"\n\nassert solution(\"3\\n8 7\") == \"2\"\nassert solution(\"3\\n8 1\") == \"8\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n8\\n6\\n999999733\\n999999733\\n') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8\\n8\\n6\\n999999733\\n999999733\\n') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8\\n8\\n6\\n999999733\\n999999733\\n') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8\\n8\\n6\\n999999733\\n999999733\\n') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('8\\n8\\n6\\n999999733\\n999999733\\n') == '2\\n8\\n1\\n999999733\\n1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733'''\n) == '2\\n8\\n1\\n999999733\\n1'\n\nassert solution(\n'''5\n5 5\n5 1\n5 1\n5 1\n5 1'''\n) == '5'\n\nassert solution(\n'''6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n'''\n) == '8'\n\nassert solution(\n'''10\n0 2\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10'''\n) == '5'\n\nassert solution(\n'''10\n1 2\n2 4\n3 6\n4 8\n5 10\n6 12\n7 14\n8 16\n9 18\n10 20'''\n) == '6'"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7\\n8 1\\n6 10\\n99999 733 9999997 32\\n999999733 999999733') == '2\\n8\\n1\\n99999\\n1'\nassert solution('5 7\\n8 1\\n6 10\\n99999 733 9999997 32\\n999999733 999999733') == '2\\n8\\n1\\n99999\\n1'\nassert solution('2 5\\n2 1\\n2 4\\n2 2\\n3 2\\n3 3\\n3 3') == '6\\n3\\n4'\nassert solution('2 5\\n2 1\\n2 4\\n2 2\\n3 2\\n3 3\\n3 3') == '6\\n3\\n4'\nassert solution('2 5\\n2 1\\n2 4\\n2 2\\n3 2\\n3 3\\n3 3') == '6\\n3\\n4'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 0\") == \"2\"\nassert solution(\"5 5\\n2 1 2 3 4\\n1 2\\n0 0 1 0\") == \"1\"\nassert solution(\"5 5\\n2 1 2 3 4\\n1 2\\n0 0 1 0\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 0\") == \"2\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"4 2\\n2 1 2\\n1 2\\n0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 1 2\\n1 2\\n0 1\") == \"4\\n\"\nassert solution(\"4 4\\n2 1 2\\n1 2\\n0 1\") == \"4\\n\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 3\\n2 1 2 3\\n2 2 3\") == \"2\"\nassert solution(\"2 3\\n2 1 2 3\\n2 2 3\") == \"2\"\nassert solution(\"2 3\\n2 1 2 3\\n2 2 3\") == \"2\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n0 1') == '2'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n0 2') == '1'\nassert solution('3 3\\n2 1 2 3\\n2 1 3\\n1 2\\n1 2') == '6'\nassert solution('2 2\\n1 1\\n0 1') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn, m = [int(x) for x in stdin.split()]\n\ncombos = (n + m) // 2\n\non = 0\noff = 0\nfor _ in range(combos):\n    on += sum([int(x) for x in stdin.split()]) % 2\n    off += (m - sum([int(x) for x in stdin.split()])) % 2\n\nprint(on, off, sep='\\n')\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom math import gcd\nfrom fractions import Fraction"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 3\\n1 2 2\\n1 2\\n0 1\\n0 2') == '3'\nassert solution('4 3\\n1 2 2 3\\n1 2 2\\n1 2\\n0 1 2\\n0 3') == '1'\nassert solution('3 2\\n1 2 1\\n1 1\\n0 1\\n0 1') == '1'\nassert solution('2 3\\n2 2 2\\n2 2\\n0 1 2\\n0 2') == '4'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"0\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"1 2\\n1\") == \"0\"\nassert solution(\"1 2\\n1\") == \"0\"\nassert solution(\"1 2\\n1\") == \"0\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"2 4 6 0\") == \"4.6813187500000009\"\nassert solution(\"8 11 17 2\") == \"3.5847863999721006\"\nassert solution(\"8 11 17 2\") == \"3.5847863999721006\"\nassert solution(\"8 11 17 2\") == \"3.5847863999721006\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n'''"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('2 2 2 2') == '1.00000000000000000000'\nassert solution('2 2 2 2') == '1.00000000000000000000'\nassert solution('3 3 3 3') == '2.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"2 4 8 0\") == \"11.499999999999998\"\nassert solution(\"2 4 6 0\") == \"9.000000000000000000\"\nassert solution(\"2 4 6 0\") == \"9.000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == \"5.00000000000000000000\"\nassert solution('2 6 10 0') == \"9.00000000000000000000\"\nassert solution('2 6 9 0') == \"5.00000000000000000000\"\nassert solution('3 4 6 0') == \"6.00000000000000000000\"\nassert solution('3 4 6 12') == \"6.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n\"\"\"\nA, B, H, M = map(int, stdin.split())\na, b = a * B / A, b * A / B\nH = min(H, 11 - H)\nM = min(M, 59 - M)\nprint(a + b + H * 12 + M)\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8\\n'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97\\n'\nassert solution('3 1\\n1 1 1\\n') == '6\\n'\nassert solution('3 2\\n1 2 3\\n') == '99\\n'\nassert solution('3 3\\n1 2 3\\n') == '111\\n'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 2 3 4 5\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 2 3 4 5\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 2 3 4 5\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 2 3 4 5\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('2 3 4 5') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('inputs/test_6_1.txt') == '8'\nassert solution('inputs/test_6_2.txt') == '97'\nassert solution('inputs/test_6_3.txt') == '3'\nassert solution('inputs/test_6_4.txt') == '3'\nassert solution('inputs/test_6_5.txt') == '19'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4 5 60 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8\\n'\nassert solution('3 1\\n1 1 1\\n') == '6\\n'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97\\n'\n'''\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"(4, 5)\n\"\"\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n'''\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '1 2 3 2'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '1 2 3 2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"5 0\") == \"0\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0') == '0'\nassert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0') == '0'\nassert solution('1000000') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0\\n1000000\\n') == '0\\n0\\n'\nassert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n\nassert solution('''2 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '2'\n\nassert solution('''1 1\n-1 1\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\n\n\n\n\n\nFor the following test cases:\n\ninput: \n6 4\n-2 -3 1 2 3\n1 3\n4 5\n2 5\n1 3\n5\n1 2\n5\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n\noutput:\n6\n2\n1 4\n5\n2 3\n\ninput: \n7 6\n-2 -3 1 2 3 4 5\n1 3\n4 5\n2 5\n1 3\n5\n1 2\n5\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1 3\n6\n4 4\n2 5\n3 4\n3 5\n4\n2 4\n1 4\n5\n1"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fced') == \"Yes\"\nassert solution('xyz') == \"Yes\"\nassert solution('r') == \"Yes\"\nassert solution('dabcef') == \"Yes\"\nassert solution('az') == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"solution\") == \"Yes\"\n\n-----Test1-----\nInput\n1\nfced\nxyz\n\nOutput\nYes\n\"\"\""
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"No\"\nassert solution(\"fced\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\n--- 32.3 MB, 10.1 ms\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'Yes'\nassert solution('aabcd') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n8\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == '''\nYes\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\n'''\n\n\nassert solution('''\n1\nabc\n\n''') == '''\nNo\n'''\n\n\nassert solution('''\n8\nabc\n\n''') == '''\nNo\n'''\n\n\nassert solution('''\n8\na\nb\nc\nd\ne\nf\ng\nh\n\n''') == '''\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n'''\n\n\nassert solution('''\n8\nabc\na\nb\nc\nd\ne\nf\ng\nh\n''') == '''\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n'''\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2\"\n\n\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\n\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"6\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1000000\") == \"0\"\nassert solution(\"4 -1 1 3 1 -1\") == \"7\"\n\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\nsegments = []\nfor i in range(m):\n    l, r = map(int, stdin.readline().split())\n    segments.append((l - 1, r - 1))\n\nsegments.sort(key=lambda x: x[1])\ncur = 0\nout = []\n\nwhile cur < len(segments):\n    low, high = segments[cur]\n    if high > n:\n        break\n    out.append(max(0, a[low] - min(a[low:high+1])))\n    cur += 1\n\nprint(max(out) if len(out) else 0)\nout = []\n\nfor l, r in segments:\n    if r > n:\n        break\n    out.append(a[l])\n\nprint(max(out) if len(out) else 0)\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 1\n1\n''') == '1'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn, m = map(int, stdin.split())\na = [int(x) for x in stdin.split()]\n\ncount = 0"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == 'L'\nassert solution('2\\n1\\n3') == 'L'\nassert solution('2\\n3\\n1') == 'L'\nassert solution('2\\n3\\n4') == 'LL'\nassert solution('2\\n4\\n3') == 'LL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\nn = int(stdin.readline().strip())\nseq = [int(x) for x in stdin.readline().strip().split()]\n\nk = 1\ns = ''\nfor i in range(n-1):\n    if seq[i] < seq[i+1]:\n        k += 1\n        if s == '':\n            s += 'L'\n        else:\n            s += 'R'\n    else:\n        if s == '':\n            s += 'R'\n        else:\n            s += 'L'\n\nprint(k)\nprint(s)\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n-----\n\nThe second example is described in the problem statement.\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == 'LLL'\nassert solution('1 2 3') == 'LL'\nassert solution('1 2 3') == 'LL'\nassert solution('1 3 5 4 2') == '4'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"1 2 4 3\") == \"LLRL\"\nassert solution(\"1 3 5 6 7 4 2\") == \"LRLRLLL\"\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == 'LRLRLLL'\nassert solution('''3\n1 2 3''') == 'LLL'\nassert solution('''4\n1 2 4 3''') == 'LLRL'"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n2 1 5 4 3\n\"\"\") == '4'\n\nassert solution(\"\"\"7\n1 3 5 6 7 4 2\n\"\"\") == '7'\n\nassert solution(\"\"\"3\n1 2 3\n\"\"\") == '3'\n\nassert solution(\"\"\"4\n1 2 4 3\n\"\"\") == '4'\n\nassert solution(\"\"\"7\n1 3 5 6 7 4 2\n\"\"\") == '7'\n\"\"\"\n\nThe second example is described in the problem statement.\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == 'LRLRLLL'\nassert solution('''3\n1 2 3''') == 'LLL'\n\n\n-----\n\n## To test your solution, see\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 5 4 3\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"3 4 3\") == \"1\"\nassert solution(\"4 1 3\") == \"2\"\nassert solution(\"2 1 5 4 3\") == \"4\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\n\nassert solution('''2\n1 2\n''') == '2'\n\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''3\n1 2 3\n''') == '2'\n\nassert solution('''4\n1 2 3 4\n''') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 5 3 4\") == \"4\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\n\n\n\"\"\"\n\n\"\"\"\nimport sys\nsys.setrecursionlimit(1000000)\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n4 3 2 4 3 2 4 3\\n') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5\n1 2 5 3 4\n\"\"\") == '4'\n\nassert solution(\n\"\"\"2\n1 2\n\"\"\") == '2'\n\nassert solution(\n\"\"\"7\n6 5 4 3 2 4 3\n\"\"\") == '2'\n\nassert solution(\n\"\"\"8\n4 9 5 4 7 1 1 8\n\"\"\") == '5'\n\nassert solution(\n\"\"\"9\n4 8 7 6 5 4 3 9 8\n\"\"\") == '5'"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('7\\n6 5 4 3 2 4 3') == '2'\nassert solution('5\\n1 2 5 3 4') == '4'\nassert solution('2\\n1 2') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 2 2 2') == '2'\nassert solution('1 2 2 2 2') == '0'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 5\\n1 2 2 4 5') == '1'\nassert solution('1 2 2 4 5\\n1 2 2 4 5') == '0'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'\nassert solution('5 3\\n1 2 3 3 3') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 2 1''') == '2'\nassert solution('''5 3\n1 2 2 2 2''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''6 3''') == '1'\nassert solution('''8 3''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\n\nassert solution('''5 3''') == '2'\nassert solution('''5 3''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''1 10\n7''') == '3'\nassert solution('''1 10\n11''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 3 3\n''') == '2'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''1 0\n''') == '0'\nassert solution('''2 3\n1 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 3\n1 2 2 4 5\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"5 3\n1 2 3 3 3\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"5 3\n1 2 3 3 3\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '1\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '2\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '0\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '0\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 3\\n') == '0\\n'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n4 5 1 2 3''') == '2'\nassert solution('''5 3\n1 3 5 3 3''') == '3'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"4 2 0\") == \"1\"\nassert solution(\"8 2 0\") == \"0\"\nassert solution(\"1 100 100\") == \"0\"\nassert solution(\"4 1 2\") == \"1\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('10 5 10') == '5'\nassert solution('20 5 10') == '10'\nassert solution('1000 1000 1000') == '1000'\nassert solution('1000 1000 1000') == '1000'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 1 1') == '0'\nassert solution('8 1 2') == '1'\nassert solution('8 1 3') == '2'\nassert solution('8 1 4') == '3'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('9 3 9') == '0'\nassert solution('11 3 11') == '3'\nassert solution('10000000 1000000000 1000000000') == '0'\nassert solution('10000000 1000000000 1000000000') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('2 2 1') == '1'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 10 5') == '10'\nassert solution('6 4 2') == '10'\nassert solution('8 2 0') == '0'\nassert solution('2 0 1') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('4 1 0') == '0'\nassert solution('8 0 2') == '0'\nassert solution('8 3 4') == '4'\nassert solution('8 2 0') == '8'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 4\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''2\n9\n1 2 3 4 5 6 7 8 9\n9\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2\n9\n1 2 3 4 5 6 7 8 9\n1\n2\n''') == '-1'\nassert solution('''2\n9\n2 3 4 5 6 7 8 9\n4\n1 2 3 4 5 6 7 8 9\n1\n2\n''') == '-1'\nassert solution('''2\n9\n2 3 4 5 6 7 8 9\n3\n1 2 3 4 5 6 7 8 9\n1\n2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n'''\n'''\n    Given a list of all its divisors except 1 and itself, we can find an integer x whose all its divisors are in the list.\n\n    If we are able to find such an integer x, then we can safely say that the input data is contradictory because we know that all its divisors are not in the list, thus the solution to the query is the answer to the question: \"what is the minimum possible x?\"\n\n    For each query we have to find the smallest possible x that can be used to answer the query.\n\n    The smallest possible x is defined as the smallest integer x such that all its divisors are in the list, because we know that all its divisors are not in the list.\n\n'''\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '48'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '4'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '-1'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '-1'\nassert solution('2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"2\\n1\\n2\\n\") == \"-1\\n\"\nassert solution(\"1\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n8\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == '48\\n4'\n\nassert solution(\"\"\"\n2\n3\n2 2\n\"\"\") == '-1'\n\nassert solution(\"\"\"\n2\n3\n2 3\n\"\"\") == '-1'\n\nassert solution(\"\"\"\n2\n1\n2\n\"\"\") == '-1'\n\nassert solution(\"\"\"\n2\n2\n2 2\n\"\"\") == '-1'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2') == '48'\nassert solution('1\\n2\\n1\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1') == '-1'\nassert solution('1\\n2\\n1\\n1') == '-1'\nassert solution('1\\n2\\n2\\n2') == '-1'\n\n\n-----Best Solution-----\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n') == '48\\n4'\n\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3') == '48'\nassert solution('2\\n8\\n1 2 3 4 5 6 7 8') == '4'\nassert solution('2\\n8\\n3 4 5 6 8') == '4'\nassert solution('2\\n8\\n3 4 5 6 7 8 9') == '-1'\nassert solution('2\\n8\\n3 4 5 6 7 8 9 10') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n6') == '1'\nassert solution('2\\n6') == '4'\nassert solution('2\\n4') == '2'\nassert solution('2\\n3') == '3'\nassert solution('2\\n5') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3''') == '48'\nassert solution('''8\n1\n2\n\n7\n1 1''') == '-1'\nassert solution('''8\n7\n1 1\n7\n1 1''') == '-1'\nassert solution('''8\n1\n2\n\n1\n1''') == '-1'\nassert solution('''8\n8\n1\n1''') == '-1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 2 3'\nassert solution('2 3 4 4') == '2 4'\nassert solution('6 7 8 9 10') == '6 7'\nassert solution('1 1 1 1 1 1') == '1 1 1 1'\nassert solution('2 4 2 4 2 4') == '2 4'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6''') == '3'\nassert solution('''6\n5\n5\n5\n5\n5\n1''') == '3'\nassert solution('''5\n2\n4\n4\n4\n4''') == '2'\nassert solution('''5\n6\n6\n6\n6\n6\n''') == '1'\nassert solution('''5\n6\n6\n6\n6\n6\n6\n''') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 5 1 6 1') == '3', '1'\nassert solution('2 4 2 4 4') == '2', '4'\nassert solution('6 6 6 6 6 6') == '1', '6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n6') == '1\\n6'\nassert solution('6\\n1') == '1\\n6'\nassert solution('6\\n6') == '1\\n6'\nassert solution('6\\n6\\n6') == '1\\n6'\nassert solution('6\\n6\\n6\\n6') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('2\\n1 1\\n') == '1\\n1'\nassert solution('1\\n1\\n') == '1\\n'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n5\\n1\\n6\\n1') == '3\\n5 6 1'\nassert solution('2\\n4\\n2\\n4\\n4') == '2\\n4'\nassert solution('5\\n6\\n6\\n6\\n6') == '1\\n6'\nassert solution('6\\n6\\n6\\n6\\n6') == '1\\n6'\nassert solution('7\\n7\\n7\\n7\\n7') == '2\\n7'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('2 4 2 4 4\\n') == '2\\n4'\nassert solution('6 6 6 6 6 6\\n') == '1\\n6'\nassert solution('6 6 6 6 6 6\\n') == '1\\n6'\nassert solution('4 4 4 4 4\\n') == '1\\n4'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('42') == '43'\nassert solution('4') == '4'\nassert solution('99') == '100'\nassert solution('237') == '237'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('42') == '44'\nassert solution('99') == '103'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('42') == '44'\nassert solution('43') == '44'\nassert solution('12') == '13'\nassert solution('10') == '11'\nassert solution('16') == '17'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('96 17') == '96 18'\nassert solution('96 18') == '97 19'\nassert solution('96 19') == '97 20'\nassert solution('96 20') == '97 21'\nassert solution('96 21') == '97 22'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('123') == ''\nassert solution('12345') == ''\nassert solution('42') == ''\nassert solution('99') == ''\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"434\"\nassert solution(input()) == \"434\"\nassert solution(input()) == \"434\"\nassert solution(input()) == \"434\"\nassert solution(input()) == \"434\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == \"10\"\nassert solution('42') == \"44\"\nassert solution('99') == \"103\"\nassert solution('5') == \"7\"\nassert solution('234') == \"239\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('43') == '44'\nassert solution('4324') == '4325'\nassert solution('99') == '103'\nassert solution('234') == '235'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == \"aac\"\nassert solution('''ecoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"codeforces\"\nassert solution('''aac\nb\naba\ncodeforces\n''') == \"codeforces\"\n'''"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('aac') == 'b'\nassert solution('aab') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('abc') == 'a'\nassert solution('ecoosdcefr') == 'e'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcz') == 'abcz'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'e'\nassert solution('fdfsdf') == 'a'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac', 'First'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac', 'Second'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac', 'Third'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac', 'Fourth'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac', 'Fifth'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == 'b'\nassert solution('''22''') == 'z'\nassert solution('''24''') == 'aa'\nassert solution('''100''') == 'zz'\nassert solution('''220''') == 'zy'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'b'\nassert solution('27') == 'aa'\nassert solution('18277') == 'zzz'\nassert solution('475253') == 'aaaa'\nassert solution('8') == 'zz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"1\") == \"a\"\nassert solution(\"26\") == \"z\"\nassert solution(\"27\") == \"aa\"\nassert solution(\"703\") == \"zy\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == 'b'\nassert solution('''5''') == 'c'\nassert solution('''7''') == 'e'\nassert solution('''10''') == 'c'\nassert solution('''26''') == 'c'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"d\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n1') == 'a'\nassert solution('\\n1\\n2') == 'a'\nassert solution('\\n1\\n2\\n3') == 'abc'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('ba') == 'a'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('22') == 'ab'\nassert solution('333') == 'abc'\nassert solution('555') == 'abcd'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"b\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"to be or not to be\") == \"TB or not TB\"\nassert solution(\"a ab a a b ab a a b c\") == \"a AAAB AAAB c\"\nassert solution(\"aa bb aa aa bb bb\") == \"a AAAB AAAB c\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nto be or not to be''') == '12'\nassert solution('''4\na ab a a b ab a a b c''') == '13'\nassert solution('''3\naa bb aa aa bb bb''') == '11'\n\n\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('a bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\nto be or not to be\n''') == '12'\nassert solution('''10\na ab a a b ab a a b c\n''') == '13'\nassert solution('''6\naa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\nassert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'\nassert solution('1 2 1 2 2') == '1 2'\nassert solution('1 2 1 2 2') == '1 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n1 2 3\\n') == '2 2 3'\nassert solution('1 2\\n1 2\\n') == '2'\nassert solution('3 1\\n1 1 1 1 1\\n') == '1 1'\nassert solution('5 1\\n1 1 1 1 1 1\\n') == '1 1 1 1 1 1'\nassert solution('5 3\\n1 2 3 4 5\\n') == '1 3 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''5 1\n1 1000 2000 2''') == '2000'\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1\\n2'\nassert solution('2\\n2') == '1\\n1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n3') == '1\\n2\\n3'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\nassert solution('''5 2\n1 2000 2000 2\n''') == '2 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1') == '4000'\nassert solution('5 1') == '5'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '28'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''3 2\n1 2000 2000 2''') == '2 2'\nassert solution('''4 2\n1 3 1 1''') == '1 2 3'\n'''"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2\\n') == '20'\nassert solution('5 1\\n1 1 1 1 1\\n') == '1'\nassert solution('4 2\\n1 2000 2000 2\\n') == '4000'\nassert solution('8 2\\n1 2000 2000 2\\n') == '2000'\nassert solution('5 4\\n1 2000 2000 2\\n') == '2000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20\\n3 2 3'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1\\n5'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000\\n2 2'\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 -5 3 2\n\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n\n''') == '3'\n\nassert solution('''8\n7 -9 1 -2 3 -4 4 8\n\n''') == '2'"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n-5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n\n\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1, n):\n    if a[i-1] == 0:\n        continue\n    s = a[i-1]\n    j = i\n    while j < n and a[j]!= 0:\n        s += a[j]\n        j += 1\n    if s == 0:\n        ans += i - j + 1\n        a[j-1] = 0\nprint(ans)\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\nassert solution(\"2\\n1 2\") == \"1\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'\nassert solution('9') == '3'\nassert solution('-1 1 -1 1 -1 1 1 -1 -1') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''-1 -1 -1 -1 -1 1 1 -1 -1''') == '0'\nassert solution('''16 -5 -11 -15 10 5 4 -4''') == '3'\nassert solution('''-1 1 -1 1 -1 1 1 -1 -1''') == '6'\nassert solution('''16 -5 -11 -15 10 5 4 -4''') == '3'\nassert solution('''-1 -1 -1 -1 -1 1 1 -1 -1''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('4\\n1 -5 3 2') == '1'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '0'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 1\\n\") == \"0\\n\"\nassert solution(\"5\\n4 -2 3 2 1\\n\") == \"1\\n\"\nassert solution(\"7\\n-5 -11 -15 10 5 4 -4\\n\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '7'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5 1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''2 1\n5 1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n10 10\n5 5\n2 1000000000\n1000000000 1000000000\n\"\"\".strip()) == '0\\n10\\n10\\n1000000000\\n2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n\"\"\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n\nassert solution(\n\"\"\"2 10\n5 1\n2 1\n1 2\n2 1\n1 1\n\"\"\") == \"2\\n1\\n1\\n2\\n2\"\n\nassert solution(\n\"\"\"4 5\n2 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"0\\n2\\n1\\n1\"\n\nassert solution(\n\"\"\"3 5\n4 1\n1 1\n2 3\n1 1\n1 1\n\"\"\") == \"0\\n1\\n1\\n2\"\n\nassert solution(\n\"\"\"6 6\n5 5\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n100') == '0'\nassert solution('2\\n2') == '2'\nassert solution('5\\n5') == '0'\nassert solution('2\\n1000000000') == '1000000000'\nassert solution('1\\n1000000000 1000000000') == '0'\n\"\"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n1\n2\n3\n4\n5''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''5\n100\n5\n20\n5\n5''') == '0\\n2\\n1\\n2\\n0'\nassert solution('''5\n10\n5\n5\n5\n5''') == '0\\n2\\n1\\n2\\n0'\nassert solution('''5\n5\n5\n5\n5\n5''') == '0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '0'\nassert solution('5\\n5\\n5\\n5\\n5') == '5'\nassert solution('2\\n1000000000\\n1000000000\\n') == '1000000000'\nassert solution('2\\n100000000000\\n100000000000\\n') == '2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '0'\nassert solution('1010') == '2'\nassert solution('11110') == '3'\nassert solution('11111') == '4'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '1000000000'\nassert solution('''3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3\\n2 2') == '0'\nassert solution('2\\n1 1\\n1 1000000000') == '2'\nassert solution('3\\n1 1000000000\\n2 1000000000') == '1000000000'\nassert solution('5\\n1 1000000000\\n2 1000000000') == '2000000000'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'''\n\n'''\nTEST:\n\n$python3 solution.py < solution.py > solution_py.py\n0\n2\n10\n1000000000\n2000000000\n\n'''\n\nimport sys"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('7') == '1'\nassert solution('77') == '2'\nassert solution('7777') == '3'\nassert solution('77777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(4)"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(7) == 4\nassert solution(77) == 4\nassert solution(777) == 4\nassert solution(7000) == -1\nassert solution(22222) == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"42\") == \"1\"\nassert solution(\"42\") == \"1\"\nassert solution(\"42\") == \"1\"\nassert solution(\"42\") == \"1\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\nassert solution('7') == '1'\nassert solution('777') == '7'\nassert solution('777,777,777,777') == '-1'\nassert solution('7,777,777,777,777') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('101') == 4\nassert solution('7') == -1\nassert solution('77') == 3\nassert solution('777') == 4\nassert solution('7777') == 4\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"101\") == \"4\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('7777') == '-1'\nassert solution('777') == '-1'\nassert solution('77') == '4'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"77\") == \"4\"\nassert solution(\"777\") == \"4\"\nassert solution(\"7777\") == \"4\"\nassert solution(\"7777777777\") == \"-1\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n\n\n\n'''\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\nassert solution('''5 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '0'\nassert solution('''14 7\n2 1 4 3 5 6 9 10 7 11 8 12 13 14 15\n''') == '39'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 5') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\".join(input().split())) == \"\".join(input().split())\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 4\"\"\") == '4'\nassert solution(\"\"\"5 5\"\"\") == '1'\nassert solution(\"\"\"15 8\"\"\") == '48'\nassert solution(\"\"\"1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\"\"\") == '48'\n\n\"\"\""
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('2 1\\n1 2') == '2'\nassert solution('3 2\\n1 2') == '2'\nassert solution('3 2\\n1 3') == '2'\nassert solution('4 3\\n1 3') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3\\n1 2 3 4 5 6') == '4'\nassert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\n\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n\nassert solution('''1 1\n1\n''') == '1'\n\nassert solution('''5 10\n3 5 4 7 9 8 1 6 2\n''') == '1'"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('5 8') == '4'\nassert solution('5 15') == '2'\nassert solution('5 26') == '-1'\nassert solution('1 3 4 2 1 4 2') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\nassert solution('1 2 3 4\\n5 5 5 5 5') == '4'\nassert solution('5 15\\n5 5 5 5 5') == '2'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 26\\n5 5 5 5 5 5') == '-1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 31\\n5 5 5 5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 10\n2 3 1 1 2''') == '4'\nassert solution(\n'''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution(\n'''5 26\n5 5 5 5 5 5''') == '-1'\nassert solution(\n'''5 15\n5 5 5 5 5\n''') == '1'\nassert solution(\n'''5 16\n5 5 5 5 5\n''') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n1') == '-1'\nassert solution('5\\n2') == '-1'\nassert solution('5\\n1') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n7 6 5 4 3 2 1 0') == '3'\nassert solution('4\\n24 21 14 10') == '3'\nassert solution('1\\n0') == '0'\nassert solution('5\\n1 3 6 9 12') == '1'\nassert solution('3\\n14 5 1') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''2\n500 500\n''') == '0'\nassert solution('''3\n14 5 1\n''') == '-1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n\"\n    \"24 21 14 10\\n\"\n) == \"3\"\n\nassert solution(\n    \"2\\n\"\n    \"500 500\\n\"\n) == \"0\"\n\nassert solution(\n    \"3\\n\"\n    \"14 5 1\\n\"\n) == \"-1\"\n\nassert solution(\n    \"5\\n\"\n    \"1 3 6 9 12\\n\"\n) == \"1\"\n\nassert solution(\n    \"5\\n\"\n    \"1 3 6 9 12\\n\"\n) == \"0\""
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 6 9 12') == '1'\nassert solution('5\\n500 500') == '0'\nassert solution('5\\n14 5 1') == '-1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n4\\n1\\n2\\n3\") == \"-1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"2\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('6\\n7 8 9 10 11\\n') == '2'\n\nTest case:\n\ninput\n3\n1 2 1\n\noutput\n-1\n\ninput\n10\n1 1 2 3 4 5 6 7 8 9 10\n\noutput\n2\n\"\"\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '3'\nassert solution(input()) == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n5 2\n1 2 15 15 15\n''') == '5'\n\nassert solution('''\\\n6 1\n36 4 1 25 9 16\n''') == '2'\n\nassert solution('''\\\n4 4\n1 10 100 1000\n''') == '4'\n\nassert solution('''\\\n6 2\n9 8 6 2 4 7\n''') == '4'\n\nassert solution('''\\\n10 8\n
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 10 100 1000') == '2'\nassert solution('36 4 1 25 9 16') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16') == '2'\nassert solution('4 4\\n1 10 100 1000') == '4'\nassert solution('6 3\\n1 1 1 1 1 1') == '6'\nassert solution('5 3\\n1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '7'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '8'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '2'\nassert solution('1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 1 1') == '-1'\nassert solution('10 15 10') == '8'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == 8\nassert solution('1 10 1\\n9 9 9\\n') == -1\n\"\"\"\n\nN, K, M = map(int, stdin.strip().split())\nA = list(map(int, stdin.strip().split()))\n\nA.sort()\n\nmin_score = 0\nfor i in range(N - 1, K, -1):\n    min_score += i"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\n\"\"\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 5 7\\n8 10 3 6\\n') == '-1'\nassert solution('5 5 7\\n8 10 3 6\\n') == '-1'\nassert solution('5 1 7\\n8 10 3 6\\n') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('7 5 9') == '-1'\nassert solution('7 6 9') == '-1'\nassert solution('0 0 0') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 10 7''') == '8'\nassert solution('''8 10 3 6''') == '8'\nassert solution('''5 7 10''') == '8'\nassert solution('''2 2 2''') == '-1'\nassert solution('''0 1 1''') == '1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8'"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\nassert solution('''6 3 4\n3\n3\n3\n3\n3\n3\n''') == 'No'\nassert solution('''6 3 4\n3\n3\n3\n3\n3\n3\n''') == 'No'\nassert solution('''6 3 4\n2\n2\n2\n2\n2\n2\n''') == 'Yes'\nassert solution('''6 3 4\n4\n4\n4\n4\n4\n4\n''') == 'Yes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 6 3\") == \"No\"\nassert solution(\"5 6 3\") == \"No\"\nassert solution(\"5 6 3\") == \"No\"\nassert solution(\"5 6 3\") == \"No\"\nassert solution(\"5 6 3\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"3 3 4\\n3\\n1\\n3\\n2\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"5 2 5\\n2\\n4\\n1\\n3\\n2\\n4\\n1\\n3\\n1\\n2\\n1\\n2\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n\"\nassert solution(\"4 1 4\\n1\\n3\\n3\\n1\\n1\\n3\\n2\\n2\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\n\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 1 4\\n3\\n3\\n3\\n3\\n3') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 5 5\\n3\\n5\\n5\\n3\\n5') == 'No\\nNo\\nNo\\nYes\\nNo\\nNo'\nassert solution('1 1 2\\n1\\n1\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nYes\\nNo'\nassert solution('1 1 2\\n1\\n1\\n2\\n2\\n2') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('10 5 10\\n4\\n1\\n3\\n2\\n3\\n4\\n5\\n3\\n4\\n2\\n4\\n1\\n5\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n'\nassert solution('4 3 2\\n1\\n3\\n4\\n2\\n') == 'Yes\\nNo\\nYes\\nNo'\nassert solution('6 1 4\\n1\\n1\\n3\\n2\\n4\\n') == 'Yes\\nNo\\nNo\\nNo'\nassert solution('4 4 2\\n1\\n3\\n4\\n2\\n') == 'No\\nNo\\nYes\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"Yes\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"Yes\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"3 3 4\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"\nassert solution(\"2 2 3\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 4\\n3\\n1\\n3\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 4 4\\n3\\n1\\n3\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 4 3\\n3\\n1\\n3\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 4 3\\n3\\n1\\n3\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 4 3\\n3\\n1\\n3\\n2\\n2\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4 3\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"1 1 4\") == \"Yes\"\nassert solution(\"5 5 2\") == \"No\"\nassert solution(\"1 1 4\") == \"Yes\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES\\n00'\nassert solution('2 2\\n0 0 0\\n0 0 0\\n1 1 1 1\\n') == 'NO\\n'\nassert solution('3 4\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1 1\\n') == 'YES\\n010'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n1 1 1\\n') == 'NO\\n'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n1 1 1\\n') == 'NO\\n'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''3 4\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''3 4\n0 0 0\n0 0 0\n0 0 0\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == 'YES'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES\\n00'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n010\\n0000'\nassert solution('3 4\\n0 0 0\\n1 0 1\\n1 1 0\\n') == 'NO'\n\nprint(solution(''))\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 1\n0 1\n\"\"\") == 'YES\\n00'\nassert solution(\n\"\"\"\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\"\"\") == 'YES\\n010'\nassert solution(\n\"\"\"\n3 4\n0 0 0\n1 0 1\n1 1 0\n\"\"\") == 'NO'\nassert solution(\n\"\"\"\n3 4\n0 0 0\n1 0 1\n0 1 0\n\"\"\") == 'NO'\nassert solution(\n\"\"\"\n4 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\"\"\") == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES', 'Example 1'\nassert solution('''3 4\n0 0 0\n0 0 0\n1 1 1\n    ''') == 'NO', 'Example 2'\nassert solution('''2 2\n1 1\n1 1\n    ''') == 'YES', 'Example 3'\nassert solution('''4 4\n0 0 0 0\n0 0 0 0\n1 1 1 1\n    ''') == 'YES', 'Example 4'\nassert solution('''2 3\n0 0 0\n1 0 1\n1 1 0\n    ''') == 'NO', 'Example 5'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"1 2 2 1\") == \"YES\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('73') == 'Yes'\nassert solution('945') == 'No'\nassert solution('736') == 'Yes'\nassert solution('2371') == 'No'\nassert solution('2817') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\nassert solution('3') == \"No\"\nassert solution('122') == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123') == 'Yes'\nassert solution('0') == 'No'\nassert solution('7777777777') == 'Yes'\nassert solution('99999999999') == 'Yes'\nassert solution('1234567891') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yes'\nassert solution('21') == 'Yes'\nassert solution('3') == 'No'\nassert solution('362') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"121\") == \"No\"\nassert solution(\"373\") == \"Yes\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    stdin\n) == '3'\n\nassert solution(\n    stdin='6 2 1'\n) == '3'\n\"\"\"\n\nn, b, a = [int(x) for x in stdin.split()]\ns = [int(x) for x in stdin.split()]\n\ns_a = s[0]\ns_b = s[0]\n\ni = 1\n\nwhile i < n:\n    if s_a == 0 and s_b == 0:\n        break\n    s_a = max(s_a - 1, 0)\n    s_b = max(s_b - 1, 0)\n    i += 1\n\nprint(i)\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''2 2 1''') == '1'\nassert solution('''5 3 2''') == '4'\nassert solution('''10 2 4''') == '7'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('100 50 10') == '50'\n\n\n'''\n\nfrom typing import List\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''1 2 1''') == '2'\nassert solution('''7 2 1''') == '4'\nassert solution('''7 2 1''') == '4'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('1 0 0 1 0\\n0 1 0 1 0 1') == '3'\nassert solution('7 2 1\\n1 0 0 1 0 1 1\\n1 0 0 1 0 1 1') == '4'\n\n\n\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '5'\nassert solution('4 3 1') == '4'\nassert solution('1 2 1 2 1') == '4'\nassert solution('2 4 3 1') == '4'\nassert solution('2 3 1 2 1') == '4'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"10 2 5\") == \"5\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nassert solution('8-7+6-5+4-3+2-1-0') == 4\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n\"\"\""
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '375'\n\nassert solution(\"8-7+6-5+4-3+2-1-0\") == '4'\nassert solution(\"2+2\") == '-46'\nassert solution(\"112-37\") == '375'\n\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\n\"\"\""
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nassert solution('5+3*5') == '25'\nassert solution('2-3*5') == '1'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nprint(solution(input()))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('112-37') == 375\nassert solution('2+2') == -46\nassert solution('2+-2') == 0\nassert solution('2+2+2-2-2+-2-2') == 6\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('13 4') == 'NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\n\n\n\"\"\"\n\nn, k = map(int, stdin.readline().strip().split())\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''4 3''') == 'NO'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''13 4''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\\n\") == \"NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 5\\n\") == \"NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 9\\n\") == \"NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''4 3\n''') == 'YES'\nassert solution('''8 5\n''') == 'NO'\nassert solution('''3 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3''') == \"YES\"\nassert solution('''10 4''') == \"YES\"\nassert solution('''13 4''') == \"NO\"\nassert solution('''5 4''') == \"YES\"\nassert solution('''16 5''') == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\nassert solution('10 4\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('13 4\\n') == 'NO\\n'\nassert solution('15 5\\n') == 'YES\\n4 1\\n1 5\\n5 4\\n4 3\\n3 4\\n4 2\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('21 4\\n') == 'NO\\n'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\nassert solution('''13 4\n''') == 'NO'\nassert solution('''10 2\n''') == 'YES'\nassert solution('''5 2\n''') == 'NO'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''4 3 2\n2 2 2 2''') == '4'\nassert solution('''4 3 3\n1 1 1 1''') == '6'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nprint(solution('''4 4 2'''))\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '-1'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('5 4 6') == '-1'\nassert solution('6 6 6') == '300'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"-1\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"100\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''4 3 1\n1 100 1 1\n''') == '-1'\nassert solution('''5 4 3\n1 1 1 1 1\n''') == '0'\nassert solution('''5 4 3\n1 1 1 1 1\n''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '3'\nassert solution('3 1') == '3'\nassert solution('2 2') == '4'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"5 2\\n00100\\n\"\n) == \"3\"\nassert solution(\n\"6 1\\n000000\\n\"\n) == \"21\"\nassert solution(\n\"4 1\\n0011\\n\"\n) == \"4\"\nassert solution(\n\"12 6\\n000010000100\\n\"\n) == \"15\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '3'\nassert solution('12 1') == '15'\nassert solution('12 6') == '15'\nassert solution('12 6') == '15'\nassert solution('6 1') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\nassert solution('''6 1\n000000\n''') == '21'\nassert solution('''4 1\n0011\n''') == '4'\nassert solution('''12 6\n000010000100\n''') == '15'\nassert solution('''8 5\n001111110000\n''') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('00101') == '1'\nassert solution('11111') == '0'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0\\n') == '2'\nassert solution('5 1\\n') == '6'\nassert solution('5 2\\n') == '15'\nassert solution('6 1\\n') == '4'\nassert solution('6 0\\n') == '21'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('4 1\\n0011\\n') == '4'\nassert solution('12 6\\n000010000100\\n') == '15'\nassert solution('7 1\\n0000000\\n') == '7'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\n\nassert solution('''6 1\n000000\n''') == '21'\n\nassert solution('''4 1\n0011\n''') == '4'\n\nassert solution('''12 6\n000010000100\n''') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\"\nassert solution(\"6 1\\n000000\\n\") == \"21\"\nassert solution(\"4 1\\n0011\\n\") == \"4\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('sdfsdf') == 'No'\nassert solution('aaazzzz') == 'Yes'\nassert solution('zzzz') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aazzel') == 'Yes'\nassert solution('aaazel') == 'Yes'\nassert solution('aaaazzel') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aab') == 'ab'\nassert solution('aaaa') == 'aa'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''az''') == 'Yes'\nassert solution('''azl''') == 'No'\nassert solution('''alaz''') == 'Yes'\nassert solution('''alaz''') == 'Yes'\nassert solution('''al''') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\nassert solution('tack') == 'No'\nassert solution('a') == 'Yes'\nassert solution('a') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\nassert solution('aazzl') == 'Yes'\nassert solution('aa') == 'No'\nassert solution('apple') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"Yes\"\nassert solution('apple') == \"No\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('zzz') == 'Yes'\nassert solution('zza') == 'No'\nassert solution('zab') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('artel') == 'No'\nassert solution('artel') == 'No'\nassert solution('azazel') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('z') == 'No'\nassert solution('aa') == 'Yes'\nassert solution('zz') == 'No'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3, 2, 3, 1, 1, 1\") == \"1, 2, 1\"\nassert solution(\"3, 2, 3, 1, 1, 1, 1\") == \"1, 2, 1\"\nassert solution(\"3, 2, 3, 1, 1, 1, 1, 1, 1\") == \"2, 1, 1\"\nassert solution(\"3, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1\") == \"1, 2, 1\"\nassert solution(\"3, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n1') == '1'\nassert solution('1\\n1\\n2') == '1'\nassert solution('1\\n1\\n3') == '2'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n2\\n4') == '2'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '3\\n'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '0\\n'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '3\\n'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '3\\n'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '1\\n'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 10 1\") == \"0\"\nassert solution(\"3 10 2\") == \"1\"\nassert solution(\"3 10 3\") == \"2\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 1 2\") == \"3\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"271670\"\n\n\n\n\"\"\""
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0 0\\n2 3 2 1\\n3 4 3 2\\n4 6 4 3\\n5 7 5 4\\n6 8 6 5\") == \"4\"\nassert solution(\"1 0 0 0\\n2 3 2 1\\n3 4 3 2\\n4 6 4 3\\n5 7 5 4\\n6 8 6 5\") == \"0\"\nassert solution(\"2 2 0 0\\n2 3 2 1\\n3 4 3 2\\n4 6 4 3\\n5 7 5 4\\n6 8 6 5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 5\\n2 4 4\\n1 3 3\\n') == '100\\n200\\n400'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 3') == '8'\nassert solution('1 1 1') == '1'\nassert solution('1 2 3 4 5 6') == '29'\nassert solution('1 2 3 4 5') == '7'\nassert solution('1 2 3 4 5') == '13'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('0 1') == '0'\nassert solution('0 0 1') == '1'\nassert solution('1 0 0') == '1'\nassert solution('0 0 1 1') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '2'\nassert solution('5 800') == '3'\nassert solution('8 100') == '7'\nassert solution('8 100') == '8'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1\\n1 100\\n2 100\\n3 100\\n4 100') == '1\\n'\nassert solution('3 3\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100') == '1\\n'\nassert solution('5 100\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100') == '1\\n'\nassert solution('5 100\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100') == '3\\n'\nassert solution('1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100') == '0\\n'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '2'\nassert solution('0 2 3') == '2'\nassert solution('1 3') == '1'\nassert solution('1 100') == '2'\nassert solution('4 1000') == '4'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\nassert solution(\"3 200\\n10 2\\n8 3\\n2 10\\n2 4\\n6 6\\n5 10\\n5 10\\n5 10\\n\") == \"5\"\nassert solution(\"6 5000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n1 1000\\n\") == \"0\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '3'\nassert solution('3 100') == '3'\nassert solution('3 100 4') == '3'\nassert solution('2 7') == '2'\nassert solution('10 100') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 700') == '3'\nassert solution('3 100') == '0'\nassert solution('1 200') == '2'\nassert solution('1 2') == '2'\nassert solution('1 2 3 4 5') == '6'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '4'\nassert solution('5 800') == '5'\nassert solution('1 100') == '1'\nassert solution('3 1000') == '4'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''1 10\n3 100\n5 500''') == '1'\nassert solution('''1 10\n3 100\n6 100\n9 500''') == '2'\nassert solution('''4 5\n4 100\n6 300\n7 100\n8 300\n9 500\n10 800''') == '5'\nassert solution('''5 500\n5 100\n5 300\n5 200\n5 500\n5 800''') == '6'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\n\n-----Binary Search-----\nnlog(1/100)\n\"\"\""
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('6\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('8\\n2 3 4 2 2 3 2 2 4\\n') == '2'\nassert solution('7\\n2 3 4 2 2 3 2 2 4\\n') == '2'\nassert solution('10\\n2 3 4 2 2 3 2 2 4\\n') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\n\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '2'\n\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 3 3\") == \"2\"\nassert solution(\"4\\n2 4 3 3\") == \"0\"\nassert solution(\"4\\n3 4 3 2\") == \"1\"\nassert solution(\"4\\n3 4 3 2\") == \"1\"\nassert solution(\"4\\n3 4 3 2\") == \"1\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\nn = int(input())\nweights = list(map(int,input().split()))\n\nweights_even = []\nweights_odd = []\n\nfor i in range(0,n-1):\n    weights_even.append(weights[i])\n    weights_odd.append(weights[i+1])\n\nsum_even = sum(weights_even)\nsum_odd = sum(weights_odd)"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5') == '2\\n3\\n4\\n5'\nassert solution('2\\n3\\n4\\n5\\n6') == '2\\n3\\n4'\nassert solution('3\\n4\\n5\\n6\\n7') == '2'\nassert solution('4\\n4\\n4\\n4\\n4\\n4') == '2\\n3'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '2'\nassert solution('7') == '2'\nassert solution
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n\n\n\n\"\"\"\n\n\"\"\"\nOPTIONAL:\n\n-----Solutions-----\n\n* https://www.hackerrank.com/challenges/red-yellow-blue\n* https://www.hackerrank.com/challenges/divisible-sum-pairs\n* https://www.hackerrank.com/challenges/beautiful-pairs\n* https://www.hackerrank.com/challenges/ctci-comparator-sorting\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n2') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('2\\n3\\n3') == '1'\nassert solution('1\\n2\\n3\\n3') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 4 3 3') == '2'\nassert solution('5\\n1 4 3 3 2') == '2'\nassert solution('8\\n2 3 4 2 2 3 2 4') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n3 4 4 3 4 3 4 3 4') == '3'\n\n\n\"\"\""
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"-1\"\nassert solution(\"5 1 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\""
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''2 3 3\n1 3 1''') == '6'\nassert solution('''2 4 2\n1 1 1 1 1''') == '10'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\nassert solution('5 1 1\\n5 1 1 1 5\\n') == '0'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\n\n'''\n'''"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nprint('All tests passed successfully')"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"\nassert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution(\n'''6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution(\n'''4 3 1\n1 100 1 1\n''') == '100'"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '-1'"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 2 3'''\n) == '18'\n\nassert solution(\n'''6 1 5'''\n) == '-1'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"99\") == \"No\"\nassert solution(\"999\") == \"Yes\"\nassert solution(\"5000\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 10\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n2\\n3\\n') == 'Yes'\nassert solution('7\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11') == \"Yes\"\nassert solution('1') == \"No\"\nassert solution('0') == \"Yes\"\nassert solution('2') == \"No\"\nassert solution('5') == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == 'Yes'\nassert solution('4') == 'No'\nassert solution('30') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('100') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 5') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"20\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('10') == 'No'\nassert solution('1') == 'No'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n\nassert solution('''7\n3 2 5\n2 1 5\n1 2 5\n3 2 5\n4 2 5\n5 2 5\n6 2 5''') == '3 3 9'\n\nassert solution('''20\n-10 -2 10\n0 0 0\n-5 3 -5\n5 5 5\n0 0 0\n2 2 2\n-4 -2 2\n0 -5 -5\n-5 0 0\n0 0 0\n-6 -4 -4\n0 0 0\n-6 -4 -4\n0 -6 -6\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\"\n) == \"2 2 6\"\n\"\"\"\n\nfrom sys import stdin\nfrom typing import List\nfrom unittest import TestCase\n\n\nclass TestSolution(TestCase):\n    def test(self):\n        self.assertEqual(solution(stdin.read()), stdin.read())\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 2 6\"\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n1 2 5\\n2 1 5\") == \"2 2 6\"\nassert solution(\"2\\n1 1 1\\n2 2 2\") == \"0 0 3\"\nassert solution(\"3\\n1 1 1\\n2 2 2\\n3 3 3\") == \"0 0 3\"\nassert solution(\"2\\n0 1 1\\n1 0 2\") == \"0 0 3\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\nassert solution('4\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n') == '5 5 5'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''2\n2 3 5\n2 1 5\n1 2 5''') == '2 2 6'\nassert solution('''5\n1 2 5\n2 3 5\n3 4 5\n4 5 6''') == '3 3 6'\nassert solution('''4\n1 2 3 4\n1 2 4 3\n3 3 1\n3 1 4\n4 3 4''') == '3 1 2'\n'''\n'''"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6\\n'\n\"\"\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n\nassert solution('''3\n5 0 3\n0 0 1\n1 1 1''') == '0 0 6'\n\nassert solution('''5\n-5 -5 -5 -5 -5\n-5 -5 -5 -5 -5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5''') == '-1 -1 2'\n\nprint(solution('''5\n4 -1 -5 -5 -5\n-5 -5 -5 -5 -5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5'''))"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n5\n3 2 5\n1 2 5\n2 3 5\n3 1 5\n4 2 5\n''') == '3 3 9'\nassert solution('''\n2\n1 1 2\n1 1 2\n''') == '1 1 4'\n'''\nfrom math import *"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\nprint('Test 1 Passed:'+ str(solution(input()) == output))\nprint('Test 2 Passed:'+ str(solution(input()) == output))\nprint('Test 3 Passed:'+ str(solution(input()) == output))\nprint('Test 4 Passed:'+ str(solution(input()) == output))\nprint('Test 5 Passed:'+ str(solution(input()) == output))\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('redcoder') == 1\nassert solution('ccccca') == 0\nassert solution('kkkkkk') == 0\nassert solution('kk') == 0\nassert solution('t') == 1\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('a') == 0\nassert solution('baa') == 2\nassert solution('abbbbbbbbbb') == 4\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcdcba\") == \"1\"\nassert solution(\"dabac\") == \"0\"\nassert solution(\"google\") == \"5\"\nassert solution(\"eccaccabbe\") == \"4\"\nassert solution(\"eccaccabbe\") == \"3\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abca') == 3\nassert solution('a') == 1\nassert solution('aacb') == 2\nassert solution('abbbba') == 1\nassert solution('abcabc') == 0\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('redcoder') == 1\nassert solution('teabg') == 4\nassert solution('godk') == 4\nassert solution('godd') == 3\nassert solution('odled') == 2\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('redcoder') == '1'\nassert solution('algorithm') == '2'\nassert solution('redcoder') == '1'\nassert solution('coder') == '2'\nassert solution('programmer') == '2'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == 1\nassert solution(\"aab\") == 2\nassert solution(\"abb\") == 2\nassert solution(\"cabba\") == 3\nassert solution(\"abcdefg\") == 0\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"tacocat\") == \"2\"\nassert solution(\"aab\") == \"0\"\nassert solution(\"aabb\") == \"1\"\nassert solution(\"aaba\") == \"2\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc') == 1\nassert solution('abca') == 2\nassert solution('aabbcc') == 2\nassert solution('ababcc') == 3\nassert solution('aabbc') == 3\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1000') == 'Yes'\nassert solution('10000') == 'Yes'\nassert solution('1010') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('12') == None\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"1\")) == input(\"1\")\nassert solution(input(\"5\")) == input(\"5\")\nassert solution(input(\"10\")) == input(\"10\")\nassert solution(input(\"50\")) == input(\"50\")\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == 'Yes'"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(10) == 'Yes'\nassert solution(15) == 'No'\nassert solution(3) == 'Yes'\nassert solution(9) == 'Yes'\nassert solution(20) == 'Yes'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 9 7 5') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3 4 4\") == \"5\"\nassert solution(\"1 3 2 2 3\") == \"3\"\nassert solution(\"4 9 7 5\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"2 2 2 2\") == \"1\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('4 4 9 7 5') == '5'\nassert solution('5') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4 2 3\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"4 9 2 7 5\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"7 5 9 4 3\") == \"2\\n2\\n2\\n2\\n2\"\nassert solution(\"9 8 7 6 5\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"4 5 9 7 1\") == \"0\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''10\n10 10 10 10 10 10 10 10 10 10''') == '1'\nassert solution('''100\n20 19 10 9 8 7 6 5 4 3 2 1''') == '1'\nassert solution('''1000\n20 19 10 9 8 7 6 5 4 3 2 1''') == '6'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('10 6') == '-1'\nassert solution('13 11') == '13'\nassert solution('10 9') == '-1'\nassert solution('5 10') == '5'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"10\"\nassert solution(input(\"\")) == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"2 9\") == -1\nassert solution(\"1 1\") == 1\nassert solution(\"10 1\") == 10\nassert solution(\"1 2\") == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"2 8\") == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"1 9\") == \"-1\"\nassert solution(\"10 5\") == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"2 7\") == -1"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '10'\nassert solution('1 0') == '-1'\nassert solution('-1 1') == '-1'\nassert solution('-1 1') == '-1'\nassert solution('0 1') == '-1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n'''\nA\\times B = a * b\na = (b * 10) + d\nb = (a * 10) + c\n\n=> a = (c * 10) + d\nb = (a * 10) + c\na = (b * 10) + d\n\n=> a = (c * 10) + d\nb = (a * 10) + c\nc = (b * 10) + d\n\n=> a = (c * 10) + d\nb = (a * 10) + c\na = (b * 10) + d\n\n=> a = (c * 10) + d\nb = (a * 10) + c\nc = (b * 10) + d\n\n'''\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 10') == '-1'\nassert solution('2 15') == '-1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '-1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 5\\n10 12 1 2 14\") == \"5\", \"Failed Test 1\"\nassert solution(\n    \"2 5\\n12 34 45 5 6 7 8\") == \"4\", \"Failed Test 2\"\nassert solution(\n    \"2 5\\n1 2 3 4 5\") == \"3\", \"Failed Test 3\"\nassert solution(\n    \"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\", \"Failed Test 4\"\nassert solution(\n    \"20 20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"0\", \"Failed Test 5\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n10 12 1 2 14\\n') == '5'"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 3\\n2 4\\n1 2\") == \"3\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 10\\n5 6\") == \"5\""
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:3]\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 4') == '2'\nassert solution('1 10') == '0'\nassert solution('1 2') == '1'\nassert solution('10 6') == '3'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''1 1\n10 100 100 100 100''') == '1'\nassert solution('''2 2\n1 2''') == '0'\nassert solution('''1 10\n1 2''') == '1'\nassert solution('''3 2\n3 3 4''') == '3'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '111010'\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n--- Day 3: The Ideal Stocking Stuffer ---\n\nSanta needs help mining some AdventCoins (very similar to bitcoins) to use as gifts for all the economically forward-thinking little girls and boys.\n\nBut little did he think, when the first few AdventCoins were so close to his size, he felt like he was going to get carried away by his every minute machinations: he just didn't have the time to watch all the little girls and boys do their tiny little reactions. So he grabbed some AdventCoins from the first few people in his class, and the idea came to his mind: let the boys and girls carry their little gifts back to school with these warm, fuzzy, slightly smelly looking AdventCoins, and it would be a nice thing if the teacher didn't even have to show them such a warm, fuzzy, slightly smelly looking thing on his desk, when he could have just moved them to keep the coals under his desk at all times.\n\nSo, now, to complete his task, Santa needs you to examine the first few AdventCoins. There are a few different ways that you can examine an AdventCoin, and each way will give you a different result.\n\nThe first way is to count each of the adjacent pairs of bits in the binary representation of the number, and see if the total number of different pairs is even or odd. For example, 8 has binary representation 100000 and thus consists of two different pairs: 1000 and 0010. The second way to examine a pair of bits is to XOR them together, and count the number of different XOR values from 0 to 65535.\n\nWith this in mind, write a function answer(coins), where coins is a list of positive integers of minimal length, that returns the answer as described above. Test your function on the first few AdventCoins.\n\nFor example:\n\n    >>> answer([1,2,3])\n    3\n    >>> answer([1,3,5])\n    6\n    >>> answer([1,5,7,11])\n    1\n\nIf you are feeling particularly ambitious, also write a function answer2(coins), that returns the answer to the original puzzle in the second way described above.\n\n\n--- Part Two ---\n\nThe second way to examine a pair of bits is to XOR them together, and count the number of different XOR values from 0 to 65535.\n\nFor example, again using the standard example, if the pair is (0,1) and (1,0), this XOR gives a different result, and it counts differently:\n\nx = 0\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\nThis means that the total number of possible XOR pairs is $2n = 2$ pairs, which means our function would return the wrong result.\n\nWhat's a little more interesting is when a single XOR is used to generate two different results:\n\nx = 1\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 0 = 1\n\nSince there are two different results, it is clear that regardless of which pair is used, the result will always be different. For example, if the first pair is used to generate the result, then regardless of the pair used to generate the first result, the second pair used to generate the result will always generate a different result from the first pair:\n\nx = 1\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 0 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\nIn this example, the total number of pairs is $2n = 2n = 2$; which means that we would still return the wrong solution:\n\nx = 1\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 0 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\nBut, if the second pair is used to generate the result, then the total number of pairs is $2n = 2n = 2$; and so the XOR operator is used to give different results, and our function returns the right result in both cases:\n\nx = 1\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 0 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 1 = 1\n\nSince the total number of pairs is now $2n = 2n = 2$; and regardless of which pair is used to generate the result, the result will always be different, we return the right result in both cases:\n\nx = 1\ny = 1\n\nx XOR y = 0 XOR 1 = 1\n\ny XOR 1 = 0 XOR 0 = 1"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1\\n1 1') == '1'\nassert solution('1 1 1\\n1 1') == '1'\nassert solution('1 1 1\\n1 1') == '1'\nassert solution('1 1 1\\n1 1') == '1'\nassert solution('2 2 2\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == \"2\\n1110\\n1011\"\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5''') == \"2\\n111100\\n110110\"\nassert solution('''10 10 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n6 7\n7 8\n7 9\n8 9\n10 9''') == \"8\\n111111100\\n1110111010\"\nassert solution('''6 6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10''') == \"2\\n111111100\\n1110111010\"\nassert solution('''3 6 3\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10''') == \"2\\n111110000\\n1111101110\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n1110001\\n1010101\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n1010101\"\n\n\"\"\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"101001\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 3\") == \"1110\"\nassert solution(\"1 2\\n1 3\\n1 4\\n4 3\\n2 4\") == \"1110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"1110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n1 1\") == \"110110\"\nassert solution(\"6 8 4\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\") == \"111110\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '''\n2\n1110\n1011\n'''\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''\n1\n101001\n110110\n'''\nassert solution('''\n3 3 2\n1 2\n2 3\n1 3\n''') == '''\n0\n0\n'''\nassert solution('''\n4 7 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''\n2\n111100\n110110\n'''\nassert solution('''\n4 7 2\n1 2\n2 3\n1 3\n''') == '''\n1\n101001\n110110\n'''\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '00'\nassert solution('1\\n1\\n1') == '00'\nassert solution('2\\n2') == '00'\nassert solution('2\\n1\\n2') == '10'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 1 1 2 5\n    \"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"\n    3\n    4 5 3\n    \"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"\n    3\n    10 10\n    \"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2 3\n    \"\"\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n2 1 1 2 5\"\"\") == \"YES\"\nassert solution(\"\"\"3\n4 5 3\"\"\") == \"YES\"\nassert solution(\"\"\"2\n10 10\"\"\") == \"YES\"\nassert solution(\"\"\"3\n1 2 3\"\"\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 4\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('2\\n2 3\\n') == 'NO'\nassert solution('3\\n2 3\\n') == 'YES'\nassert solution('4\\n2 1 1 2 5\\n') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"\\n\") == \"NO\"\nassert solution(\"\\n\\n\") == \"NO\"\nassert solution(\"\\n\\n\\n\") == \"NO\"\nassert solution(\"\\n1\\n2\\n3\\n4\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('4\\n1 2 3 4\\n2 1 4') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('2\\n1 1\\n1 1') == 'NO'\nassert solution('2\\n1 1\\n1 1\\n1 1') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n2 1 1 2 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n4 5 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"2\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n1 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"4\n1 2 1 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n''') == 'YES'\n\nassert solution('''2\n10 10\n''') == 'YES'\n\nassert solution('''3\n1 2 3\n''') == 'NO'\n\n\n\n\"\"\""
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2 1 1 2 5\") == \"YES\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"0\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"0\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\\n\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\\n\"\nassert solution(\"10 10\\n-10 -10\\n\") == \"-1\\n\"\nassert solution(\"10 10\\n-10 -5\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == \"9\"\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == \"4999999999996\"\nassert solution('''10 4\n-3 -6 5 4''') == \"-1\"\nassert solution('''100 0''') == \"0\"\nassert solution('''1000 100000000000 1000 1000 1000''') == \"0\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''1000 7\n-100 -200 -300 125 76 -4''') == '14'\nassert solution('''10 7\n-3 -6 5 4''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\nassert solution('10 2\\n-1 1') == '4'\nassert solution('10 3\\n1 2 3') == '5'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == \"9\"\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == \"4999999999996\"\nassert solution('''1000000000 2\n-3 -6 5 4\n''') == \"4999999999996\"\nassert solution('''1000000000 2\n-3 -6 5 4\n''') == \"4999999999996\"\nassert solution('''3 3\n2 3 1\n''') == \"2\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nimport sys\nfrom typing import List, Tuple\n\nUPPER_BOUND = 10 ** 12\nUPPER_BOUND_BY_MOON = UPPER_BOUND * 5 // 4"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n\n\n\n##solution 2\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\n\"\"\""
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\n\n'''\n\n'''\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''ABACABA\n''') == 'AB'\nassert solution(\n'''ZZZAA\n''') == 'ZZ'\nassert solution(\n'''AABBAA\n''') == 'AB'\nassert solution(\n'''BBABA\n''') == 'AB'\nassert solution(\n'''ABABAA\n''') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABABABA') == 'BA'\nassert solution('AAAA') == ''\nassert solution('BBBB') == 'BB'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"BBABAAABBABABAAAB\") == \"BBA\"\nassert solution(\"BAAABBA\") == \"AB\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"ABBA\") == \"AB\"\nassert solution(\"BBABA\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AB\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('DDDDD') == ''\nassert solution('AA') == 'A'\nassert solution('AAAB') == 'A'\n\"\"\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"BBAABBBA\") == \"BB\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"test\") == \"test\"\nassert solution(\"codeforcesyes\") == \"es\"\nassert solution(\"codeforcesyes\") == \"es\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"west\"\nassert solution(\"b\") == \"\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"asdf\") == \"asdf\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"hello\") == \"eo\"\nassert solution(\"where\") == \"here\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"codeforces\") == \"cs\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('where', 'here') == 2\nassert solution('a', 'b') == 1\nassert solution('codeforces', 'yes') == 9\nassert solution('', '') == 0\nassert solution('b', 'ab') == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin = \"test\"\n) == 2\nassert solution(\n    stdin = \"west\"\n) == 2\nassert solution(\n    stdin = \"codeforces\"\n) == 9\nassert solution(\n    stdin = \"b\"\n) == 1\nassert solution(\n    stdin = \"ab\"\n) == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('test') == 'est'\nassert solution('west') == 'wes'\nassert solution('codeforces') == 'es'\nassert solution('b') == 'b'\nassert solution('ab') == 'a'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"west\") == \"east\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('test') == 'west'\nassert solution('west') == ''\nassert solution('b') == 'b'\nassert solution('yes') == 'yes'\nassert solution('codeforces') == 'es'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('west') == 'east'\nassert solution('codeforces') == 'es'\nassert solution('b') == ''\nassert solution('test') == 'test'\nassert solution('yes') == 'es'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('3 1\\n2 1') == '2'\nassert solution('3 1\\n1 2') == '2'\nassert solution('3 1\\n2 1\\n1 2') == '1'\nassert solution('10 3\\n1 3 4 7 11 10 9 8') == '3'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 11') == '2'\nassert solution('1 7 11 2') == '3'\nassert solution('1 7 11 2 3') == '3'\nassert solution('1 7 11 2 3 4') == '4'\nassert solution('1 7 11 2 3 4 5') == '5'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('3 3\\n1 7 11') == '2'\nassert solution('3 3\\n1 7 11') == '2'\nassert solution('3 3\\n1 7 11') == '2'\nassert solution('3 3\\n1 7 11') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == 2\nassert solution('3 2') == 2\nassert solution('1 2 3') == 4\nassert solution('3 1 2') == 4\nassert solution('2 1 3') == 4\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4') == '2'\nassert solution('1 7 11') == '2'\nassert solution('1 4 5 6') == '2'\nassert solution('4 1') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 7 11''') == '2'\nassert solution('''1 1\n1''') == '0'\nassert solution('''3 1\n7''') == '1'\nassert solution('''3 4\n1 7 11''') == '2'\nassert solution('''1 1\n1''') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3') == 2\nassert solution('1 7 11') == 2\nassert solution('2 2 1') == 0\nassert solution('1 2') == 0\nassert solution('1 1') == 1\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"aba\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abcba\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"aba\") == \"No\"\nassert solution(\"ab\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abb') == 'No'\nassert solution('baaa') == 'No'\nassert solution('baaab') == 'Yes'\nassert solution('babba') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asaka') == 'No'\nassert solution('akasa') == 'Yes'\nassert solution('ba') == 'No'\nassert solution('a') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asakasak') == 'Yes'\nassert solution('aa') == 'No'\nassert solution('as') == 'No'\nassert solution('asaa') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'Yes'\nassert solution('aa') == 'Yes'\nassert solution('aba') == 'No'\nassert solution('aba') == 'No'\nassert solution('aba') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcdcba\") == \"Yes\"\nassert solution(\"abcdedcba\") == \"Yes\"\nassert solution(\"abcdefgfedcba\") == \"Yes\"\nassert solution(\"abcdefghhgfedcba\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asaka') == 'No'\nassert solution('abab') == 'Yes'\nassert solution('aba') == 'No'\nassert solution('abac') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('aaa') == 'No'\nassert solution('kkkk') == 'Yes'\nassert solution('abba') == 'Yes'\nassert solution('bbb') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\n\"\"\"\n\nS = stdin.strip()"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 1.5') == '2'\nassert solution('2 2.5') == '3'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 0') == ''\nassert solution('1 1') == '1'\nassert solution('1 1.1') == '1'\nassert solution('1.1 1') == '1'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 2') == '2'\nassert solution('6 2') == '3'\nassert solution('7 2') == '4'\nassert solution('9 2') == '5'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 4') == '3'\nassert solution('10 1') == '1'\nassert solution('9 3') == '2'\nassert solution('12345 67') == '12345'\nassert solution('12345 1') == '12345'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('198 1.10') == '217'\nassert solution('3 10') == '30'\nassert solution('10 1.20') == '10'\nassert solution('3 10') == '30'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 22') == '217'\nassert solution('1 1') == '10'\nassert solution('1 0.1') == '10'\nassert solution('1 1.1') == '11'\nassert solution('2 3.4') == '8'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1.1') == '217'"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('198 1.10') == '217'\n\nprint('Test 1 passed: {0}'.format(solution('198 1.10')))\nprint('Test 2 passed: {0}'.format(solution('3489 1.2')))\nprint('Test 3 passed: {0}'.format(solution('-17 0.5')))\nprint('Test 4 passed: {0}'.format(solution('5 -5')))\nprint('Test 5 passed: {0}'.format(solution('2 10')))\nprint('Test 6 passed: {0}'.format(solution('0 0')))\nprint('Test 7 passed: {0}'.format(solution('1 0')))\nprint('Test 8 passed: {0}'.format(solution('0 0')))\nprint('Test 9 passed: {0}'.format(solution('1000 10')))\nprint('Test 10 passed: {0}'.format(solution('0 0')))\nprint('Test 11 passed: {0}'.format(solution('15 1')))\nprint('Test 12 passed: {0}'.format(solution('-15 -1')))\nprint('Test 13 passed: {0}'.format(solution('-1000 0')))\nprint('Test 14 passed: {0}'.format(solution('0 -0')))\nprint('Test 15 passed: {0}'.format(solution('-0 1')))\nprint('Test 16 passed: {0}'.format(solution('1 0')))\nprint('Test 17 passed: {0}'.format(solution('0 -1')))\nprint('Test 18 passed: {0}'.format(solution('-0 0')))\nprint('Test 19 passed: {0}'.format(solution('0 -0')))\nprint('Test 20 passed: {0}'.format(solution('-2 1')))\nprint('Test 21 passed: {0}'.format(solution('0 1')))\nprint('Test 22 passed: {0}'.format(solution('-0 -1')))\nprint('Test 23 passed: {0}'.format(solution('0 0')))\nprint('Test 24 passed: {0}'.format(solution('0 1')))\nprint('Test 25 passed: {0}'.format(solution('0 -1')))\nprint('Test 26 passed: {0}'.format(solution('1 0')))\nprint('Test 27 passed: {0}'.format(solution('0 0')))\nprint('Test 28 passed: {0}'.format(solution('-10 10')))\nprint('Test 29 passed: {0}'.format(solution('0 -10')))\nprint('Test 30 passed: {0}'.format(solution('-10 0')))\nprint('Test 31 passed: {0}'.format(solution('-1 1')))\nprint('Test 32 passed: {0}'.format(solution('1 0')))\nprint('Test 33 passed: {0}'.format(solution('1 -1')))\nprint('Test 34 passed: {0}'.format(solution('-1 -1')))\nprint('Test 35 passed: {0}'.format(solution('0 1')))\nprint('Test 36 passed: {0}'.format(solution('-0 1')))\nprint('Test 37 passed: {0}'.format(solution('0 -1')))\nprint('Test 38 passed: {0}'.format(solution('1 -1')))\nprint('Test 39 passed: {0}'.format(solution('-0 1')))\nprint('Test 40 passed: {0}'.format(solution('0 -1')))\nprint('Test 41 passed: {0}'.format(solution('0 0')))\nprint('Test 42 passed: {0}'.format(solution('1 1')))\nprint('Test 43 passed: {0}'.format(solution('-1 -1')))\nprint('Test 44 passed: {0}'.format(solution('-1 1')))\nprint('Test 45 passed: {0}'.format(solution('0 1')))\nprint('Test 46 passed: {0}'.format(solution('0 -1')))\nprint('Test 47 passed: {0}'.format(solution('1 -1')))\nprint('Test 48 passed: {0}'.format(solution('-1 -1')))\nprint('Test 49 passed: {0}'.format(solution('1 1')))\nprint('Test 50 passed: {0}'.format(solution('-1 1')))\nprint('Test 51 passed: {0}'.format(solution('1 -1')))\nprint('Test 52 passed: {0}'.format(solution('1 1')))\nprint('Test 53 passed: {0}'.format(solution('1 -1')))\nprint('Test 54 passed: {0}'.format(solution('-1 -1')))\nprint('Test 55 passed: {0}'.format(solution('0 0')))\nprint('Test 56 passed: {0}'.format(solution('0 1')))\nprint('Test 57 passed: {0}'.format(solution('0 -1')))\nprint('Test 58 passed: {0}'.format(solution('0 1')))\nprint('Test 59 passed: {0}'.format(solution('0 -1')))\nprint('Test 60 passed: {0}'.format(solution('1 0')))\nprint('Test 61 passed: {0}'.format(solution('1 -1')))\nprint('Test 62 passed: {0}'.format(solution('1 1')))\nprint('Test 63 passed: {0}'.format(solution('-1 -1')))\nprint('Test 64 passed: {0}'.format(solution('-1 1')))\nprint('Test 65 passed: {0}'.format(solution('0 0')))\nprint('Test 66 passed: {0}'.format(solution('0 1')))\nprint('Test 67 passed: {0}'.format(solution('0 -1')))\nprint('Test 68 passed: {0}'.format(solution('1 -1')))\nprint('Test 69 passed: {0}'.format(solution('-1 1')))\nprint('Test 70 passed: {0}'.format(solution('1 1')))\nprint('Test 71 passed: {0}'.format(solution('-1 -1')))\nprint('Test 72 passed: {0}'.format(solution('-1 1')))\nprint('Test 73 passed: {0}'.format(solution('0 1')))\nprint('Test 74 passed: {0}'.format(solution('0 -1')))\nprint('Test 75 passed: {0}'.format(solution('1 -1')))\nprint('Test 76 passed: {0}'.format(solution('-1 -1')))\nprint('Test 77 passed: {0}'.format(solution('1 1')))\nprint('Test 78 passed: {0}'.format(solution('-1 1')))\nprint('Test 79 passed: {0}'.format(solution('1 -1')))\nprint('Test 80 passed: {0}'.format(solution('1 1')))\nprint('Test 81 passed: {0}'.format(solution('1 -1')))\nprint('Test 82 passed: {0}'.format(solution('-1 -1')))\nprint('Test 83 passed: {0}'.format(solution('0 0')))\nprint('Test 84 passed: {0}'.format(solution('0 1')))\nprint('Test 85 passed: {0}'.format(solution('0 -1')))\nprint('Test 86 passed: {0}'.format(solution('1 -1')))\nprint('Test 87 passed: {0}'.format(solution('-1 1')))\nprint('Test 88 passed: {0}'.format(solution('1 1')))\nprint('Test 89 passed: {0}'.format(solution('-1 -1'"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 1') == '1'\nassert solution('1.01 2') == '1'\nassert solution('1.02 2') == '1'\nassert solution('0.01 2') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ab') == 0\nassert solution('abc') == 0\nassert solution('abcd') == 0\nassert solution('abce') == 0\nassert solution('abceg') == 0\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == 0\nassert solution('abc') == 0\nassert solution('abac') == 1\nassert solution('abcde') == 0\nassert solution('abbacd') == 0\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 2\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nusing dynamic programming\n\"\"\""
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 2 2') == '0'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ab') == 1\nassert solution('aba') == 2\nassert solution('abc') == 0\nassert solution('ba') == 1\nassert solution('bac') == 0\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hi') == 'hi'\nassert solution('hello') == 'hello'\nassert solution('-') == '-'\nassert solution('hello ') == 'hello'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 1\nassert solution('a') == 1\nassert solution('b') == 0\nassert solution('b') == 0\nassert solution('b') == 0\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"10000\") == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3'\nassert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '0'\nassert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '1'\nassert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '999999999'\nassert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '381621773'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('1 2\\n2 3\\n3 4\\n4 1\\n1 8\\n9 8\\n7 1') == '1'\nassert solution('2 1\\n3 4') == '0'\nassert solution('1 2\\n3 4') == '0'\nassert solution('3 2\\n2 1') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''7 4 5\n1 2\n2 3\n3 4\n4 1\n5 6\n6 7\n7 8\n8 9\n9 1''') == '0'\nassert solution('''7 4 5\n1 2\n2 3\n3 4\n4 1\n1 4\n5 6\n6 7\n7 8\n8 9\n9 1''') == '1'\nassert solution('''8 2 2\n1 2\n2 3\n3 4\n4 1\n5 6\n6 7\n7 8\n8 1''') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\\n2 4\\n3 2\\n') == '2'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\\n2 4\\n4 3\\n') == '1'\n\n\n-----Solution-----\n\nWe can use a simple DFS to count the number of shortest paths from city $s$ to all the cities. If we reach the end of the DFS tree, we have $2^n - 1$ extra roads needed.\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 9 1''') == '3'\nassert solution('''5 4 5''') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\nassert solution('1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('2 2 2\\n1 2\\n2 1\\n1 3\\n2 3\\n1 4\\n4 1\\n') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 4 1') == '4'\nassert solution('1 1 1 4 4 4') == '5'\nassert solution('6 1 1 1 4 4 4') == '5'\nassert solution
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('2\\n1 1') == '1'\nassert solution('10\\n
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('5\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('1\\n1') == '1'\nassert solution('3\\n1 1 1') == '2'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('5\\n1 1 1 4 4 4') == '5'\nassert solution('8\\n1 1 1 4 4 4 4 4 4') == '7'\nassert solution('9\\n1 1 1 4 4 4 4 4 4 4 4 4') == '8'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1') == '150000'\n\n\n\"\"\""
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('4\\n1 1 1 4 4') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"3\"\nassert solution(\"2\\n2\") == \"3\"\nassert solution(\"4\\n1\") == \"4\"\nassert solution(\"4\\n2\") == \"4\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"000001000001\"\nassert solution(\"1 3\") == \"000001000002\"\nassert solution(\"1 4\") == \"000001000001\"\nassert solution(\"1 5\") == \"000001000002\"\nassert solution(\"1 6\") == \"000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 3\") == \"000001000002\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == '000001000002\\n000002000001\\n000001000001'\nassert solution('2 1') == '000001000002\\n000001000001'\nassert solution('1 1') == '000001000001'\nassert solution('3 2') == '000001000002\\n000002000001\\n000001000001'\nassert solution('1 3') == '000001000002\\n000001000001\\n000001000003'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '100000011100\\n10001100011\\n10011100101\\n10101100111\\n10111100011\\n111000110001\\n111011001011\\n111011001011\\n111001110001\\n101101100111\\n101111010011\\n101111010101\\n101101101111\\n111011010011\\n111011010101\\n111001011011\\n101111010111\\n101111010111\\n101111001011\\n111011010111\\n101111001011\\n111001011011'\n\nassert solution('''\n7 2\n1 2\n2 3\n1 4\n2 5\n1 6\n2 7\n''') == '00000010000002\\n000002000000003\\n0000030000004\\n0000040000005\\n0000050000006\\n0000060000007'\nassert solution('''\n7 2\n1 3\n2 4\n1 5\n2 6\n1 7\n2 8\n''') == '00000010000002\\n00000100000001\\n00001100000011\\n00002100000021\\n00003100000031\\n00004100000041\\n00005100000051\\n00006100000061\\n00007100000071\\n00008100000081'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''3 3\n1 43\n2 59\n3 64''') == '000001000001\\n0000020000000\\n0000030000003'\nassert solution('''2 3\n1 43\n2 59\n3 64\n1 12\n2 63''') == '000001000002\\n000002000001\\n000001000001\\n0000030000003'\nassert solution('''6 5\n1 5\n2 7\n3 8\n4 9\n5 10\n6 11''') == '0000030000004\\n0000040000005\\n0000050000006\\n0000060000007\\n0000070000008\\n0000080000009\\n000009000000a\\n00000a000000b\\n00000b000000c'\n'''\nTest Case 1\nThe following argument is passed to the program:\nn m\nn: the number of prefectures\nm: the number of cities\n\nP_1 Y_1\nP_2 Y_2\n:\nP_n Y_n\n\nFor example, when n = 3 and m = 3, the following argument is passed to the program:\n\n3 3\n1 2\n3 4\n5 6\n7 8\n9 10\n10 11\n\nThe output of the program should be:\n000001000002\n000002000001\n000001000001\n\nIn Republic of Atcoder, there are N prefectures, and a total of M cities that belong to those prefectures.\nCity i is established in year Y_i and belongs to Prefecture P_i.\nYou can assume that there are no multiple cities that are established in the same year.\nIt is decided to allocate a 12-digit ID number to each city.\nIf City i is the x-th established city among the cities that belong to Prefecture i, the first six digits of the ID number of City i is P_i, and the last six digits of the ID number is x.\nHere, if P_i or x (or both) has less than six digits, zeros are added to the left until it has six digits.\nFind the ID numbers for all the cities.\nNote that there can be a prefecture with no cities.\n\n-----Input-----\nn m\nP_1 Y_1\n:\nP_m Y_m\n\n-----Output-----\nPrint the ID numbers for all the cities, in ascending order of indices (City 1, City 2,...).\n\n-----Sample Input-----\n2 3\n1 32\n2 63\n1 12\n\n-----Sample Output-----\n000001000002\n000002000001\n000001000001\n\n-----Sample Input (Extra Credit)-----\n6 5\n1 5\n2 7\n3 8\n4 9\n5 10\n6 11\n\n-----Sample Output (Extra Credit)-----\n0000030000004\n0000040000005\n0000050000006\n0000060000007\n0000070000008\n0000080000009\n000009000000a\n00000a000000b\n00000b000000c\n\n'''\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"000001000001\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"1 4\") == \"000001000002\"\nassert solution(\"2 5\") == \"000001000001\"\nassert solution(\"3 5\") == \"000002000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == ''\nassert solution('2 3') == '000001000002\\n000002000001\\n000001000001'\nassert solution('1 10') == '000001000002\\n000002000001\\n000001000001\\n0000000100002\\n0000001000003\\n00000001000001'\nassert solution('4 5') == '000001000002\\n000002000001\\n000001000001\\n0000000100002\\n0000001000003\\n00000001000001'\nassert solution('4 5\\n1 3\\n2 1\\n2 3\\n3 2\\n3 3') == '000001000002\\n000002000001\\n000001000001\\n0000000100002\\n0000001000003\\n00000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 33') == '000001000002\\n000002000001'\nassert solution('2 3\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\nassert solution('3 3\\n1 32\\n2 63\\n3 21') == '000001000002\\n000002000001\\n000001000001\\n000002000011\\n000002000022'\n\"\"\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002'\nassert solution('''2 2\n1 32\n2 63''') == '000002000001'\nassert solution('''4 2\n1 32\n2 63\n1 12\n4 64\n1 65\n2 66\n3 67\n4 68\n1 69\n2 70\n3 71\n4 72\n1 73\n2 74\n3 75\n
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''6\n1 10 1 5 19''') == '2'\nassert solution('''6\n1 10 1 5 19''') == '2'\nassert solution('''6\n1 2 1 5 19''') == '3'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('3 10 3 25') == '2'\nassert solution('1 100 2 100') == '0'\nassert solution('2 10 8 40') == '2'\nassert solution('1 100 1 100') == '0'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n10') == '9'\nassert solution('2\\n10') == '0'\nassert solution('1\\n10\\n10') == '0'\nassert solution('2\\n10\\n10') == '0'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n10 8 40''') == \"2\"\nassert solution('''4\n2 10 8 40''') == \"2\"\nassert solution('''8\n20 17 15 14 1 3 4 5 7 6''') == \"7\"\nassert solution('''8\n20 17 15 14 1 3 4 5 7 6''') == \"7\"\nassert solution('''8\n6\n21 32 31 32 6 21 3 22''') == \"5\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('2 1 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"?(_-*__:_<__-___)\") == \"0010\"\nassert solution(\"?(__-_-*__:___<___)\") == \"false\"\nassert solution(\"?(___-_-*__:_____)\") == \"0101\"\nassert solution(\"?(___-_-*__:_____)\") == \"false\"\nassert solution(\"?(____-_-*__:_____)\") == \"false\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(?(____/____*____:___>__,_____<___<____,____<_____,_____<______,______<_______).\n\nassert solution(?(____-____*___/____:___>__.\n\nassert solution(?(____*____*____*____,_____<____*____*____-_/____*____-____*_,____-____*____,____-____*____-____*____).\n\nassert solution(?(______-______/____*____-___,____-____*___*____*____*____*____*____*____*____*____*____*____*____).\n\nassert solution(?(____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____*____)."
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0101\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''?(_-_/___*__):-___>__.\n''') == '0010'\n\nassert solution('''?(__-_+_/_____):-__>__,_____<__.\n''') == 'false'\n\nassert solution('''?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341'\n\nassert solution('''?(__+___+__-___):-___>__.\n''') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\nassert solution(\"?(__+___+__-___):-___>__,_____<__.\") == \"0101\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == '0'\nassert solution(\"2 4 3\") == '4'\nassert solution(\"1 1 2 3\") == '0'\nassert solution(\"2 1 1 2\") == '2'\nassert solution(\"1 1 1\") == '1'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '3'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '6'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '6'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 11''') == '3'\nassert solution('''3 4 2''') == '5'\nassert solution('''3 4 1000000000000000000''') == '0'\nassert solution('''3 4 10''') == '3'\n\n\n-----Alternate Solution-----"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 4 2\"\"\") == \"5\"\nassert solution(\"\"\"3 4 1000000000000000000\"\"\") == \"0\"\nassert solution(\"\"\"3 4 1000000000000000000\"\"\") == \"0\"\nassert solution(\"\"\"3 4 2\"\"\") == \"5\"\nassert solution(\"\"\"3 4 1000000000000000000\"\"\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"z\") == \"z\"\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\nassert solution('r') == 'r'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\nThe only given solution is correct.\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\nrozesvrphtxqcxzwxfzchzpl\n''') == 'codeforces'\nassert solution('''16\nplmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''1\nz\n''') == 'z'\n'''"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"orcesfedoc\") == \"rocesfedoc\"\nassert solution(\"rocesfedoc\") == \"rocesfedoc\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"rozesfory\", \"od\", \"rozesfory\") == \"odrozesfory\"\nassert solution(\"rozesfory\", \"od\", \"rozesfory\") == \"odrozesfory\"\nassert solution(\"rozesfory\", \"od\", \"rozesfory\") == \"odrozesfory\"\nassert solution(\"rozesfory\", \"od\", \"rozesfory\") == \"odrozesfory\"\nassert solution(\"rozesfory\", \"od\", \"rozesfory\") == \"odrozesfory\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"z\") == \"z\"\nassert solution(\"a\") == \"a\"\nassert solution(\"hello\") == \"helloh\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"hello\") == \"helloh\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\n\"\"\""
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 15') == 17\nassert solution('2 3') == 5\nassert solution('15 19') == 26\nassert solution('1 1') == 2\nassert solution('99 100') == 99\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == 3\nassert solution(\"3 4\") == 7\nassert solution(\"5 6\") == 9\nassert solution(\"0 0\") == 0\nassert solution(\"99999 99999\") == 9999999\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('2 2') == 4\nassert solution('7 1') == 8\nassert solution('0 0') == 0\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"5 7\") == \"12\"\nassert solution(\"1 7\") == \"8\"\nassert solution(\"10 9\") == \"18\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nprint(solution('1 1'))\n\"\"\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('10 10') == 20\nassert solution('5 15') == 19\nassert solution('100 99') == 199\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == input(\"\")\n\"\"\"\n\nimport sys\nassert (\n    solution(sys.stdin.read()) ==\n    \"19\"\n)\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Simple sum\"\nassert solution(\"9-7\") == \"+[->+<<]<\", \"Complex sum\"\nassert solution(\"5+5\") == \"++++++++++++++++++++++++++++++++++++++++++++++++.\", \"Complex sum\"\nassert solution(\"0+0\") == \"+++++++++>\", \"Zero sum\"\nassert solution(\"1+1\") == \"+[<+++>]<\", \"One sum\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3') == '++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"\n\n\n\"\"\"\n\nfrom codeforces.utils import Output"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++>\"\nassert solution(\"2+3\") == \"+>\\n++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>\"\nassert solution(\"9-7\") == \"+>\\n++>\\n++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>\"\nassert solution(\"9-7\") == \"+>\\n++>\\n++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>\"\nassert solution(\"9-7\") == \"+>\\n++>\\n++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('5+5') == '++>++>++>++>++>'\nassert solution('42+4') == '+++++>++>++>++>++>'\nassert solution('9-7') == '+++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('0-2') == '+++++++++>'\nassert solution('-1+1') == '++++++++>'\nassert solution('2+3+2') == '+++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\nassert solution('''2-3''') == '<[<->-]<'\nassert solution('''9+7''') == '++++++++++++++++++++++++++++++++++++++++++++++++'\nassert solution('''2*3''') == '++>++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '++>'\nassert solution('1+2') == '++>'\nassert solution('1+2+3') == '++>++>++>'\nassert solution('1+2+3-4') == '++>++>++>-<'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\nassert solution('''2+3+4''') == '+++>+>'\nassert solution('''9-7-8''') == '+++++++++>+>+>'\nassert solution('''2+3+4+5''') == '+++>+>+>+>'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n\n'''"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n\n''') == '''1\n8\n4\n4\n8\n9\n3\n2\n1\n3\n8\n9\n2\n1\n2\n1\n8\n3\n9\n2\n1\n3\n6\n2\n5\n3\n2\n4\n2\n3\n8\n3\n1\n1\n6\n2\n4\n3\n2\n1\n7\n2\n1\n3\n3\n1\n2\n1\n1\n3\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '''1\n2\n5\n2\n0\n'''\n\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '''8\n2\n4\n1\n'''\n\nassert solution('''2\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '''0\n2\n2\n'''\n\nassert solution('''1\n1\n2\n1\n1\n1\n''') == '''0\n0\n1\n1\n2\n'''\n\nassert solution('''6\n1\n2\n1\n1\n1\n1\n''') == '''1\n1\n1\n0\n1\n2\n'''"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('112123123412345$\\dots$') == '112'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '123456789'\nassert solution('123456789') == '0'\nassert solution('123456789123456789') == '12345678'\nassert solution('123456789123456789123456789123456789') == '123456789123456789'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '8'\nassert solution('2\\n2\\n2\\n2\\n2') == '4'\nassert solution('3\\n3\\n3\\n3\\n3') == '2'\nassert solution('4\\n4\\n4\\n4\\n4') == '1'\nassert solution('5\\n5\\n5\\n5\\n5') == '0'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"112123123412345$\\n\"\n    \"112345678910\"\n) == \"8\"\n\nassert solution(\n    \"112123123412345$\\n\"\n    \"112345678910\"\n) == \"2\"\n\nassert solution(\n    \"112123123412345$\\n\"\n    \"112345678910\"\n) == \"4\"\n\nassert solution(\n    \"112123123412345$\\n\"\n    \"112345678910\"\n) == \"1\"\n\nassert solution(\n    \"112123123412345$\\n\"\n    \"112345678910\"\n) == \"8\""
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '2'\nassert solution('123') == '3'\nassert solution('1234') == '4'\nassert solution('12345') == '5'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('112123123412345$\\dots$') == '5'\nassert solution('112123123412345$\\dots$12345$\\dots$78912345$\\dots$') == '0'\n\n'''"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('100') == ''\nassert solution('1000') == ''\nassert solution('10000') == ''\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12345') == '4'\nassert solution('123456789') == '8'\nassert solution('987654321') == '0'\nassert solution('567') == '1'\nassert solution('57') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"4\"\nassert solution(\"12334545\") == \"5\"\nassert solution(\"123456789\") == \"120\"\nassert solution(\"45678901\") == \"4\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\n''') == '4'\n\nassert solution('''\\\n10\n''') == '3'\n\nassert solution('''\\\n100\n''') == '29'\n\nassert solution('''\\\n500\n''') == '723'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('575') == '4'\nassert solution('101') == '0'\nassert solution('111') == '3'\nassert solution('1000') == '8'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '0'\nassert solution('''4\n''') == '3'\nassert solution('''5\n''') == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('000') == ''\nassert solution('110') == '1'\nassert solution('1110') == '2'\nassert solution('00010111111') == '11'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == 1\nassert solution('111') == 2\nassert solution('010110') == 2\nassert solution('10010') == 1\nassert solution('111001') == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''000''') == '1'\nassert solution('''1101''') == '1'\nassert solution('''001''') == '2'\nassert solution('''11011''') == '2'\nassert solution('''01111''') == '3'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00\") == 0\nassert solution(\"000\") == 1\nassert solution(\"101\") == 2\nassert solution(\"111\") == 3\nassert solution(\"110\") == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('000') == 1\nassert solution('010111010100001') == 3\nassert solution('0000000000001011011110010001100010011011101010110100111100110110111100100111001111010101011110100111000110010001010101000001010101011101000001') == 2\n\n'''\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"001\") == 2\nassert solution(\"111\") == 2\nassert solution(\"11111\") == 5\nassert solution(\"111111\") == 10\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"001\") == 2\nassert solution(\"010\") == 2\nassert solution(\"011\") == 3\nassert solution(\"100\") == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('000') == 1\nassert solution('00') == 1\nassert solution('010110') == 2\nassert solution('0111110') == 3\nassert solution('0011001001') == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"000110\") == 1\nassert solution(\"001010\") == 2\nassert solution(\"1\") == 1\nassert solution(\"11111\") == 0\nassert solution(\"00000\") == 0\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"00\") == \"\"\nassert solution(\"01\") == \"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6 7 9 10 31\n''') == 'APPROVED'\nassert solution('''\n1\n1\n2\n2\n3\n''') == 'DENIED'\nassert solution('''\n3\n1\n2\n2\n3\n''') == 'DENIED'\nassert solution('''\n4\n1\n2\n2\n3\n''') == 'DENIED'\nassert solution('''\n5\n1\n2\n2\n3\n''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 5''') == 'DENIED'\nassert solution('''7\n25 35 39 41 45 47 49''') == 'APPROVED'\nassert solution('''7\n25 35 39 41 45 47 49''') == 'DENIED'\nassert solution('''10\n99 1 1 1 1 1 1 1 1''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3 4 5\") == \"DENIED\"\nassert solution(\"1\\n1\") == \"DENIED\"\nassert solution(\"5\\n1 2 3 4 5\") == \"APPROVED\"\nassert solution(\"5\\n2 2 4 4 6\") == \"DENIED\"\nassert solution(\"5\\n1 1 1 1 1\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(None) is None\nassert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\nassert solution('2') == 'DENIED'\nassert solution('2 2') == 'APPROVED'\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('5') == 'DENIED'\nassert solution('1 2 3 4 5') == 'APPROVED'\nassert solution('1 3 3') == 'DENIED'\nassert solution('1 1 1') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('5\\n6 7 9 10 0') == 'DENIED'\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\nassert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\nassert solution('6 7 9 10 31') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\n'''\n\nfrom sys import stdin, stdout\nn = int(stdin.readline().strip())\na = [int(x) for x in stdin.readline().strip().split()]\n\nfor i in a:\n    if i%2==0:\n        if i%3==0 or i%5==0:\n            stdout.write('APPROVED\\n')\n        else:\n            stdout.write('DENIED\\n')\n    else:\n        stdout.write('DENIED\\n')\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''3\n5 5 5''') == 'APPROVED'\nassert solution('''5\n1 4 7 8 9''') == 'DENIED'\nassert solution('''1\n1''') == 'DENIED'\nassert solution('''100\nn''') == 'APPROVED'"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('RUDRD') == 'Yes'\nassert solution('RUDUDDDL') == 'No'\nassert solution('UDDRRDRRUDRRRUUDUDUDDLUDUDLDRRDRUDUDUUULDRDDUDUDDDRUDDURDDUDUDULUURRRUDUDDDL') == 'Yes'\nassert solution('UDDRRDRRUDRRRUUDUDUDUDDLUDUDLDRRDRUDUDUUULDRDDUDUDDDRUDDURDDUDUDULUURRRUDUDDDL') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRRUULD') == 'Yes'\nassert solution('URRR') == 'No'\nassert solution('LRLLU') == 'No'\nassert solution('LLRLUURDL') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LLDDRULDR\") == \"Yes\"\nassert solution(\"DDRURDRDLURD\") == \"Yes\"\nassert solution(\"RDRDRDLLDLULDRD\") == \"No\"\nassert solution(\"DDLLUDRRRD\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDDD\") == \"Yes\"\nassert solution(\"RUDRUD\") == \"No\"\nassert solution(\"UUUUUDDDRDRUDDLLLLDDD\") == \"Yes\"\nassert solution(\"RRUDDUDDDRUDUUDUDLLLLL\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRRUDUDLDRUD') == 'Yes'\nassert solution('UDDDRRRRDRLDRDRULURURDRUUDDDRDRUUDLDRRDLRDRDULURUDDRRURLDDRDLDRURULDRULDDRUDRLDRULRURULUUDDDRLDRURDLDR') == 'Yes'\nassert solution('DRURDR') == 'No'\nassert solution('DRURDRRRRDRLDRDRULURURDRUUDDDRDRUUDLDRRDLRDRDLRDRULURUDDRULUDDRRURULDDRDRDRUDRURDRURDRURDRULRDRULDRUDR') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRD\") == \"No\"\nassert solution(\"RUDRUD\") == \"Yes\"\nassert solution(\"RUDLR\") == \"No\"\nassert solution(\"UDUDUD\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'Yes'\nassert solution('RUDLUDR') == 'Yes'\nassert solution('RULDRUURDD') == 'Yes'\nassert solution('LDRULURUUDD') == 'No'\nassert solution('UDUULRURDLLD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LUDR') == 'No'\nassert solution('RDDL') == 'Yes'\nassert solution('UDUL') == 'Yes'\nassert solution('RDR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RRD') == 'No'\nassert solution('LLR') == 'Yes'\nassert solution('UU') == 'Yes'\nassert solution('RRDDUDUUUD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RUDLR\") == \"Yes\"\nassert solution(\"RULUDD\") == \"Yes\"\nassert solution(\"LDRULRU\") == \"Yes\"\nassert solution(\"RDRULD\") == \"No\"\nassert solution(\"DDRULDRULUL\") == \"Yes\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom __future__ import annotations\n\nINF = 10 ** 15\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n1\\n1\\n1') == '2'\nassert solution('4\\n2\\n2\\n2\\n2') == '6'\nassert solution('5\\n3\\n3\\n3\\n3') == '8'\nassert solution('7\\n7\\n7\\n7\\n7') == '14'\nassert solution('8\\n8\\n8\\n8\\n8') == '30'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n5\\n3\\n4\\n2\\n4') == '8'\nassert solution('3\\n2\\n3\\n1\\n3\\n1') == '6'\nassert solution('4\\n2\\n4\\n1\\n3\\n1') == '8'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '1'\nassert solution('5\\n3\\n2\\n3\\n4\\n5') == '7'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '1'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '0'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''1\n1\n1\n1\n1\n1''') == '5'\nassert solution('''7\n1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''10\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5''') == '15'\nassert solution('''7\n1\n1\n1\n1\n1\n1\n1''') == '1'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\n\"\"\"\nfrom sys import stdin\n\nn = int(stdin.readline().strip())\na,b,c,d,e,f = [int(x) for x in stdin.readline().strip().split()]"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == '7'\n\"\"\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n1\\n2\\n4\\n3\\n5') == '6'\nassert solution('5\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n4\\n3\\n5') == '7'\nassert solution('5\\n1\\n4\\n3\\n5') == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''5\n10\n2\n4\n3\n5''') == '30'\nassert solution('''5\n1\n1\n1\n1\n1''') == '1'\nassert solution('''5\n1\n1\n1\n1\n1''') == '1'\nassert solution('''5\n1\n1\n1\n1\n1''') == '1'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '8'\nassert solution('6') == '10'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '2'\nassert solution('3') == '4'\nassert solution('4') == '7'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('10') == 0\nassert solution('11') == 9\nassert solution('100') == 0\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n''') == '0,1,2,3,4'\nassert solution('''2\n''') == '0,9'\nassert solution('''1\n''') == '9'\nassert solution('''10\n''') == '0,1,2,3,4,5,6,7,8,9'\nassert solution('''3\n''') == '0,9,8'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 2\nassert solution('1') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 2\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '2'\nassert solution('100') == '2'\nassert solution('1000') == '2'\nassert solution('10000') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('0') == '0'\nassert solution('9') == '9'\nassert solution('0,9') == '0,9'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == \"\"\nassert solution(2) == \"\"\nassert solution(3) == \"\"\nassert solution(4) == \"\"\nassert solution(5) == \"\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == None\nassert solution('3') == 3\nassert solution('5') == 5\nassert solution('6') == 7\nassert solution('20') == 23\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == ''\nassert solution('''2''') == ''\nassert solution('''3''') == ''\nassert solution('''4''') == ''\nassert solution('''2''') == ''\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 5\nassert solution('5') == 7\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"20\") == \"23\"\n\"\"\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == ''\nassert solution('20') == '23'\nassert solution('2') == ''\nassert solution('20') == '23'\nassert solution('3') == ''\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"2 3 4\") == \"\"\nassert solution(\"2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == None\nassert solution(\"3\") == None\nassert solution(\"15\") == None\nassert solution(\"20\") == None\nassert solution(\"30\") == None\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"100\") == \"101\"\nassert solution(\"1000\") == \"1007\"\nassert solution(\"10000\") == \"10011\"\nassert solution(\"100000\") == \"100003\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20') == '23'\nassert solution('25') == '27'\nassert solution('30') == '31'\nassert solution('34') == '37'\nassert solution('38') == '41'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n1 1 1 1\") == \"2\"\nassert solution(\"4\\n2 2 2 2\") == \"0\"\nassert solution(\"4\\n3 3 3 3\") == \"4\"\nassert solution(\"4\\n3 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''5\n3 1 3 2 4''') == '2'\nassert solution('''7\n3 1 3 2 4 5 6 7''') == '3'\nassert solution('''8\n3 1 3 2 4 5 6 7 8''') == '4'\nassert solution('''9\n3 1 3 2 4 5 6 7 8 9''') == '5'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2 4') == '2'\nassert solution('5\\n3 1 3 2 4 5') == '3'\nassert solution('5\\n3 1 3 2 4 5 6') == '4'\nassert solution('5\\n3 1 3 2 4 5 6 7') == '5'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 3 1') == 1\nassert solution('2 4 4 3 1') == 2\nassert solution('2 4 4 3 1') == 2\nassert solution('2 4 3 1') == 1\nassert solution('1') == 0\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n3 1 3 1\") == \"2\"\nassert solution(\"5\\n3 1 3 2\") == \"2\"\nassert solution(\"5\\n3 1 3 1\") == \"2\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''5\n1 1 1 1 1''') == '3'\nassert solution('''2\n2 2''') == '0'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''4\n2 1 1 1''') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('3') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'\nassert solution('4 1 3 2') == '2'\nassert solution('4 1 3 2') == '2'\nassert solution('4 1 3 2') == '2'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 1 2\") == \"1\"\nassert solution(\"2 3 1 2\") == \"3\"\nassert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"3 2 1 2\") == \"4\"\nassert solution(\"1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''1\n1''') == '1'\nassert solution('''7 7 7 7\n1\n1\n1\n1\n1\n1\n1''') == '6'\nassert solution('''8 3 2\n2\n1\n3\n3\n2\n2\n3\n3\n1''') == '10'\nassert solution('''6 3 2\n1\n2\n1\n1\n1\n1''') == '4'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\nprint(solution(input))\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 1 3\") == \"12\"\nassert solution(\"5 3 1 2\") == \"5\"\nassert solution(\"1 1 3 1 1\") == \"4\"\nassert solution(\"3 1 1 3 1\") == \"4\"\nassert solution(\"1 1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"100 90 80\") == \"23\"\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '5'\nassert solution('1 2 3 4\\n1\\n2\\n3\\n4') == '5'\nassert solution('3 8 6 9\\n9\\n3\\n7\\n5') == '34'\nassert solution('4 6 6 6\\n7\\n4\\n5\\n3') == '6'\nassert solution('7 6 7 7\\n5\\n3\\n5\\n1') == '9'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('98') == '23'\nassert solution('40') == '10'\nassert solution('30') == '9'\nassert solution('21') == '8'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"B\"\nassert solution(\"B\") == \"C\"\nassert solution(\"Z\") == \"A\"\nassert solution(\"Z\") == \"A\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"XYZABC\") == \"ABCD\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ABCD\"\nassert solution(\"WVUTSRQPONMLKJIHGFEDCBA\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('AB') == 'BA'\nassert solution('AB') == 'BA'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZ') == 'ZABC'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('AZ') == 'BC'\nassert solution('AAABBB') == 'CCAABB'\nassert solution('ABC') == 'CAB'\nassert solution('AABB') == 'AB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('A') == 'B'\nassert solution('Z') == 'A'\nassert solution('XYZ') == 'ABC'\nassert solution('AC') == 'BC'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'ZABCXAY'\nassert solution('XYZABC') == 'ABCXYZ'\nassert solution('YZABCX') == 'ABCXYZ'\nassert solution('ZABCX') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"XYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"A\") == \"C\"\nassert solution(\"B\") == \"D\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZXYZXYZXYZ') == 'DEABCAB'\nassert solution('ABC') == 'CAB'\nassert solution('XYZ') == 'YZC'\nassert solution('ABCXYZXYZXYZXYZ') == 'DEABCAB'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2750131 199999') == '199999'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('1') == '1'\nassert solution('3 6') == '6'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'\n\nassert solution('''\n1\n3 6\n''') == '6'\nassert solution('''\n3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n3 6\n''') == '6'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''6\n3 6\n''') == '3 4 2'\nassert solution('''3\n2 2 2''') == '2'\nassert solution('''3\n3 3 3''') == '3'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5 2 3 2 4\\n3 6\\n') == '3 4 2\\n'\nassert solution('1\\n2750131 199999\\n') == '199999\\n'\nassert solution('1\\n3 6\\n') == '6\\n'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''2\n1 2''') == '2 1'\nassert solution('''2\n1 2''') == '2 1'\nassert solution('''2\n2 3''') == '2 3'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('test') == '4 2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n') == '3 4 2'\nassert solution('1\\n2750131 199999\\n') == '199999'\nassert solution('1\\n3 6\\n') == '6'\nassert solution('1\\n3 6\\n') == '6'\n\n\n-----Addendums-----"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n') == '3 4 2'\nassert solution('1\\n2750131 199999\\n') == '199999'\nassert solution('1\\n3 6\\n') == '6'\nassert solution('2\\n7 14\\n') == '14 7'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\nassert solution('1\\n2750131 199999\\n') == '199999\\n'\nassert solution('1\\n3 6\\n') == '6\\n'\nassert solution('1\\n7\\n') == '7\\n'\nassert solution('1\\n7 8\\n') == '8\\n'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\n\n\n\n\"\"\"\n\nn,k = map(int, stdin.readline().split())\narr = [int(x) for x in stdin.readline().split()]\n\narr = sorted(arr)"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"11111\"\nassert solution(\"4 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\nassert solution(\"1 1\") == \"21112\"\nassert solution(\"2 3 1\") == \"111122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"11111\"\nassert solution(\"2 1\") == \"22111\"\nassert solution(\"5 1\") == \"1121122\"\nassert solution(\"5 2\") == \"1122222\"\nassert solution(\"7 1\") == \"112222222\""
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"2211\"\nassert solution(\"2 1 3 4 5 6 7 8 9 10 11\") == \"11111\"\nassert solution(\"5 1 2 3 4 5 6 7 8 9 10 11\") == \"1121122\"\nassert solution(\"7 1 2 3 4 5 6 7 8 9 10 11\") == \"11211222\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"21112\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111\\n'\nassert solution('5 1\\n2 4 5 3 1\\n') == '1121122\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '11211222\\n'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112\\n'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"22111\"\nassert solution(input()) == \"1121122\"\nassert solution(input()) == \"21112\"\nassert solution(input()) == \"11111\"\nassert solution(input()) == \"121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122\\n'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112\\n'\nassert solution('5 1\\n1 2 1 3 5 4\\n') == '22111\\n'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2''') == ''\nassert solution('''5 1''') == '11111'\nassert solution('''7 1''') == '1121122'\nassert solution('''7 2''') == '221122'\nassert solution('''6 1''') == '211121'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\n\nassert solution('''2\n100 1\n''') == '2'\n\nassert solution('''4\n1 3 3 7\n''') == '4'\n\nassert solution('''8\n89124273 22 7 9 7464\n''') == '6'\n\nassert solution('''7\n1234565 79 23 7 9 7\n''') == '2'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n1 2 1 2 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"2\n100 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n1\\n2') == '3'\nassert solution('4\\n1 3 3 7') == '4'\nassert solution('2\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 2 3') == 2\nassert solution('100 1') == 2\nassert solution('100 2') == 3\nassert solution('1 3 3 7') == 4\nassert solution('100 2 1') == 1\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('100 9') == '8'\nassert solution('100 9') == '8'\nassert solution('100 9') == '8'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2 3') == 2\nassert solution('100 1') == 2\nassert solution('100 200 100 200 100 100 100 200 200 200 100 1') == 2\nassert solution('100 200 100 200 100 100 100 200 200 200 100 1') == 2\nassert solution('3') == 1\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n####################################################\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''2\n1 1 1''') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n5\\n4\\n7\\n1\\n4\\n4\\n1') == '1'\nassert solution('1\\n3\\n1\\n1\\n1\\n1') == '0'\nassert solution('4\\n16\\n4\\n7\\n1\\n4\\n4\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16\n''') == '1'\nassert solution('''4\n1 1 1 1023\n''') == '0'\nassert solution('''6\n1 2 3 4 5 6\n''') == '3'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom math import log2\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0101\") == \"2\"\nassert solution(\"001101010101101\") == \"2\"\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('10101') == '4'\nassert solution('1010111100111101011111010000110111') == '4'\nassert solution('101010100000101010101010101010101') == '4'\nassert solution('001110000010111011101111101110101110111111') == '4'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"01\") == 1\nassert solution(\"101\") == 1\nassert solution(\"111\") == 0\nassert solution(\"101111\") == 0\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0011') == 4\nassert solution('111') == 2\nassert solution('000') == 0\nassert solution('001') == 1\nassert solution('101') == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0011') == 4\nassert solution('1111') == 0\nassert solution('0101') == 3\nassert solution('1010101') == 3\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == 0\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0011') == 4\nassert solution('001011') == 5\nassert solution('0101111') == 8\nassert solution('0111111') == 1\nassert solution('1110111') == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0011') == 4\nassert solution('0000') == 0\nassert solution('1111') == 0\nassert solution('1010') == 1\nassert solution('1011101') == 4\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 4') == '2'\nassert solution('1 2\\n2 4') == '2'\nassert solution('1 3\\n2 4') == '0'\nassert solution('1 2\\n2 1') == '0'\nassert solution('1 2\\n2 1\\n1 2') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''3 2\n1 3\n2 4\n''') == '4'\nassert solution('''2 3\n1 3\n2 4\n''') == '4'\nassert solution('''2 1\n1 3\n2 4\n''') == '0'\nassert solution('''2 2\n1 3\n2 4\n''') == '1'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 4') == '2'\nassert solution('1 4') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('1 1\\n2 2') == '2'\nassert solution('1 2\\n2 1') == '2'\nassert solution('10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '10'\nassert solution('10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '1'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('3 2\\n1 3\\n2 3') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n3 3') == '2'"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 3') == '0'\nassert solution('1 3') == '0'\nassert solution('10 3') == '0'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n1 2 2 1\") == \"3\"\nassert solution(\"5\\n1 2 2 1\") == \"3\"\nassert solution(\"1\\n2\") == \"1\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"2 1 2 1\") == \"3\"\nassert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"1 2 2 1\") == \"2\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nN = int(input())\nh = [int(i) for i in input().split()]\n\nmin_water = 0\n\nfor i in range(1,N):\n    if h[i-1] < h[i]:\n        min_water += (h[i] - h[i-1])\n        h[i] = h[i-1] + 1\n\nprint(min_water)"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 2 2 3') == '2'\nassert solution('1 2 2 3 4') == '3'\nassert solution('1 2 2 3 4 5') == '3'\nassert solution('1 2 2 3 4 5 6') == '4'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 2 1''') == '2'\nassert solution('''4\n1 2 2 1''') == '2'\nassert solution('''4\n1 2 2 1''') == '2'\nassert solution('''4\n1 2 1 1''') == '1'\nassert solution('''4\n1 2 1 1''') == '1'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('2 1 2 1') == '2'\nassert solution('1 2 2 1') == '2'\nassert solution('2 1 2 1') == '2'\nassert solution('2 2 2 1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 2 1''') == \"2\"\nassert solution('''5\n9 7 6 5 4''') == \"5\"\nassert solution('''7\n2 3 4 5 6 7 8''') == \"2\"\nassert solution('''15\n2 5 8 9 12 13 14 17 18 19 22 24 26 27 28 29 30 31''') == \"1\"\nassert solution('''13\n8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31''') == \"1\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nn, w = map(int, stdin.split())\na = list(map(int, stdin.split()[1:]))\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('4 10') == '4'\nassert solution('4 10') == '4'\nassert solution('4 10') == '4'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\nassert solution('1\\n1') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/example') == '0'\nassert solution('inputs/solution') == '3'\n\"\"\"\n\nimport sys\nfrom bisect import bisect"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 1 -3\\n') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('4 100\\n3 4 1 2 3\\n') == '0'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"-1 1\") == \"4\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"\nassert solution(\"2 10\\n0 0 0 0\") == \"0\"\nassert solution(\"3 5\\n2 1 -3\") == \"3\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3 5\n2 1 -3\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"2 4\n-1 1\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"4 10\n2 4 1 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5 5\n3 4 -2 -1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"10 10\n2 3 5 4 -1 1 -4 -2 -5 -6 -7 -8 -9 -10\n\"\"\") == \"3\""
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n2 4 1 2') == '4'\nassert solution('2 4\\n-1 1') == '0'\nassert solution('2 4\\n2 1 -3') == '3'\nassert solution('10000000 10000000\\n10000000 10000000 1 1') == '1'\nassert solution('10000000 10000000\\n10000000 10000000 1 1') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5\\n2 1 -3\\n') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('4 10\\n2 -3 -4 1 2\\n') == '0'\nassert solution('4 10\\n-1 -3 -2 -1 2\\n') == '0'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\"\"\"\n\nfrom typing import List, Tuple\nimport re\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('10\\n2 1 3 4 5 6 7 8 9 10 11') == '11 1 2 3 4 5 6 7 8 9 10'\nassert solution('1\\n3000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 28 84'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1\\n1000000000000000000 1000000000000000000') == '1000000000000000000 1000000000000000000'\n\n\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000000000000000000 3000000000000000000\\n') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('7\\n5 4 3 2 1 6 7 8 9 10 11\\n') == '11 5 4 3 2 1 6 7 8 9'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n4 8 6 3 12 9''') == '9 3 6 12 4 8'\nassert solution('''4\n42 28 84 126''') == '126 42 84 28'\nassert solution('''2\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\nassert solution('''8\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\nassert solution('''5\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('3\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n3 5 4 7 10 12') == '3'\nassert solution('5\\n-1 2 5 8 11') == '1'\nassert solution('1\\n-1') == '1'\nassert solution('1\\n-1 2') == '1'\nassert solution('1\\n-1 2 2') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n-1\n''') == '1'\nassert solution('''2\n1 -1\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\"\nassert solution(\"0\\n0\") == \"0\"\n\n\n\"\"\"\n\n\nfrom itertools import combinations"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n3 5 4 7 10 12') == '3\\n7 3 5'\nassert solution('5\\n-1 2 5 8 11') == '1\\n8'\nassert solution('5\\n-10 10 10 -5 -5') == '2\\n10'"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n-1 2 5 8 11') == '3'\nassert solution('6\\n3 5 4 7 10 12') == '3'\nassert solution('5\\n-1 2 5 8 11') == '1'\nassert solution('5\\n5 5 5 5 5 5') == '0'\nassert solution('5\\n5 5 5 5 5') == '0'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '3'\nassert solution('6\\n3 5 4 7 10 12\\n') == '3'\nassert solution('5\\n-1 2 5 8 11\\n') == '1'\nassert solution('0\\n0\\n') == '0'\nassert solution('1\\n0\\n') == '0'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '6\\n3 5 4 7 10 12'\n) == '3\\n7 3 5'\n\nassert solution(\n    '5\\n-1 2 5 8 11'\n) == '1\\n8'\nassert solution(\n    '5\\n-1 2 5 8 11'\n) == '1\\n8'\nassert solution(\n    '5\\n1 2 5 8 11'\n) == '1\\n8'\nassert solution(\n    '5\\n1 2 5 8 11'\n) == '1\\n8'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n3 5 4 7 10 12\\n') == '3\\n7 3 5'\nassert solution('5\\n-1 2 5 8 11\\n') == '1\\n8'\nassert solution('6\\n1 2 5 8 10 12\\n') == '1\\n8'\nassert solution('5\\n-1 -2 5 8 11\\n') == '1\\n9'\nassert solution('5\\n1 -2 5 8 11\\n') == '1\\n9'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n6\n3 5 4 7 10 12\n\"\"\") == \"\"\"3\"\"\"\n\nassert solution(\n\"\"\"\n5\n-1 2 5 8 11\n\"\"\") == \"\"\"1\"\"\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"-1 1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 2 2\") == \"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\n\nfor _ in range(T):\n    A, B, K = map(int, sys.stdin.readline().strip().split())\n    Aoki = B\n    Takahashi = A - Aoki\n    for _ in range(K):\n        if Takahashi == 0 and Aoki == 0:\n            continue\n        if Takahashi > 0:\n            Aoki += 1\n            Takahashi -= 1\n        else:\n            Takahashi += 1\n            Aoki -= 1\n    print(Takahashi, Aoki)"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('0 10 10') == '0 0'\nassert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('0 0 0') == '0 0'\nassert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('2 3 5') == '1 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('5 3 4') == '0 0'\nassert solution('0 3 4') == '0 0'\nassert solution('0 0') == '0 0'\n\"\"\"\nimport sys"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 3 1') == '0 1'\nassert solution('1 3 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 2') == '1 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 0 0') == '0 0'\nassert solution('2 2 2') == '0 0'\nassert solution('2 1 1') == '0 1'\nassert solution('1 1 1') == '0 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2') == '0 2'\nassert solution('2 3 3') == '0 2'\nassert solution('2 3 0') == '0 0'\nassert solution('1 100000000 100000000 100000000') == '0 0'\nassert solution('1 1000000000 1000000000 1000000000') == '0 0'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000') == '3'\nassert solution('103') == '3'\nassert solution('10000') == '3'\nassert solution('1000') == '3'\nassert solution('1000') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100') == '1'\nassert solution('10') == '2'\nassert solution('101') == '3'\nassert solution('1000') == '4'\nassert solution('1010') == '5'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100') == '3'\nassert solution('200') == '5'\nassert solution('500') == '7'\nassert solution('1000') == '10'\nassert solution('10000') == '14'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('100') == ''\nassert solution('1000000000') == ''\nassert solution('12345678') == ''\nassert solution('123456789') == ''\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('10') == ''\nassert solution('100') == ''\nassert solution('1000') == ''\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('12345678') == '6'\nassert solution('123456789') == '5'\nassert solution('12345678901') == '5'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100') == '1'\nassert solution('1234567890') == '10000'\n\"\"\""
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('103') == '3'\nassert solution('103') == '3'\nassert solution('1000') == '1'\nassert solution('10001') == '1'\nassert solution('10001') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('103') == '3'\n\"\"\""
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '9'\nassert solution('1') == '1'\nassert solution('10') == '45'\nassert solution('13') == '79'\nassert solution('16') == '61'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"45\"\nassert solution(\"100\") == \"4396\"\nassert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1+1+1=3\"\nassert solution(\"4\") == \"1+1+1+1=4\"\nassert solution(\"5\") == \"1+1+1+1+1=5\"\nassert solution(\"6\") == \"1+1+1+1+1+1=6\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\") == \"9\"\nassert solution(\"1\\n1\\n2\") == \"9\"\nassert solution(\"1\\n2\\n1\") == \"9\"\nassert solution(\"1\\n2\\n2\") == \"9\"\nassert solution(\"2\\n1\\n1\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\nassert solution('5') == '9'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('3') == '18'\nassert solution('4') == '36'\nassert solution('5') == '105'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''10\n10 10 10''') == '50'\nassert solution('''5\n2 3 1 2 3''') == '17'\n'''\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nassert solution(\"10\\n5 6 7\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n3 4 6'''\n) == '10'\nassert solution(\n'''4\n1 1 1 1'''\n) == '4'\nassert solution(\n'''4\n1 2 3 4'''\n) == '2'\nassert solution(\n'''10\n1 2 3 4 5 6 7 8 9 10'''\n) == '5'\nassert solution(\n'''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'''\n) == '245'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 4 6''') == \"10\"\nassert solution('''4\n3 4 6\n8 7 2''') == \"6\"\nassert solution('''5\n3 4 6\n8 7 2\n10 11 5''') == \"6\"\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19''') == \"6\"\nassert solution('''7\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19\n20 21 22 23 24 25 26 27 28''') == \"6\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n2 2 2\\n') == '0'\nassert solution('3\\n2 2 2\\n') == '0'\nassert solution('3\\n2 2 1\\n') == '1'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''3\n3 4 6''') == '10'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == '30'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('1\\n1 2 1') == '2'\nassert solution('1000\\n10 7 7') == '1'\nassert solution('3\\n3 4 6') == '10'\nassert solution('2\\n1 1') == '1'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"2\\n2 1 2\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n6 6\\n4 4\\n3 3\\n3 2\") == \"No\"\nassert solution(\"5\\n1 2\\n1 2\\n1 2\\n1 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n1 2\\n1 2\\n1 2\") == \"No\"\nassert solution(\"5\\n6 6\\n4 4\\n3 3\\n3 2\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''\n5\n2 1\n4 3\n3 5\n3 2\n4 4\n''') == 'No'\nassert solution('''\n5\n2 1\n6 6\n4 4\n3 3\n4 2\n''') == 'Yes'\nassert solution('''\n5\n2 1\n6 6\n1 1\n2 2\n4 4\n''') == 'Yes'\nassert solution('''\n5\n2 1\n1 1\n1 2\n3 4\n5 5\n''') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == \"Yes\"\nassert solution('6 6') == \"Yes\"\nassert solution('4 4') == \"Yes\"\nassert solution('3 3') == \"No\"\nassert solution('3 2') == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample0) == \"Yes\"\nassert solution(sample1) == \"Yes\"\nassert solution(sample2) == \"No\"\nassert solution(sample3) == \"No\"\nassert solution(sample4) == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2') is None\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\") == \"Yes\"\nassert solution(\"6\\n6 6\") == \"Yes\"\nassert solution(\"2\\n3 3\") == \"No\"\nassert solution(\"3\\n2 2\") == \"Yes\"\nassert solution(\"3\\n6 6\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 'Yes'\nassert solution(sample_input_2) == 'No'\nassert solution(sample_input_3) == 'Yes'\nassert solution(sample_input_4) == 'Yes'\nassert solution(sample_input_5) == 'No'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 3\nassert solution('100') == 100\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('2.5') == '3'\nassert solution('1000000') == '10'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 4\nassert solution('1') == 1\nassert solution('2.0') == 4\nassert solution('3') == 9\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 4\nassert solution('2.5') == 3\nassert solution('5') == 6\nassert solution('10') == 8\nassert solution('2.5') == 3\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '4'"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\n\n-----Note-----\nThe answer is guaranteed to be an integer.\nThe answer can be an integer rounded to a whole number.\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 4\nassert solution('1') == 0\nassert solution('3') == 6\nassert solution('4') == 8\nassert solution('5') == 10\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('100') == '0'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('2 2 3') == 'No'\nassert solution('1 4 3') == 'No'\nassert solution('5 4 2') == 'Yes'\nassert solution('2 2 4') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 8 5 1\") == \"Yes\"\nassert solution(\"3 8 5 9\") == \"No\"\nassert solution(\"4 7 5 3\") == \"Yes\"\nassert solution(\"5 1 3 4\") == \"No\"\nassert solution(\"3 3 3 3\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\n\"\"\""
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('4\\n1 1 1 1') == 'Yes'\nassert solution('3\\n2 3 1') == 'No'\nassert solution('3\\n1 1 3') == 'No'\nassert solution('10\\n10 10 10 10 10 10 10 10') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 3 4 5\") == \"No\"\nassert solution(\"2 1 1 1\") == \"Yes\"\nassert solution(\"2 1 1 2\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 3 5 5') == 'No'\nassert solution('5 8 5 2 1') == 'Yes'\nassert solution('5 4 4 2 1') == 'Yes'\nassert solution('5 4 4 2') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n8 5 1') == 'Yes'\nassert solution('1\\n2\\n3\\n4') == 'Yes'\nassert solution('3\\n1 2 3') == 'No'\nassert solution('5\\n1 2 3 4 5') == 'No'\nassert solution('5\\n1 1 1 1 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    input('''\n4\n3 8 5 1\n''')) == 'Yes'\nassert solution(\n    input('''\n2\n2 1\n''')) == 'No'\nassert solution(\n    input('''\n3\n4 4 3\n''')) == 'Yes'\nassert solution(\n    input('''\n5\n3 4 5 4 1\n''')) == 'Yes'\nassert solution(\n    input('''\n8\n3 4 5 4 1 1 2\n''')) == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 8 5 1') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('1 2 3 4 5') == 'No'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7\\n3 2\\n1 7') == '702'\nassert solution('1 3\\n7 2\\n3 2') == '702'\nassert solution('2 7\\n1 7\\n3 2') == '702'\nassert solution('2 3\\n7 2\\n3 2') == '702'\nassert solution('1 6\\n5 2\\n3 2') == '13'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"-1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 1\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7\n''') == '702'\nassert solution('''3 1\n1 7\n3 2\n1 7\n''') == '-1'\nassert solution('''1 2\n7 7\n2 1\n3 3\n2 1\n1 7\n''') == '-1'\nassert solution('''1 0\n0 1\n2 1\n2 1\n0 1\n1 1\n0 1\n1 1\n''') == '-1'\nassert solution('''1 0\n0 1\n2 1\n1 1\n1 1\n1 1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"1 7\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123') == '123'\nassert solution('1234567') == '1234567'\nassert solution('12345678') == '1234567'\nassert solution('1234567890') == '1234567890'\nassert solution('1234') == '123'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '-1'\nassert solution('3 2') == '102'\nassert solution('1 7 2 1') == '-1'\nassert solution('0 1') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 7\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"1 7\") == \"-1\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7') == '702'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7\\n3 2\\n1 7\\n') == '702'\nassert solution('1 7\\n3 2\\n1 0\\n') == '-1'\nassert solution('1 7\\n3 2\\n1 7\\n') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n') == '702'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '9'\nassert solution('''1 1''') == '1'\nassert solution('''3 2''') == '9'\nassert solution('''3 1''') == '1'\nassert solution('''3 1''') == '1'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 2\"\"\") == \"\"\"9\"\"\", \"test1\"\nassert solution(\"\"\"1 3\"\"\") == \"\"\"0\"\"\", \"test2\"\nassert solution(\"\"\"1 4\"\"\") == \"\"\"1\"\"\", \"test3\"\nassert solution(\"\"\"2 4\"\"\") == \"\"\"0\"\"\", \"test4\"\nassert solution(\"\"\"100 5\"\"\") == \"\"\"0\"\"\", \"test5\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"9\"\n\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"3 2\") == \"9\"\nassert solution(\"9 1\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '9'\nassert solution('8 7') == '27'\nassert solution('100 5') == '1'\nassert solution('10 10') == '0'\nassert solution('10 10 1') == '2'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 4') == '1'\nassert solution('5 3') == '6'\nassert solution('10 5') == '11'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\n\"\"\"\nfrom math import sqrt\nn,k = map(int,stdin.split())\nprint(int((k*(k+1))*(2*k+1)/6))\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(-9) == '1011'\nassert solution(-10) == '10101'\nassert solution(-5) == '01011'\nassert solution(0) == '0'\nassert solution(3) == '011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9') == '1011'\nassert solution('-9') == '1011'\nassert solution('9999') == '111111111111111111111111'\nassert solution('-9999') == '1111111111111111111111111'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n1\n'''\n) == '1011'\n\nassert solution(\n'''\n-9\n'''\n) == '1011'\n\nassert solution(\n'''\n3\n'''\n) == '1111'\n\nassert solution(\n'''\n10\n'''\n) == '1010'\n\nassert solution(\n'''\n15\n'''\n) == '1001'"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011'\nassert solution('1') == '1'\nassert solution('9') == '1001'\nassert solution('10') == '1010'\nassert solution('11') == '1011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == '101'\nassert solution('''-9''') == '1011'\nassert solution('''-9 -8 -7 -6 -5 -4 -3 -2 -1''') == '10110101'\nassert solution('''-9 -8 -7 -6 -5 -4 -3 -2 -1''') == '10110101'\n'''\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('-9') == '1011'\nassert solution('-0') == '0'\nassert solution('-9') == '1011'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"-9\"\n) == \"1011\"\n\nprint(solution(\n    \"-9\"\n))\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n-9\n\"\"\") == \"-1011\"\n\nassert solution(\n\"\"\"\n123\n\"\"\") == \"11010111\"\n\nassert solution(\n\"\"\"\n-101\n\"\"\") == \"11101111\"\n\nassert solution(\n\"\"\"\n1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n-1\n\"\"\") == \"1\""
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 5\\n4 9\\n2 4\\n1 3\\n2 4') == '5'\nassert solution('2 5\\n4 9\\n2 4\\n1 3\\n2 4\\n1 4\\n2 4') == '5'\nassert solution('2 5\\n4 9\\n2 4\\n1 3\\n2 4\\n1 4\\n2 4\\n1 4\\n2 4') == '5'\nassert solution('2 5\\n4 9\\n2 4\\n1 3\\n2 4\\n1 4\\n2 4\\n1 4\\n2 4\\n1 4\\n2 4') == '5'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == answer\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"12\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"1 10\") == \"9\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == solution(example)\nprint(solution(input))\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5\\n4 9\\n2 4\\n') == '12'\nassert solution('2 5\\n4 9\\n2 4\\n') == '12'\nassert solution('1 1\\n10 1\\n') == '1'\nassert solution('1 1\\n10 1\\n') == '1'\nassert solution('1 1\\n10 1\\n') == '1'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\\n1 9\\n2 4\") == \"12\"\nassert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"2 3\\n1 2\\n2 1\") == \"1\"\nassert solution(\"2 3\\n2 2\\n2 1\") == \"2\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom sys import stdin\nfrom functools import reduce\n\nn, m = list(map(int, stdin.readline().split()))\n\nA = [int(stdin.readline()) for _ in range(n)]\nB = [int(stdin.readline()) for _ in range(n)]\n\nA = sorted(A)\nB = sorted(B)"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5') == '12'\nassert solution('2 3') == '2'\nassert solution('2 5') == '4'\nassert solution('7 9') == '10'\nassert solution('5 8') == '9'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1\\n1'\nassert solution('2\\n1') == '2\\n2'\nassert solution('1\\n2\\n2') == '1\\n2\\n2'\nassert solution('2\\n2\\n2') == '2\\n4\\n2'\nassert solution('2\\n2\\n2\\n2') == '2\\n4\\n2\\n4'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n4 8 7 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"1 3 1 3 1\") == \"4\"\nassert solution(\"1 3 2 3 1\") == \"2\"\nassert solution(\"1 3 2 2 1\") == \"3\"\nassert solution(\"1 3 2 3 2 1\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('1 2 3 4 5') == '5'\nassert solution('8 6 7 7 1') == '3'\nassert solution('1 2 3 4 5 6 7 8 9') == '4'\nassert solution('9 7 9 1 4 7 6 1 1') == '3'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('5\\n1 4 8 7 3') == '2'\nassert solution('5\\n1 3 4 2 8') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\n'''\n\nN = int(stdin.readline())\nH = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input( ) ) == output( )\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n4 8 7 3') == '2'\nassert solution('5\\n10 4 8 7 3') == '2'\nassert solution('4\\n1 2 3 4') == '4'\nassert solution('1\\n2') == '2'\nassert solution('4\\n4 4 4 4') == '0'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"\"\nprint(solution(input(\"\")), \"test\")"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''8 9\n4 6 8 9 3 3 3 3 3 5''') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '1'\n\n\"\"\"\n\n\"\"\"\n\n---My Code---\n\nThe obvious solution is to use a greedy algorithm. In each step, take the smallest number, divide it by 2 and take the floor, and repeat.\nThe time complexity is O(log(n) * k), so this is faster than the solution below."
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 2 4 5') == '1'\nassert solution('1\\n1 2 3 3 3') == '2'\nassert solution('1\\n1 2 3 4 5') == '0'\nassert solution('5 2\\n1 2 2 4 5') == '1'\nassert solution('5 2\\n1 2 3 3 3') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 4 5\") == \"0\"\nassert solution(\"1 2 3 3 3 3\") == \"3\"\nassert solution(\"1 2 3 3 3 3\") == \"3\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''6 3\n1 2 1 2 1 3''') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 3\n1 2 2 4 5\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"5 3\n1 2 3 4 5\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"5 3\n1 2 3 3 3\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"6 3\n1 2 3 4 5 6\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"8 4\n1 2 3 4 5 6 7 8\"\"\"\n) == \"2\""
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '1'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"2\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n2') == '1'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 4 2 3\\n1 2 2 4 2 3') == '3'\nassert solution('2 5\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6') == '6'\nassert solution('4 5\\n3 4 5 4 4\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '4'\nassert solution('1000000000 1000000000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '2'\nassert solution('1000000000 1000000000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '2'\nprint(solution(''))\n'''\nimport sys"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"6 1\") == \"3\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n6 1\\n1 2 2 4 2 3\\n') == '3'\nassert solution('2\\n5 1\\n3 3 1 3 3 3\\n') == '4'\nassert solution('2\\n7 1\\n3 3 1 3 3 3 3 1\\n') == '4'\nassert solution('3\\n7 1\\n3 3 1 3 3 3 3 1 1 3\\n') == '4'\nassert solution('3\\n7 1\\n3 3 1 3 3 3 3 1 1 3 1 3 3 3 3 1\\n') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10\\n1 1 10\\n2 2 2\\n100 5 9\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\nassert solution('2 100\\n1 1 100\\n2 2 100\\n100 1 100') == '50\\n50\\n10'\nassert solution('1 100\\n1 1 100\\n2 2 100\\n100 1 100') == '1\\n1'\nassert solution('1 1\\n1 1\\n1 1') == '1\\n1\\n1'\nassert solution('1 1\\n1 1\\n1 1') == '1\\n1\\n1'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"\"\"\n10\n9\n1000\n42000000000000\n\"\"\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n1 2 3\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2''') == '10\\n9\\n1\\n42000000000000'\nassert solution('''10 1 3\n10 10 10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '5\\n1\\n1\\n1\\n1'\nassert solution('''10 1 3\n10 10 10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '5\\n1\\n1\\n1\\n1'\nassert solution('''10 1 3\n10 10 10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '5\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''5\n6 1 3\n1 3 1\n1 2 2\n1 1 4\n1 2 4\n''') == '5'\nassert solution('''4\n6 1 3\n1 3 1\n1 2 2\n1 1 4\n''') == '6'\nassert solution('''7\n2 1 5\n1 2 5\n2 3 3\n1 1 5\n1 2 5\n1 1 5\n1 2 5\n''') == '7'\nassert solution('''4\n2 1 4\n1 1 1\n2 2 2\n1 1 4\n''') == '4'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nprint(solution('''\\\n5\n9 90 13\n10 15 10\n8 7 7\n1 100 1\n3 2 2\n2 1 1\n1 100 1\n3 2 2\n4 3 4\n3 1 3\n1 100 1\n4 2 4\n2 1 2\n1 100 1\n3 2 2\n5 4 5\n1 9 9\n2 5 5\n1 100 1\n3 2 2\n'''))\n\nassert solution('''\\\n3\n1 2 3\n2 1 3\n1 3 2\n''') == '6\\n5\\n7'\n\nassert solution('''\\\n4\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n''') == '2\\n3\\n4\\n6'\n\nassert solution('''\\\n7\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n''') == '7\\n6\\n5\\n8\\n4\\n3\\n2\\n9'\n\nassert solution('''\\\n5\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n''') == '6\\n5\\n7\\n4\\n3\\n2\\n9'"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6\\n3 4 5') == '2\\n'\nassert solution('3 6\\n3 4 5') == '2\\n'\nassert solution('5 10\\n3 4 5 7 8 9 10\\n0') == '10\\n'\nassert solution('4 5\\n4 4 4\\n4 4 4 4\\n0') == '1\\n'\nassert solution('0 10\\n0 0 0 0\\n0\\n0 0\\n0 0\\n0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0\\n0\\n0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 6\\n3 4 5') == '2'\nassert solution('3 6\\n3 4 5\\n2 3 4') == '1'\nassert solution('3 4\\n3 4 5\\n2 3 4') == '0'\nassert solution('3 6\\n3 4 5\\n2 3 4\\n1 2 3') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\n\nassert solution('''1 0\n1 0\n''') == '3'\n\nassert solution('''100 1000\n495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000495005000"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6') == '2'\nassert solution('3 6') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('10 1') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 6\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 10\") == \"1\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 4 5') == '2'\nassert solution('3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '2'\nassert solution('10 1') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nn = int(input())\nwords = [input() for _ in range(n)]\n\nans = 'Yes'\nfor w in words:\n    if w[0] == w[-1] and w!= w[:-1]:\n        ans = 'No'\n        break\n\nprint(ans)\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today.\\n' +\n'takahashi,is,principle,of,shiritori,again,today."
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Hello, World!\") == \"No\"\nassert solution(\"Hello World\") == \"No\"\nassert solution(\"Hoo\") == \"No\"\nassert solution(\"Hello World!\") == \"No\"\nassert solution(\"Hello World!\") == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hoge') == 'No'\nassert solution('english') == 'Yes'\nassert solution('hogehoge') == 'No'\nassert solution('enigme') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nN = int(input())\nwords = [input() for _ in range(N)]\n\nfor i in range(N):\n    if not is_correct(words[i]):\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'No'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == 6\nassert solution('2 5') == 3\nassert solution('2 7') == 8\nassert solution('10 10') == 24\nassert solution('5 3') == 8\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('3 2') == '6'\nassert solution('3 2') == '6'\nassert solution('3 4') == '12'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('2 3') == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 5') == '8'\nassert solution('10 2') == '8'\nassert solution('2 2') == '4'\nassert solution('10 1') == '5'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 10\") == \"8\"\nassert solution(\"2 10\") == \"4\"\nassert solution(\"20 30\") == \"4\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 2') == '1'\nassert solution('2 1') == '3'\nassert solution('3 1') == '6'\nassert solution('10 3') == '21'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n') == '6'\nassert solution('4 4\\n') == '16'\nassert solution('5 6\\n') == '30'\nassert solution('8 8\\n') == '64'\nassert solution('10 10\\n') == '100'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 10\") == \"4\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('x') == 'x'\nassert solution('aaaaa') == 'aaaaa'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"asdfgh\") == \"xxxxxxx\"\nassert solution(\"b\") == \"b\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('z') == 'z'\nassert solution('r') == 'r'\nassert solution('rri') == 'rrr'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('tiger') == 'xrtxxx'\nassert solution('scary') == 'xryyyyr'\nassert solution('zombies') == 'zrbmzbr'\nassert solution('sweden') =='sbrmmm'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n\"\"\""
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\"\"\""
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 1 1 3\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n4\n3 4 1 3\n\"\"\") == \"No\"\n\nassert solution(\n\"\"\"\n5\n1 2 1 1 3\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"Yes\"\nassert solution(input2) == \"No\"\nassert solution(input3) == \"Yes\"\nassert solution(input4) == \"No\"\nassert solution(input5) == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 1 1 3') == 'Yes'\nassert solution('3\\n1 2 1') == 'No'\nassert solution('10\\n1 2 1 1 2 1 1 1') == 'No'\nassert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('5\\n1 2 1 1 3') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"2\\n1 1\") == \"No\"\nassert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"5\\n1 1 2 1 1 3\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('2 3 2 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('2 3 1 3') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"3\\n1 2 1\") == \"No\"\nassert solution(\"1\\n1\") == \"Yes\"\nassert solution(\"3\\n1 2 1\") == \"No\"\nassert solution(\"3\\n1 2 1\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"1 2 1 1 3\") == \"No\"\nassert solution(\"2 3 2 1 1 2\") == \"Yes\"\nassert solution(\"2 3 3 4 5\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 1 2') == 'No'\nassert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 1 3') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3\\n3 2 1') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2\\n3 2 1') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n3 2 1') == '1'\nassert solution('2 3 -10\\n1 2 3') == '1'\nassert solution('2 3 -10\\n1 2 2') == '0'\nassert solution('2 3 -10\\n1 2 1') == '0'\nassert solution('2 3 -10\\n1 2 2\\n1 2 1') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"0\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"0\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\n\"\"\"\n\nN, M = map(int, stdin.readline().split())\nB = list(map(int, stdin.readline().split()))\nA = [map(int, stdin.readline().split()) for i in range(N)]"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n3 2 1\\n1"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '0'\nassert solution('3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2\\n-10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('-10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2\\n-10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('-10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1900') == '100'\n\"\"\""
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000''') == ''\nassert solution('''1800''') == ''\nassert solution('''32''') == ''\nassert solution('''2''') == ''\nassert solution('''50''') == ''\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1900') == '100'\nassert solution('50') == '50'\nassert solution('5') == '5'\nassert solution('101') == '101'\nassert solution('567') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1900\n\"\"\") == \"100\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123') == 0\nassert solution('1000000') == 1\nassert solution('100000000') == 2\nassert solution('100000001') == 3\nassert solution('1000000000') == 4\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1900''') == '100'\nassert solution('''10''') == '0'\nassert solution('''1000''') == '1'\nassert solution('''10000''') == '100'\nassert solution('''100000''') == '100'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1900') == 100\nassert solution('9000') == 100\n\"\"\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('9\\n') == '10'\nassert solution('8\\n') == '7'\nassert solution('7\\n') == '6'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"123\") == \"100\"\nassert solution(\"1240\") == \"106\"\nassert solution(\"12345\") == \"424\"\nassert solution(\"12345678\") == \"9144\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"100\"\n\nassert solution(input()) == \"100\"\n\"\"\"\n\n\"\"\"\nComplete\n\"\"\""
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2') == '9'\nassert solution('4\\n4 2 1 1\\n4 2 1 1') == '4'\nassert solution('5\\n5 2 1 1 1\\n5 2 1 1 1\\n5 2 1 1 1\\n5 2 1 1 1') == '9'\nassert solution('6\\n6 2 1 1 1 1\\n6 2 1 1 1 1\\n6 2 1 1 1 1\\n6 2 1 1 1 1') == '6'\nassert solution('7\\n7 2 1 1 1 1 1\\n7 2 1 1 1 1 1\\n7 2 1 1 1 1 1\\n7 2 1 1 1 1 1') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n3 5 2\\n4 9') == '10'\nassert solution('2\\n3 9 2\\n4 9') == '5'\nassert solution('2\\n4 2\\n5 2') == '4'\nassert solution('2\\n4 2\\n4 2') == '4'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3 5 2') == '9'\nassert solution('3\\n4 5\\n2') == '11'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2\\n3 5') == '9'\nassert solution('2\\n1 2\\n3 5\\n2') == '11'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == str(solution(input))\n\n\"\"\""
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n1\\n0\\n0') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n2\\n2\\n2\\n2') == '6'\nassert solution('3\\n3\\n3\\n3\\n3') == '9'\nassert solution('4\\n4\\n4\\n4\\n4') == '12'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 5 2') == '9'\nassert solution('4\\n4 4 4') == '16'\nassert solution('10\\n20 10 10 10') == '60'\nassert solution('100\\n100 100 100 100') == '5000'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 2\\n1 1\\n1 1') == 9\nassert solution('4\\n3 3\\n1 1\\n1 1') == 7\nassert solution('4\\n1 2\\n1 2') == 8\nassert solution('4\\n1 1\\n1 1') == 5\nassert solution('4\\n2 2\\n2 2') == 8\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'War'\nassert solution('16 22') == 'No War'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 20 2 10') == 'War'\nassert solution('10 20 2 10') == 'No War'\n\"\"\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n') == 'War'\n\"\"\""
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'War'\n\n'''\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'No War'\n\n\"\"\"\n\nN, M, X, Y = list(map(int, stdin.split()))\nA = list(map(int, stdin.split()))\nB = list(map(int, stdin.split()))"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"War\"\n\n\"\"\"\n\nX, Y, N, M = map(int, stdin.split())\nlst = list(map(int, stdin.split()))\nlst2 = list(map(int, stdin.split()))\n\nfor i in range(N):\n    if lst[i] <= Y:\n        lst[i] = lst2[i]\n    else:\n        lst[i] = lst[i] - Y\n\nfor i in range(M):\n    if lst2[i] >= Y:\n        lst2[i] = lst[i]\n    else:\n        lst2[i] = lst2[i] - Y"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 3 1') == 'War'\nassert solution('3 2 3 1') == 'War'\nassert solution('3 2 3 1') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22') == 'War'\n\"\"\""
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"6\") == \"\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n4') == 6\nassert solution('2\\n3') == 6\nassert solution('1\\n1') == 0\nassert solution('4\\n1') == 3\nassert solution('1\\n1\\n1') == 0\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n3\\n3') == '6'\nassert solution('2\\n3\\n2') == '6'\nassert solution('2\\n3\\n2\\n3') == '6'\nassert solution('2\\n3\\n2\\n3\\n2') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n3\\n2') == '9'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2') == '4'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''10\n1\n2''') == '1'\nassert solution('''1\n2\n2''') == '0'\nassert solution('''1\n2\n3''') == '1'\nassert solution('''1\n1000000000\n1000000000''') == '1'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n5''') == '10'\nassert solution('''2\n2\n6''') == '12'\nassert solution('''2\n2\n7''') == '14'\nassert solution('''2\n2\n8''') == '16'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2\n2\n3'''\n    ) == '6'\nassert solution(\n'''2\n5\n2'''\n    ) == '9'\nassert solution(\n'''2\n5\n1'''\n    ) == '5'\nassert solution(\n'''2\n1000000000\n0'''\n    ) == '1'\nassert solution(\n'''100\n1\n'''\n    ) == '1'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"2\\n3\\n3\") == \"9\"\nassert solution(\"2\\n4\\n5\") == \"5\"\nassert solution(\"3\\n4\\n5\") == \"4\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n3''') == '6'\n\nassert solution('''2\n2\n4''') == '10'\n\nassert solution('''3\n3\n5''') == '15'\n\nassert solution('''3\n4\n5''') == '17'\n\nassert solution('''5\n1\n2\n3\n4\n5''') == '18'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n3\\n3') == '12'\nassert solution('3\\n3\\n3') == '18'\nassert solution('3\\n3\\n3\\n3') == '24'\nassert solution('4\\n3\\n3\\n3') == '36'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 2 3 4 5 6\") == \"15\"\nassert solution(\"1 2 3 4 5 6 7\") == \"18\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 1\nassert solution('2 3 4 5 6 7') == 2\nassert solution('5 6 7 8 9 10 11 12') == 1\nassert solution('99 100 100') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2 3\\n\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 0\nassert solution('2 1 3') == 1\nassert solution('2 1 3 4 5 6 7 8 9') == 3\nassert solution('1 2 3') == 0\n\"\"\""
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 0\nassert solution('2 3 4 5 6 7') == 2\nassert solution('1 2 3 4 5 6 7') == 1\nassert solution('2 3 4 5 6 7') == 0\nassert solution('7 7 7 7 7 7 7') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3''') == '0'\nassert solution('''2 4 3 3''') == '6'\nassert solution('''5 2 4 3 1''') == '12'\nassert solution('''1 5 5''') == '4'\nassert solution('''100 2 10 3 50''') == '0'\n'''\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n') == '0'\nassert solution('1 2 3\\n1 2 3\\n') == '0'\nassert solution('2\\n1 2\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1 1 1\\n2\\n3\\n4\\n') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1\n1 2 3\n'''\n) == '0'\nassert solution(\n'''\n2\n1 2 3\n'''\n) == '0'\nassert solution(\n'''\n3\n1 2 3\n'''\n) == '0'\nassert solution(\n'''\n4\n1 2 3 4\n'''\n) == '0'\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16') == '0'\nassert solution('3 4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16') == '2'\nassert solution('3 4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n17 18 19 20') == '0'\nassert solution('3 4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n17 18 19 20\\n21 22 23 24') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n'''\n\nfrom itertools import cycle, chain"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '0'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n') == '2'\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '0'\n\n\n>>> solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n')\n'6'\n>>> solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n')\n'0'\n>>> solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n')\n'2'\n>>> solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n')\n'0'\n\"\"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'\nassert solution('4 4') == '0'\nassert solution('3 4') == '2'\n\nprint(solution('3 3'))\nprint(solution('4 3'))\nprint(solution('3 4'))\nprint(solution('4 4'))\nprint(solution('3 4'))\n\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 3 1\\n3 2 1\") == \"2\"\nassert solution(\"2 2\\n2 1 2\\n2 1 2\") == \"0\"\nassert solution(\"3 3\\n3 2 1\\n1 2 3\") == \"6\"\nassert solution(\"4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('4 5 6') == '0'\nassert solution('7 8 9') == '2'\nassert solution('10 11 12') == '0'\nassert solution('3 4') == '2'\n\"\"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '6'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9') == '0'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20') == '0'\nassert solution('10 9\\n3 8 7 9\\n2 4 6 8\\n5 9 5 2\\n8 3 6 9\\n4 7 4 2\\n7 6 8 5\\n9 5 1 2') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '0'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 100') == '99'\n\"\"\"\nfrom sys import stdin,stdout\nfrom math import floor\nn = int(stdin.readline().strip())\nstdin.readline()\na = list(map(int,stdin.readline().strip().split()))\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n6\n5 10 2 3 14 5\n''') == '5'\n\nassert solution(\n'''\n2\n1 100\n''') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('3\\n1 100\\n2 100\\n') == '99'\nassert solution('5\\n1 100\\n2 100\\n3 100\\n4 100\\n') == '99'\nassert solution('6\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n100') == '99'\nassert solution('2\\n1 100') == '99'\nassert solution('3\\n1 100 2 10') == '5'\nassert solution('3\\n1 100 2 10 1') == '99'\nassert solution('5\\n1 100 2 10 1 3 5') == '6'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('4\\n1 100\\n2 100\\n3 100\\n4 100') == '99'"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('3\\n1 100\\n2 200\\n') == '99'\nassert solution('4\\n1 100\\n2 200\\n3 300\\n') == '111'\nassert solution('5\\n1 100\\n2 200\\n3 300\\n4 400\\n') == '111'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('3\\n1 100\\n2 100\\n3 100') == '99'\nassert solution('3\\n1 100\\n2 100\\n3 100') == '99'\nassert solution('3\\n1 100\\n2 100\\n3 100') == '99'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''6''') == '2'\nassert solution('''7''') == '3'\nassert solution('''3''') == '0'\nassert solution('''0''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('3\\n0 0 1\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n1 0 1 0 1\n''') == '2'\n\nassert solution(\n'''\n6\n0 1 0 1 1 0\n''') == '2'\n\nassert solution(\n'''\n7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution(\n'''\n3\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('0\\n') == '0'\nprint('All set')\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('7\\n0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 0 1 0 1''') == '2'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('4\\n0 0 0 0\\n') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 0 1 0 1''') == '2'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''0''') == ''\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('7\\n1 0 1 1 1 0 1') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n1 0 1 0 1\n''') == '2'\n\nassert solution(\n'''6\n0 1 0 1 1 0\n''') == '2'\n\nassert solution(\n'''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution(\n'''3\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"15\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 0\nassert solution('3') == 2\nassert solution('4') == 0\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('34') == '34'\n\n\n\"\"\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('16') == '0'\nassert solution('10') == '0'\nassert solution('11') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('7') == 0\nassert solution('97') == 0\nassert solution('97000000000') == 0\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(7) == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 3\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '0'\nassert solution('1111') == '0'\nassert solution('10111') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == 0\nassert solution('9') == 9\nassert solution('1') == 1\nassert solution('5') == 5\nassert solution('2') == 2\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('asdfasdf') == ''\nassert solution('asd') == 'asd'\nassert solution('asdf asdf asd asd') == 'asd'\nassert solution('asdf asdf asd asd asd') == 'asd'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n\") == \"3\"\nassert solution(\"9\\n\") == \"4\"\nassert solution(\"11\\n\") == \"5\"\nassert solution(\"6\\n\") == \"4\"\nassert solution(\"20\\n\") == \"9\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 4\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\nname soft') == '2'\nassert solution('3\\nname soft') == '1'\nassert solution('4\\nname soft') == '0'\nassert solution('5\\nname soft') == '-1'\nassert solution('6\\nname soft') == '-1'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '4'\n\nprint('Test success!')"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('9') == '0'\n\n'''\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3\nassert solution('parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasago hard') == 4\nassert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\nandoura soft') == 5\nassert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\nandoura soft\\nprovolone hard') == 6\nassert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\nandoura soft\\nprovolone hard\\npsyllium soft') == 7\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\nfrom collections import defaultdict\nimport sys"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n0 1 2 1\n3 2 1 1\n''') == '0 0 0 2'\nassert solution(\n'''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n\nprint('tests passed')\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3 2 1 1') == '1 0 0 2'\nassert solution('2\\n1 2 1') == '1 0 0 2'\nassert solution('3\\n2 1 1') == '1 0 0 2'\nassert solution('4\\n0 1 2 1') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '0 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''7\n2 4 1 3 1 5 5\n2 4 3 1 4 5 5\n''') == '0 0 0 1 0 2 4'"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution('0\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\nprint('All set? Click \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\n\n\n\"\"\"\n\n\"\"\"\nimport sys\ninput = sys.stdin.read()"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0\\n0'\nassert solution('2\\n1') == '0\\n0'\nassert solution('2\\n2') == '0\\n0'\nassert solution('3\\n1') == '0\\n0'\nassert solution('3\\n2') == '0\\n0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(['0','1','1','0']) == '0'\nassert solution(['1','0','0','1']) == '1'\nassert solution(['0','1','1','0','0','0','1']) == '0'\nassert solution(['1','1','0','1','0']) == '1'\nassert solution(['0','0','0','1','0','0','1','1','0']) == '1'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 1\nassert solution('1') == 0\nassert solution('0') == 1\nassert solution('0 1') == 1\nassert solution('1 0') == 0\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nprint(\"Tests passed.\")\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == '0'\nassert solution('1\\n1\\n1\\n0\\n') == '1'\nassert solution('0\\n1\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n1\\n0\\n0\") == \"1\"\nprint(\"Tests passed\")"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('0') == 0\nassert solution('0') == 1\nassert solution('1') == 1\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split(' ')[2]\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\n\"\"\"\n1. \ud640\uc218 \uac1c\uc758 \ub370\uc774\ud130\uac00 \uc788\ub294 \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \uc77d\uc5b4 \uc790\ub8cc\ub97c \uc77d\uc5b4 \uc640\uc11c \uac01\uac01\uc758 \ub370\uc774\ud130\uc5d0 \ub300\ud574 \uc774\uc9c4 \ud0d0\uc0c9\uc744 \uc2e4\uc2dc\ud558\uc5ec \uc6d0\ud558\ub294 \uac12\uc744 \ucc3e\ub294\ub2e4.\n2. \ucc3e\uace0\uc790 \ud558\ub294 \uac12\uc744 \uc77d\uc5b4\uc11c \uadf8 \uac12\uc744 \uc2dc\uac04\uc774 \uacb9\uccd0\uc11c \uc18c\uc694\ub418\ub294 \uc2dc\uac04\uc744 \ubc18\ud658\ud558\ub3c4\ub85d \ud55c\ub2e4.\n\n\"\"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 15 80''') == 'Yes'\nassert solution('''1000 15 0''') == 'No'\nassert solution('''100 0 100''') == 'Yes'\nassert solution('''100 0 0''') == 'No'\nassert solution('''10 30 100''') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000 15 80''') == 'Yes'\nassert solution('''500 5 50''') == 'No'\nassert solution('''5 4 5''') == 'Yes'\n'''\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('100 200 10') == 'No'\nassert solution('100 100 100') == 'Yes'\nassert solution('101 121 121') == 'Yes'\nassert solution('99 1 2') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 15 80\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 4 15\") == \"No\"\nassert solution(\"100 50 1\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"1000 15 80\"\"\") == \"Yes\"\nassert solution(\n\"\"\"1000 15 75\"\"\") == \"No\"\nassert solution(\n\"\"\"1000 15 70\"\"\") == \"Yes\"\nassert solution(\n\"\"\"1000 15 65\"\"\") == \"No\"\nassert solution(\n\"\"\"1000 15 60\"\"\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 7 5\\n7 8 9\\n4 3 6') == 'Yes'\nassert solution('10 6 8\\n6 5 1\\n8 2 2\\n4 8 4\\n2 3 5\\n8 1 7\\n3 4 6') == 'No'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36') == 'Yes'\nassert solution('9 7 5\\n7 8 9\\n4 3 6\\n1 1 2\\n9 9 1\\n4 4 8\\n1 1 3\\n2 2 7\\n6 6 5\\n3 3 4') == 'No'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97') == 'No'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97') == 'No'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97') == 'No'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n1 2 3\\n4 5 6\\n7 8 9\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n1 2 3\\n4 5 6\\n7 8 9\\n2 3 1\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n1 2 3\\n4 5 6\\n7 8 9\\n2 3 1\\n2 3 1\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n1 2 3\\n4 5 6\\n7 8 9\\n2 3 1\\n2 3 1\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n'''\n) == 'Yes'\n\nassert solution(\n'''\n7\n89\n7\n87\n79\n24\n84\n30\n'''\n) == 'No'\n\nassert solution(\n'''\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n'''\n) == 'Yes'\n\nassert solution(\n'''\n7\n89\n7\n87\n79\n24\n84\n30\n'''\n) == 'Yes'\n\nassert solution(\n'''\n7\n89\n7\n87\n79\n24\n84\n30\n'''\n) == 'No'"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == 'Yes'\nassert solution(\"79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == 'No'\nassert solution(\"89 7\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == 'Yes'\nassert solution(\"89 7\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == 'Yes'\nassert solution(\"14 5 8\\n8 7 5\\n7 1 2\\n6 5 4\\n4 3 3\\n3 2 2\\n2 1 1\") == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"42 60 52\\n49 59 54\\n49 59 54\\n48 59 54\\n49 59 54\\n49 59 54\\n49 59 54\\n48 59 54\") == \"No\"\nassert solution(\"42 60 52\\n49 59 54\\n49 59 54\\n48 59 54\\n49 59 54\\n49 59 54\\n49 59 54\\n48 59 54\") == \"Yes\"\nassert solution(\"42 60 52\\n49 59 54\\n49 59 54\\n48 59 54\\n49 59 54\\n49 59 54\\n49 59 54\\n48 59 54\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'No'\nassert solution('''1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"No\"\nassert solution(\"99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\") == \"Yes\"\nassert solution(\"99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\") == \"No\"\nassert solution(\"8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'Yes'\nassert solution('''\n63 74 36\n46 64 39\n43 65 27\n42 67 19\n38 68 16\n36 69 14\n37 70 12\n34 71 10\n35 72 8\n''') == 'No'\nassert solution('''\n21 48 71\n59 68 50\n99 69 70\n76 74 57\n61 64 46\n60 65 43\n39 41 36\n60 63 42\n70 64 40\n54 65 38\n53 64 37\n47 61 35\n45 64 34\n''') == 'Yes'\nassert solution('''\n85 96 97\n72 73 74\n59 68 71\n60 61 62\n39 41 38\n38 39 40\n36 37 38\n36 37 38\n35 36 37\n35 36 37\n34 35 36\n34 35 36\n''') == 'Yes'\nassert solution('''\n85 96 97\n72 73 74\n59 68 71\n60 61 62\n39 41 38\n38 39 40\n36 37 38\n36 37 38\n35 36 37\n35 36 37\n34 35 36\n34 35 36\n''') == 'No'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 3\\n5 6 7\\n\") == \"39\"\nassert solution(\"41 3\\n5 6 7\\n\") == \"39\"\nassert solution(\"41 3\\n5 6 7\\n\") == \"39\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\n\nassert solution(\"1 2\\n1 1\") == \"-1\"\nassert solution(\"2 2\\n2 2\") == \"-1\"\nassert solution(\"4 2\\n3 2\") == \"-1\"\nassert solution(\"2 3\\n1 2\") == \"1\""
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('41 2') == 30\nassert solution('5 6') == 30\nassert solution('1 1') == -1\nassert solution('1 1') == -1\nassert solution('1 1') == -1\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''41 2\n5 6''') == '30'\nassert solution('''40 5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '30'\nassert solution('''10 4\n4 2\n7 3\n5 1\n3 3\n4 4\n5 5\n5 2''') == '-1'\nassert solution('''10 4\n5 1\n5 5\n5 2\n5 4''') == '-1'\nassert solution('''10 1\n7 2''') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\n\nN: int\nM: int\nA: List[int]"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"5 6\\n5 5\") == \"0\"\nassert solution(\"10 100\\n100 100\") == \"-1\"\nassert solution(\"2 2\\n2 2\") == \"2\"\nassert solution(\"100 10\\n100 100\") == \"0\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0, 5) == '5'\nassert solution(0, 6) == '6'\nassert solution(1, 1) == '1'\nassert solution(1, 2) == '2'\nassert solution(1, 3) == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\n\n\"\"\""
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('1 1') == '100'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('0 2') == '2'\nassert solution('0 3') == '3'\nassert solution('0 4') == '4'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 0') == '0'\nassert solution('0 3') == '1'\nassert solution('0 4') == '0'\nassert solution('0 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5'\n\nassert solution('0 1') == '2'\n\nassert solution('0 2') == '4'\n\nassert solution('0 3') == '6'\n\nassert solution('0 4') == '8'"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('2 0') == '0'\nassert solution('0 3') == '0'\nassert solution('10 4') == '0'\nassert solution('5 11') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('2 6') == '6'\nassert solution('2 6') == '6'\n\n\"\"\""
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('5') == '2'\nassert solution('7 5 6 8') == '2'\nassert solution('1') == '1'\nassert solution('7 6 8') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('6\\n5 7 8 4') == '1'\nassert solution('3\\n5 7 9') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('10\\n
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7 6 8\") == \"2\"\nassert solution(\"1 5 5 5\") == \"5\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n\"\n    \"7 6 8\\n\"\n) == \"2\"\nassert solution(\n    \"3\\n\"\n    \"7 6 9\\n\"\n) == \"1\"\nassert solution(\n    \"3\\n\"\n    \"7 6 8\\n\"\n) == \"2\"\nassert solution(\n    \"3\\n\"\n    \"7 6 9\\n\"\n) == \"1\"\nassert solution(\n    \"4\\n\"\n    \"7 6 8 9 1\\n\"\n) == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n3 3 3''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''3\n1 1000000000 1000000000 1000000000''') == '1'\nassert solution('''4\n1 1000000000 1000000000 1000000000 1000000000''') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n7 6 8\\n') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4 8\") == \"2\"\nassert solution(\"3 4 6\") == \"2\"\nassert solution(\"3 4 8\") == \"2\"\nassert solution(\"9 9 9\") == \"3\"\nassert solution(\"1 4 8 9\") == \"2\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '3\\n7 6 8'\n) == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"2\\n3 2\") == \"1\"\nassert solution(\"3\\n7 6 8 9\") == \"1\"\nassert solution(\"10\\n1\") == \"1\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n1 3 2') == '2 1 3'\nassert solution('3\\n1 2 3') == '2 3 1'\nassert solution('3\\n3 1 2') == '3 2 1'\nassert solution('3\\n2 1 3') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"3 3 1\") == \"3 1 2\"\nassert solution(\"4 3 1 4\") == \"4 1 3 2\"\nassert solution(\"5 3 1 4 5\") == \"4 1 3 2\"\nassert solution(\"6 3 1 4 5 6\") == \"4 1 3 2\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[1:-1]\n\"\"\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n3 4 1') == '3 4 1 2'\nassert solution('4\\n2 3 1 2') == '1 2 3 4'\nassert solution('4\\n2 3 3') == '1 2 3'\nassert solution('4\\n2 3 4') == '1 3 4 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n3 3 3') == '3 1 2'\nassert solution('2\\n4 4 4') == '4 1 2 3'\nassert solution('2\\n2 2 2') == '2 1'\nassert solution('2\\n2 2 1') == '2 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]\n\nprint(' '.join(str(x) for x in a))\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 3') == '3 1 2'\nassert solution('2\\n3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n1 3 2') == '3 1 2'\nassert solution('2\\n1 3') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n1 2 3') == '1 2 3'\nassert solution('3\\n1 3 2') == '1 2 3'\nassert solution('3\\n2 3 1') == '1 2 3'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''10 7 1000''') == '0'\nassert solution('''10 7 12345''') == '123485'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 10 100\") == \"0\"\nassert solution(\"100 1 100\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 0\nassert solution('10 7 100') == 9\nassert solution('12 14 17') == 12\nassert solution('12345 67890') == 12345\nassert solution('12 14 17') == 12\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 100 3') == '3'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 1 1') == '0'\nassert solution('10 7 100') == '9'\nassert solution('1 1 1') == '0'\nassert solution('12345 7 5') == '123485'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 1 10') == '0'\nassert solution('5 12345 12345') == '12345'\nassert solution('5 1 10') == '0'\nassert solution('9 0 100') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 7 100\\n') == '9'\nassert solution('100 10 10\\n') == '0'\nassert solution('1234 8 345 6\\n') == '2'\nassert solution('11223 456789\\n') == '12345'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 12 50\") == \"11\"\nassert solution(\"100 111100\") == \"99\"\nassert solution(\"1000 10000 10000 100000 10000\") == \"0\"\nassert solution(\"1000 10000 100000 10000\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 5 50') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '10 7 100') == '9'\nassert solution(\n    '1 100000000000000 7999999999999999') == '9'\nassert solution(\n    '1 100000000000000 7999999999999999 1') == '0'\nassert solution(\n    '100 200 100') == '0'\nassert solution(\n    '1 100000000000000 7999999999999999 1') == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('N K') == ''\nassert solution('1 2') == '1'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\n'''"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") is None\nassert solution(\"123 456\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"N K\") == \"2\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 150\n150 140 100 200''') == \"2\"\nassert solution('''2 1\n2 2''') == \"1\"\nassert solution('''3 5\n1 3 3 4 5''') == \"1\"\nassert solution('''3 6\n2 2 2 2 2 2''') == \"0\"\nassert solution('''4 0\n2 2 2 2 2''') == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 150\n150 140 100 200''') == '2'\nassert solution('''8 4\n170 140 190 200 190 200 180 180 180 180''') == '0'\nassert solution('''2 2\n1 2''') == '0'\nassert solution('''10 1000\n10 100 10 100 10 100 10 100 10 100 10 100 10''') == '100'\nassert solution('''100 500\n
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 3') == 'Yes'\nassert solution('10 9') == 'No'\nassert solution('10 9 10') == 'No'\nassert solution('4 1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'No'\nassert solution('4 3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('5 4\\n1 2 1 3 1') == 'No'\nassert solution('1 1\\n1') == 'Yes'\nassert solution('1 2\\n1') == 'No'\nassert solution('1 1\\n1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nN, M = map(int, stdin.split(\" \"))\nvotes = [int(stdin) for stdin in stdin.split(\" \")]\nprint(\"Yes\" if M >= (N/4) and sum(votes) >= (N/2) else \"No\")\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\nassert solution('''5 4 2 1''') == 'No'\nassert solution('''5 4 2 1''') == 'No'\nassert solution('''6 3''') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('2 2\\n1 1\\n') == 'Yes'\nassert solution('4 2\\n1 2 3 4') == 'No'\nassert solution('4 2\\n1 1 1 1') == 'Yes'\nassert solution('5 2\\n1 1 1 1 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1\\n5 4 2 1\\n') == 'Yes'"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 2') == '5'\nassert solution('1 2 3\\n2 3 4\\n3 4 5') == '1'\nassert solution('1 1 2\\n1 2 3\\n2 3 4\\n3 4 5') == '5'\nassert solution('2 2 2') == '0'\nassert solution('2 2 1\\n2 1 2\\n1 2 2') == '3'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('..#') == '5'\nassert solution('.#.#') == '5'\nassert solution('...#') == '5'\nassert solution('#.##') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\".#.#.##...#.##...#.#\") == \"2\"\nassert solution(\"#.#.##...#.##...#.#\") == \"4\"\nassert solution(\".#.#..#..#.#..#..#.#\") == \"1\"\nassert solution(\"##...#.##..##...#.##\") == \"1\"\nassert solution(\"#..#.##..#..#.##..#.\") == \"2\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('1 2 1\\n#\\n') == '1'\nassert solution('1 2 1\\n#\\n') == '1'\nassert solution('1 2 2\\n#\\n#\\n') == '2'\nassert solution('1 2 1\\n#\\n##') == '2'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 2''') == '5'\nassert solution('''1 1 1''') == '1'\nassert solution('''2 3 2''') == '5'\nassert solution('''1 1 1''') == '1'\nassert solution('''2 3 2''') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('4 2 3\\n#.#\\n.#.#') == '15'\nassert solution('2 1 1\\n#\\n#') == '2'\nassert solution('2 1 2\\n#\\n#') == '2'\nassert solution('2 1 3\\n#\\n#') == '2'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"..#\\n###\") == \"5\"\nassert solution(\"..#\\n....\\n....\") == \"1\"\nassert solution(\"..#\\n....\\n....\\n....\") == \"2\"\nassert solution(\"..#\\n....\\n....\\n....\\n....\") == \"4\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('..#') == '5'\nassert solution('###') == '1'\nassert solution('..#\\n.#.\\n###') == '1'\nassert solution('\\n#\\n##\\n##\\n###') == '0'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('2 3 3\\n#.\\n.#\\n#.\\n.#\\n.#') == '1'\nassert solution('3 5 3\\n#.\\n.#\\n#.\\n.#\\n.#\\n#.\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#') == '0'\nassert solution('5 5 3\\n#.\\n.#\\n#.\\n.#\\n.#\\n.#\\n.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#') == '5'\nassert solution('5 5 4\\n#.\\n.#\\n#.\\n.#\\n.#\\n.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#') == '3'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 2''') == '5'\nassert solution('''1 1 1''') == '1'\nassert solution('''2 2 1''') == '4'\nassert solution('''3 3 3''') == '5'\nassert solution('''2 1 2''') == '4'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('9 14') == '13'\nassert solution('1 1') == '1'\nassert solution('2 1000000000') == '1'\nassert solution('80000000 80000000') == '1'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 100\") == \"1\"\nassert solution(\"1 1000000\") == \"1\"\nassert solution(\"1 1000000000\") == \"1\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\nL, R = [int(x) for x in input().split()]\n\nans = (L - 1) * (R - 1)"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\n\n\"\"\"\n\nfrom __future__ import print_function"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2020 2040''') == '2'\n'''\nimport sys\n\nT = int(sys.stdin.readline().strip())\nfor _ in range(T):\n    L, R = map(int, sys.stdin.readline().strip().split(' '))\n    i, j = min((i, j) for i in range(L, R + 1) for j in range(i, R + 1))\n    print((i * j) % 2019)\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0:9]\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCODER') == 'WA'\nassert solution('AtCODER') == 'WA'\nassert solution('AtCODER') == 'WA'\nassert solution('AtCODER') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'AC'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'WA'\nassert solution(input()) == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'WA'\nassert solution('AtCoder') == 'AC'\nassert solution('ac') == 'WA'\nassert solution('atcoder') == 'AC'\nassert solution('gAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'WA'\nassert solution('AtCoder') == 'WA'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CGCGACGATGTCGCGCGATG') == 'AC'\nassert solution('ATCGATCGATCG') == 'AC'\nassert solution('AACGATCGATCG') == 'WA'\nassert solution('AAGATCGATCG') == 'WA'\nassert solution('ATGATCGATCG') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('aC') == 'WA'\nassert solution('aCC') == 'AC'\nassert solution('AC') == 'AC'\nassert solution('abc') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('atCoder') == 'WA'\nassert solution('AC') == 'AC'\nassert solution('ACs') == 'WA'\nassert solution('ACd') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"a\") == \"WA\"\nassert solution(\"\") == \"WA\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"ABC\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'AC'\nassert solution('A') == 'AC'\nassert solution('aC') == 'AC'\nassert solution('aCb') == 'WA'\nassert solution('aBc') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('atCoder') == 'WA'\nassert solution('A') == 'AC'\nassert solution('a') == 'WA'\nassert solution('aC') == 'WA'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1222214444444444444444', 4) == '2'\nassert solution('1222222221444444444444444444444444444444444444444444444444444444444444444444', 4) == '2'\nassert solution('12222222214444444444444444444444444444444444444444444444444444444444444444', 4) == '2'\n\n'''\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1214') == '2'\nassert solution('1324') == '2222'\nassert solution
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 8) == '6'\nassert solution('1214', 25) == '4'\nassert solution('1214', 80) == '4'\nassert solution('1214', 10000) == '4'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1324\", 4) == \"2\"\nassert solution(\"1214\", 4) == \"2\"\nassert solution(\"1\", 10 ** 18) == \"1\"\nassert solution
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1234', 4) == '4'\nassert solution('1234', 8) == '4'\nassert solution('1234', 9) == '4'\nassert solution('1234', 10) == '4'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1324', 4) == '22'\nassert solution('13333333332222444444444444444444', 4) == '4'\nassert solution('13333333332222444444444444444444', 5) == '4444'\nassert solution('13333333332222444444444444444444', 6) == '44444444'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1214', 4) == '2'\nassert solution
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\n\"\"\""
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1234', 5) == '5'\nassert solution('1224', 4) == '6'\nassert solution('1235', 4) == '5'\nassert solution('1240', 4) == '5'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"2222\", 4) == \"2\"\nassert solution(\"122222\", 4) == \"2\"\nassert solution(\"12222222\", 4) == \"2\"\nassert solution(\"1222222222\", 4) == \"2\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('2 1') == 'NO'\nassert solution('2 1 1') == 'YES'\nassert solution('1 2 3') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 1 4') == 'NO'\nassert solution('5\\n1 2 3 4 5') == 'YES'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('10\\n1 2 3 4 5 6 7 9 8') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('4\\n1 2 3 4') == 'NO'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n1 1') == 'NO'\nassert solution('1\\n1 2') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('10\\n5 2 3 4 1 6 7 8 9 10') == 'NO'\nassert solution('5\\n1 3 2 4 5') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'NO'\nassert solution('5\\n2 3 1 4 5') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4 1') == 'NO'\nassert solution('5\\n3 2 4 1 5') == 'YES'\nassert solution('5\\n3 2 4 1 5') == 'NO'\nassert solution('1\\n2') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\nassert solution('''8\n6 7 4 2 3 8 5 1''') == 'YES'\nassert solution('''7\n6 4 7 2 3 5 1 8''') == 'YES'\nassert solution('''6\n6 4 7 2 3 5 1''') == 'NO'\nassert solution('''5\n1 4 3 2 5''') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4 1') == 'NO'\nassert solution('4\\n4 3 2 1') == 'NO'\nassert solution('3\\n3 2 1') == 'NO'\nassert solution('2\\n1 2') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"3\\n3 2 1\") == \"YES\"\nassert solution(\"5\\n3 2 1 4 5\") == \"NO\"\nassert solution(\"5\\n3 2 1 4 5\") == \"NO\"\nassert solution(\"3\\n2 1 4 5\") == \"NO\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890') == '9'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"999\") == 999\nassert solution(\"3999\") == 999\nassert solution(\"3\") == 0\nassert solution(\"00\") == 1\nassert solution(\"001\") == 1\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('1609') == '5'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '3121'\n) == '2'\nassert solution(\n    '6'\n) == '1'\nassert solution(\n    '1000000000000000000000000000000000'\n) == '33'\n\nprint(solution(\n    '201920181'\n))\n'''"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"12345678901234567890\") == 45\nassert solution(\"12345678901234567890\") == 45\nassert solution(\"1234\") == 3\nassert solution(\"1234\") == 3\nassert solution(\"1000000000000000000000000000000000\") == 33\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"201920181\") == \"4\"\nassert solution(\"901000\") == \"3\"\nassert solution(\"123456789\") == \"123456789\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('4294967295') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('2') == '2'\nassert solution('123456789') == '1'\nassert solution
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('241653') == '0'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3121\") == 2\nassert solution(\"6\") == 1\nassert solution(\"201920181\") == 4\nassert solution(\"192000182\") == 0\nassert solution(\"18\") == 0\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\nassert solution('3\\n-1 -1 -1\\n-1 -1 -1\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"0\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n1 2\\n') == '2'\nassert solution('2\\n1 2\\n-2 3\\n-1 2') == '0'\nassert solution('2\\n1 2\\n-2 3\\n-1 2\\n3 4') == '2'\nassert solution('2\\n1 2\\n-2 3\\n-1 2\\n3 4\\n4 5') == '2'\nassert solution('2\\n1 2\\n-2 3\\n-1 2\\n3 4\\n4 5\\n5 6') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('13 37 39') == '0'\nassert solution('1 2 3 4 5') == '2'\nassert solution('-6 -12 6') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('13 37 39') == '2'\nassert solution('1 2 -1') == '3'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '2'\nassert solution('''1 2 3 4 5''') == '2'\nassert solution('''2 4 7 11 3''') == '2'\nassert solution('''13 37 39''') == '0'\nassert solution('''1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''3\n13 37 39\n1 2 3\n''') == '0'\n\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '0'\n\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '3'\n\n'''"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc''') == '5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\nassert solution('''10\ncode??????\n??????test''') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('code') == '0'\nassert solution('codeforces') == '5'\nassert solution('hellocode') == '10'\nassert solution('bambarbia') == '5'\nassert solution('zabbbcc') == '6'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('code') == '4'\nassert solution('abc?') == '0'\nassert solution('zabbbcc') == '0'\nassert solution('codeforces') == '5'\nassert solution('abaca') == '1'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('codeforces\\ndodivthree\\n') == '5'\nassert solution('bambarbia\\nhellocode\\n') == '10'\nassert solution('code??????\\n??????test\\n') == '10'\nassert solution('code??????\\n??????b\\n') == '0'\nassert solution('code??????\\n??????ab\\n') == '1'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc''') == '5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\nassert solution('''10\ncode??????\n??????test''') == '10'\nassert solution('''15\nbaaaabaaaaababbaaab\nbababababbbbaaaaaab\nababbbbabbbbbbbbbaa\nabaaabbbbbbaaaaaab\nabbbabbabbbaaaaaab\nbaabaaabaaaaababbaa\nbaabababaaaaababbaa\nbbaaaaaabbbbbababbb\nbbaaaaaaabbbaaaabbb\nbaaabbbabbbbbaaaabb\nbaaabbaabaaaaaabbba\nbababbbaaabaaaaabaa\nbababbaabaaaaababbb\nabaaaaababaabaaabbb\nbbaaaabbaaaaaaabbab\nbaababaabaabbabbbab\naabbabaaabbbaaaabbb\nbaaaabbaaababababaa\naabbabaaaaababbbaa\naaabbbbabbaaabbbbb\nbabaabbabbaaaaabab\nbbaaaaaaaabbbaaaab\nbbaaaaaaaabbbaaabab\nbbaaaaaaaabababbaa\nbaaabbbaaabbbaaaabb\nbaaabbbaaaababaaaba\nbababababbbbaaabaaa\nababaababbbabababa\naabbaababbbababbbab\nbabaababababbbbabbb\nbbaaaabbaaaaaabbaa\nbbaaaaaaabbbaaabbbb\nbaaabbbaaabbbaaaabb\nbaaabbaabaaaaaabbba\nbababbbaaabaaaaabaa\nbababbaabaaaaababbb\naabbbbaaabbbaaaabab\nbbaaaaaaaabbbaaaabb\nbbaaaaaaaabbbaaabab\nbbaaaaaaaabababbaa\nbaaabbbaaababbbaaba\nbaaabbaabaaaaaabbba\nbababbbaaababababaa\n''') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '0'\nassert solution('hellocode') == '10'\nassert solution('code??????') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc''') == '5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\nassert solution('''9\nbambarbia\nhellocode''') == '10'\nassert solution('''7\nbambarbia\nhellocode''') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\nassert solution('''10\ncode??????\n??????test\n''') == '10'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 2 1\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1\") == \"2\"\nassert solution
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''1\n1 1 1 1''') == '4'\nassert solution('''0\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1''') == '0'"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1 1\") == \"1 1\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\nassert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3\\n4 4\\n1 1\\n2 2\\n3 3\\n'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 2 1 5 3') == '3'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2'\nassert solution('1 1 1 1') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4'\nassert solution('1 1 1 1') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\") == \"\"\"\n    2\n    3 4\n    1 1\n    4 4\n    1 1\n    \"\"\", \"basic\"\n\nassert solution(\n    \"\"\"\n    7\n    4 1 2 2 1 5 3\n    \"\"\") == \"\"\"\n    3\n    7 7\n    2 3\n    4 5\n    \"\"\", \"advanced\"\n\nassert solution(\n    \"\"\"\n    11\n    -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n    \"\"\") == \"\"\"\n    2\n    3 4\n    1 1\n    4 4\n    1 1\n    \"\"\", \"advanced2\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2 1') == '3'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 78 4 10\\n') == '0'\nassert solution('3 2\\n2 78 4 10\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n2 78 4 10\\n') == '0'\nassert solution('6 2\\n2 78 4 10\\n') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n0\\n') == '1'\nassert solution('1 2\\n45 1 10 12 11 7\\n') == '7'\nassert solution('1 2\\n45 78 4 10\\n') == '12'\nassert solution('1 2\\n45 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7\\n'\nassert solution('4 2\\n2 78 4 10\\n') == '12\\n'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0\\n'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 78 4 10') == '7'\nassert solution('5 2') == '12'\nassert solution('3 7 19 3 3') == '0'\n\n\n-----Solution-----\n\"\"\"\nfrom typing import Tuple"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 78 4 10') == '12'\nassert solution('4 2\\n3 7 19 3 3') == '0'\nassert solution('5 2\\n3 7 19 3 3') == '0'\nassert solution('3 3\\n111 111 1') == '0'\nassert solution('5 2\\n2 78 4 10') == '7'\n\"\"\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\nassert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 4\\n2 78 4 10\\n') == '0'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n'''"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\nassert solution('6 2\\n45 1 10 12 11 7\\n') == '7'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '9'\nassert solution('-1 -2 -3') == '-6'\nassert solution('-1 -2 -3 -4 -5') == '0'\nassert solution
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"9\"\nassert solution(\"2 5 4 1\") == \"8\"\nassert solution(\"2 5 4 1 7\") == \"18\"\nassert solution(\"2 5 4 1 7 8\") == \"20\"\nassert solution(\"2 5 4 1 7 8 9\") == \"22\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n5') == '9'\nassert solution('2\\n2\\n5\\n1\\n0\\n-1') == '2'\nassert solution('2\\n5\\n2\\n1\\n1\\n1') == '6'\nassert solution('2\\n5\\n3\\n1\\n2\\n2') == '8'\nassert solution('2\\n5\\n3\\n2\\n1\\n2') == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n5\\n') == '9'\nassert solution('3\\n1 2 3') == '6'\nassert solution('5\\n2 3 4 5 1') == '14'\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"9\"\n\nassert solution(\"1 2 3 4 5\") == \"15\"\n\nassert solution(\"2 5\") == \"9\"\n\nassert solution(\"3 5 2 1 1\") == \"11\"\n\nassert solution(\"2 3 1 2 1\") == \"9\""
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '15'\nassert solution('1 2 3 4') == '12'\nassert solution('1') == '1'\nassert solution('2 2 3 4') == '10'\nassert solution('3 2 3 4 5') == '10'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '10'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n5''') == '9'\nassert solution('''0\n2''') == '2'\nassert solution('''10\n0''') == '0'\nassert solution('''10\n10''') == '20'\nassert solution('''1\n4''') == '5'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"110\"\nassert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('1 2 2 10') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n3 3 3 10\n1 2 1 100\n1 3 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10''') == '120'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 1 1 100\n1 1 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10''') == '120'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 1 1 100\n1 1 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10\n2 3 1 10\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100''') == '120'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 1 1 100\n1 1 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10\n1 2 1 100\n1 3 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10\n1 1 1 100\n1 1 1 100\n2 2 1 10\n2 3 1 10\n3 3 1 10\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100\n1 3 1 100\n1 2 1 100\n1 1 1 100\n2 1 1 100\n2 1 1 100''') == '120'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3') == 110\nassert solution('1 3 3 100\\n1 2 2 10\\n2 3 2 10') == 110\nassert solution('1 2 3 4\\n1 2 2 3\\n2 3 2 3\\n2 3 2 3') == 100\nassert solution('1 2 2 3\\n1 2 2 3\\n2 3 2 3') == 0\nassert solution('1 2 2 3\\n1 1 1 3\\n2 1 2 3') == 10\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n'''\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 4\\n1 2 2 10\\n2 3 2 10\\n') == 110\nassert solution('1 2 2 10\\n1 1 1 10\\n1 1 1 10\\n') == 20\nassert solution('1 2 2 10\\n1 1 1 10\\n1 1 1 10\\n') == 20\nassert solution('1 2 2 10\\n1 1 1 10\\n1 1 1 10\\n1 1 1 10\\n') == 60\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 4\\n1 2 2 10\\n2 3 2 10') == 110\nassert solution('1 4 3\\n1 2 3 10') == 110\nassert solution('2 4 3\\n1 2 3 10\\n2 3 2 10') == 120\nassert solution('2 4 3\\n1 2 3 10\\n2 3 1 10') == 120\nassert solution('2 4 3\\n1 2 3 10\\n2 3 2 10') == 120\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == input\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == \"110\"\n'''\nimport sys\nsys.setrecursionlimit(5000)"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nprint(solution('4\\n1 4 6 3'))\n\n'''\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4\n1 4 6 3'''\n    ) == '5', \"Failed Test 1\"\n\nassert solution(\n'''10\n10 2 3 4 6 8 10 11 14 18 19'''\n    ) == '11', \"Failed Test 2\"\n\nassert solution(\n'''100\n1 100 100 100 100 100 100 100 100 100 100'''\n    ) == '0', \"Failed Test 3\"\n\nassert solution(\n'''1000\n111 111 111 111 111 111 111 111 111 111 111 111 111 111 111'''\n    ) == '0', \"Failed Test 4\"\n\nassert solution(\n'''10000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'''\n    ) == '3', \"Failed Test 5\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\n'''"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''7\n10 14 12 4 4 4 4 19''') == '1'\nassert solution('''10\n5 7 8 4 10 5 5 11''') == '1'\nassert solution('''7\n2 5 4 1 4 3''') == '5'\nassert solution('''2\n11 22 1 12 22 22 22 22 22 22''') == '1'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''8\n1 8 7 6 5 4 3 2\n''') == '3'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 4 6 3') == 5\n\n-----Best Solution-----\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 6 3') == 5\nassert solution('1 2 3 4') == 2\nassert solution('1 2 3 4 1') == 1\nassert solution('2 3 4 5') == 0\nassert solution('2 4 5 6') == 0\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('1 1 2 2 3 3') == '3'\nassert solution('1 1') == '0'\nassert solution('1 1 2 3 4 5') == '5'\nassert solution('1 1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''5\n2 4\n1 2\n3 4\n4 5\n2 3''') == '8.9533104296'\n\nassert solution('''8\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '17.6130975000'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution('''4\n0 0\n0 1\n1 0\n0 2''') == '2.2761423749'\n\nassert solution('''6\n1 3\n-5 -3\n-1 -2\n2 3\n-1 -3\n-3 -1''') == '2.2761423749'\n\nassert solution('''7\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '2.2761423749'"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('0 0') == '0'\nassert solution('1 1') == '0'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.2761423749\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('0 0\\n0 0\\n0 0') == '0'\nassert solution('0 0\\n1 1\\n2 2\\n3 3') == '5.0'\nassert solution('-1 0\\n0 -1\\n-1 -1\\n1 -1') == '-0.5'\nassert solution('-1 0\\n0 -1\\n-1 -1\\n1 -1\\n1 0\\n0 1\\n1 1') == '-1.0'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1 0') == '2.2761423749'\nassert solution('0 0\\n0 1\\n0 1') == '0.732050807568877'\nassert solution('1 1\\n1 1') == '0.732050807568877'\nassert solution('3 3\\n0 0\\n0 0\\n1 1\\n1 1\\n2 2') == '2.2761423749'\nassert solution('3 3\\n0 0\\n0 0\\n1 1\\n1 1\\n2 2') == '2.2761423749'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('0 0\\n1 0\\n0 1\\n1 0') == '2.2761423749'\nassert solution('0 0\\n1 0\\n0 1\\n1 0\\n1 0') == '2.2761423749'\nassert solution('0 0\\n1 0\\n0 1\\n0 2') == '1.619520'\nassert solution('0 0\\n1 0\\n0 1\\n0 2\\n1 0\\n1 0\\n1 0') == '1.619520'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('1 2\\n1 1\\n2 1') == '3.464101615137'\nassert solution('1 2\\n1 2\\n2 1') == '2.82842712475'\nassert solution('1 1\\n1 1\\n1 1') == '1.41421356237'\nassert solution('10 10\\n0 0\\n9 9\\n8 8\\n7 7\\n6 6\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1') == '7.5'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''\n4\n0 0\n1 0\n2 0\n3 0\n''') == '3.5'\nassert solution('''\n3\n0 0\n0 0\n0 0\n''') == '2.0'\nassert solution('''\n4\n0 0\n0 0\n0 0\n0 0\n''') == '1.6'\nassert solution('''\n8\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '4.0'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12 4') == '4'\nassert solution('9 2') == '9'\nassert solution('15 8') == '9'\nassert solution('11 1') == '11'\nassert solution('19 17') == '19'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"4\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"12 4\") == \"4\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"12 34\") == \"34\"\n\nprint(solution(\"10 2\"))\n\"\"\""
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == 4\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 12') == '0'\nassert solution('4 1') == '4'\nassert solution('1 1') == '0'\nassert solution('10 20') == '20'"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '4'\n\"\"\"\n\n\"\"\"\nApproach 1:\n    We will close the window, so as to minimize the total horizontal length of the uncovered part of the window.\n    Then we will place the curtains so as to minimize the total horizontal length of the covered part of the window.\n    We will place the first curtain from the right and the first curtain from the left.\n    Then we will place the second curtain from the right and the second curtain from the left.\n    If we place the first and the second curtain in such a way that their horizontal lengths are as close as possible to the window's horizontal length, then the total length of the covered part of the window will be minimized.\n    If we place the second curtain first, then the total length of the covered part of the window will be minimized.\n    Finally, we will place the third curtain in the same manner.\n    In this way, we will try to minimize the total length of the covered part of the window, and place all three curtains in such a way that their lengths are as close to the window's horizontal length as possible.\n\"\"\"\n\nA, B = [int(x) for x in stdin.split()]\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"4\"\nassert solution(\"10 3\") == \"5\"\nassert solution(\"100 200\") == \"95\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 10\") == \"5\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"8 2\") == \"2\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"9 9\") == \"0\"\nassert solution(\"5 9\") == \"10\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 4\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100\") == 3\nassert solution(\"1000\") == 4\nassert solution(\"10000\") == 5\nassert solution(\"100000\") == 6\nassert solution(\"100000000\") == 7\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000\\n') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '10000'\n) == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100\\n100') == '3'\nassert solution('10000\\n1000000') == '3'\nassert solution('100000000\\n100000000') == '3'\nassert solution('1000\\n100') == '3'\nassert solution('1000\\n1') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000''') == '3'\nassert solution('''10000''') == '3'\nassert solution('''100000''') == '5'\nassert solution('''1000000''') == '7'\nassert solution('''100000000''') == '10'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '10000\\n') == '3'\nassert solution(\n    '1000\\n') == '5'\nassert solution(\n    '1000000\\n') == '2'\nassert solution(\n    '2000000\\n') == '3'\nassert solution(\n    '3000000\\n') == '4'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") is None\nassert solution(\"3\") == \"1\"\nassert solution(\"123\") == \"2\"\nassert solution(\"1000000\") == \"6\"\nassert solution(\"123456789\") == \"12\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"10000\") == \"3\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 1 2\\n2 3 2') == 1\nassert solution('1 2\\n3 1 2\\n2 3 2\\n2 4 3') == 2\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == 1\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n2 4 3') == 2\nassert solution('2 3\\n1 2 3\\n1 3 2') == 2\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n1 1 2''') == '0'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n1 3 3''') == '0'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n1 3 2''') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('2 1 3 4') == '1'\nassert solution('3 1 2 3') == '1'\nassert solution('2 3 2') == '0'\nassert solution('2 3 2') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 2') == '2'\nassert solution('3 3 3') == '3'\nassert solution('4 4 4') == '4'\nassert solution('5 5 5') == '5'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2\\n1 2\\n2 3') == '1'\nassert solution('1 2\\n1 2\\n2 3') == '1'\nassert solution('1 2\\n3 1\\n3 1') == '0'\nassert solution('1 2\\n2 3\\n3 4') == '0'\nassert solution('1 2\\n1 2\\n2 3') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('1 2 3\\n3 2 1 3\\n2 3 2\\n') == '1'\nassert solution('1 2 3 4\\n3 2 1 3 4\\n2 3 2 4 5\\n4 3 2 1 3 4 5\\n2 3 2 4 5 6\\n4 3 2 1 3 4 5 6\\n') == '6'\nassert solution('1 2 3 4 5\\n3 2 1 3 4 5\\n2 3 2 4 5 6 7\\n4 3 2 1 3 4 5 6 7\\n2 3 2 4 5 6 7 8\\n4 3 2 1 3 4 5 6 7 8\\n') == '8'\nassert solution('1 2 3 4 5 6 7 8\\n3 2 1 3 4 5 6 7 8\\n2 3 2 4 5 6 7 8 9 10\\n4 3 2 1 3 4 5 6 7 8 9 10\\n2 3 2 4 5 6 7 8 9 10 11 12\\n4 3 2 1 3 4 5 6 7 8 9 10 11 12\\n') == '12'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"3\\n2\\n1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"2\\n1\\n3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n3\\n2 1 3\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('2 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('2 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0.25\"\nassert solution(\"2\") == \"0.25\"\nassert solution(\"3\") == \"0.25\"\nassert solution(\"4\") == \"0.25\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == \"0.5000000000\"\nassert solution(2) == \"0.5000000000\"\nassert solution(3) == \"0.5000000000\"\nassert solution(4) == \"0.5000000000\"\nassert solution(5) == \"0.5000000000\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.5000000000'\n\n\"\"\""
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '0.5'\nassert solution
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n') == '0.5000000000'\nassert solution('4\\n') == '0.5000000000'\nassert solution('1\\n') == '0.5000000000'\nassert solution('1\\n') == '0.5000000000'\nassert solution('3\\n') == '0.16666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '0.5'\nassert solution('''3''') == '0.25'\nassert solution('''4''') == '0.16666666667'\nassert solution('''5''') == '0.08000000000000'\nassert solution('''6''') == '0.040000000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '0.5000000000'\nassert solution('10\\n') == '0.5833333333'\nassert solution('15\\n') == '0.16666666666'\nassert solution('200\\n') == '0.07923076923076923'\nassert solution('1000\\n') == '0.03571428571428571'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == 0.5\nassert solution('10') == 0.25\nassert solution('1') == 0.0\nassert solution('99') == 0.0\nassert solution('100') == 0.0\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n''') == '0.5000000000'\nassert solution('''\n5\n''') == '0.000000000'\nassert solution('''\n999\n''') == '1.000000000'\nassert solution('''\n10000\n''') == '0.000000001'\nassert solution('''\n1000000\n''') == '0.000000001'\n\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n3\n3 0\n2 1\n1 0\n1 1\n1\n2 0\n''') == '3'\nassert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '4'\nassert solution('''2\n3\n3 1\n1 2\n2 0\n''') == '3'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n3\\n1 1\\n2 1\\n1 1 1\\n2 1 0\\n3\\n1 1 1\\n2 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1\\n1\\n1 1 1"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('6\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n1\\n1') == '1'\nassert solution('2\\n2\\n1\\n2') == '2'\nassert solution('2\\n2\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n1\\n2\\n1') == '1'\nassert solution('2\\n2\\n1\\n2\\n2') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n1\n2 3\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n3\n1\n2 2\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n3\n1\n2 2\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n1\n2 3\n1\n1 1\n1\n2 0\n''') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\n'''\n'''\nPaste your code here\n'''\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '3'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '4'\nassert solution('6\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '5'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n1\n2 1\n1\n1 1\n1\n2 0\n'''\n) == '2'\n\nassert solution(\n'''3\n1\n2 1\n1\n1 1\n1\n2 0\n'''\n) == '2'\n\nassert solution(\n'''5\n1\n2 0\n3 2\n3 3\n4 3\n4 4\n5 0\n'''\n) == '3'\n\nassert solution(\n'''5\n1\n2 0\n3 2\n3 3\n4 3\n4 4\n5 0\n'''\n) == '3'\n\nassert solution(\n'''3\n1\n2 0\n1\n1 1\n1\n2 0\n'''\n) == '2'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nnicolasand\\n') == 'nicolasand'\nassert solution('6\\nnicolasand\\n') == 'nicolasand'\nassert solution('2\\nnicolasand\\n') == 'nicolasand'\nassert solution('3\\nnicolasand\\n') == 'nicolasand'\nassert solution('4\\nnicolasand\\n') == 'nicolasand'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\n\"\"\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\nABCD') == 'ABCD'\nassert solution('7\\nABCD') == 'ABCD'\nassert solution('7\\nABCDEDFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEDFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('7\\nABCDEDFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEDFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('7\\nABCDEDFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEDFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nnikoandsolstice') == \"nikoand...\\nnikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand...\\nnikoandsolstice\"\nprint(solution('7\\nnikoandsolstice') == \"nikoand...\\nnikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand...\\nnikoandsolstice\")\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('1\\nacccccccccccccccccc') == 'acccccccccccccccccc'\nassert solution('2\\ncab') == 'cab'\nassert solution('3\\ncccccccccccccc') == 'cccccccccccccccc'\nassert solution('4\\nccccccccccccccccccccccc') == 'ccccccccccccccccccccccccc'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('7\\nnikoand...') == 'nikoand...'\nassert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('7\\nnikoand...\\n') == 'nikoand...'\n\nprint('Testcase 1: Passed')\nprint('Testcase 2: Passed')\nprint('Testcase 3: Passed')\nprint('Testcase 4: Passed')\nprint('Testcase 5: Passed')\nprint('Testcase 6: Passed')\nprint('Testcase 7: Passed')\nprint('Testcase 8: Passed')\nprint('Testcase 9: Passed')\nprint('Testcase 10: Passed')\nprint('Testcase 11: Passed')\nprint('Testcase 12: Passed')\nprint('Testcase 13: Passed')\nprint('Testcase 14: Passed')\nprint('Testcase 15: Passed')\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\n\n'''\n\nfor _ in range(int(input())):\n    print('...'+input()+'...')\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"9\") == \"9\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz123456789\") == \"abcdefghijklmnopqrstuvwxyz123456789\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:7] + stdin[7:] + stdin[:7] + stdin[7:]\nassert solution(\"nikoandsolstice\") == \"nikoand...solstice\"\nprint(solution(stdin))\n'''"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:7]+...\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cabbage\") == \"cabbages\"\nassert solution(\"giraffe\") == \"giraffes\"\nassert solution(\"girl\") == \"girls\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'a'\nassert solution('x') == 'x'\nassert solution('b') == 'b'\nassert solution('x') == 'x'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('grape') == 'grapes'\nassert solution('tuna') == 'tuna'\nassert solution('pineapple') == 'pineapples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\nassert solution('book') == 'books'\nassert solution('dog') == 'dogs'\nassert solution('a') == 'a'\nassert solution('fish') == 'fishes'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"tree\") == \"trees\"\nassert solution(\"pizza\") == \"pizzas\"\nassert solution(\"octopus\") == \"octopi\"\nassert solution(\"cheese\") == \"cheeses\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('pear') == 'pears'\nassert solution('dear') == 'dears'\nassert solution('deer') == 'deers'\nassert solution('dove') == 'doves'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('bob') == 'bobs'\nassert solution('cat') == 'cats'\nassert solution('dog') == 'dogs'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n2\n1 3\n1''') == '1'\nassert solution('''4 5\n1\n2 4\n1 3\n2 4\n1 4\n2 4\n1 4\n2 3\n1 4\n1 2\n2 4\n2 3\n1 4\n1 4\n1 4\n2 3\n1 4\n1 2\n2 4\n2 3\n1 4\n1 2\n2 4\n2 3\n1 4\n1 4\n2 3\n1 4\n1 4\n2 3\n1 4\n1 2\n2 4\n2 3\n1 4\n1 4\n1 4\n2 3\n1 4\n1 2\n2 4\n2 3\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 2') == '1'\nassert solution('2 4') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n2\n1 3\n1''') == '1'\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''3 2\n2\n3\n1\n''') == '2'\nassert solution('''3 2\n2\n2\n1\n3\n''') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input) == '1'\n'''\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n3\\n3\\n3') == '1'\nassert solution('2 2\\n1 3\\n1') == '0'\nassert solution('3 4\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('3 5\\n1 2\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('10 10\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == 1\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1') == 1\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1\\n3\\n1') == 1\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1\\n3\\n1') == 1\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n1\\n3\\n1') == 1\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\naabbbbaaca') == '5'\nassert solution('1\\naabbbbaaca') == '5'\nassert solution('1\\naabbbbaac') == '5'\nassert solution('10\\naabbbbbbaaca') == '5'\nassert solution('1\\naabbbbbaac') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aabbbbaaca\") == \"abaca\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\"\nassert solution(\"1\\naabbbbaaca\") == \"5\"\nassert solution(\"1\\naabbbbaaca\") == \"5\"\nassert solution(\"2\\naabbbbaaca\") == \"5\"\nassert solution(\"2\\naabbbbaaca\") == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaabab') == '2'\nassert solution('aaaaaa') == '0'\nassert solution('aaab') == '2'\nassert solution('aa') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[1]\n\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('abccdabcd') == '6'\nassert solution('aab') == '2'\nassert solution('aabbbb') == '6'\nassert solution('aabbba') == '4'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef') == 'acdef'\nassert solution('aabab') == 'abab'\nassert solution('ababc') == 'ababc'\nassert solution('baabaa') == 'baabaa'\nassert solution('baaab') == 'baaab'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('abababaab') == '3'\nassert solution('abcabcabc') == '4'\nassert solution('aaabcabc') == '3'\nassert solution('aaabcabca') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[-1]"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"5\\n2 4\") == \"3\"\nassert solution(\"5\\n4 2\") == \"3\"\nassert solution(\"5\\n3 2\") == \"3\"\nassert solution(\"5\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 2 4\\n2\\n4\\n') == '1'\nassert solution('3\\n5 2 4\\n2\\n4\\n\\n2\\n4\\n') == '2'\nassert solution('3\\n5 2 4\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2\\n4\\n\\n2"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 2 4\\n6 6 6 6') == '6'\nassert solution('3\\n5 2 4\\n6 6 6 6\\n4 2 4') == '4'\nassert solution('3\\n5 2 4\\n6 6 6 6\\n4 2 4\\n5 4 2') == '6'\nassert solution('3\\n5 2 4\\n6 6 6 6\\n4 2 4\\n5 4 2\\n4 2 4') == '6'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nN = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(N):\n    if a[i] % 2 == 0:\n        a[i] /= 2\n        a[i] *= 3\n    else:\n        a[i] *= 3\n        a[i] = a[i] // 2\n    if a[i] % 2 == 1:\n        cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 4') == '3'\nassert solution('10 2 2') == '3'\nassert solution('7 7 7') == '5'\nassert solution('100 2 2') == '3'\nassert solution('5 10 15') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1\\n') == '0'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n1\\n2\\n3\\n') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 2 4') == '3'\nassert solution('4\\n5 2 4') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 4') == '3'\nassert solution('3 2 4') == '3'\nassert solution('5 2 4') == '3'\nassert solution('1 2 3') == '0'\nassert solution('5 3 2') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('1\\n1 1 1') == '1'\nassert solution('3\\n5 2 4') == '3'\nassert solution('1\\n1 1 1') == '1'\nassert solution('1\\n1 1 1') == '1'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1 3''') == 2\nassert solution('''2 1 1 3''') == 2\nassert solution('''2 1 1 3''') == 2\nassert solution('''2 1 1 3''') == 2\nassert solution('''3 3 3 3''') == 6\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('3 1 1 3') == '3'\nassert solution('1 2 1 3') == '3'\nassert solution('1 1 1 3') == '3'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 0 2 4') == '10'\nassert solution('2 2 2 2') == '0'\nassert solution('2 1 -1 1') == '0'\nassert solution('2 1 1 1') == '0'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 3') == 2\nassert solution('2 1 1 3') == 2\nassert solution('2 2 1 3') == 2\nassert solution('3 1 1 3') == 2\nassert solution('3 2 1 3') == 2\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('2 1 1 3') == '2'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"0 1 1 2\") == \"2\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 0\") == \"1\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 2 3 4 4\") == \"8\"\nassert solution(\"10 10 10 10\") == \"45\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"45\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"45\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"1 0 0 1 1 0 1\") == \"2\"\nassert solution(\"1 0 0 1 1 0 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1\") == \"3\"\nassert solution(\"0 0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 2 2 3''') == '8'\nassert solution('''2 1 1 3''') == '2'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split(' ')[0]\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 6\") == \"No\"\nassert solution(\"0 6\") == \"Yes\"\nassert solution(\"-1 2\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 5') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('100 200') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 4') == 'No'\n\n\"\"\"\n\n\"\"\"\nThe solution here is a brute force algorithm.\n\nWe consider each possible combination of numbers of cranes and turtles.\nWe check whether there is a possible combination.\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 3') == 'Yes'\nassert solution('3 4') == 'Yes'\nassert solution('4 5') == 'No'\nassert solution('5 6') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"3 9 7\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 8') == \"Yes\"\nassert solution('4 9') == \"No\"\nassert solution('2 4') == \"No\"\nassert solution('4 1') == \"Yes\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == \"2\"\n\nassert solution('''\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n''') == \"4\"\n\nassert solution('''\n6 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n5 6\n''') == \"12\"\n\nassert solution('''\n5 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == \"8\"\n\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n5 6\n''') == \"16\""
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"2 3\\n1 2\\n1 3\\n2 3\") == \"1\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"1\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"1\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\n\"\"\"\nN=3, M=3\n\n1 2\n1 3\n2 3\n\"\"\"\n\nassert solution(\"\"\"4 4\n1 2\n2 3\n3 4\n1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"5 2\n1 2\n1 3\n1 4\n2 4\n3 4\n\"\"\") == \"3\"\n\"\"\"\nN=4, M=3\n\n1 2\n1 3\n2 3\n3 4\n\"\"\"\n\nassert solution(\"\"\"5 4\n1 2\n2 3\n3 4\n1 3\n2 4\n3 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('2 3\\n1 3') == '2'\nassert solution('2 2\\n1 1') == '1'\nassert solution('3 3\\n1 2\\n1 3') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '3'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"3 5\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\"\nassert solution(\"3 6\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n\") == \"3\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '6'\nassert solution('5 6') == '1'\nassert solution('3 3') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3'\n    '1 2'\n    '1 3'\n    '2 3') == 2\nassert solution('2 2'\n    '1 2'\n    '1 3'\n    '2 3') == 1\nassert solution('2 2'\n    '1 2'\n    '2 3'\n    '3 1') == 0\nassert solution('3 3'\n    '1 2'\n    '1 3'\n    '2 3') == 0\nassert solution('3 3'\n    '1 2'\n    '2 3'\n    '3 1') == 0\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 3') == '9'\nassert solution('5 4') == '5'\nassert solution('5 5') == '0'\nassert solution('5 6') == '3'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'\nassert solution('2 4') == '9'\nassert solution('100 1') == '99'\nassert solution('-100 -1') == '-99'\nassert solution('2 -1') == '1'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 4') == '6'\nassert solution('5 10') == '5'\nassert solution('5 5') == '10'\nassert solution('5 4 7') == '12'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '18'\nassert solution('1 2') == '3'\nassert solution('100 2') == '99'\nassert solution('4 9') == '11'\nassert solution('7 2') == '13'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == 18\nassert solution(\"1 2\") == 2\nassert solution(\"1 2 3 4 5\") == 15\nassert solution(\"10 9 8 7 6 5 4 3 2 1\") == 22\nassert solution(\"1000 1001\") == -100"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[1:]\n\"\"\"\n\nn, l = list(map(int, stdin.split()))\n\nprint(sum(map(int, stdin.split())) - sum(list(range(1, n + 1))))\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 1') == '5'\nassert solution('5 1') == '5'\nassert solution('10 1') == '10'\nassert solution('10 3') == '23'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '7'\nassert solution('2 -1') == '1'\nassert solution('4 4') == '10'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15\\n') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('15') == 60\nassert solution('1') == 1\nassert solution('1010') == 101\nassert solution('1000000') == 1050000"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('15') == 60\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15') == '60'\nassert solution('12345') == '60'\nassert solution('1') == '60'\nassert solution('2') == '120'\nassert solution('3') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == 'Fizz'\nassert solution('4') == '4'\nassert solution('5') == 'Buzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == 'Fizz'\nassert solution('5') == 'Buzz'\nassert solution('6') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n2\") == \"Fizz\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '60'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '73'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"14\") == \"\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 10\\n4 7 10 6 5') == '8'\nassert solution('2 4\\n1 2 3 4') == '1'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n1 1') == '0'\nassert solution('6 5\\n1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 5') == '8'\nassert solution('6 4') == '4'\nassert solution('7 3') == '5'\nassert solution('6 7') == '5'\nassert solution('6 5') == '8'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n1 7 10 6 5\") == \"8\"\nassert solution(\"5 4\\n1 7 10 6 5\") == \"7\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"7 9\\n1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"8 10\\n1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6') == '6'\nassert solution('0 10 100 2 5 3') == '100'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == '15'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '71'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '41'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''1 2 3 4\n5 6 7 8''') == '8'\nassert solution('''100 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19''') == '8'\nassert solution('''1 0\n
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''9 12\n2 4 5 1 3 7 2 9''') == '1'\nassert solution('''6 4\n4 5 6 7 8 9''') == '1'\nassert solution('''7 4\n4 5 6 7 8 9''') == '4'\nassert solution('''7 4\n2 4 5 6 7 8 9''') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5\\n4 7 10 6 5\\n') == '8'\nassert solution('6 10\\n4 7 10 6 5\\n') == '4'\nassert solution('6 10\\n4 7 10 6 5\\n') == '4'\nassert solution('6 10\\n4 7 10 6 5\\n') == '4'\nassert solution('6 10\\n4 7 10 6 5\\n') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''1 10\n
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == '8'\nassert solution('5 3') == '4'\nassert solution('5 2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('10 3') == '17'\nassert solution('4 10') == '25'\nassert solution('8 3') == '37'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2\n2 1\"\"\") == \"1\"\nassert solution(\"\"\"6 3\n3 2\n5 6\n3 2\n3 2\n3 2\"\"\") == \"2\"\nassert solution(\"\"\"6 3\n6 3\n6 3\n6 3\n6 3\n6 3\"\"\") == \"0\"\nassert solution(\"\"\"3 3\n1 1\n3 3\n1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"10 8\n10 9\n10 8\n10 7\n10 8\n10 9\n10 8\n10 7\n10 8\n10 9\n10 8\n10 7\"\"\") == \"9\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 2''') == '1'\n\nassert solution('''1 1''') == '0'\n\nassert solution('''10 9''') == '9'\n\nassert solution('''20 17''') == '16'\n\nassert solution('''10 19''') == '17'"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3 1\\n') == '1'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('10 10\\n10 10\\n') == '0'\nassert solution('1 1\\n1 1\\n1 1\\n') == '0'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n\nfrom sys import stdin\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n'''\n\n\n'''\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"2 3\\n1 2\\n\") == \"3\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\nassert solution(\"2 1\\n1 2\\n\") == \"0\"\nassert solution(\"2 2\\n1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('4 2\\n3 4 5 1 2') == '1'\nassert solution('4 2\\n3 4 5 1 2') == '3'\nassert solution('1 2\\n1 2') == '2'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(6)\nassert solution(stdin) == str(-1)\nassert solution(stdin) == str(7)\nassert solution(stdin) == str(4)\nassert solution(stdin) == str(7)\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 4\\n3 7 5 1 10 3 21') == '-1'\nassert solution('7 4\\n3 7 5 1 10 3 22') == '7'"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"3 4 1\"\nassert solution(\"3 3\") == \"3 5 1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"3 5\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 8''') == '''3'''\nassert solution('''5 5''') == '''-1'''\nassert solution('''3 3''') == '''-1'''\nassert solution('''*.*''') == '''3'''\nassert solution('''.*.*''') == '''-1'''\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('10 10') == '3'\nassert solution('4 4') == '3'\nassert solution('1 1') == '0'\nassert solution('1 1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('n * m = 3') == '3'\nassert solution('3 * m = 9') == '9'\nassert solution('m * n = 9') == '9'\nassert solution('m * n = 9') == '9'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n3 3\n*.*\n.*.\n.*.\n'''\n    ) == '-1'\nassert solution(\n    '''\n5 5\n.*...\n****.\n.*...\n.*...\n.....\n'''\n    ) == '3'\nassert solution(\n    '''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n'''\n    ) == '2'\nassert solution(\n    '''\n3 3\n.*.*\n.*.\n.*.\n'''\n    ) == '3'\nassert solution(\n    '''\n5 5\n*...\n***..\n.*...\n.*...\n.....\n'''\n    ) == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 4\n*.*\n.*.\n*.*\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"4 5\n....\n*.*.*\n.*.*.*\n*.**.\n....\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"5 5\n*.*\n.*.\n*.*\n.*.\n.....\n\"\"\"\n) == '-1'"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabc') == 'ab'\nassert solution('good') == 'good'\nassert solution('abc') == ''\nassert solution('aaa') == ''\nassert solution('xyx') == 'xyx'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\ngood\n''') == '0'\nassert solution('''4\naabc\n''') == '2'\nassert solution('''3\naaa\n''') == '3'\nassert solution('''9\nabbababbbab\n''') == '8'\nassert solution('''1\n123456789\n''') == '1'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4\ngood\n''') == '0'\nassert solution('''\\\n3\naaa\n''') == '3'\nassert solution('''\\\n5\naabc\n''') == '2'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n4\ngood\n\n''') == '0'\nassert solution('''\\\n4\nab\n\n''') == '2'\nassert solution('''\\\n3\naaa\n\n''') == '3'\nassert solution('''\\\n2\naa\n\n''') == '1'\nassert solution('''\\\n1\na\n\n''') == '0'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('good') == 0\nassert solution('string') == 1\nassert solution('aabc') == 2\nassert solution('aaa') == 0\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n4\n\ngood\n''') == '0'\n\nassert solution('''\\\n4\n\nabc\n''') == '2'\n\nassert solution('''\\\n3\n\naaa\n''') == '3'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcde') == 'abcd'\nassert solution('aaabc') == 'abcd'\nassert solution('a') == ''\nassert solution('aaaa') == ''\nassert solution('abc') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('good') == 0\nassert solution('string') == 1\nassert solution('aabc') == 2\nassert solution('aaa') == 0\nassert solution('a') == 0\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"4 5\\n1 2\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\nassert solution(\"4 5\\n1 2\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\nassert solution(\"4 5\\n1 2\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n\") == \"YES\\n0101000\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'NO'\nassert solution('''3 5\n1 2\n1 4\n2 3\n3 4\n1 4''') == 'NO'\nassert solution('''3 5\n1 2\n2 3\n3 4\n1 4''') == 'YES'\nassert solution('''3 5\n1 2\n1 3\n2 3\n3 4\n1 4''') == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n') == 'YES\\n10100'\nassert solution('4 4\\n1 2\\n2 3\\n3 4\\n1 2\\n2 3\\n1 3\\n2 3') == 'NO'\n\n```"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''\n4 4\n1 2\n1 3\n2 3\n2 4\n3 1\n4 1\n''') == 'NO'\nassert solution('''\n4 4\n1 2\n1 3\n2 3\n2 4\n3 1\n4 1\n''') == 'YES'\nassert solution('''\n4 4\n1 2\n1 3\n2 3\n2 4\n3 1\n4 1\n''') == 'YES'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 6\\n1 4\\n1 2\\n1 6\\n1 5\\n1 7\\n\") == \"NO\\n\"\nassert solution(\"6 4\\n1 4\\n1 2\\n1 3\\n1 5\\n1 6\\n1 7\\n\") == \"YES\\n11111\"\nassert solution(\"5 2\\n1 3\\n1 4\\n2 4\\n3 1\\n1 5\\n\") == \"YES\\n10100\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n\") == \"NO\\n\"\nassert solution(\"7 5\\n1 2\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 6\\n4 7\\n5 1\\n5 6\\n6 1\\n6 7\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES\\n10100'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n4 1''') == 'YES\\n10100'\nassert solution('''6 5\n1 5\n2 1\n3 1\n4 1\n5 1''') == 'YES\\n10100'\nassert solution('''6 5\n1 5\n2 1\n3 1\n4 1\n5 1\n6 1''') == 'YES\\n10100'\nassert solution('''6 5\n1 5\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1''') == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n'''"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES'\nassert solution('''5 3\n1 2\n1 3\n2 3\n2 4\n3 4\n3 5\n''') == 'YES'\nassert solution('''5 4\n1 2\n1 3\n2 3\n2 4\n3 4\n4 5\n1 3\n2 4\n3 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES\\n10100'\n\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'NO'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'\nassert solution('''1 1\n1 1''') == ''\nassert solution('''7 7\n7 7''') == ''\nassert solution('''7 7\n7 7''') == ''\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('3\\n5\\n2 2\\n1 2\\n5 5') == '2'\nassert solution('3\\n5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7\n''') == '0\\n'\nassert solution('''9 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '8\\n'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 7') == '0'\nassert solution('2 2') == '3 4'\nassert solution('1 2') == '3'\nassert solution('5 5') == '0'\nassert solution('1 2\\n3 4') == '3'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"2 3 4\"\nassert solution(\"1 2 3\") == \"1 2\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '3 4'\nassert solution('5 5') == '0'\nassert solution('1 7') == '0'\nassert solution('5 7') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 5'''\n) == '''2\n3 4'''\n\nassert solution(\n'''1 7'''\n) == '''0'''\n\nassert solution(\n'''1 7'''\n) == '''0'''\n\nassert solution(\n'''1 1'''\n) == '''0'''\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 2') == '0'\nassert solution('2 2 3 4') == '0'\nassert solution('1 2 4 5 7') == '0'\nassert solution('5 6 1 2 4 7') == '1'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n'''\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4,9,2,3) == \"2\"\nassert solution(9,7,2,3) == \"1\"\nassert solution(9,9,2,3) == \"2\"\nassert solution(9,10,2,3) == \"0\"\nassert solution(10,10,2,3) == \"0\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''5 6 3 4''') == '2'\nassert solution('''9 10 3 4''') == '2'\nassert solution('''1 1 1 1''') == '1'\nassert solution('''1000000 1 1000001 1 100000000''') == '1'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == ''\nassert solution('2 5 3 8') == ''\nassert solution('1 1 1 1') == ''\nassert solution('1 10 1 1') == ''\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 9 2 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 9 2 4\") == \"3\"\nassert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"6 8 2 4\") == \"3\"\nassert solution(\"6 8 2 4\") == \"3\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == 2\nassert solution('1 1 1 1') == 0\nassert solution('3 4 4 5') == 0\nassert solution('2 3 3 4') == 1\nassert solution('1 1 1 1') == 1\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 9 0 2 3\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 0 1\") == \"2\"\nassert solution(\"1 1 1 0\") == \"2\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\nassert solution(\"123456789123456789\") == \"Yes\"\nassert solution(\"1234567812345678\") == \"No\"\nassert solution(\"12345678123456781234567812345678\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(1234567890) == 'No'\nassert solution(12345678900) == 'No'\nassert solution(12345678909) == 'No'\nassert solution(123456789089) == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"9123456789\") == \"No\"\nassert solution(\"11111\") == \"Yes\"\nassert solution(\"11111\") == \"No\"\nassert solution(\"00000000\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(9) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(0) == \"No\"\nassert solution(9999999999999999999) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(987654321) == \"No\"\nassert solution(12345) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(5) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123456789) == \"No\"\nassert solution(12345) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(11) == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567') == 'No'\nassert solution('12133777') == 'Yes'\nassert solution('120320') == 'No'\nassert solution('120321') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('45') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('9' * 100000) == 'No'\nassert solution('0' * 100000) == 'Yes'\nassert solution('6' * 100000) == 'Yes'\nassert solution('9' * 1000000) == 'No'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('128') == '4'\nassert solution('129') == '1'\nassert solution('1000') == '4'\nassert solution('100000000') == '1'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"127\") == \"4\"\nassert solution(\"10\") == \"1\"\nassert solution(\"999\") == \"8\"\nassert solution(\"100000\") == \"9\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('127') == '4'\nassert solution('100') == '1'\nassert solution('0') == '0'\nassert solution('1000') == '1'\nassert solution('1000000') == '8'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('4') == '4'\nassert solution('6') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('127') == '4'\nassert solution('100000') == '60'\nassert solution('1000000') == '2'\nassert solution('14') == '6'\nassert solution('999999999') == '1'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('yoto') == 'No'\nassert solution('yoto') == 'No'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('ktyot') == 'No'\nassert solution('tokyot') == 'No'\nassert solution('kyotot') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"a\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('eart') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('to') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabc', 'aabca') == 'Yes'\nassert solution('aabc', 'aacab') == 'No'\nassert solution('aabca', 'aabca') == 'Yes'\nassert solution('aabc', 'aacac') == 'No'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == 1\nassert solution(\"abc\") == 0\nassert solution(\"abcc\") == 1\nassert solution(\"abcab\") == 0\nassert solution(\"abca\") == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cabacc', 'abc') == 1\nassert solution('cabacc', 'abcd') == 1\nassert solution('cabacc', 'bcac') == 2\nassert solution('cabacc', 'abcdd') == 1\nassert solution('cabacc', 'baccc') == 0\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('cabacc') == 1\nassert solution('cabacc') == 1\nassert solution('cabacc') == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('hgfhfhf') == 1\nassert solution('lmlmlmlmlml') == 2\nassert solution('abacdefgh') == 11\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('aabcbc') == '2'\nassert solution('aabcbc') == '2'\nassert solution('abcbabc') == '2'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('caaba') == '1'\nassert solution('abcc') == '2'\nassert solution('abcda') == '4'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('g') == 1\nassert solution('abce') == 2\nassert solution('abceg') == 2\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcabca') == 1\nassert solution('bbbbbbbbb') == 1\nassert solution('aaaaa') == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\n\n\"\"\""
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 2 1 1') == '1'\nassert solution('1 1 2') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 2 2') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '1'\nassert solution('4 7 2') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 1') == '2'\nassert solution('3 6 2') == '3'\nassert solution('4 2 4') == '2'\nassert solution('4 7 4') == '1'\nassert solution('8 12 2') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 3 2\") == \"2\"\nassert solution(\"4 3 4\") == \"2\"\nassert solution(\"4 3 4 2\") == \"2\"\nassert solution(\"4 4 4 2\") == \"4\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('4 9 5') == '1'\nassert solution('2 4 5') == '1'\nassert solution('4 1 2') == '1'\nassert solution('5 3 5') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"7 12 2\") == \"2\"\nassert solution(\"1 5 1\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''2 2 4''') == '2'\nassert solution('''8 6 2''') == '2'\nassert solution('''6 3 2''') == '2'\nassert solution('''4 5 5''') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('12 3 5') == '2'\nassert solution('15 10 5') == '5'\nassert solution('1000000 111111 111111') == '100000'\nassert solution('12 15 5') == '3'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''7 2 3''') == '1'\nassert solution('''1 1 2''') == '1'\nassert solution('''3 5 3''') == '1'\nassert solution('''3 5 7''') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 12 1\") == \"8\"\nassert solution(\"9 7 3\") == \"3\"\nassert solution(\"5 3 9\") == \"3\"\nassert solution(\"5 9 9\") == \"3\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '1024'\n) == '2020'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"12\") == \"1\"\nassert solution(\"28\") == \"4\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1024') == '2020'\n\n\"\"\""
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('10') == '1000'\nassert solution('10 5 10') == '1150'\nassert solution('5 10 5 10') == '1150'\nassert solution('1000000') == '2000000'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"12\") == \"8\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1024') == '2020'\nassert solution('1000') == '1000'\nassert solution('14') == '0'\nassert solution('2') == '10'\nassert solution('32') == '60'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1024''') == '2020'\nassert solution('''1024''') == '2020'\nassert solution('''100''') == '100'\nassert solution('''1000''') == '1000'\nassert solution('''10000''') == '10000'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('1023') == '2020'\nassert solution('102345') == '2020'\nassert solution('1023456') == '2020'\nassert solution('102345678') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\""
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '2020'\nassert solution('100') == '1240'\nassert solution('1000') == '2000'\nassert solution('10000') == '12000'\nassert solution('100000') == '120000'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 4\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4') == '5'\nassert solution('2 5') == '5'\nassert solution('1 2') == '1'\nassert solution('1 100') == '1'\nassert solution('1 3 4 5 7') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 4 3\\n2 6 5\\n\") == \"9\"\nassert solution(\"1\\n5\") == \"1\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"11\"\nassert solution(\"10\\n
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 4 1\") == \"5\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n2 1\") == \"1\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\\n5 2\") == \"7\"\nassert solution(\"1\\n4\") == \"4\"\nassert solution(\"2\\n4\\n1 3\") == \"7\"\nassert solution(\"2\\n4\\n1 3\\n5 2\") == \"8\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4') == '5'\nassert solution('2') == '5'\nassert solution('4') == '5'\nassert solution('100') == '99'\nassert solution('100\\n99') == '99'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\\n1 8\") == \"5\"\nassert solution(\"2\\n1 4\\n1 8\\n1 16\") == \"5\"\nassert solution(\"3\\n2 6 7\\n5 4 2\") == \"18\"\nassert solution(\"3\\n2 6 7\\n5 4 2\\n10 16 17\") == \"18\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4') == '5'\nassert solution('1 2') == '5'\nassert solution('2 3') == '8'\nassert solution('1 2 3 4') == '16'\nassert solution('3 3') == '9'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n2\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"2\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n1\n2\n3\n4\n5\n\"\"\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3 4') == '3'\nassert solution('10 15') == '3'\nassert solution('3 10') == '1'\nassert solution('7 3') == '2'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == 2\nassert solution(\"2 5\") == 1\nassert solution(\"8 10\") == 4\nassert solution(\"8 9\") == 3\nassert solution(\"8 10\") == 4\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10') == '3'\nassert solution('3 2') == '1'\nassert solution('4 15') == '5'\nassert solution('4 2') == '4'\nassert solution('4 6') == '1'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 5\") == \"\"\nassert solution(\"3 10\") == \"3\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 10\") == \"2\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 30') == '6'\nassert solution('1 1') == '1'\nassert solution('5 1') == '4'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 10\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 10''') == '3'\nassert solution('''2 10''') == '2'\nassert solution('''1 10''') == '1'\nassert solution('''6 3''') == '4'\nassert solution('''2 4''') == '3'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CSS', 'CSR') == '2'\nassert solution('CS', 'SR') == '1'\nassert solution('C', 'R') == '2'\nassert solution('S', 'C') == '0'\nassert solution('SS', 'CC') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SRS\") == \"0\"\nassert solution(\"CSSR\") == \"1\"\nassert solution(\"SRS\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CS') == 'Cloudy'\nassert solution('CSS') == 'Sunny'\nassert solution('CR') == 'Rainy'\nassert solution('CSRS') == '2'\nassert solution('CSSCRS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CR\") == \"1\"\nassert solution(\"CS\") == \"0\"\nassert solution(\"CSR\") == \"1\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSSCSR') == '2'\nassert solution('CSCSS') == '3'\nassert solution('CSSSS') == '3'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[2]\n\"\"\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSS') == '0'\nassert solution('CSSS') == '0'\nassert solution('CSSR') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('2 3 4 1') == '2'\nassert solution('1 2 3') == '0'\n\"\"\""
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('3 5 4 1') == '2'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4 5') == '1'\nassert solution('3 4 2 1') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''5\n5 1 4 3 2''') == '2'\nassert solution('''5\n5 4 3 1 2''') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 3 5 4 2') == '2'\nassert solution('2\\n1 3') == '2'\nassert solution('4\\n1 3 5 4 2') == '3'\nassert solution('5\\n1 3 5 4 2') == '2'\nassert solution('6\\n1 3 5 4 2') == '3'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"2 4 3 5 1\") == \"2\"\nassert solution(\"2 5 4 3 1\") == \"2\"\nassert solution(\"2 5 4 3\") == \"3\"\nassert solution(\"2 5 4\") == \"3\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"5 1 3 4 2\") == \"2\"\nassert solution(\"1 2 2 1\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 5 4 2') == 2\nassert solution('1 3 5 2 4') == 1\nassert solution('1 3 5 2 4') == 0\nassert solution('1 2 3 4 5') == 5\nassert solution('1 2 3 4') == 4\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('5 4 3 2 1') == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('4 5 3 2 1') == '2'\nassert solution('1 2 3 4 5 6') == '2'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == 5.410\nassert solution('3.24 0.66\\n-2.15 0.14\\n-1.42 -1.28\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.15 -1.12\\n-1.14 0.64\\n0.94 -0.48\\n-1.42 -1.28\\n-2.15 -1.12') == 5.620\nassert solution('5.98 0.24\\n-1.42 0.66\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.15 -1.12\\n-2.14 -0.64\\n0.94 -0.48\\n-1.42 -1.28\\n-2.15 -1.12') == 5.480\nassert solution('8.34 0.24\\n-1.42 -0.76\\n-2.15 -1.12\\n-2.14 -0.64\\n-1.42 -1.28\\n-0.94 -0.48\\n-2.15 -1.12\\n-1.14 0.66\\n0.94 -0.48\\n-1.42 -1.28\\n-2.15 -1.12') == 6.040\nassert solution('6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == 6.040\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\n\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\n\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '6.040'\n\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\n\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\"\"\"8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\nassert solution(\"\"\"5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\nassert solution(\"\"\"8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n'''\n) == '5.410'\nassert solution(\n'''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n'''\n) == '5.620'\nassert solution(\n'''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n'''\n) == '5.480'\nassert solution(\n'''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n'''\n) == '6.040'\nassert solution(\n'''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n'''\n) == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"6.040\"\nassert solution(\"8\") == \"6.720\"\nassert solution(\"7\") == \"6.720\""
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n5.02 0.29\\n7.02 1.59\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('4.56 2.68\\n5.84 1.34\\n4.32 1.58\\n4.68 0.80\\n6.56 -0.80\\n7.68 0.48\\n8.68 -0.16\\n9.64 0.36\\n9.44 0.28') == '6.640'\nassert solution('10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n15.72 2.38\\n15.92 0.54\\n15.52 0.48\\n15.22 0.56\\n16.74 2.42\\n16.40 0.92\\n18.11 0.48\\n17.32 0.56\\n19.29 0.48') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''8\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''5\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.040'\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '0.5'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '0.3333333333333333333333333333333333333333333333333333333333333333'\nassert solution('4\\n') == '0.25'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92') == '6.040'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04') == '6.720'\n\n\n\"\"\"\nfrom math import *\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n2 3 1 1 2\\n') == '4\\n'\nassert solution('5 7\\n5 5 5 5 5\\n') == '2\\n'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '4\\n'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '-1'\nassert solution('2 3 4 5 6 7 8 9 10') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '3'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 1') == '2'\nassert solution('1 2\\n1 2') == '-1'\nassert solution('2 3\\n1 3 1') == '4'\nassert solution('2 3\\n1 3 1') == '-1'\nassert solution('10 10\\n1 3 4 2 1 4 2\\n1 3 4 2 1 4 2') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 10\\n5 5 5 5 5\\n') == '4'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '4'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 1 1 1\n''') == '7 3 1 3'\nassert solution('''15 2\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 3 2\") == \"1 3 2\"\nassert solution(\"1 3 1 3 2 1 1 2 1 1 1 2 1 2 1 1 2 1 2 1 1 1 1 2 1 2 1 1 1 2 2\") == \"1 1 2 2 1 1 2 1 1 1 2\"\nassert solution(\"1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1''') == '1 1'\n'''\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\n\nn, k = [int(x) for x in stdin.readline().split()]\ns = [int(x) for x in stdin.readline().split()]\n\ndp = [0 for _ in range(k)]\nfor x in s:\n    dp[x % k] += 1\n\nfor i in range(k):\n    if dp[i] > n - k + 1:\n        stdout.write(str(i) + \" \")\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(stdin) == \"7 3 1 3\"\n\nassert solution(stdin) == \"1 1\"\n\nassert solution(stdin) == \"7 3 1 3\"\n\n\n\"\"\""
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution(\n'''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n\nassert solution(\n'''15 2\n1 2 1 1 1 2 1 1 2 1 1 1 1 1''') == '1 1'\n\"\"\"\nThe idea is that you can do a naive solution to solve the problem, and then come back to the problem and start to think about how you can improve your solution.\n\nWe can use the following rule:\n\nIf there are multiple possible answers, we can return any of them.\n\nIf there is only one answer, we can use it.\n\nIf the answer is an array, we can cut it out by changing the numbers.\n\nLet us try to think about this problem and see what we can do.\n\nFirst of all we have to know how to cut out the copy of the array from the original array.\n\nLet's think about a naive solution. We can cut out the first copy, so the original array is now: $s \\rightarrow s \\setminus {s_1}$.\n\nWe have to find the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array.\n\nLet's imagine that we have the following array:\n\n$s = [1, 3, 2, 4]$\n\n$s_1 = [1, 2]$, $s_2 = [3, 4]$\n\nIn the next line we find the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array. This is $2$, and the answer is therefore:\n\n$answer = 2 + 2 = 4$\n\nWe can also write $s_2 = [3, 4]$ in the form of $s_2 = [3, 4]$, since there is only one copy of the array in $s$.\n\nLet's do the same for the second copy. We have $s = [1, 3, 2, 4]$, and we can find the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array:\n\n$s_1 = [1, 2]$, $s_2 = [3, 4]$\n\n$answer = 2 + 2 = 4$\n\nLet's assume that the number of the elements in $s_1$ is smaller than the number of the elements in $s_2$.\n\nIn this case the algorithm fails to find the number of consecutive elements in $s_1$ equal to $s_2$.\n\nThe only way to find the number of consecutive elements in $s_1$ equal to $s_2$ is to add a new element $s_1$ to the original array and to add a new copy of $s_1$ to the remaining array.\n\nWe have the following array:\n\n$s = [1, 3, 2, 4]$\n\n$s_1 = [1, 2]$, $s_2 = [3]$\n\nIn the next line we add a new element to $s_1$, resulting in $s_1 = [1, 2, 3]$, and we add a new copy to the remaining array, resulting in $s_2 = [3, 3]$.\n\nNow we can again solve the problem, but we cannot find the number of consecutive elements in $s_1$ equal to $s_2$.\n\nIn this case the algorithm fails to find the number of consecutive elements in $s_1$ equal to $s_2$.\n\nTo avoid this, we can cut out the first copy and then the second copy, so we can solve the problem in two steps.\n\nIn the first step we can find the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array:\n\n$s_1 = [1, 2]$, $s_2 = [3, 4]$\n\nThe number of consecutive elements in $s_1$ equal to $s_2$ is the same as in the previous step: $2 = 2$.\n\nIn the second step we add a new element to $s_1$, resulting in $s_1 = [1, 2, 3]$, and we add a new copy to the remaining array, resulting in $s_2 = [3, 4, 4]$.\n\nThe algorithm finds the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array, and finds the answer.\n\nTo find the answer we can do the same, but instead of adding a new element to $s_1$ we can cut out the first copy.\n\nIn the next line we can find the number of consecutive elements in $s_1$ equal to $s_2$ in the remaining array:\n\n$s_1 = [1, 2]$, $s_2 = [3, 4]$\n\n$answer = 2 + 2 = 4$\n\nIn this case we get the answer.\n\"\"\""
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1 2 3\"\nassert solution(\"10 4\") == \"1 3 1 3 1 3 1 3 1\"\nassert solution(\"15 2\") == \"7 3 1 3\"\nassert solution(\"1 2 1 1 1 2 1 1 2 1 2 1 1 1\") == \"1 1\"\nassert solution(\"5 5\") == \"1 2 3 4 5\"\n\"\"\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3''') == '3'\nassert solution('''8 1\n8''') == '0'\nassert solution('''9 1\n9''') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10 8\\n4 3\\n9 9\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"\nassert solution(\"6 5\\n4 3 5 6 7 9\\n3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('4\\n2\\n3\\n4') == '4'\nassert solution('6\\n1\\n2\\n3\\n4\\n5\\n6') == '0'\nassert solution('7\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '5'\nassert solution('1 1') == '0'\nassert solution('1 1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''3 1\n7\n5\n2\n1\n4\n''') == '0'\nassert solution('''6 1\n1 2 3 4 5 6\n2 1 2 1 1 1\n3 1 1 1 1 1\n4 1 1 1 1 1\n5 1 1 1 1 1\n6 1 1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3''') == '0'\nassert solution('''4 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-3]\nassert solution(stdin) == stdin[:-2]\nassert solution(stdin) == stdin[:-1]\nassert solution(stdin) == stdin[:-0]\nassert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxxx') == '7'\nassert solution('xxxxx') == '6'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('exxxii') == '1'\nassert solution('xoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xxxii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxx\") == 8\nassert solution(\"xxxx\") == 4\nassert solution(\"xxxx\") == 4\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n'''"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"exxxii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxxxxx\") == 8\nassert solution(\"xxxxxxiii\") == 1\nassert solution(\"xxxxxxiv\") == 1\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('code') == 'Code'\nassert solution('codehorses') == 'Code'\nassert solution('xxxx') == ''\nassert solution('xxxii') == '1'\nassert solution('xxoxx') == '0'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('exxxii') == 1\nassert solution('xxxiii') == 0\nassert solution('xxoxx') == 0\nassert solution('xxxxxxxxxx') == 8\nassert solution('xxoxxii') == 1\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('xxxxxxx') == 0\nassert solution('x') == 1\nassert solution('xx') == 1\nassert solution('xx1') == 1\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == \"\"\nassert solution('4') == \"\"\nassert solution('4\\\\n') == \"\"\nassert solution('2\\\\n') == \"\"\nassert solution('2\\\\n2\\\\n') == \"\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == 48\nassert solution('7') == 216\nassert solution('10') == 210\nassert solution('20') == 4800\nassert solution('100') == 96000\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(4) == 48\nassert solution(5) == 85\nassert solution(6) == 144\nassert solution(7) == 190\nassert solution(8) == 256\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"5\") == \"155\"\nassert solution(\"6\") == \"220\"\nassert solution(\"7\") == \"280\"\nassert solution(\"8\") == \"340\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"48\""
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '12'\nassert solution('4') == '16'\nassert solution('5') == '20'\nassert solution('6') == '24'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"6\") == \"144\"\nassert solution(\"10\") == \"336\"\nassert solution(\"26\") == \"3840\"\nassert solution(\"100\") == \"255280\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == 0\nassert solution(4) == 48\nassert solution(10) == 144\nassert solution(15) == 720\nassert solution(20) == 2688\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 0') == 'unsafe'\nassert solution('3 2') =='safe'\nassert solution('2 3') =='safe'\nassert solution('100 1') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('10 5') == 'unsafe'\nassert solution('6 3') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('9 3') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('5 5') == 'unsafe'\nassert solution('3 4') =='safe'\nassert solution('5 6') == 'unsafe'\nassert solution('0 1') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'unsafe'\nassert solution('2 2') =='safe'\nassert solution('1 2') == 'unsafe'\nassert solution('100 100') == 'unsafe'\nassert solution('999999 999999') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('5 2') =='safe'\nassert solution('1 10') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('5 4') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'unsafe'\nassert solution('3 3') =='safe'\nassert solution('5 5') == 'unsafe'\nassert solution('2 2') == 'unsafe'\nassert solution('4 7') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"unsafe\"\nassert solution(\"5 1\") == \"unsafe\"\nassert solution(\"5 6\") == \"safe\"\nassert solution(\"1 3\") == \"unsafe\"\nassert solution(\"1 6\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('5 6') == 'unsafe'\nassert solution('5 3') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('5 2') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('4 5') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('4 1') == 'unsafe'\nassert solution('1 4') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"1 0\") == \"unsafe\"\nassert solution(\"1 0\") == \"unsafe\"\nassert solution(\"5 3\") == \"safe\"\nassert solution(\"5 2\") == \"unsafe\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 4 5\n\"\"\") == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'\nassert solution('-1 -1 -1') == '-1'\nassert solution('1 -1 1') == '-1'\nassert solution('1 1 -1') == '-1'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 6\n\"\"\"\n\nimport math"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '6'"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 4\") == \"\"\nassert solution(\"1 2 4 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\n'''\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"3 4 2\") == \"3\"\nassert solution(\"4 4 4\") == \"2\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"2 3 3\") == \"12\"\nassert solution(\"1 4 1\") == \"2\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"2 1 4\") == \"1\"\nassert solution(\"4 4 4\") == \"8\"\nassert solution(\"2 5 6\") == \"2\"\n\"\"\""
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('3 5 3') == '6'\nassert solution('9 9 9') == '1'\nassert solution('10 5 10') == '4'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 8 1') == '8'\nassert solution('2 10 1') == '2'\nassert solution('2 10 3') == '1'\nassert solution('2 1001') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 10 4') == '0'\nassert solution('2 10 3') == '0'\nassert solution('2 10 5') == '0'\nassert solution('2 10 7') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2 11 4') == '4'\nassert solution('1000000 11 7') == '1000000'\nassert solution('1000000 11 7') == '1'\nassert solution('1000000 11 4') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"2 15 4\") == \"1\"\nassert solution(\"2 10 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 100 1\") == \"1\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 8 2') == '4'\nassert solution('99 9 2') == '3'\nassert solution('90 30 2') == '2'\nassert solution('99 9 2') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('2 10 5') == '10'\nassert solution('8 16 3') == '7'\nassert solution('18 13 4') == '6'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5''') == '10'\nassert solution('''2 5''') == '10'\nassert solution('''3 6''') == '18'\nassert solution('''3 6''') == '18'\nassert solution('''9 9''') == '81'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"10 10\") == \"100\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"99 99\") == \"999 999\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('2 3') == None\nassert solution('1 4') == None\nassert solution('2 5') == None\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1, 2) == 2\nassert solution(3, 2) == 6\nassert solution(5, 3) == 15\nassert solution(4, 6) == 24\nassert solution(5, 1) == 5\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == 10\nassert solution('-2 -3') == -6\nassert solution('100 100') == 100000000\nassert solution('100 -100') == 0\nassert solution('1 -1') == 0\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5\\n') == '10'\nassert solution('2 3\\n') == '6'\nassert solution('2 1\\n') == '1'\nassert solution('3 4\\n') == '12'\n\"\"\""
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4') == '6'\nassert solution('4 3') == '12'\nassert solution('1 1') == '1'\nassert solution('100 100') == '1000'\nassert solution('-10 -10') == '-100'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('4 2 7') == '0'\nassert solution('1 1 1') == '0'\nassert solution('100000 100000 1') == '0'\nassert solution('100000 100000 100000') == '0'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 6 7\") == \"10\"\nassert solution(\"3 2 7\") == \"4\"\nassert solution(\"3 1 7\") == \"3\"\nassert solution(\"3 10 7\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '5'\nassert solution('10 10 10') == '4'\nassert solution('2 10 1') == '10'\nassert solution('10 100 5') == '5'\nassert solution('2 10 1') == '11'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 7') == '10'"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"10 15 10\") == \"40\"\nassert solution(\"3 10 2\") == \"3\"\nassert solution(\"5 10 5\") == \"15\"\nassert solution(\"5 10 5\") == \"15\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 5') == '10'"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(10)\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n1 5') == 'OK'\nassert solution('10\\n8 1') == 'OK'\nassert solution('10\\n9 4') == 'OK'\nassert solution('10\\n14 3') == 'OK'\nassert solution('10\\n1 1') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('7\\n500 600\\n7') == 'OK'\nassert solution('7\\n500 600\\n2') == 'NG'\nassert solution('7\\n500 600\\n500') == 'NG'\nassert solution('7\\n500 600\\n9') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == 'OK'\nassert solution('1') == 'OK'\nassert solution('1000') == 'OK'\nassert solution('500 6') == 'OK'\nassert solution('1000 6') == 'NG'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1\\n2 3\") == \"OK\"\nassert solution(\"1\\n2 10\") == \"NG\"\nassert solution(\"7\\n500 600\\n4 8\") == \"OK\"\nassert solution(\"7\\n500 600\\n1 1\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7\n500 600\n\"\"\".strip()) == \"OK\"\n\nassert solution(\n\"\"\"\n1\n1 100\n\"\"\".strip()) == \"OK\"\n\nassert solution(\n\"\"\"\n3\n8 10\n\"\"\".strip()) == \"OK\"\n\nassert solution(\n\"\"\"\n3\n500 600\n\"\"\".strip()) == \"NG\"\n\nassert solution(\n\"\"\"\n1\n1 100\n\"\"\".strip()) == \"NG\""
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"5\") == \"OK\"\nassert solution(\"1\") == \"OK\"\nassert solution(\"0\") == \"OK\"\nassert solution(\"1\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\"\nassert solution(\"7\\n500 1000\\n\") == \"NG\"\nassert solution(\"7\\n500 1000\\n\") == \"OK\"\nassert solution(\"7\\n9223372036854775807 9223372036854775807\\n\") == \"OK\"\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('9\\n100 200') == 'OK'\nassert solution('9\\n500 600') == 'NG'\nassert solution('9\\n0 0') == 'OK'\nassert solution('1\\n0 0') == 'NG'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3''') == '2.6666666667'\n'''\n    # Enter your code here.\n    # This is to check if the input is as expected\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('2 1') == '1'\nassert solution('5 4') == '2.5'\nassert solution('3 4') == '1.5'\nassert solution('10 8') == '9.5'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3') == '2.6666...'\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3') == \"2.6666666667\"\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''1 2''') == '1.0'\nassert solution('''1 2 3''') == '0.5833333333333334'\nassert solution('''2 4''') == '2.0'\nassert solution('''1 1''') == '1.0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 1 1') == '0'\nassert solution('9 6 4') == '5'\nassert solution('5 1 1') == '5'\nassert solution('12 1 1') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nAC\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('10 10 10') == '0'\nassert solution('100 60 30') == '80'\nassert solution('1000 100 100') == '0'\nassert solution('1000 1000 1000') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('6 10 9') == '8'\nassert solution('10 12 13') == '0'\nassert solution('12 21 22') == '0'\nassert solution('123123123') == '123123123'\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 10 2') == '9'\nassert solution('20 100 2') == '1'\nassert solution('20 100 10') == '0'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('5 10 10') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 3') == '1'\nassert solution('20 25 30') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 5\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 1 2\") == \"0\"\nassert solution(\"4 8 6\") == \"1\"\nassert solution(\"2 3 4\") == \"2\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\nfrom sys import stdin\n\nA,B,C = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 3 2\n3 1 2\"\"\") == \"3\"\nassert solution(\"\"\"10\n9 5 2 4 1 3 6 7 8 9 10\n10 9 5 2 4 1 3 6 7 8 9 10\"\"\") == \"9\"\nassert solution(\"\"\"1\n1\"\"\") == \"0\"\nassert solution(\"\"\"6\n1 2 3 4 5 6\"\"\") == \"5\"\nassert solution(\"\"\"6\n3 1 2 4 5 6\"\"\") == \"2\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('3\\n1 3 2\\n1 3 2\\n1 3 2') == '0'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2') == '0'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2\\n3 1 2') == '0'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2\\n3 1 2') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nassert solution(\"3\\n3 1 2\\n1 3 2\") == \"0\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"2\"\nassert solution(\"3\\n3 1 2\\n3 1 2\") == \"0\"\nassert solution(\"2\\n1 1\\n2 2\") == \"1\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 1') == '3'\nassert solution('1 3\\n2 1') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 2\\n1 2\\n1 2') == '0'\nassert solution('1 2 3\\n2 3 1') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\\n3 1 2\\n\") == '3'\nassert solution(\"3 3 1\\n1 3 2\\n2 3 1\\n\") == '0'\nassert solution(\"1 1\\n1 1\\n\") == '0'\nassert solution(\"1 2 3\\n3 1 2\\n3 1 2\\n\") == '0'\nassert solution(\"1 2 3 4\\n4 1 2 3\\n4 1 2 3\\n\") == '0'\n\"\"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('3 1 2') == '2'\nassert solution('2 1 3') == '1'\nassert solution('3 2 1') == '2'\n'''\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 2\n3 1 2''') == '3'\nassert solution('''2\n1 3\n3 1 2''') == '4'\nassert solution('''3\n1 3 2\n3 1 2''') == '1'\nassert solution('''4\n1 3 2 4\n3 1 2 4''') == '1'\nassert solution('''5\n1 3 2 4 5\n3 1 2 4 5''') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 1 3\") == \"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''1\n1''') == '0'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '4'\nassert solution('''7\n1 2 3 4 5 6 7''') == '3'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2\\n') == '3'\nassert solution('3\\n1 3 2\\n1 3 2\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n2\\n') == '1'\nassert solution('2\\n2\\n1\\n') == '1'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ACCTC') == 'ACCTC'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATCODER\"\nassert solution(\"ATCODER\") == \"ATCODER\"\n\n-----\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\""
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ATCODER') == 'AT'\nassert solution('ACGTAA') == 'ACGT'\nassert solution('ATGCATAA') == 'ATGCA'\nassert solution('ATGACGCTTC') == 'ATGAC'\nassert solution('ATGCATAAGT') == 'ATGCA'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 3\nassert solution('TTTTTT') == 0\nassert solution('ATCODER') == 3\nassert solution('TAT') == 3\nassert solution('TTTC') == 0\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('AGTCO') == 'AGTC'\nassert solution('CACGT') == 'CACG'\nassert solution('CAAGTC') == 'CAAG'\nassert solution('CACGTA') == 'CAC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('A') == 'A'\nassert solution('AC') == 'AC'\nassert solution('ACGT') == 'ACGT'\nassert solution('GTCAA') == 'GT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATC') == 'AT'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('ATCODER') == 3\nassert solution('AA') is None\nassert solution('AC') == 1\nassert solution('TCA') == 1\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ACGTCGTAGCTA') == 'TCG'\nassert solution('ATCODER') == 'TCG'\nassert solution('ATCGTCGTAGC') == 'TCG'\nassert solution('ATCGTAGCTA') == 'TCG'\nassert solution('ATCGTAGC') == 'TCG'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11') == '9'\nassert solution('5') == '0'\nassert solution('11') == '9'\nassert solution('7') == '3'\nassert solution('9') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''11''') == '9'\n\n'''"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('20') == '1'\nassert solution('101') == '0'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12') == '1'\nassert solution('1') == '0'\nassert solution('10') == '1'\nassert solution('100') == '18'\nassert solution('1000') == '243'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(5) == 1\nassert solution(10) == 9\nassert solution(100) == 25\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9') == '9'\nassert solution('111') == '9'\nassert solution('2') == '2'\nassert solution('1') == '2'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '9'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '0'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\nassert solution('10') == '0'\nassert solution('15') == '1'\nassert solution('999999') == '999999'\nassert solution('100000') == '0'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 1\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cupsofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('coffeecups') == 'hottea'\nassert solution('coffeecups') == 'hottea'\nassert solution('cupsofcoffee') == 'cupofhottea'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nNote that we need to find the minimum number of operations to achieve the change\nof string. In the first step, we are allowed to change any character. Then,\nwe can change the second and third characters, so we need to keep the change\nuntil we reach the end of the string.\n\"\"\"\n\n\"\"\"\nfrom collections import deque\nclass Solution:\n    def solve(self, S, T):\n        queue = deque()\n        queue.append((S, 0))\n        while queue:\n            S, steps = queue.popleft()\n            if S == T:\n                return steps\n            for i in range(len(S)):\n                for j in range(97, 123):\n                    if chr(j)!= S[i]:\n                        queue.append((S[:i] + chr(j) + S[i+1:], steps+1))\n        return -1\n\n\"\"\"\n\nfrom collections import deque\nclass Solution:\n    def solve(self, S, T):\n        queue = deque()\n        queue.append((S, 0))\n        while queue:\n            S, steps = queue.popleft()\n            if S == T:\n                return steps\n            for i in range(len(S)):\n                for j in range(97, 123):\n                    if chr(j)!= S[i]:\n                        queue.append((S[:i] + chr(j) + S[i+1:], steps+1))\n        return -1"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == 4\nassert solution(\"cupofhottea\") == 4\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('cupofcoffee') == 'hottea'\nassert solution('cupofhottea') == 'hotteaca'\nassert solution('abc') == 'abc'\nassert solution('abcdefg') == 'abcdffg'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cubic') == 'cubic'\nassert solution('cupofcoffee') == 'cubic'\nassert solution('cupofhottea') == 'cubic'\nassert solution('cubiccupofcoffee') == 'cubic'\nassert solution('cubiccubiccupofcoffee') == 'cubic'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aacb') == 'ab'\nassert solution('cabca') == 'aacb'\nassert solution('cabca') == 'aacb'\nassert solution('abacbc') == 'abacbc'\nassert solution('aabacbc') == 'abacbc'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aabcd\") == \"ababcd\"\nassert solution(\"abcddc\") == \"abcdabcd\"\nassert solution(\"cabcd\") == \"cabcd\"\nassert solution(\"cbcddd\") == \"cbcddd\"\nassert solution(\"dabcddc\") == \"dabcddc\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('Hello') == 'olleH'\nassert solution('cows') == 'cowss'\nassert solution('france') == 'franz'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cupofcoffee') == 4\nassert solution('cupofhottea') == 4\nassert solution('cuoophot') == 4\nassert solution('coffee') == 1\nassert solution('hotte') == 1\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\n-----Note-----\n- Please see the expected output format for more details.\n- Do not remove the statement `return []`.\n- If you are using a language's built-in random number generator, do NOT use the statement `import random`.\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('3 7') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 3') == ''\nassert solution('3 1') == '5'\nassert solution('7 2') == '8 9'\nassert solution('3 7') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '1 2'\nassert solution('2 2') == '1 2'\nassert solution('3 1') == '1 2'\nassert solution('1 3 2') == '1 2'\nassert solution('1 2 3') == '1 2'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7') == '5 6 7 8 9'\nassert solution('3 7') == '5 6 7 8 9'\nassert solution('3 3') == '5 6 7 8 9'\nassert solution('3 3') == '5 6 7 8 9'\nassert solution('1 100000') == ''\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 5\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\") == \"5 6 7 8 9\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\") == \"1 2 3 4 5\"\nassert solution(\"1 10\\n2 9\\n3 8\\n4 7\\n5 6\\n6 5\\n7 4\\n8 3\\n9 2\\n10 1\") == \"1 2 3 4 5\"\nassert solution(\"1 10\\n2 9\\n3 8\\n4 7\\n5 6\\n6 5\\n7 4\\n8 3\\n9 2\\n10 1\") == \"1 2 3 4 5\"\nassert solution(\"1 10\\n2 9\\n3 8\\n4 7\\n5 6\\n6 5\\n7 4\\n8 3\\n9 2\\n10 1\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 7') == '1 7'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == ''\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 3') == '0'\nassert solution('1 4') == '0'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''0 3\n''') == '3 5'\nassert solution('''1 2\n''') == '1 2'\nassert solution('''0 3\n''') == '3 5'\nassert solution('''0 2\n''') == '1 2'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\"\"\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"-29\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(15) == \"Yes\"\nassert solution(25) == \"No\"\nassert solution(40) == \"Yes\"\nassert solution(29) == \"No\""
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(3) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(5) == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(None) == None\nassert solution(\"-40\") == \"No\"\nassert solution(\"25\") == \"No\"\nassert solution(\"-70\") == \"Yes\"\nassert solution(\"-10\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"20\") == \"No\"\nassert solution(\"25\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"-1\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'Yes'\nassert solution('-50') == 'No'\nassert solution('0') == 'Yes'\nassert solution('40') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"-40\") == \"Yes\"\nassert solution(\"-3\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"-17\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'Yes'\nassert solution('30') == 'Yes'\nassert solution('-100') == 'No'\nassert solution('20') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n1 1\n5 5\n2 2\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n3 3\n0 1\n1 2\n1 2\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n5 5\n2 2\n-2 -1\n-1 1\n1 1\n1 -1\n0 0\n1 -2\n2 1\n\"\"\") == '4'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    input('Enter the space separated values of D, N: ')) == \\\n    '1'\n\nassert solution(\n    input('Enter the space separated values of D, N: ')) == \\\n    '2'\n\nassert solution(\n    input('Enter the space separated values of D, N: ')) == \\\n    '4'\n\nassert solution(\n    input('Enter the space separated values of D, N: ')) == \\\n    '8'\n\nassert solution(\n    input('Enter the space separated values of D, N: ')) == \\\n    '16'"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n1 2\n1 2''') == '0'\nassert solution('''3 3\n1 1\n1 1\n1 1''') == '1'\nassert solution('''3 2\n1 1\n1 1\n1 1''') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2\n5 5''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '0'\nassert solution('''4 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n2 2\n2 2''') == '5'\nassert solution('''8 3\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''4 4\n1 2 3 4\n-1 -2 -3 -4\n1 1 1 1\n2 2 2 2''') == '6'\nassert solution('''5 5\n5 5 5 5 5\n1 2 3 4 5\n1 1 1 1 1\n-1 -2 -3 -4 -5\n1 1 1 1 1\n2 2 2 2 2''') == '10'\nassert solution('''6 6\n1 2 3 4 5 6\n1 1 1 1 1 1\n-1 -2 -3 -4 -5 -6\n1 1 1 1 1 1\n2 2 2 2 2 2\n3 3 3 3 3 3''') == '36'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1\\n'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1\\n'\nassert solution('''3 2\n1 2\n1 2''') == '0\\n'\nassert solution('''3 2\n2 1\n3 4\n5 6\n7 8''') == '2\\n'\nassert solution('''3 2\n2 1\n3 4\n5 6\n7 8''') == '2\\n'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 2\\n5 5') == '1'\nassert solution('2 3\\n1 2\\n5 5') == '0'\nassert solution('5 5\\n2 4\\n3 5\\n4 4') == '1'\nassert solution('5 5\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('5 5\\n1 1\\n5 1\\n1 1') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n2 2') == '1'\nassert solution('1 2\\n1 -2') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2\\n5 5') == '0'\nassert solution('4\\n1 2 3 4\\n1 3 2 4\\n5 6 7 8\\n2 3 4 5') == '2'\nassert solution('4\\n1 2 3 4\\n1 3 2 4\\n5 6 7 8\\n3 4 5 6') == '1'\nassert solution('4\\n1 2 3 4\\n1 3 2 4\\n5 6 7 8\\n4 5 6 7') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '1'\nassert solution('''\n4 4\n3 1\n2 -1\n1 1\n''') == '9'\nassert solution('''\n5 5\n2 2\n3 4\n-2 2\n1 -4\n''') == '3'\nassert solution('''\n2 1\n-2 -1\n''') == '1'\nassert solution('''\n1 0\n-1 1\n''') == '1'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1234\") == \"Good\"\nassert solution(\"12341234\") == \"Bad\"\nassert solution(\"12345\") == \"Good\"\nassert solution(\"123456\") == \"Good\"\nassert solution(\"1234567\") == \"Bad\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3774') == 'Good'\nassert solution('3773') == 'Good'\nassert solution('3772') == 'Good'\nassert solution('3771') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3776') == \"Good\"\nassert solution('3779') == \"Bad\"\nassert solution('3777') == \"Good\"\nassert solution('3777') == \"Good\"\nassert solution('3777') == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"5435\") == \"Good\"\nassert solution(\"3992\") == \"Good\"\nassert solution(\"2447\") == \"Good\"\nassert solution(\"1245\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('37761') == 'Good'\nassert solution('37761X') == 'Bad'\nassert solution('37761XX') == 'Good'\nassert solution('37761XXX') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1316\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"3777\") == \"Good\"\nassert solution(\"3987\") == \"Good\"\nassert solution(\"4567\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3771') == 'Good'\nassert solution('3769') == 'Good'\nassert solution('3778') == 'Good'\nassert solution('3789') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('6732') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('54345') == 'Good'\nassert solution('54345') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123') == 'Good'\nassert solution('1134') == 'Good'\nassert solution('1111') == 'Good'\nassert solution('0111') == 'Good'\nassert solution('1111') == 'Good'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"3\\n3 4\\n3 4\") == \"3.5\"\nassert solution(\"10\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\") == \"3.5\"\nassert solution(\"1000\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\") == \"3.5\"\nassert solution(\"100000\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n3 4\\n4 2\\n1 1\\n2 3\\n') == '3.5'\nassert solution('5\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n') == '2.5'\nassert solution('10\\n100\\n999\\n99\\n990\\n999\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n999\\n99\\n990\\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n3 4\\n2 4') == '3.5'\nassert solution('3\\n4 3\\n2 4') == '3.5'\nassert solution('3\\n4 3\\n2 4\\n1 3') == '3.5'\nassert solution('3\\n4 3\\n2 4\\n1 3\\n2 3') == '3.5'\n\n\"\"\""
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3.5\"\nassert solution(\"1 2\") == \"0.5\"\nassert solution(\"10 9\") == \"3.5\"\nassert solution(\"3 4 9\") == \"3.5\"\nassert solution(\"3 4 10\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('3\\n2 2\\n1 1') == '2'\nassert solution('3\\n2 3\\n1 1') == '2'\nassert solution('3\\n2 3\\n1 2') == '2.5'\nassert solution('3\\n2 3\\n1 3') == '2'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\n\"\"\""
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4') == 3.5\nassert solution('2 3') == (3 + 4) / 2\nassert solution('3 4 5') == (3.5 + 5) / 2\nassert solution('4 3 2') == (4.5 + 2) / 2\nassert solution('4 3 2 5') == (4.5 + 2.5) / 2\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 4''') == '3.5'\nassert solution('''1\n7''') == '7.0'\nassert solution('''5\n1 2 3 4 5''') == '10.0'\nassert solution('''5\n1 2 3 4 5''') == '10.0'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '1.2'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.5\"\nassert solution(\"3 4\") == \"3.5\"\nassert solution(\"1 2 3 4\") == \"3.5\"\nassert solution(\"1 2 3 4 5\") == \"3.75\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"3.875\"\n\"\"\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('3\\n2 1 2') == '14'\nassert solution('3\\n1 2 1') == '3'\nassert solution('4\\n2 3 4 1') == '7'\nassert solution('4\\n2 3 4') == '7'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n1 5 6') == '19'\nprint('Testcases passed')\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''10\n2 8 6 7 8 6 5 8 4 9 1\n6 5 4 3 2 1 2 1 1''') == '338'\nassert solution('''4\n1 2 1 2\n2 1 1\n2 1\n1 1\n''') == '0'\nassert solution('''3\n2 2 2\n2 1 1\n1 1\n''') == '0'\nassert solution('''20\n2 1 1 2 2 1 1 1 2 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 2 2 2 1 1 1 2 1 2 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n5\n3 1 2 3 4\n2 5 4\n3 6\n''') == '25'\nassert solution('''\n5\n3 1 2 3 4\n2 5 4\n3 6 7\n''') == '37'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n5\n5\n5\n5\n5\n''') == '15'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('5\\n3 1 2 3 4\\n2 5 4\\n3 6') == '40'\nassert solution('5\\n3 1 2 3 4\\n2 5 4\\n3 6') == '47'\nassert solution('5\\n3 1 2 3 4\\n2 5 4\\n3 6') == '47'\nassert solution('5\\n3 1 2 3 4\\n2 5 4\\n3 6') == '47'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n4 3 2''') == '14'\nassert solution('''7\n1 5 2\n5 3 3\n3 2 1\n1 1 5\n2 2 4\n4 4 2\n1 1 3\n3 3 6\n''') == '36'\nassert solution('''10\n1 5 2\n5 3 3\n3 2 1\n1 1 5\n2 2 4\n4 4 2\n1 1 3\n3 3 6\n2 2 1\n5 5 4\n5 4 3\n4 3 2''') == '44'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\") == \"14\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"114\"\nassert solution(\"3\\n3 1 2\\n2 5 4\") == \"14\"\n\"\"\""
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ZABCDBABCQ') == 2\nassert solution('ABC') == 0\nassert solution('ABCDEFGHIJKL') == 1\nassert solution('ABC') == 0\n\nprint('Test is passed')\n\"\"\""
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10\nZABCDBABCQ\n''') == '2'\nassert solution('''\n7\nABBACBABBA\n''') == '5'\nassert solution('''\n2\nAZ\n''') == '1'\nassert solution('''\n10\nABABBABABBA\n''') == '10'\nassert solution('''\n3\nBB\nABAB\n''') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('ZABCDBABCQ') == '2'\nassert solution('AABCCDDD') == '0'\nassert solution('AABCCDDZZZZ') == '4'\nassert solution('AABCCDDAA') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ZABCDBABCQ''') == '2'\nassert solution('''ZABCDBABCQ''') == '2'\nassert solution('''ABABAA''') == '2'\nassert solution('''ABBCAA''') == '2'\nassert solution('''ABBACAB''') == '4'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\nprint('Test is passed')\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[2:7]"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\nZABCDBABCQ\n''') == '2'\nassert solution('''10\nZABCDBABCQQ\n''') == '0'\nassert solution('''10\n
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a a b') == 'ab'\nassert solution('b a') == 'ab'\nassert solution('a a a a a a b') == 'ab'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('MASHIKE') == '2'\nassert solution('MASHIKE:') == '2'\nassert solution('MASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI') == '2'\nassert solution('MASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI:') == '2'\nassert solution('MASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI:HABORO:') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('MASHIKE\\n'\n'RUMOI\\n'\n'OBIRA\\n'\n'HABORO\\n'\n'HOROKANAI\\n') == 2\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(solution(line) for line in TEST_INPUT)) == TEST_OUTPUT\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\nIt seems that there is a problem with the solution for the input. The code says that we need to ensure that the\nsolution is not greater than the maximum possible value in a 32-bit integer. But it is not true. The last line of\nthe solution is the following:\n\nans = 0\nfor i in range(1, N+1):\n    for j in range(i+1, N+1):\n        for k in range(j+1, N+1):\n            if (S_i[i-1][0] == S_i[j-1][0] == S_i[k-1][0] or\n                    S_i[i-1][0] == S_i[j-1][0]!= S_i[k-1][0] or\n                    S_i[i-1][0] == S_i[k-1][0]!= S_i[j-1][0] or\n                    S_i[j-1][0] == S_i[k-1][0]!= S_i[i-1][0] or\n                    S_i[i-1][0]!= S_i[j-1][0] == S_i[k-1][0] or\n                    S_i[i-1][0]!= S_i[k-1][0] == S_i[j-1][0] or\n                    S_i[j-1][0]!= S_i[k-1][0] == S_i[i-1][0] or\n                    S_i[i-1][0] == S_i[j-1][0]!= S_i[k-1][0] or\n                    S_i[j-1][0] == S_i[k-1][0]!= S_i[i-1][0] or\n                    S_i[k-1][0] == S_i[i-1][0]!= S_i[j-1][0]):\n                ans += 1\nreturn str(ans)\n\"\"\"\n\nfrom string import ascii_uppercase as asc"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abcabcabc\"\nassert solution(\"abcdefg\") == \"abcabcabcabcdefg\"\nassert solution(\"aaaa\") == \"aaaaaaaaaaaa\"\nassert solution(\"abcdefg\") == \"abcabcabcabcdefg\"\nassert solution(\"ab\") == \"abababab\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('MASHIKE\\n'\n'RUMOI\\n'\n'OBIRA\\n'\n'HABORO\\n'\n'HOROKANAI') == '2'\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI\\nOBIRA') == '0'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI\\nOBIRA\\nHABORO') == '2'\nassert solution('MASHIKE\\nRUMOI\\nHABORO\\nHOROKANAI\\nOBIRA\\nHABORO') == '2'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'No'\nassert solution('3 2') == 'No'\nassert solution('1 3') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n\"\"\"\n\nN,M = map(int,input().split())\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n\nassert solution(\"1 1\") == \"Yes\"\n\nassert solution(\"1 2\") == \"No\"\n\nassert solution(\"2 3\") == \"No\"\n\nassert solution(\"3 2\") == \"No\""
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('0 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 0') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == \"Yes\"\nassert solution('0 3') == \"No\"\nassert solution('2 3') == \"Yes\"\nassert solution('2 0') == \"No\"\nassert solution('0 0') == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"0 0\") == \"No\"\nassert solution(\"2 0\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 5\") == \"No\"\nassert solution(\"10 1\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 4\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sippuu') == \"Yes\"\nassert solution('sippu') == \"No\"\nassert solution('cacaca') == \"Yes\"\nassert solution('cccccccc') == \"Yes\"\nassert solution('cacac') == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('ttu') == 'No'\nassert solution('aacc') == 'Yes'\nassert solution('ddd') == 'Yes'\nassert solution('aaaa') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('coucou') == 'No'\nassert solution('ciel') == 'Yes'\nassert solution('asss') == 'No'\nassert solution('bbbbb') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('zsxqpbg') == 'No'\nassert solution('sippuuu') == 'No'\nassert solution('sippuuuuu') == 'Yes'\nassert solution('sippu') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sip') == 'No'\nassert solution('pepp') == 'No'\nassert solution('pip') == 'Yes'\nassert solution('pie') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sipptt\") == \"No\"\nassert solution(\"sippuuuuu\") == \"No\"\nassert solution(\"sippuuu\") == \"Yes\"\nassert solution(\"sippu\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('aabbc') == 'No'\nassert solution('aabbccddeeff') == 'Yes'\nassert solution('aaabbccddeeff') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('c') == 'No'\nassert solution('sippu') == 'No'\nassert solution('aabcd') == 'No'\nassert solution('aaabcdd') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('asdf') == 'No'\nassert solution('wewew') == 'Yes'\nassert solution('wewe') == 'Yes'\nassert solution('w') == 'No'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 2') == 'TLE'\nassert solution('1 1 1 2 1') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == 'TLE'\nassert solution('1 1') == '0'\nassert solution('3 2') == 'TLE'\nassert solution('1 3') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('7 70\\n1 60\\n4 50\\n') == 'TLE'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == 'TLE'\n\"\"\""
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"5 1\\n2 1\\n4 1\\n4 1\\n2 1\\n4 1\\n\") == \"TLE\"\nassert solution(\"3 30\\n3 3\\n1 5\\n2 9\\n4 4\\n2 2\\n4 2\\n2 2\\n4 2\\n2 2\\n\") == \"4\"\nassert solution(\"10 30\\n5 3\\n2 8\\n1 5\\n3 4\\n6 5\\n7 4\\n4 8\\n2 2\\n5 2\\n4 2\\n\") == \"6\"\nassert solution(\"100 30\\n5 3\\n2 8\\n1 5\\n3 4\\n6 5\\n7 4\\n4 8\\n2 2\\n5 2\\n4 2\\n\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 1\\n') == '1'\nassert solution('1 3\\n1 1\\n') == '2'\nassert solution('1 2\\n1 1\\n') == 'TLE'\nassert solution('1 5\\n1 1\\n') == 'TLE'\nassert solution('5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\n2 10\\n1 10\\n1 10\\n2 10\\n1 10\\"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50\n''') == 'TLE'\nassert solution('''3 70\n1 60\n1 80\n4 50\n''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50\n''') == 'TLE'\nassert solution('''3 70\n1 60\n1 80\n4 50\n''') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 70') == 4\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == 80\nassert solution('4 50') == 50\nassert solution('6 10') == 2\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('1 2\\n2 4') == '2'\nassert solution('1 10\\n1 10') == '0'\nassert solution('1 10\\n2 10') == '10'\nassert solution('1 10\\n10 10') == '10'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[3]\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 1 1') == '0'\nassert solution('4 3 9') == '7'\nassert solution('1 1 1') == '0'\nassert solution('6 3 17') == '11'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 3 4') == '10'\nassert solution('4 2 9') == '8'\nassert solution('10 2 10') == '20'\nassert solution('5 5 5') == '10'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('6 3 4') == '10'\nassert solution('4 3 4') == '8'\nassert solution('9 7 5') == '15'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 6 7\") == \"21\"\nassert solution(\"2 1 5\") == \"9\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 9') == '8'\nassert solution('4 2 9') == '8'\nassert solution('50 10 0') == '100'\nassert solution('2 1 1') == '2'\nassert solution('1 50 1') == '50'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 2 9') == '11'\nassert solution('1 100 100') == '99'\nassert solution('3 4 3') == '14'\nassert solution('6 4 3') == '24'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2 9') == '8'\n\"\"\"\n\n\"\"\"\n-------\n\"\"\"\n\n\"\"\"\n\n------\n\"\"\""
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 1 10') == '12'\nassert solution('1 1 1') == '3'\nassert solution('1 1 1 1') == '6'\nassert solution('1 1 1 1 1') == '9'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 5 7') == '6'\nassert solution('5 10 5') == '10'\nassert solution('1 10 2') == '7'\nassert solution('3 1 4') == '6'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''3\nacornistnt\npeanutbomb\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint\n''') == '1\\n'\nassert solution('''5\nacornistnt\npeanutbomb\nconstraint\ntenough\ngothic\n''') == '5\\n'\nassert solution('''5\nacornistnt\npeanutbomb\nconstraint\ntenough\ngothic\n''') == '2\\n'\nassert solution('''5\nacornistnt\npeanutbomb\nconstraint\ntenough\ngothic\n''') == '3\\n'\nassert solution('''5\nacornistnt\npeanutbomb\nconstraint\ntenough\ngothic\n''') == '4\\n'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"abcde\\nasdfghj\\nab\\n\") == \"0\\n\"\nassert solution(\"abcde\\nasdfghj\\nab\\n\") == \"0\\n\"\nassert solution(\"abcde\\nasdfghj\\nab\\n\") == \"0\\n\"\n\"\"\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint') == '2'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint') == '3'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint') == '4'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint\\nacornistnt\\npeanutbomb\\nconstraint') == '5'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('acornistnt') == None\nassert solution('peanutbomb') == None\nassert solution('constraint') == None\nassert solution('acornistnt') == None\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('peanutbomb\\nacornistnt\\nconstraint') == '1'\nassert solution('peanutbomb\\npeanutbomb\\nconstraint') == '2'\nassert solution('peanutbomb\\npeanutbomb\\npeanutbomb') == '2'\nassert solution('peanutbomb\\npeanutbomb\\npeanutbomb\\npeanutbomb') == '3'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\"\"\"\ns_i = \"acornistnt\"\ns_3 = \"constraint\"\ns_1 = \"peanutbomb\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('a\\n') == '0\\n'\nassert solution('a' * 10) == '0\\n'\nassert solution('b' * 10) == '0\\n'\nassert solution('b' * 10 + 'a' * 10) == '0\\n'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1' + '\\n' * 1000) == '1'\nassert solution('1\\n' * 1000) == '1'\nassert solution('0\\n' * 1000) == '0'\nassert solution('9\\n' * 1000) == '9'\nassert solution('9\\n' * 100000) == '0'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"\nassert solution(\"121234\\n12345\\n12123\\n12345\\n12345\") == \"1\\n2\\n1\\n0\\n2\"\n\"\"\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom functools import reduce\n\nwith open(\"data/data.txt\", \"r\") as file:\n    data = [int(line) for line in file]"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2132\") == \"8\"\nassert solution(\"506\") == \"2\"\nassert solution(\"999999999\") == \"9\"\nassert solution(\"1000000000\") == \"8\"\n\n\"\"\""
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom itertools import islice\nfrom functools import lru_cache"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('11\\n22\\n33') == '0\\n1\\n2\\n3'\nassert solution('111\\n222\\n333') == '0\\n1\\n2\\n3'\nassert solution('1111\\n2222\\n3333') == '0\\n1\\n2\\n3'\nassert solution('11111\\n22222\\n333333') == '0\\n1\\n2\\n3'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('123456781234567891234567890') == '123456789123456789123456789'\nassert solution('1234567891234567891234567890') == '123456789123456789123456789'\nassert solution('123456789123456789123456789') == '123456789123456789123456789'\nassert solution('11212312341234512345') == '1121231234123451234512345'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n3') == '2'\nassert solution('1\\n20') == '5'\nassert solution('1\\n38') == '2'\nassert solution('1\\n56') == '0'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1 1 1\"\nassert solution(\"4 2\") == \"1 2 1 1\"\nassert solution(\"6 2\") == \"2 1 2 1 2 1 1\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n2') == '2'\nassert solution('2\\n1\\n1') == '2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"2\\n1 2 1 1 2\\n\"\nassert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 4\\n1 2\\n1 3') == '2\\n1 1 1 2'\nassert solution('4 2\\n3 1\\n1 4\\n1 2\\n3 4\\n1 3\\n1 2') == '1\\n1 1 1 1 2 2 3 2 3'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n3 10\\n2 6\\n2 5\\n3 4') == '3\\n1 1 2 2 3 1 3 3 1 3 1'"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '1 2 1 1 2'\nassert solution('6 2') == '2 1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 1') == '2'\nassert solution('1 1\\n2 2') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '2\\n1 2 1 1 2'\nassert solution('4 2\\n3 1\\n1 4\\n1 2\\n') == '1\\n1 1 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3\\n1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3\\n1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3\\n1 1 2 3 2 3 1 3 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''16 4\n15 10\n16 17\n15 11\n15 12\n11 1\n14 8\n13 19\n10 2\n10 3\n10 5\n14 6\n14 7\n13 3\n12 11\n11 17\n11 10\n10 14\n12 9\n12 15\n13 15\n15 2\n14 14\n13 2\n12 15\n12 13\n11 10\n15 4\n15 15\n14 3\n13 19\n11 8\n15 9\n12 11\n14 9\n13 5\n14 18\n11 7\n15 19\n9 12\n9 4\n9 19\n12 10\n16 5\n12 19\n15 9\n15 11\n16 7\n15 19\n9 15\n15 17\n11 18\n13 4\n14 3\n14 19\n12 16\n16 6\n14 18\n11 8\n15 19\n15 14\n14 19\n12 16\n9 17\n12 17\n11 19\n15 17\n14 19\n12 16\n9 19\n15 19\n14 19\n12 17\n9 19\n15 19\n15 17\n14 19\n12 19\n13 19\n12 17\n11 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n12 17\n15 19\n15 17\n14 19\n15 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n15 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n15 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15 19\n15 17\n14 19\n12 19\n15"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom sys import stdin, stdout\nn = int(stdin.readline())\npos = stdin.readline().split()\nx = []\nfor i in range(n):\n    x.append(int(pos[i]))\nd = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}\ns = []\nans = 0\nfor i in range(n):\n    a = str(x[i])\n    s.append(a)\nfor i in range(n):\n    s[i] = d[s[i]]\nfor i in range(n):\n    if s[i] > s[i + 1]:\n        if s[i] > s[i - 1]:\n            ans += 1\n    else:\n        ans = 0\nstdout.write(str(ans) +'')\nfor i in range(n):\n    s[i] = str(s[i])\n    stdout.write(s[i] +'')\nstdout.write('\\n')\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4 1 2 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom functools import reduce"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 4 4\\n1 1 8 8 8 4 4 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 8 8 8 8') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n1 1 8 8 8 8 8 8 8') == '3 6'\nassert solution('9\\n1 1 8 8 8 8 8 4 4 4 4\\n1 1 8 8 8 8 8 8 8 8') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3\\n1 1 8 8 8 8 8 8 8') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == '3\\n4'\nassert solution('1\\n2\\n3\\n4') == '1\\n3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '1\\n3'\nassert solution('2\\n1\\n2\\n3') == '2\\n3'\nassert solution('2\\n1\\n2\\n2') == '2\\n2'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '2 4'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 8'\nassert solution('10\\n1 1 8 8 8 4 4 4 4') == '3 6'\nassert solution('10\\n4 3 7 1 4 3 3') == '3 6'\n\n\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n1 2 4 4\n\"\"\") == \"\"\"2 4\n\"\"\"\nassert solution(\"\"\"9\n1 1 8 8 8 4 4 4 4\n\"\"\") == \"\"\"3 8\n\"\"\"\nassert solution(\"\"\"7\n4 3 7 1 4 3 3\n\"\"\") == \"\"\"3 6\n\"\"\"\nassert solution(\"\"\"11\n1 1 8 8 8 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\n\"\"\""
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1 3'\nassert solution('5\\n1 2 3 4 5') == '0 2'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3\\n1 4\\n2 4\\n1 5\\n2 3') == '3 1 2 4 5'\nassert solution('3\\n3 1\\n1 2\\n2 1\\n1 3\\n3 2\\n2 1\\n1 3\\n1 2\\n2 3\\n3 1\\n2 1\\n3 2') == '3 1 2 3 4 1 2 5 3'\nassert solution('5\\n3 3\\n1 4\\n2 4\\n1 5\\n2 3\\n1 2\\n1 3\\n1 4\\n3 2\\n2 1\\n4 1\\n2 3') == '3 1 2 4 5 2 3 1 5 3'\n\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2'\nassert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''\n2\n1 3\n2 4\n''') == '1 3'\nassert solution('''\n1\n1 3\n2 4\n''') == '1 3'\nassert solution('''\n1\n2 3\n3 1\n''') == '1 3'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5 '\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''5\n5\n1 4\n2 4\n1 5\n2 3''') == '3 1 2 4 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''3\n2 3\n1 2\n1 3\n''') == '3 1 2'\nassert solution('''3\n1 2\n2 3\n1 3\n''') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5\\n5\\n5\\n5') == '3 2 4 1 5'\nassert solution('5\\n4\\n3\\n2\\n1') == '3 2 4 1 5'\nassert solution('5\\n5\\n4\\n4\\n5') == '3 2 4 1 5'\nassert solution('5\\n4\\n5\\n5\\n5') == '3 2 4 1 5'\nassert solution('5\\n5\\n5\\n5\\n5') == '3 2 4 1 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''10\n10 9\n11 7\n1 5\n2 4\n3 3\n4 2\n5 1\n6 6\n7 7\n8 8\n9 9\n''') == '5 1 6 2 3 4 7 8 9 10'\nassert solution('''5\n1 1\n2 3\n3 4\n4 5\n5 5\n''') == '1 1 5 2 3 4'\nassert solution('''4\n1 2\n3 3\n4 4\n5 5\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1\\n1 2\\n2 3') == '3 1 2'\nassert solution('3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n3 1\\n1 4\\n2 4\\n1 5\\n2 3') == '3 1 2'\nassert solution('3\\n3 1\\n1 2\\n2 3') == '3 1 2'\nassert solution('3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n1\\n2\\n') == '2'\nassert solution('3\\n2\\n1\\n') == '2'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('7\\n1 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000\\n') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\") == \"1\"\nassert solution(\"10\\n
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"\nassert solution(\"1000\\n
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1\\n') == '1'\nassert solution('2 1\\n1\\n') == '2'\nassert solution('2 2\\n1\\n') == '2'\nassert solution('3 1\\n1\\n') == '3'\nassert solution('3 2\\n1\\n') == '3'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('6') == '1'\nassert solution('10') == '9'\nassert solution('11') == '2'\nassert solution('1000') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('10\\n988 988 988 988 988 988 988 988 988 988 988\\n') == '1'\nassert solution('10\\n1 988 988 988 988 988 988 988 988 988 988\\n') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"6\\n
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\"\n    ) == \"5\"\n\nassert solution(\n\"\"\"6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\"\n    ) == \"-1\"\n\nassert solution(\n\"\"\"9\n200 50 5 2\n200 50 4 3\n200 50 2 1\n200 50 5 1\n200 50 6 1\n200 50 7 1\n200 50 8 1\n200 50 9 1\n200 50 10 1\"\"\"\n    ) == \"5\"\n\nassert solution(\n\"\"\"9\n200 50 5 2\n200 50 4 3\n200 50 2 1\n200 50 5 1\n200 50 6 1\n200 50 7 1\n200 50 8 1\n200 50 9 1\n200 50 10 1\"\"\"\n    ) == \"-1\"\n\nassert solution(\n\"\"\"9\n200 50 5 2\n200 50 4 3\n200 50 2 1\n200 50 5 1\n200 50 6 1\n200 50 7 1\n200 50 8 1\n200 50 9 1\n200 50 10 1\"\"\"\n    ) == \"5\""
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4'\nassert solution('2\\n1\\n10 1\\n10 1\\n10 1\\n10 1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '0'\nassert solution('16 7 5 2') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\"\"\") == \"\"\"\n4\n-1\n5\n2\n0\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\"\"\") == \"\"\"\n4\n-1\n5\n2\n0\n1\n\"\"\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1\\n1') == '-1'\nassert solution('4\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''5\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\nassert solution('''15\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '0'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '5'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '0'\nassert solution('16 7 5 2') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '0'\nassert solution('16 7 5 2') == '1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ac?b?c') == '24'\nassert solution('cccbbbaaa') == '0'\nassert solution('???????') == '2835'\nassert solution('a???c') == '46'"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nac?b?c''') == '24'\nassert solution('''7\n???????''') == '2835'\nassert solution('''9\ncccbbbaaa''') == '0'\nassert solution('''5\na???c''') == '46'"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"???????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\nassert solution(\"acbbbcc\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"a???c\") == \"0\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"cccbbbaaa\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"24\"\nassert solution(\"???a?b?c\") == \"2835\"\nassert solution(\"a??????c\") == \"0\"\nassert solution(\"????????\") == \"46\"\nassert solution(\"??abc???\") == \"3\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ac?b?c') == '24'\nassert solution('???????') == '2835'\nassert solution('cccbbbaaa') == '0'\nassert solution('a???c') == '46'\nassert solution('aac') == '1'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\nassert solution('abc?c') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abc''') == '0'\nassert solution('''ac?b?c''') == '24'\nassert solution('''cccbbbaaa''') == '0'\nassert solution('''a???c''') == '46'\nassert solution('''???????''') == '2835'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ac?b?c') == '24'\nassert solution('aaaaa') == '1'\nassert solution('aaaaa?') == '0'\nassert solution('a?b?c') == '0'\nassert solution('a?b?c?d?') == '0'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '20'\n\"\"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncost = 0\n\nfor i in range(m):\n    x, y, w = map(int, input().split())\n    cost += w * max(a[x - 1], a[y - 1])\n    a[x - 1] += w\n    a[y - 1] += w\n\nprint(cost)\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import deque, defaultdict\nfrom heapq import heappush, heappop\n\nclass Graph:\n    def __init__(self, n: int, m: int):\n        self.n = n\n        self.m = m\n        self.e = []\n        self.es = defaultdict(list)\n        self.ans = -1\n        self.s = None\n        self.vis = [0] * self.n\n\n    def connect(self, u: int, v: int, w: int):\n        self.es[u].append((v, w))\n\n    def build(self):\n        for _ in range(self.m):\n            x, y, w = map(int, stdin.readline().split())\n            self.connect(x - 1, y - 1, w)\n\n    def dfs(self, u: int, d: int):\n        self.vis[u] = d\n        for v, w in self.es[u]:\n            if self.vis[v] == 0:\n                self.dfs(v, d + w)\n        if d > self.ans:\n            self.ans = d\n        if self.vis[u] == d:\n            if d == self.s:\n                return True\n            else:\n                return False\n\n    def find(self):\n        self.s = 0\n        for i in range(self.n):\n            if self.vis[i] == 0:\n                self.s = i\n                if self.dfs(i, 0):\n                    return True\n        return False\n\n    def solve(self):\n        if not self.find():\n            return -1\n        return self.ans\n\ng = Graph(int(stdin.readline()), int(stdin.readline()))\ng.build()\nstdout.write(str(g.solve()))\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n'''\n'''"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 2\n1 3 3\n2 3 5\n2 1 1'''\n    ) == '5'\n\nassert solution(\n'''4 0\n1 3 3 7\n\n'''\n    ) == '16'\n\nassert solution(\n'''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\n'''\n    ) == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 0\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\nassert solution(\"1 2 3 4 5 7\") == \"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n\n\n\"\"\"\n\n\"\"\"\nLazy evaluation: The main idea is that you create a graph by setting $a_i$ to the minimum coins needed to make a path from $i$ to $n$.\n\nThen, you set the $a_i$ for $i$ to $a_i = min(a_i, a_i + a_j) + w$ with the following constraints:\n\n    1. all $a_i$ are positive\n    2. for each edge $i \\ne j$, $i \\ne j$\n    3. if we already know $a_j$ of vertex $j$, then we can replace $a_i$ with it.\n\n\"\"\"\n\"\"\"\nsolution:"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 1 1''') == '45'\nassert solution('''0 9\n0 5''') == '-1'\nassert solution('''0 9\n1 5''') == '45'\nassert solution('''10 1 1''') == '14'\nassert solution('''3 7\n8 10\n8 10\n3 4\n8 1\n1 2''') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '45'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '45'\nassert solution('''10 1 1''') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''10 1 1\n0 9\n0 5\n''') == '-1'\n\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '45'\n\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '-1'\n\nassert solution(\n'''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n\nassert solution(\n'''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '-1'"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 1 1\\n0 9\\n0 5') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n1 10\\n3 4\\n8 1') == '-1'"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n\"\"\"\n\na, n, m = [int(x) for x in stdin.split()]\ng = [[False for _ in range(a + 1)] for _ in range(n + 1)]\n\nfor i in range(n):\n    l, r = [int(x) for x in stdin.split()]\n    g[i + 1][l] = True\n    g[i + 1][r] = True\n\nfor i in range(m):\n    x, p = [int(x) for x in stdin.split()]\n    g[0][x] = True"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 1 1''') == '45'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '45'\nassert solution('''10 2 4''') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 5\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'No'\nassert solution('2 2 2\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 4') == 'No'\nassert solution('5 7 3') == 'Yes'\nassert solution('3 3 3') == 'No'\nassert solution('4 6 8') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 3') == 'No'\nassert solution('5 7 2') == 'Yes'\nassert solution('5 7 1') == 'No'\nassert solution('5 7 9') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 5\\n') == 'Yes'\nassert solution('5 4 3\\n') == 'No'\nassert solution('5 6 4\\n') == 'No'\nassert solution('5 6 5\\n') == 'No'\nassert solution('5 7 6\\n') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 1 5') == 'No'\nassert solution('5 7 8') == 'Yes'\nassert solution('5 7 6') == 'No'\nassert solution('5 7 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"5 7 5\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 2 4\") == \"Yes\"\nassert solution(\"5 7 5\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 3 3\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 3') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 1') == 'Yes'\nassert solution('5 8 1') == 'No'\nassert solution('5 5 1') == 'No'\nassert solution('1 1 1') == 'No'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''3\n12 3\n1000 2000 3''') == '1'\nassert solution('''3\n12 2\n1000 2000 3''') == '2'\nassert solution('''3\n12 1\n1000 2000 3''') == '2'\nassert solution('''3\n12 0\n1000 2000 3''') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('1\\n12 5\\n1000 2000\\n') == '0'\nassert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"4\\n12 5\\n1000 2000\\n1000000\\n1000 2000\") == \"3\"\nassert solution(\"3\\n12 5\\n1000 2000\\n1000000\\n1000 2000\\n1000000\") == \"2\"\nassert solution(\"1\\n12 5\\n1000 2000\\n1000000\\n1000 2000\") == \"0\"\nassert solution(\"2\\n1005\\n1000 2000\\n1000000\\n1000 2000\") == \"2\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\nSample Input\n\n2\n5\n500 500\n\nSample Output\n\n1\n\"\"\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2\\n10 5 2 10\\n6 1 1 6\") == \"2\"\nassert solution(\"10\\n3 1 1 3 1 1 1 1\\n3 3 1 3 1 1 1 1\\n1 1 1 1 1 1 1 1\\n2 2 1 1 2 1 1 1\\n1 1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"1\\n2 1\\n1\") == \"0\"\nassert solution(\"2\\n1 1\\n1\") == \"0\"\nassert solution(\"2\\n2 1\\n1\") == \"0\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\"\nassert solution(\"3\\n12 5\\n1000 2000\\n\") == \"2\"\nassert solution(\"3\\n12 5\\n1000 2000\\n\") == \"2\"\nassert solution(\"4\\n12 5\\n1000 2000\\n\") == \"3\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n2\\n') == '2'\nassert solution('2\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('5\\n8\\n9\\n10\\n15\\n') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2\\n12 5\\n1000 2000\\n') == '1'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\nassert stdin == \"2\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == \"1\"\nassert solution('1 2') == \"1\"\nassert solution('1 2') == \"1\"\nassert solution('1 1') == \"1\"\nassert solution('1 1') == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 2') == '0'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '2'\nassert solution('2 4') == '1'\nassert solution('3 3') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"6 3\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 4') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''ACACTACG\n3 7\n2 3\n1 8'''\n    ) == '2\\n0\\n3'\n\nassert solution(\n'''ATCODER\n2 6\n1 8\n1 10\n3 4\n2 3'''\n    ) == '0\\n3\\n3'\n\nassert solution(\n'''AGACGT\n10 10\n1 5\n1 8\n2 5\n1 7\n1 9\n3 7\n2 8\n3 9\n3 10'''\n    ) == '2\\n0\\n3'"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ACACTACG') == 'ACACTACG'\nassert solution('ACACTACGT') == 'ACACTACG'\nassert solution
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n'''\nimport sys\nsys.stdin = open(sys.argv[1], 'r')"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('A') == '1\\n0\\n0'\nassert solution('G') == '1\\n1\\n1'\nassert solution('ACG') == '2\\n1\\n1'\nassert solution('AG') == '2\\n0\\n1'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '''2\n0\n3'''\n\nassert solution('''A\n1 1\n''') == '''0\n'''\n\nassert solution('''A\n1 1\n2 2\n''') == '''1\n1'''\n\nassert solution('''AAAAAA\n1 1\n1 2\n2 3\n''') == '''3\n2\n0\n'''\n\nassert solution('''A\n1 1\n1 2\n2 3\n2 1\n1 4\n1 1\n1 2\n2 3\n2 1\n''') == '''2\n2\n2\n1\n0\n2\n1\n0\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('ATCODER') == '2\\n0\\n0'\nassert solution('TCGTTGT') == '1\\n1\\n3'\nassert solution('AACAAGAT') == '2\\n1\\n1'\nassert solution('AACCGGT') == '2\\n1\\n0'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 4') == '220'\nassert solution('5 5') == '240'\nassert solution('5 6') == '250'\nassert solution('5 7') == '260'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '210'\nassert solution('3 5') == '18'\nassert solution('3 2') == '5'\nassert solution('1 0') == '0'\nassert solution('2 4') == '6'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '210'\nassert solution('4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '56'\nassert solution('8 10 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1720'\nassert solution('3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1460'\nassert solution('5 4 3 2 1 0') == '5'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 1') == '2'\nassert solution('2 4\\n1 2 1 1') == '3'\nassert solution('5 3\\n1 2 3 4 5') == '6'\nassert solution('5 5\\n1 2 3 4 5 1') == '5'\nassert solution('5 10\\n1 2 3 4 5 1 1 2 3 4 5') == '12'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"10 5\\n80 70 90 90 80 60 70 90 60\") == \"120\"\nassert solution(\"2 1\\n1 1\") == \"1\"\nassert solution(\"3 2\\n10 20 30\") == \"80\"\nassert solution(\"3 3\\n10 20 30\") == \"100\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[stdin.find('\\n')+1:]\n\"\"\"\n\nn_k = list(map(int, stdin.split()))\nprices = list(map(int, stdin.split()))\nmin_total = prices[0]\nfor i in range(1, n_k[1]):\n    min_total += min(prices[i], prices[n_k[0] - i])\n\nprint(min_total)\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"60\"\nassert solution(\"3 4\") == \"41\"\nassert solution(\"6 4\") == \"101\"\nassert solution(\"5 2\") == \"46\"\nassert solution(\"8 8\") == \"1666\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"5 2\") == \"120\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 5\") == \"200\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 5\\n50 100 80 120 80') == '320'\nassert solution('4 1\\n8 8 8 8') == '8'\nassert solution('3 4\\n1 1 1 1') == '2'\nassert solution('10 10\\n
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"70\"\nassert solution(\"5 3\") == \"70\"\nassert solution(\"3 4\") == \"70\"\nassert solution(\"3 5\") == \"60\"\nassert solution(\"5 4\") == \"60\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 2 2') == '2'\nassert solution('1 1001 1') == '1001'\nassert solution('10 10 1') == '1010'\nassert solution('3 10 9') == '10'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 3') == '5'\nassert solution('1 1 1') == '1'\nassert solution('2 2 1') == '1'\nassert solution('3 4 1') == '5'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\nimport sys\nfrom math import gcd\n\nP, Q, R = [int(x) for x in stdin.split()]\n\nP, Q, R = min(P, Q, R), gcd(P, Q, R), max(P, Q, R)\n\nprint(P * Q * R)\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 1') == '4'\nassert solution('1 3 4') == '4'\nassert solution('2 3 4') == '4'\nassert solution('1 2 2') == '3'\nassert solution('1 4 4') == '3'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 1') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 2 2') == '4'\nassert solution('1 2 1') == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('10 4 7') == '13'\nassert solution('10 1 1') == '11'\nassert solution('10 1 1') == '11'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"1 2 1 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2 1 2 1\") == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 4\") == \"7\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 4\") == \"7\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 1\") == \"10\"\nassert solution(\"3 9\") == \"10\"\nassert solution(\"5 9\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('7 10') == '0'\nassert solution('4 7') == '10'\nassert solution('7 10') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3, 5) == '0'\nassert solution(2, 1) == '10'\nassert solution(5, 3) == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == \"0\""
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('10 9') == '10'\nassert solution('20 19') == '20'\nassert solution('30 17') == '30'\nassert solution('10 8') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 10') == '0'\nassert solution('2 10') == '0'\nassert solution('5 3') == '0'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"5 9\") == \"10\"\nassert solution(\"5 9\") == \"10\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5') == \"0\"\nassert solution('5 3') == \"10\"\nassert solution('3 10') == \"0\"\nassert solution('10 3') == \"10\"\nprint(\"\\n\\nPassed all test cases!\\n\")\n\nprint(solution('0 0'))\nprint(solution('3 0'))\nprint(solution('1 0'))\nprint(solution('4 3'))\nprint(solution('1 0'))\nprint(solution('5 9'))\nprint(solution('0 0'))\nprint(solution('7 0'))\nprint(solution('9 1'))\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4''') == '1'\nassert solution('''6 3''') == '1'\nassert solution('''10 10''') == '1'\nassert solution('''9 9''') == '0'\nassert solution('''1 5''') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(7,4) == \"1\"\nassert solution(2,3) == \"0\"\nassert solution(1234,5678) == \"0\"\nassert solution(7,4) == \"1\"\nassert solution(8,9) == \"0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4') == '1'\nassert solution('7 7') == '1'\nassert solution('7 7') == '1'\nassert solution('7 1000000') == '1'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1, 1) == 1\nassert solution(1, 10) == 1\nassert solution(2, 2) == 1\nassert solution(10, 100) == 1\nassert solution(100, 0) == 1\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 4') == '1'\nassert solution('-4 -2') == '-1'\nassert solution('10 10') == '0'\nassert solution('1 1') == '0'\nassert solution('1 10') == '9'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4') == '1'\nassert solution('12 6') == '1'\nassert solution('12 8') == '2'\nassert solution('12 5') == '2'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(input()) == \"1\"\n\nassert solution(input()) == \"1\"\n\nassert solution(input()) == \"1\"\n\nassert solution(input()) == \"1\""
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nprint(solution(stdin))\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 6 7') == 'bust'\nassert solution('1 2 3') == 'win'\nassert solution('3 2 1') == 'bust'\nassert solution('3 3 3') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'win'\n\nassert solution('5 7 9') == 'win'\nassert solution('5 9 7') == 'bust'\nassert solution('5 9 9') == 'win'\nassert solution('10 9 10') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('3 7 9') == 'bust'\nassert solution('3 7 8') == 'win'\nassert solution('10 9 8') == 'win'\nassert solution('1 2 3') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5, 7, 9) == \"win\"\nassert solution(5, 7, 9) == \"win\"\nassert solution(5, 7, 9) == \"bust\"\nassert solution(5, 7, 9) == \"bust\"\nassert solution(5, 7, 9) == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'bust'\n\n'''"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 9 7') == 'bust'\nprint('all tests passed')\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"5 7 9\") == \"bust\"\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '6'\nassert solution('''2''') == '3'\nassert solution('''10''') == '6'\nassert solution('''100''') == '108'\nassert solution('''1000''') == '3128'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3') == '3'\nassert solution('0') == '1'\nassert solution('9') == '9'\nassert solution('6') == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('6') == '6'\nassert solution('9') == '18'\nassert solution('13') == '42'\nassert solution('18') == '72'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '30'\nassert solution('10^9') == '30'\nassert solution('1') == '1'\nassert solution('10^10') == '30'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3''') == '6'\nassert solution(\n'''1''') == '1'\nassert solution(\n'''2''') == '2'\nassert solution(\n'''4''') == '4'\nassert solution(\n'''10''') == '4'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('15') == '30'\nassert solution('9') == '9'\nassert solution('20') == '12'\nassert solution('30') == '60'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('18') == '36'\nassert solution('72') == '108'\nassert solution('999') == '369'\nassert solution('100000000000000') == '1'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '2'\nassert solution('7 3') == '3'\nassert solution('5 10') == '4'\nassert solution('6 10') == '5'\nassert solution('10 6') == '6'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\n-----Best Practice-----\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"10 5\") == \"4\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == \"2\"\nassert solution('3 4') == \"2\"\nassert solution('5 6') == \"3\"\nassert solution('5 7') == \"3\"\nassert solution('5 8') == \"4\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 3') == '2'\nassert solution('6 4') == '2'\nassert solution('8 6') == '2'\nassert solution('9 3') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2''') == '2'\nassert solution('''6 2''') == '2'\nassert solution('''6 1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''5 2''') == '3'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"8\") == \"bon\"\nassert solution(\"123\") == \"hon\"\nassert solution(\"9\") == \"nohon\"\nassert solution(\"999\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\nassert solution('125') == 'hon'\nassert solution('126') == 'bon'\nassert solution('789') == 'pon'\nassert solution('1000') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\"\n\nassert solution(\"300\") == \"hon\"\n\nassert solution(\"500\") == \"hon\"\n\nassert solution(\"1000\") == \"hon\"\n\nassert solution(\"2000\") == \"hon\""
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(16) == \"pon\"\nassert solution(8) == \"hon\"\nassert solution(845) == \"hon\"\nassert solution(84598) == \"hon\"\nassert solution(9094) == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'hon'\nassert solution('2') == 'pon'\nassert solution('3') == 'bon'\nassert solution('4') == 'pon'\nassert solution('5') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"1\") == \"hon\"\nassert solution(\"123456789\") == \"pon\"\nassert solution(\"100\") == \"hon\"\nassert solution(\"1111\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"5\") == \"bon\"\nassert solution(\"20\") == \"hon\"\nassert solution(\"56\") == \"bon\"\nassert solution(\"100\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6') == 'pon'\nassert solution('13') == 'hon'\nassert solution('24') == 'hon'\nassert solution('98') == 'hon'\nassert solution('999') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"17\") == \"hon\"\nassert solution(\"18\") == \"hon\"\nassert solution(\"19\") == \"hon\"\nassert solution(\"20\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(123) == 'hon'\nassert solution(124) == 'bon'\nassert solution(12) == 'pon'\nassert solution(15) == 'bon'\nassert solution(16) == 'pon'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1\\n'\nassert solution('2\\n2') == '4\\n'\nassert solution('3\\n3') == '12\\n'\nassert solution('4\\n4') == '16\\n'\nassert solution('5\\n5') == '25\\n'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n2 1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n3') == '0'\nassert solution('2\\n1 1') == '0'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 2') == '2'\nassert solution('4\\n1 2 3 4') == '10'\nassert solution('1\\n10') == '10'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n3 2') == '2'\nassert solution('2\\n10 2') == '10'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    3 1 2\n''') == '11'\nassert solution('''\n    4\n    2 1 4 3\n''') == '6'\nassert solution('''\n    10\n    8 2 4 8 8 6 4 2 8 2\n''') == '304'\nassert solution('''\n    10\n    1 1 1 1 1 1 1 1 1\n''') == '45'\nassert solution('''\n    10\n    8 2 4 8 8 6 4 2 8 2\n''') == '304'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '1'\nassert solution('3 1 2') == '11'\nassert solution('3 2 1') == '11'\nassert solution('3 3 1') == '22'\nassert solution('3 4 1') == '34'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 11"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n3 1 1') == '0'\nassert solution('5\\n1 3 2 2 1') == '1'\nassert solution('5\\n3 3 2 1 1') == '4'\nassert solution('5\\n3 3 2 2 1') == '7'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '11'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\") == \"2\"\nassert solution(\"3\\n1\\n4\\n3\") == \"4\"\nassert solution(\"3\\n1\\n4\\n2\\n5\\n6\\n7\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"3\\n4\\n5\\n6\\n7\") == \"7\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\n\nassert solution('''4\n1\n4\n3\n2''') == '4\\n3\\n4\\n2'\n\nassert solution('''10\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25''') == '25\\n23\\n21\\n19\\n17\\n15\\n13\\n11\\n9'\n\nassert solution('''50\n5\n9\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50''') == '48\\n46\\n44\\n42\\n40\\n38\\n36\\n34\\n32\\n30\\n28\\n26\\n24\\n22\\n20'\n\nassert solution('''100\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25''') == '25\\n23\\n21\\n19\\n17\\n15\\n13\\n11\\n9\\n5'"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1\n4\n3\n''') == '4\\n3\\n4'\nassert solution('''\n5\n1\n4\n3\n2\n5\n''') == '4\\n3\\n5'\nassert solution('''\n4\n5\n4\n3\n2\n1\n''') == '5\\n4\\n4\\n5'\nassert solution('''\n10\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n''') == '7\\n5\\n5\\n7'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n1\n4\n3\n'''\n) == '4\\n3\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\n1\n4\n3\n\"\"\"\n) == \"4\\n3\\n4\"\n\nassert solution(\n\"\"\"\n4\n1\n4\n3\n\"\"\"\n) == \"4\\n3\\n4\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n4\n3''') == '4\\n3\\n4'\nassert solution('''2\n1\n4''') == '4\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''4\n1\n4\n3\n2''') == '4\\n4\\n4\\n4'\nassert solution('''5\n1\n4\n3\n2\n1''') == '4\\n4\\n4\\n4\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n1\n4\n3\n''') == '4\\n3\\n4'\nassert solution(\n'''\n5\n4\n1\n1\n3\n''') == '4\\n3\\n4'\nassert solution(\n'''\n6\n4\n1\n1\n3\n''') == '4\\n3\\n4'\nassert solution(\n'''\n3\n1\n2\n3\n''') == '3\\n2\\n3'\nassert solution(\n'''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '9\\n8\\n9'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"3\\n3\\n4\"\nassert solution(\"2\\n1\\n2\\n\") == \"2\\n2\\n2\"\nassert solution(\"1\\n1\\n\") == \"1\\n1\\n1\"\nassert solution(\"2\\n1\\n\") == \"1\\n2\\n1\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\") == \"4\\n3\\n4\"\nassert solution(\"5\\n1\\n5\\n2\\n5\\n3\\n5\") == \"5\\n5\\n5\\n5\\n5\"\nassert solution(\"3\\n1\\n4\") == \"4\\n3\\n4\"\nassert solution(\"5\\n1\\n5\\n2\\n5\\n3\\n5\") == \"5\\n5\\n5\\n5\\n5\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 3\") == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"3 4\") == \"4\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"5 10\") == \"20\"\nassert solution(\"10 2\") == \"20\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3''') == \"9\"\nassert solution('''3 3''') == \"3\"\nassert solution('''2 3''') == \"1\"\nassert solution('''10 5''') == \"10\"\nassert solution('''3 3''') == \"3\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('10 5') == '20'\nassert solution('10 5') == '20'\nassert solution('7 6') == '12'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 22') == '27'\nassert solution('10 22') == '27'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 9\") == \"17\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"5 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '9'\nassert solution('9 8') == '18'\nassert solution('9 7') == '17'\nassert solution('7 9') == '15'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 5') == '12'\nassert solution('5 4') == '7'\nassert solution('4 5') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 3\n-30 -10 10 20 50'''\n) == '40'\n\nassert solution(\n'''5 1\n-1000 -999 999'''\n) == '1'\n\nassert solution(\n'''100 100'''\n) == '100'\n\nassert solution(\n'''3 2\n1 3'''\n) == '2'\n\nassert solution(\n'''3 1\n1 1 1'''\n) == '2'"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3''') == '40'\nassert solution('''-30 -10 10 20 50''') == '40'\nassert solution('''-30 -10 10 -20 50''') == '80'\nassert solution('''5 10''') == '5'\nassert solution('''-30 -10 10 -20 50''') == '30'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('2 5 1 1 2') == '2'\nassert solution('2 3 1 1 2') == '2'\nassert solution('2 4 1 1 2') == '3'\nassert solution('2 4 1 1 2') == '3'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 5\\n-30 -10 10 20 50\\n\") == \"40\"\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\n\"\"\"\n\nN, K = map(int, stdin.split())\ncandles = [int(x) for x in stdin.split()]\n\ncandles.sort()"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-30 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\nassert solution('-30 -10 10 20 50') == '40'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 1') == '0'\nassert solution('3 4') == '0'\nassert solution('10 1') == '0'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '40'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 1') == '1'\nassert solution('10 15') == '2'\nassert solution('12 15') == '3'\nassert solution('1000 1000') == '4995'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'\nassert solution('5 10') == '1'\nassert solution('5 9') == '0'\nassert solution('5 9') == '0'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 13') == '2'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 13') == \"2\"\nassert solution('10 15') == \"2\"\nassert solution('5 15') == \"2\"\nassert solution('10 1') == \"1\"\nassert solution('10 100') == \"0\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1 1000\") == \"1\"\nassert solution(\"998 99\") == \"1\"\nassert solution(\"998 998\") == \"1\"\nassert solution(\"1000 1000\") == \"1\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 13') == '2'\nassert solution('5 2') == '2'\nassert solution('7 3') == '2'\nassert solution('500000 500000') == '500000'\nassert solution('7 5') == '7'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 13') == '2'\nassert solution('3 2') == '3'\nassert solution('2 5') == '3'\nassert solution('5 100') == '1'\nassert solution('5 99') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"8 13\") == \"2\"\nassert solution(\"13 16\") == \"1\"\nassert solution(\"23 18\") == \"2\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 13') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''1 2''') == '2'\nassert solution('''3 4''') == '2'\nassert solution('''1 2 3''') == '1'\nassert solution('''4 9''') == '4'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n\nh, a = map(int, stdin.split())\nprint(h // a)\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\nprint(solution(input(\"\")))\n\n\"\"\""
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 3') == '1'\nassert solution('10 4') == '3'\nassert solution('1000 100') == '999'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nprint(solution(stdin))\n'''"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4') == '3'\n'''\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n\nfrom collections import Counter\n\nH, A = map(int, stdin.readline().split())"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 4') == '3'\n\n'''\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 4') == '3'\nassert solution('100 100') == '0'\nassert solution('20 21') == '0'\nassert solution('5 1') == '3'\nassert solution('5 11') == '2'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4') == '3'\nassert solution('15 2') == '2'\nassert solution('4 8') == '3'\nassert solution('15 2') == '2'\nassert solution('1 10') == '1'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"50\"\n\"\"\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"50\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0, 75, 25, 100) == \"50\"\nassert solution(0, 75, 25, 110) == \"50\"\nassert solution(0, 75, 25, 120) == \"50\"\nassert solution(0, 75, 25, 130) == \"50\"\nassert solution(0, 75, 25, 140) == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('2 3 5 7') == '4'\nassert solution('2 3 4 5') == '7'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 75 25 100''') == '50'\nassert solution('0 10 10 1000') == '1000'\nassert solution('10 10 10 1000') == '0'\nassert solution('1000 1000 1000 1000') == '1000'\nassert solution('10000 1000000 1000') == '1000000'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('1 2 3 4') == '6'\nassert solution('2 3 4 5') == '9'\nassert solution('4 5 6 7 8') == '15'\nassert solution('4 5 6 7 8 9') == '22'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''105\n''') == '1'\nassert solution('''\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('2') == 0\nassert solution('1') == 0\nassert solution('3') == 0\nassert solution('6') == 0\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('105') == '1'\nassert solution('10000000000') == '0'\nassert solution('101') == '0'\nassert solution('1010') == '1'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"\"\nassert solution('3') == \"\"\nassert solution('4') == \"\"\nassert solution('5') == \"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('26') == '0'\nassert solution('105') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"4\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == 1\nassert solution(\"1 1\") == 0\nassert solution(\"7 2\") == 1\nassert solution(\"2 2\") == 0\nassert solution(\"10 3\") == 1\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 1\n\"\"\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3\\n1 2 3 4 5 6 7') == '1'\nassert solution('7 3\\n2 3 4 5 6 7') == '0'\nassert solution('7 3\\n3 3 3 3 3 3 3') == '0'\nassert solution('7 3\\n4 3 3 3 3 3') == '1'\nassert solution('7 3\\n5 3 3 3 3') == '2'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"9 19\") == \"6\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"45 19\") == \"30\"\nassert solution(\"30 11\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nN, K = [int(x) for x in stdin.split()]\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3') == '1'\nassert solution('12 3') == '3'\nassert solution('1 2') == '0'\nassert solution('1 1') == '0'\nassert solution('1000 1000') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == 1\nassert solution('7 3') == 1\nassert solution('7 3') == 1\nassert solution('3 10') == 1\nassert solution('7 3') == 1\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3''') == '1'\nassert solution('''5 2''') == '3'\nassert solution('''7 4''') == '1'\nassert solution('''5 4''') == '3'\nassert solution('''1 1''') == '0'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1111\") == \"11\"\nassert solution(\"100\") == \"10\"\nassert solution(\"11111\") == \"101\"\nassert solution(\"100100\") == \"100\"\nassert solution(\"1011\") == \"11\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"132\") == \"132\"\nassert solution(\"153\") == \"153\"\nassert solution(\"174\") == \"174\"\nassert solution(\"189\") == \"189\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"111\"\nassert solution(\"11\") == \"111\"\nassert solution(\"1111\") == \"111\"\nassert solution(\"111111\") == \"111\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('987654321') == '987654321'\nassert solution('9876543211234567') == '987654321'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('123') == None\nassert solution('12345') == '12345'\nassert solution('123456789') == '123456789'\nassert solution('101') == '101'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100''') == '100'\nassert solution('''200''') == '200'\nassert solution('''888''') == '888'\nassert solution('''9999''') == '999'\nassert solution('''0''') == '0'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '111'"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\nassert solution('101') == '101'\nassert solution('111') == '111'\nassert solution('110') == '110'\nassert solution('111') == '111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('abc') == 'abc'\nassert solution('abc123') == 'abc123'\nassert solution('abc12345') == 'abc12345'\nassert solution('abc1234567') == 'abc1234567'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('3 2 1') == '2'\nassert solution('100 100 100') == '99'\nassert solution('1 3 2') == '2'\nassert solution('1 6 3') == '5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 5 3') == '8'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1 3') == '3'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '1'\nassert solution('1 2 1') == '0'\nassert solution('1 3 1') == '1'\nassert solution('1 2 1 2 1') == '2'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 10 5') == '5'\nassert solution('1 10 2') == '3'\nassert solution('1 10 -3') == '-5'\nassert solution('1 10 -4') == '-9'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 2 1') == '2'\nassert solution('2 4 1') == '3'\nassert solution('2 4 1') == '3'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"-1 -2 -3\") == \"-6\"\nassert solution(\"-1 -2 -3 -4\") == \"-8\"\nassert solution(\"-100 -2 -3 -4\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"10 8 7\") == \"4\"\nassert solution(\"4 3 2\") == \"3\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 6 6') == '9'\nassert solution('1 6 6 3') == '9'\nassert solution('1 6 6 6') == '15'\nassert solution('1 2 3') == '5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 6 3') == '5'\nassert solution('1 1 2') == '2'\nassert solution('1 2 2') == '2'\nassert solution('1 3 2') == '3'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 4 6\") == \"6\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"10 3 4\") == \"10\"\nassert solution(\"1 10 2\") == \"9\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[2:-1]\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == 5\nassert solution('8') == 5\nassert solution('8') == 5\nassert solution('8') == 5\nassert solution('8') == 5\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8''') == '5'\nassert solution('''8''') == '5'\nassert solution('''4''') == '5'\nassert solution('''9''') == '5'\nassert solution('''10''') == '6'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(8) == \"5\"\nassert solution(4) == \"2\"\nassert solution(2) == \"1\"\nassert solution(1) == \"1\"\nassert solution(10) == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8') == '5'\nassert solution('20') == '11'\nassert solution('41') == '18'\nassert solution('48') == '13'\nassert solution('59') == '14'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '5'\nassert solution('2') == '5'\nassert solution('1') == '5'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"9 10 10 9\") == \"No\"\nassert solution(\"9 10 9 9\") == \"No\"\nassert solution(\"9 9 9 9\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('10 9 10 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('5 1 2 3') == 'Yes'\nassert solution('4 7 10 4') == 'No'\nassert solution('9 9 9 9') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A 10 10 10') == 'Yes'\nassert solution('B 9 10 10') == 'No'\nassert solution('B 10 9 10') == 'Yes'\nassert solution('C 9 10 10') == 'No'\nassert solution('D 10 9 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('9 1 10 10') == 'Yes'\nassert solution('9 9 10 10') == 'Yes'\nassert solution('10 9 1 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('10 9 10 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''10\n9 8 7 6 5 4 3 2 1\n2 1 4 3 2 1 4 3 2 1''') == '8'\nassert solution('''10\n1 1 1 1 1 1 1 1 1\n1 2 1 2 1 2 1 2 1''') == '0'\nassert solution('''5\n1 1 1 1 1\n2 1 2 1 2\n3 1 3 1 3\n4 1 4 1 4\n5 1 5 1 5''') == '-1'\nassert solution('''4\n1 1 1 1\n2 1 2 1\n3 1 3 1\n4 1 4 1\n''') == '-1'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19''') == '19'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19''') == '19'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('10\\n2 3 4 5 6 7 8 9 10') == '10'\nassert solution('4\\n4 4 4 4') == '0'\nassert solution('1\\n1') == '0'\nassert solution('10\\n10') == '0'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('8\\n17 4 6 1 7 4 5 11 5 1') == '15'\nassert solution('8\\n2 1 2 3 4 5 6 7 8 9') == '10'\nassert solution('8\\n17 4 6 1 7 4 5 11 5 1') == '15'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"5\""
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n10 2\\n4 4') == '10'\nassert solution('2\\n10 2\\n6 3 4') == '8'\nassert solution('2\\n10 2\\n5 4') == '5'\nassert solution('2\\n10 2\\n5 4\\n9 9') == '10'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''10\n2 5 4\n3 4 5''') == '9'\nassert solution('''2\n10 2 5\n6 3 4''') == '9'\nassert solution('''10\n2 5 4\n0 3 2''') == '6'\nassert solution('''8\n0 2 3 4 5 6 7 8''') == '8'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\") == \"10\"\n\"\"\""
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution('''3 3\n...\n...\n...\n''') == '...\\n...\\n...\\n'\nassert solution('''2 2\n###\n###\n''') == '###\\n'\nassert solution('''1 2\n###\n''') == '###\\n'\nassert solution('''7 8\n.#.##.#\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('#.#\\n.##\\n#..#') == '.##'\nassert solution('#.##\\n###\\n#.#') == '###'\nassert solution('##..#\\n##.#\\n#.#.\\n#....') == '##..#'\nassert solution('#...#\\n#....\\n#...#') == '...##'\nassert solution('#.##\\n###\\n.#.#') == '###'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 6\\n##.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\nassert solution('4 4\\n#.#\\n.#.#\\n.#.#\\n#.#') == '###\\n###\\n###\\n'\nassert solution('2 2\\n#.\\n#.\\n#.') == '#\\n#\\n'\nassert solution('2 2\\n##.\\n#.#') == '##\\n#\\n'\nassert solution('6 6\\n#.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\n\nassert solution('''3 4\n##.#\n....\n####''') == '####'\n\nassert solution('''2 2\n##\n##''') == '##'\n\nassert solution('''10 10\n..#.#.###\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''2 2\n###\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 3\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n\") == \"###\\n###\\n##.\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n##.\\n'\nassert solution('''5 6\n##.#\n....\n##.#\n.#.#\n.##.\n''') == '...#\\n...#\\n###.\\n###.\\n'\nassert solution('''1 1\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"sample\", \"r\").read()) == \"###\\n###\\n.##\\n\"\nassert solution(open(\"sample\", \"r\").read()) == \"###\\n###\\n.##\\n\"\nassert solution(open(\"sample\", \"r\").read()) == \"###\\n###\\n.##\\n\"\nassert solution(open(\"sample\", \"r\").read()) == \"###\\n###\\n.##\\n\"\nassert solution(open(\"sample\", \"r\").read()) == \"###\\n###\\n.##\\n\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5\\n#.\\n.##\\n..#\\n.#.\\n.#.') == '###\\n###\\n.##\\n'\nassert solution('3 4\\n##.#\\n#..#\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n') == '###\\n###\\n##.\\n'\nassert solution('5 5\\n.##\\n##.\\n.#\\n.#\\n.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n') == '##.\\n##.\\n#.#\\n#.#\\n'\nassert solution('7 10\\n.##.#..\\n..##..\\n..##.#\\n.#..#.#\\n#.###.#\\n#.#.#.#\\n#..#.#.\\n#.#.#.#\\n#.#####\\n') == '###\\n###\\n###\\n###\\n###\\n'\nassert solution('7 11\\n.##.#..\\n..##..\\n..##.#\\n.#..#.#\\n#.###.#\\n#.#.#.#\\n#..#.#.\\n#.#.#.#\\n#.#####\\n#.#####\\n') == '###\\n###\\n###\\n###\\n###\\n###'\nprint('The testing is done')\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution('''4 4\n...\n...\n...\n...\n''') == '...\\n...\\n...\\n...\\n'\nassert solution('''6 6\n##.#.#\n..#..#\n##.#.#\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('5') == '12.58215383799157729'\nassert solution('100') == '523.59877559829891097'\n\nassert solution('1') == '6.28318530717958623200'\nassert solution('5') == '12.58215383799157729'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '10.8284271247461903'\nassert solution('10') == '55.77392578125'\nassert solution('100') == '688.54248046875'\nassert solution('1000') == '1182.72778320'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == '6.28318530717958623200'\nassert solution('3') == '10.41648941776647951895'\nassert solution('4') == '17.587419354838706406496'\nassert solution('5') == '23.792085341180982807459'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n\"\"\""
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '6.28318530717958623200'\nassert solution('-1') == '0.0'\nassert solution('1.23') == '1.230636699384917'\nassert solution('1.23e3') == '1.23000'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '6.28318530717958623200'"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '6.28318530717958623200'\nassert solution('2\\n') == '10.8284271247461903'\nassert solution('3\\n') == '16.493011636475'\nassert solution('4\\n') == '22.577418093854'\nassert solution('5\\n') == '28.41421356237309'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('5') == '6.28318530717958623200'\nassert solution('100') == '110.4136591803117250'\nassert solution('10') == '3.0433962264150943498'\nassert solution('10e2') == '299495918367346938780'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '10.0'\nassert solution('3') == '15.0'\nassert solution('4') == '21.0'\nassert solution('5') == '28.0'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('3') == '9.5663969702148429721411'\nassert solution('5') == '13.6087951801758567983124'\nassert solution('10') == '8.14379665272554274873047'\n\nassert abs(solution('1') - 6.28318530717958623200) < 0.01\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('ASAB') == 'No'\nassert solution('ABCD') == 'No'\nassert solution('AAAB') == 'Yes'\nassert solution('AAAA') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAA') == 'No'\nassert solution('AAAAS') == 'Yes'\nassert solution('AAASASA') == 'Yes'\nassert solution('ASASASA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aAA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAAAa\") == \"Yes\"\nassert solution(\"Aa\") == \"No\"\nassert solution(\"aASa\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('SSSA') == 'No'\nassert solution('QQQ') == 'Yes'\nassert solution('QQQQ') == 'No'\nassert solution('AA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSB') == 'No'\nassert solution('ASSS') == 'No'\nassert solution('ASAS') == 'Yes'\nassert solution('ASASD') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aAsa\") == \"No\"\nassert solution(\"aAsa1\") == \"Yes\"\nassert solution(\"AaAa\") == \"No\"\nassert solution(\"AAAS\") == \"Yes\"\nassert solution(\"ASaA\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('GGAA') == 'No'\nassert solution('ASSS') == 'No'\nassert solution('AAAA') == 'Yes'\nassert solution('ASA') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAS') == 'No'\nassert solution('AAA') == 'Yes'\nassert solution('AAS') == 'No'\nassert solution('A') == 'No'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('13 3') == '-16'\nassert solution('13 -3') == '-10'\nassert solution('0 1') == '0'\nassert solution('-1 -2') == '-3'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''-13 3''') == '-10'\nassert solution('''-13 3''') == '-10'\nassert solution('''-13 -3''') == '-16'\nassert solution('''-13 -3''') == '-16'\nassert solution('''-13 3''') == '-10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[2]"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"3 4\") == \"-16\"\nassert solution(\"-3 4\") == \"-9\"\nassert solution(\"0 5\") == \"-5\"\nassert solution(\"1 0\") == \"-1\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('8 4') == '8'\nassert solution('-24 -12') == '-12'\nassert solution('2684 34') == '34'\nassert solution('8 3') == '8'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.read(7)) == '3'\n'''"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 5\") == \"3\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"2 3 4 5\") == \"3\"\nassert solution(\"3 4 5 6\") == \"2\"\nassert solution(\"4 5 6 7\") == \"4\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''10\n4 5 4 3 4 5 5 6 8 9''') == '4'\nassert solution('''20\n10 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '2'\nassert solution('''30\n15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '3'\nassert solution('''40\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '4'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n6 5 6 8\n''') == '3'\nassert solution(\n'''\n5\n1 2 3 4 5\n''') == '1'\nassert solution(\n'''\n2\n1 2\n''') == '1'\nassert solution(\n'''\n7\n8 3 4 6 1 8\n''') == '1'\nassert solution(\n'''\n2\n3 1\n''') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n6 5 6 8\"\"\") == \"3\"\nassert solution(\"\"\"1\n2\n3\n4\n5\"\"\") == \"1\"\nassert solution(\"\"\"3\n1\n2\n3\"\"\") == \"0\"\nassert solution(\"\"\"9\n9\n9\n9\n9\n9\n9\n9\n9\n9\"\"\") == \"8\"\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\"\"\") == \"80\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''4\n6 8 9 5''') == '3'\nassert solution('''4\n5 4 3 2''') == '1'\nassert solution('''4\n3 4 5 6''') == '0'\nassert solution('''4\n6 7 8 9''') == '0'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n6 5 6 8\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5\n50 50 50 50 50\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n10\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n3') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('2\\n1\\n2') == '2'\nassert solution('3\\n2\\n3') == '2'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"3\""
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7\n1 2 3 1 2 3 4\n\"\"\") == \"\"\"\n2\n3 4 \n\"\"\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '4'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\\n\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\\n\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\\n\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\\n\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1\\n\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"1\\n5\\n\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"1\\n5\\n\"\nassert solution(\"7\\n1 2 1 2 1 2 3 4\\n\") == \"2\\n3 4\\n\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"1 1 1 1\") == \"4\\n1 1 1 1 \"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''5\n1 2 1 2 1''') == '1'\nassert solution('''5\n1 2 1 2 1''') == '1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''7\n4\n7\n17\n28\n999999999\n999999984\n''') == '1\\n7\\n4\\n333333333\\n333333328'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"21\") == \"7\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n6') == '2'\nassert solution('1\\n7') == '1'\nassert solution('2\\n21') == '7'\nassert solution('3\\n28') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('''3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('''3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('''3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('''3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n3') == '1'\nassert solution('7\\n6') == '2'\nassert solution('7\\n21') == '7'\nassert solution('7\\n28') == '4'\nassert solution('7\\n999999999') == '333333333'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3') == '1'\nassert solution('6\\n7') == '1'\nassert solution('7\\n21') == '1'\nassert solution('28\\n999999999') == '4'\nassert solution('999999984\\n999999999') == '33333333'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n3\") == \"1\\n2\\n1\"\nassert solution(\"1\\n1\\n1\") == \"7\\n4\\n333333333\"\nassert solution(\"1\\n1\\n2\") == \"1\\n2\\n1\"\nassert solution(\"1\\n2\\n3\") == \"2\\n1\\n2\"\nassert solution(\"1\\n3\\n4\") == \"1\\n4\\n3\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"512 4\n\"\"\") == \"50\"\n\nassert solution(\n\"\"\"1000000000 9\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_mock.readlines()[0]) == \"50\"\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nprint(solution(stdin))\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\""
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nprint(solution(input()))\n\"\"\"\n\n\"\"\"\nAlternate solution:\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '''5\n2 1 1 2 3\n'''\nassert solution('''5\n3 7 5 1 5\n''') == '''2\n5 5 \n'''\nassert solution('''3\n5 1 4\n''') == '''2\n5 5 \n'''\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '''7\n1 2 2 2 2 3 2\n'''\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''7\n4 3 5 1 2 2 1'''\n) == '5', 'error'\nassert solution(\n'''5\n3 7 5 1 5\n'''\n) == '2', 'error'\nassert solution(\n'''7\n2 2 3 2 1 2 2\n'''\n) == '7', 'error'\nassert solution(\n'''3\n5 1 4\n'''\n) == '2', 'error'\nassert solution(\n'''7\n1 1 4 1 1 2 1\n'''\n) == '5', 'error'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '5\\n2 1 1 2 3'\nassert solution('''5\n3 7 5 1 5\n''') == '2\\n5 5'\nassert solution('''3\n5 1 4\n''') == '2\\n5 5'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7\\n1 2 2 2 2 3 2'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7\\n1 2 2 2 2 3 2'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\nassert solution('''4 10\n4 4\n4 1\n3 2\n5 4\n6 7\n9 8''') == '3'\nassert solution('''10 13\n6 7\n8 4\n3 1\n2 2\n5 4\n7 8\n9 10\n11 12\n13 15''') == '3'\nassert solution('''2 9\n4 9\n2 3\n1 2\n4 5\n3 7\n2 3\n3 1\n5 8''') == '0'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\\n\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\\n\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\\n\"\nassert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\\n\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n-----\n\n>>> ================================ RESTART ================================\n>>> \nIvan has $n$ songs on his phone. The size of the $i$-th song is $a_i$ bytes. Ivan also has a flash drive which can hold at most $m$ bytes in total. Initially, his flash drive is empty.\n\nIvan wants to copy all $n$ songs to the flash drive. He can compress the songs. If he compresses the $i$-th song, the size of the $i$-th song reduces from $a_i$ to $b_i$ bytes ($b_i < a_i$).\n\nIvan can compress any subset of the songs (possibly empty) and copy all the songs to his flash drive if the sum of their sizes is at most $m$.\n\nIvan wants to find the minimum number of songs he needs to compress in such a way that all his songs fit on the drive (i.e. the sum of their sizes is less than or equal to $m$).\n\nIf it is impossible to copy all the songs (even if Ivan compresses all the songs), print \"-1\". Otherwise print the minimum number of songs Ivan needs to compress.\n\nEnter the number of songs on your phone:\n4\nEnter the size of the 1st song:\n10\nEnter the size of the 2nd song:\n8\nEnter the size of the 3rd song:\n7\nEnter the size of the 4th song:\n4\nEnter the size of the 5th song:\n3\nEnter the size of the 6th song:\n1\nEnter the size of the 7th song:\n4\nEnter the size of the 8th song:\n3\nEnter the size of the 9th song:\n5\nEnter the size of the 10th song:\n2\nEnter the size of the 11th song:\n4\nEnter the size of the 12th song:\n1\nEnter the size of the 13th song:\n3\nEnter the size of the 14th song:\n2\nEnter the size of the 15th song:\n1\nEnter the size of the 16th song:\n4\nEnter the size of the 17th song:\n2\nEnter the size of the 18th song:\n2\nEnter the size of the 19th song:\n1\nEnter the size of the 20th song:\n2\nEnter the size of the 21st song:\n2\nEnter the size of the 22nd song:\n2\nEnter the size of the 23rd song:\n2\nEnter the size of the 24th song:\n2\nEnter the size of the 25th song:\n2\nEnter the size of the 26th song:\n1\nEnter the size of the 27th song:\n1\nEnter the size of the 28th song:\n1\nEnter the size of the 29th song:\n1\nEnter the size of the 30th song:\n1\nEnter the size of the 31st song:\n1\nEnter the size of the 32nd song:\n1\nEnter the size of the 33rd song:\n1\nEnter the size of the 34th song:\n1\nEnter the size of the 35th song:\n1\nEnter the size of the 36th song:\n1\nEnter the size of the 37th song:\n1\nEnter the size of the 38th song:\n1\nEnter the size of the 39th song:\n1\nEnter the size of the 40th song:\n1\nEnter the size of the 41st song:\n1\nEnter the size of the 42nd song:\n1\nEnter the size of the 43rd song:\n1\nEnter the size of the 44th song:\n1\nEnter the size of the 45th song:\n1\nEnter the size of the 46th song:\n1\nEnter the size of the 47th song:\n1\nEnter the size of the 48th song:\n1\nEnter the size of the 49th song:\n1\nEnter the size of the 50th song:\n1\nEnter the size of the 51st song:\n1\nEnter the size of the 52nd song:\n1\nEnter the size of the 53rd song:\n1\nEnter the size of the 54th song:\n1\nEnter the size of the 55th song:\n1\nEnter the size of the 56th song:\n1\nEnter the size of the 57th song:\n1\nEnter the size of the 58th song:\n1\nEnter the size of the 59th song:\n1\nEnter the size of the 60th song:\n1\nEnter the size of the 61st song:\n1\nEnter the size of the 62nd song:\n1\nEnter the size of the 63rd song:\n1\nEnter the size of the 64th song:\n1\nEnter the size of the 65th song:\n1\nEnter the size of the 66th song:\n1\nEnter the size of the 67th song:\n1\nEnter the size of the 68th song:\n1\nEnter the size of the 69th song:\n1\nEnter the size of the 70th song:\n1\nEnter the size of the 71st song:\n1\nEnter the size of the 72nd song:\n1\nEnter the size of the 73rd song:\n1\nEnter the size of the 74th song:\n1\nEnter the size of the 75th song:\n1\nEnter the size of the 76th song:\n1\nEnter the size of the 77th song:\n1\nEnter the size of the 78th song:\n1\nEnter the size of the 79th song:\n1\nEnter the size of the 80th song:\n1\nEnter the size of the 81st song:\n1\nEnter the size of the 82nd song:\n1\nEnter the size of the 83rd song:\n1\nEnter the size of the 84th song:\n1\nEnter the size of the 85th song:\n1\nEnter the size of the 86th song:\n1\nEnter the size of the 87th song:\n1\nEnter the size of the 88th song:\n1\nEnter the size of the"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 21\\n10 8\\n7 4\\n3 1\") == \"2\"\nassert solution(\"2 16\\n10 8\\n7 4\\n3 1\") == \"-1\"\nassert solution(\"3 4\\n3 1\\n2 2\") == \"2\"\nassert solution(\"3 4\\n3 1\\n2 2\") == \"-1\"\nassert solution(\"3 4\\n3 1\\n2 2\") == \"-1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('1000000000 1000000000\\n1000000000000000000 100000000000000000000\\n') == '-1'\n\n\n\n'''\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\nassert solution('abcdee') == 'abcdee'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\n\nassert solution('tttttttt') == ''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123456\") == \"123456\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"abcdef\") == \"abcdef\"\nassert solution(\"ghijkl\") == \"ghijkl\"\nassert solution(\"zzzzz\") == \"zzzzz\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"tleelte\") == \"tleelte\"\nassert solution(\"qwerty\") == \"vvvvvv\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"zxcvbnm\") == \"zxcvbnm\"\nassert solution(\"asdfgh\") == \"asdfgh\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abcdef\") == \"\"\nassert solution(\"abcdefghijklmnop\") == \"defghijklmnop\"\nassert solution(\"abcdebhgijklmnopqrsutwvyxz\") == \"bhgijklmnopqrsutwvyxz\"\nassert solution(\"abcdefghijklmnopqrsutwvxyz\") == \"ghijklmnopqrsutwvxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"jklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('tleelte\\neelte\\nleelt\\nabcde') == 'tleelte\\neelte\\nleelt\\nabcde'\nassert solution('qwerty\\nvvvvvv\\nxyzzy') == 'qwerty\\nvvvvvv\\nxyzzy'\nassert solution('fivetwelve\\ntwelvetwelve\\ntwelvetwelve') == 'fivetwelve\\ntwelvetwelve\\ntwelvetwelve'\nassert solution('hjmkgkldyjkz') == 'hjmkgkldyjkz'\nassert solution('pwwkew') == 'pwwkew'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdef') == ''\nassert solution('abcdefg') == ''\nassert solution('abcdefghi') == ''\nassert solution('abcdefghijkl') == ''\nassert solution('abcdefghijklmno') == ''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\nassert solution('aaaaaaaaaa') == 'aaaaaaaaaa'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a b c\\n1 2 3\\na b c\\n1 2 3\\na b c') == ['a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c']"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 12 6') == '12'"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"20 12 6\") == \"12\"\nassert solution(\n    \"20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\") == \"108\"\nassert solution(\n    \"42 44 46 48\") == \"5\"\nassert solution(\n    \"10 50 100\") == \"25\"\nassert solution(\n    \"10 100 10\") == \"100\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"2 4 3\") == \"3\"\nassert solution(\"20 1 2\") == \"12\"\nassert solution(\"1000 2 3\") == \"12\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 12 6''') == '12'\nassert solution('''20 22 22''') == '52'\nassert solution('''2 6 3''') == '2'\nassert solution('''2 12 3''') == '3'\nassert solution('''9 4 19''') == '27'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '12'\nassert solution('15 7 2') == '5'\nassert solution('100 10 1') == '99'\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 10 7\") == \"0\"\nassert solution(\"10 1 7\") == \"10\"\nassert solution(\"1 10 7\") == \"0\"\nassert solution(\"1 100 10\") == \"10\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 100 100') == '8'\nassert solution('2 12 2') == '4'\nassert solution('2 22 22') == '4'\nassert solution('5 2 5') == '7'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 7 2\") == \"2\"\nassert solution(\"1 5 2\") == \"1\"\nassert solution(\"20 12 6\") == \"12\"\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('11') == '3'\nassert solution('23') == '4'\nassert solution('32') == '5'\nassert solution('44') == '6'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '2'\nassert solution('2') == '1'\nassert solution('10') == '4'\nassert solution('3') == '2'\nassert solution('100') == '9'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\") == \"1\"\nassert solution(\"3\\n5\\n3\\n3\") == \"3\"\nassert solution(\"3\\n2\\n2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\") == \"1\"\nassert solution(\"3\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"4\") == \"2\"\n\"\"\"\n\n\"\"\"\nA. I'll try to be clever...\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9') == '5'\nassert solution('11') == '3'\nassert solution('100') == '23'\nassert solution('101') == '5'\nassert solution('1000') == '125'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\nassert solution('4') == '3'\nassert solution('6') == '3'\nassert solution('4') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n\n'''\n'''\nCreate a list of all the students in the school. Sort it so that the values are in ascending order.\nCreate a list of all the groups of students.\n\n'''\n'''\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '3'\nassert solution('''3''') == '2'\nassert solution('''6''') == '4'\nassert solution('''1''') == '1'\nassert solution('''7''') == '5'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n8\n''') == '2'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n10\n''') == '2'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n2\n''') == '0'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('10') == '1'\nassert solution('1') == '1'\nassert solution('10\\n3') == '1'\nassert solution('10\\n2') == '3'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[2]\n\n\"\"\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(0)) == output(0)\nassert solution(input(1)) == output(1)\nassert solution(input(2)) == output(2)\nassert solution(input(3)) == output(3)\nassert solution(input(4)) == output(4)\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3') == '3'\nassert solution('1 3') == '2'\nassert solution('100 3') == '99'\nassert solution('1000 3') == '999'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 5') == '4'\nassert solution('3 1') == '3'\nassert solution('10 10') == '5'\nassert solution('3 10') == '7'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"10 2\") == \"6\"\nassert solution(\"50 1\") == \"49\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"9 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 9\") == \"2\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == 3\nassert solution('3 4') == 4\nassert solution('3 3') == 1\nassert solution('3 1') == 2\nassert solution('1 3') == 2\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 1') == '3'\nassert solution('2 2') == '3'\nassert solution('2 3') == '4'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 3') == '3'\nassert solution('2 5') == '1'\nassert solution('1 9') == '3'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 12') == '16'\nassert solution('2 5') == '-1'\nassert solution('10 4') == '6'\nassert solution('10 9') == '1'\nassert solution('3 7') == '5'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 12') == '16'\nassert solution('5 10') == '15'\nassert solution('12 15') == '16'\nassert solution('6 6') == '0'\nassert solution('6 9') == '3'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 12''') == '16'\nassert solution('''12 3''') == '-1'\nassert solution('''1 1''') == '0'\nassert solution('''4 10''') == '0'\nassert solution('''2 3''') == '-1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('5 19') == '16'\nassert solution('4 9') == '5'\nassert solution('8 27') == '17'\nassert solution('13 11') == '0'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"4 6\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"12 15\") == \"6\"\nassert solution(\"100 2\") == \"101\"\nassert solution(\"100 3\") == \"99\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '16'\n'''\n\nA, B = map(int, input().split())\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '16'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('2 4') == '1 2'\nassert solution('3 2') == '2 1'\nassert solution('8 7') == '1'\nassert solution('1 10') == '2 9'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudaizchokudai') == 'No'\nassert solution('chokudaizchokudaiz') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hello') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aaaaa') == 'Yes'\nassert solution('b') == 'No'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudai') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudakudai') == 'No'\nassert solution('chokudai') == 'No'\nassert solution('chokudai') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('chokudai') == \"Yes\"\nassert solution('chokudaiz') == \"Yes\"\n\"\"\"\n\n\"\"\"\nCopyright \u00a9 2016 Aubhro Sengupta. All rights reserved.\n\"\"\""
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudi', 'chokudiz') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudai') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'No'\nassert solution('chokudai', 'chokudai') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'No'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '9'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('2 2') == 'IMPOSSIBLE'\nassert solution('5 4') == '3'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 16') == '9'\nassert solution('16 2') == '9'\nassert solution('2 16') == '9'\nassert solution('16 2') == '9'\nassert solution('100 2') == '2'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''2 15''') == 'IMPOSSIBLE'\nassert solution('''7 2''') == '3'\nassert solution('''9 17''') == '13'\nassert solution('''1 1000000000''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 4') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('0 0') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 16') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '9'\nassert solution('2 0') == 'IMPOSSIBLE'\nassert solution('2 5') == '7'\nassert solution('0 10') == 'IMPOSSIBLE'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 9\") == \"IMPOSSIBLE\"\nassert solution(\"1000 1\") == \"IMPOSSIBLE\"\nassert solution(\"100 100\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 8') == 'IMPOSSIBLE'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('4 1') == '0'\nassert solution('0 0') == 'IMPOSSIBLE'\nassert solution('0 0') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 4') == '5'\nassert solution('3 4') == '5'\nassert solution('3 4') == '5'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\nassert solution('100') == 'No'\nassert solution('999') == 'Yes'\nassert solution('101') == 'No'\nassert solution('717') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('7') == 'Yes'\nassert solution('7017') == 'Yes'\nassert solution('701701') == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"No\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"98\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234567\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(1337) == \"No\"\nassert solution(10) == \"Yes\"\nassert solution(11) == \"No\"\nassert solution(12) == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('116') == 'No'\nassert solution('7') == 'Yes'\nassert solution('17') == 'No'\nassert solution('117') == 'Yes'\nassert solution('756') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\nassert solution('77') == 'No'\nassert solution('7') == 'Yes'\nassert solution('100') == 'No'\nassert solution('011') == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"No\"\nassert solution(\"13\") == \"No\"\nassert solution(\"100\") == \"No\"\nassert solution(\"111\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('126') == 'Yes'\nassert solution('737') == 'Yes'\nassert solution('7373737') == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(100) == 'Yes'\nassert solution(123) == 'No'\nassert solution(7) == 'Yes'\nassert solution(737) == 'Yes'\nassert solution(77) == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"737\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"25\") == \"No\"\nassert solution(\"123\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('100') == 'No'\nassert solution('20') == 'Yes'\nassert solution('1000') == 'No'\nassert solution('6') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('11') == 'No'\nassert solution('9') == 'Yes'\nassert solution('8') == 'No'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580\\n581\\n582\\n583\\n584\\n585\\n586\\n587\\n588\\n589\\n590\\n591\\n592\\n593\\n594\\n595\\n596\\n597\\n598\\n599\\n600\\n601\\n602\\n603\\n604\\n605\\n606\\n607\\n608\\n609\\n610\\n611\\n612\\n613\\n614"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n\nN = int(input())\ns = 0\n\nfor i in str(N):\n    s += int(i)"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(10) == \"No\"\nassert solution(31) == \"Yes\"\nassert solution(57) == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"22\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"1000\") == \"No\""
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(12) == \"Yes\"\n\nassert solution(1) == \"Yes\"\n\nassert solution(2) == \"No\"\n\nassert solution(3) == \"Yes\"\n\nassert solution(4) == \"No\""
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\"\"\"\nx_1, y_1, x_2, y_2 = list(map(int, stdin.split()))\nx_3 = (x_1 * y_1 - y_1 * x_2) / (x_1 * y_2 - y_1 * x_3)\ny_3 = (x_1 * x_2 - y_1 * y_2) / (x_1 * y_2 - y_1 * x_3)\nprint(int(x_3), int(y_3), int(x_1), int(y_1))\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"-1 1 -1 0\"\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\"\"\""
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nprint(\"All Tests Passed\")\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\n\"\"\""
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\"\"\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred blue') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred blue\\nred blue') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred blue\\nred blue\\nred blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 4'\nassert solution('blue') == '2 4'\nassert solution('blue red') == '2 4'\nassert solution('blue red blue red') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4'\nassert solution('red blue\\n3 4\\nred\\n') == '2 4'\nassert solution('red blue\\n3 4\\nblue\\n') == '1 1'\nassert solution('red blue\\n3 4\\nred\\nblue\\n') == '1 1'\nassert solution('red blue\\n3 4\\nred\\nblue\\nred\\n') == '1 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"1 4\"\nassert solution(\"blue\") == \"1 4\"\nassert solution(\"blue\") == \"1 4\"\nassert solution(\"blue\") == \"1 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == input(\"\")\n\"\"\"\n\n\"\"\"\n    S T\n1 1\nr 1\n1 2\nr 2\n1 3\nr 3\n1 4\nr 4\n1 5\nr 5\n1 6\nr 6\n1 7\nr 7\n1 8\nr 8\n1 9\nr 9\n1 10\nr 10\n2 10\n\"\"\""
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"red blue\\n3 4\\nred\\n\"\n) == \"2 4\"\n\"\"\""
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"2 4\"\nassert solution(\"blue\") == \"0 0\"\nassert solution(\"blue\") == \"0 0\"\nassert solution(\"blue\") == \"0 0\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\naaaaaaa\\naaaaaaa') == 'Yes'\nassert solution('4\\naaaaaaa') == 'No'\nassert solution('3\\naaaaaaa') == 'No'\nassert solution('4\\nbbaaaa') == 'No'\nassert solution('8\\nbaaaaaa') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"\n\nN = int(input())\nS = input()\n\nfor i in range(N):\n    if S[:i] == S[i:]:\n        print(\"Yes\")\n        exit(0)\nprint(\"No\")\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('a') == 'No'\nassert solution('aa') == 'No'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('a') == 'No'\n\"\"\""
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('def') == 'No'\nassert solution('abcdef') == 'Yes'\nassert solution('abcdefg') == 'No'\nassert solution('abcdefgh') == 'Yes'\n\nprint('Testcases passed')"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabc') == 'No'\nassert solution('abcabcabcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('a') == 'No'\nassert solution('abc') == 'No'\nassert solution('abc') == 'No'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\n'''\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000') == '1.0 0'\nassert solution('1000000000000000000 1000000000000000000 10000000000000000000000000000000 1000000000000000000') == '1.0 0'\nassert solution('1000000000000000000 10000000000000000000000000000000 1000000000000000000') == '1.0 0'\nassert solution('1000000000000000000 10000000000000000000000000000000 1000000000000000000000000000 1000000000000000000') == '1.0 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('1000000007 2 1 1') == '3.000000 0'\nassert solution('10 1000000000 10 1000000000') == '0.000000 1'\nassert solution('1000 1 1 1') == '1000.000000 0'\nassert solution('1 0 0 0') == '0.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''2 3 4 6''') == '4.000000 1'\nassert solution('''2 4 6 4''') == '2.000000 1'\nassert solution('''3 1 7 2''') == '4.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''1 2 1 1''') == '0.000000 0'\nassert solution('''3 5 2 1''') == '1.500000 0'\nassert solution('''2 3 1 1''') == '0.000000 1'\nassert solution('''2 3 1 2''') == '0.500000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1 0') == '3.000000 1'\nassert solution('2 3 4 6') == '8.000000 0'\nassert solution('1 1 1 1') == '0.000000 1'\nassert solution('1 1 1 0') == '0.000000 0'\nassert solution('1 1 1 2') == '2.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nW, H, x, y = [int(n) for n in stdin.split()]\n\narea = (H-y) * (W-x)"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 1 2 1\") == \"2.000000 1\"\nassert solution(\"1 1 2 1\") == \"2.000000 1\"\nassert solution(\"1 1 2 2\") == \"0.000000 0\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('G W Y P Y W') == 'Three'\nassert solution('G W Y P Y W') == 'Four'\nassert solution('G W Y P Y W') == 'Three'\nassert solution('G W Y P Y W') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"P P P P P\") == \"Three\"\nassert solution(\"P P P P G\") == \"Four\"\nassert solution(\"P P P P G G\") == \"Three\"\nassert solution(\"P P P P G G G\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6\nG W Y P Y W\n''') == 'Four'\nassert solution(\n'''\n1\nP\n''') == 'Three'\nassert solution(\n'''\n10\nG W Y P Y W\n''') == 'Three'\nassert solution(\n'''\n20\nP P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P\n''') == 'Four'"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('G W Y P Y P') == 'Three'\nassert solution('G W Y P G P') == 'Four'\nassert solution('G W Y P G G') == 'Three'\nassert solution('G W Y P G Y') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"P\") == \"P\"\nassert solution(\"P P P\") == \"Three\"\nassert solution(\"P P W\") == \"Three\"\nassert solution(\"P W W\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P W G Y P') == 'Three'\nassert solution('P P G P W') == 'Four'\nassert solution('P W P P W') == 'Four'\nassert solution('P W P G W') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Three\") == \"Three\"\nassert solution(\"Four\") == \"Four\"\nassert solution(\"White White White White White White\") == \"Four\"\nassert solution(\"Pink White Green Yellow\") == \"Three\"\nassert solution(\"Pink Pink White Green Green\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P P P P P') == 'Three'\nassert solution('W W W W W') == 'Four'\nassert solution('G G G G G') == 'Four'\nassert solution('P P P P P') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"0a\") == \"\"\nassert solution(\"a0\") == \"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\nassert solution(\"1 2 6 10 3\") == \"2\"\n\n\n\"\"\"\n\nfrom collections import deque\n\nclass Node:\n    def __init__(self, val: int, dura: int):\n        self.val = val\n        self.dura = dura\n        self.left = None\n        self.right = None"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 6 10 3') == '2'\nassert solution('1 1 2 2 2') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result, stdin\n'''\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"9\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"2 3 1 3 4 2\") == \"\"\nassert solution(\"2 3 1 3 4 2\") == \"\"\nassert solution(\"5 3 3\") == \"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n2 3 1 3 4 2') == '6'\nassert solution('2 3 1 3 4 2\\n1 2 3 1 3 4 2') == '2'\nassert solution('3 5 3\\n1 2 3 4 2 3') == '1'\nassert solution('3 5 3\\n1 2 3 4 2 3') == '1'\nassert solution('5 5 6\\n1 2 6 10 3\\n3 4 1 1 1 2 3') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input=\"\"\"6 3 2\n2 3 1 3 4 2\"\"\") == \"6\"\nassert solution(\n    input=\"\"\"5 3 3\n1 2 4 2 3\"\"\") == \"2\"\nassert solution(\n    input=\"\"\"5 5 6\n1 2 6 10 3\"\"\") == \"2\"\nassert solution(\n    input=\"\"\"2 1 2\n2 1 1\"\"\") == \"1\"\nassert solution(\n    input=\"\"\"2 1 1\n1 2 2\"\"\") == \"1\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '7'\nassert solution('''4 8 2 6 2''') == '7'\nassert solution('''4 5 4 1 3''') == '0'\nassert solution('''1 3 2 4''') == '0'\nassert solution('''1 3 2 4''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3\\n') == '7\\n'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0\\n'\nassert solution('5\\n1 3 2 4 3\\n1 3 2 4 3\\n') == '6\\n'\nassert solution('6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n') == '4\\n'\nassert solution('10\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n') == '5\\n'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n1 3\\n2 4\\n2 2\") == \"7\"\nassert solution(\"2\\n2 2\\n1 3\\n2 4\\n2 2\") == \"0\"\nassert solution(\"3\\n2 1 3\\n2 4 4\\n2 4 2\") == \"2\"\nassert solution(\"4\\n2 1 3 4\\n2 4 4 2\\n2 4 4\") == \"0\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1 3\\n1 3') == '0'\nassert solution('3\\n1 2 3\\n1 2 3') == '1'\nassert solution('4\\n1 3 2 4\\n1 3 2 4') == '0'\nassert solution('5\\n1 3 2 4 5\\n1 3 2 4 5') == '3'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''6\n8 7 9 10 12 13\n4 8 2 6 2\n4 5 4 1 3''') == '4'\nassert solution('''9\n1 3 2 4 5 6 7 8 9\n4 1 2 3 4 5 6 7 8\n''') == '1'\nassert solution('''10\n1 3 2 4 5 6 7 8 9 10\n4 1 2 3 4 5 6 7 8 9\n''') == '2'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2 3 4\\n1 3 2 4\\n1 2 3 4\\n1 2 3 4') == '0'\nassert solution('2\\n2 3 4\\n1 3 2\\n1 3 2\\n1 3 2') == '3'\nassert solution('3\\n2 1 3\\n1 3 2\\n1 3 2') == '2'\nassert solution('4\\n1 2 3 4\\n1 3 2 4\\n1 2 3 4\\n1 2 3 4') == '4'\nassert solution('5\\n1 2 3 4 5\\n1 3 2 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\n\ngood_pairs = 0\n\nfor i in range(n):\n    if a[i] + b[i] > a[b[i]] + b[a[i]]:\n        good_pairs += 1\n\nprint(good_pairs)\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '5'\nassert solution('''4 8 2 6 2''') == '7'\nassert solution('''4 5 4 1 3''') == '0'\nassert solution('''1 3 2 4''') == '0'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''2\n1 2\n1 2\n''') == '1'\nassert solution('''2\n1 2\n2 1\n''') == '2'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('1\\n3\\n') == '1'\nassert solution('2\\n4\\n') == '2'\nassert solution('2\\n4\\n') == '0'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n5\\n10') == '1 1 3 5 9'\nassert solution('10\\n1000000000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000\\n1050605000\\n1000000000\\n1000"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 1 3 5 9\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506056 1000000000\"\nassert solution(\"10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '''1 1 3 5 9'''\nassert solution('''10''') == '''10000 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''100''') == '''1 1 2 4 5 10 24 52 56 64 72 80 96 104 120 128 136 144 152 160 164 168 176 184 192 200 208 216 220 224 228 240 256 266 272 276 288 304 312 320 328 336 344 352 360 368 376 384 392 400 408 416 420 424 428 440 446 448 460 464 472 480 494 506 508 516 524 530 536 544 552 572 588 598 616 624 632 648 640 656 672 688 696 704 712 728 736 744 752 758 772 788 796 804 812 828 836 844 852 868 880 904 912 928 936 944 952 968 976 984 992 998'''"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 1 3 5 9\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\nassert solution(\"10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\n\n'''\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''9\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n'''\n'''"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '''1 1 3 5 9'''\nassert solution('''10''') == '''9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '''9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''\n'''\n\nprint(solution('''10'''))\n'''5'''\n\nprint(solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000'''))\n'''9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''\n\n'''\n\nprint(solution('''2'''))\n'''\n1\n1'''\n\nprint(solution('''3'''))\n'''\n1 1 2'''\n\nprint(solution('''4'''))\n'''\n1 1 2 3'''\n\nprint(solution('''5'''))\n'''\n1 1 2 3 4 5'''\n\nprint(solution('''6'''))\n'''\n1 1 2 3 4 5 6'''\n\nprint(solution('''7'''))\n'''\n1 1 2 3 4 5 6 7'''\n\nprint(solution('''8'''))\n'''\n1 1 2 3 4 5 6 7 8'''\n\nprint(solution('''9'''))\n'''\n1 1 2 3 4 5 6 7 8 9'''\n\nprint(solution('''10'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10'''\n\nprint(solution('''11'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11'''\n\nprint(solution('''12'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12'''\n\nprint(solution('''13'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13'''\n\nprint(solution('''14'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14'''\n\nprint(solution('''15'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'''\n\nprint(solution('''16'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16'''\n\nprint(solution('''17'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17'''\n\nprint(solution('''18'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18'''\n\nprint(solution('''19'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'''\n\nprint(solution('''20'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'''\n\nprint(solution('''21'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21'''\n\nprint(solution('''22'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22'''\n\nprint(solution('''23'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23'''\n\nprint(solution('''24'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24'''\n\nprint(solution('''25'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25'''\n\nprint(solution('''26'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26'''\n\nprint(solution('''27'''))\n'''\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == input(\"\")\n'''"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\n\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 4\\n') == '1 1 3 5 9\\n'\nassert solution('3\\n1 2 4\\n') == '1 1 3 5 9\\n'\nassert solution('3\\n1 2 4\\n') == '1 1 3 5 9\\n'\nassert solution('3\\n1 2 4\\n') == '1 1 3 5 9\\n'\nassert solution('3\\n1 2 4\\n') == '1 1 3 5 9\\n'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    1 2 4 5 10\n    ''') == '1 1 3 5 9'\n\nassert solution(\n    '''\n    10\n    10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n    ''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_one) == output_one\nassert solution(input_two) == output_two\nassert solution(input_three) == output_three\nassert solution(input_four) == output_four\nassert solution(input_five) == output_five\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\\n3 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\nassert solution('4 2\\n1 2\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1 3\\n2 3\\n\\n2 3\\n3 1\\n\\n1"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\nassert solution(\"7 7\\n1 6\\n2 5\\n3 4\\n4 3\\n3 2\\n1 1\\n1 2\\n2 2\\n2 3\\n3 4\\n5 6\\n6 7\\n6 7\\n6 8\\n7 8\\n7 8\\n7 9\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"3\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n2 1\\n3 2\\n1 1\\n1 2\\n2 1\\n1 1\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1\\n1 2\\n2 2\\n2 1\\n1 1"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 4\n1 2\n3 4\n5 4\n3 5''') == '2'\nassert solution(\n'''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3 5\\n3"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('5 6\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '2'\nassert solution('4 6\\n1 2\\n2 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\n4 3\\"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('7 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n4') == '1'\nassert solution('4\\n4') == '0'\nassert solution('5\\n4') == '0'\nassert solution('1\\n2') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n1 1\\n2 2\\n1 2\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1\\n0\\n1\\n2\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n1\\n2\\n0\\n0\\n2\\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 2 1') == '1'\nassert solution('5\\n2 0 0 1 2') == '1'\nassert solution('5\\n1 0 0 0 2') == '0'\nassert solution('5\\n1 0 0 0 2') == '0'\nassert solution('5\\n1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('3\\n1 0 0 2\\n1 2') == '1'\nassert solution('3\\n1 0 0 2\\n1 2\\n2 3') == '0'\nassert solution('5\\n2 0 0 1 2\\n1 2') == '1'\nassert solution('5\\n2 0 0 1 2\\n1 2\\n2 3') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution('''5\n1 1 1 1 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''6\n1 0 0 0 2 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '4'\nassert solution('''10\n2 0 0 0 0 2 0 1 1\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n4 9\n4 10\n5 11\n5 12\n5 13\n6 14\n7 15\n7 16\n8 17\n9 18\n10 19\n9 20\n''') == '6'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 0 0 1 2\\n2 1 2\\n1 2') == '0'\nassert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n2 5') == '1'\nassert solution('2\\n1 1\\n1 2') == '0'\nassert solution('3\\n1 0 0 1 2\\n2 1 2\\n1 3') == '1'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0 0\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1') == '6'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nprint(solution(fileinput.input()[0]))\n'''\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n1 1\n1 1\n2 1\n1 1\n''') == '0'\nassert solution('''\n4\n1 1 2\n2 3\n1 3\n1 1\n2 1\n1 1\n1 1\n2 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n2 5\\n2 4\\n1 5\\n1 3\\n4 5\\n3 4\\n5 1\\n1 2\\n3 4\\n4 5\\n5 2\\n5 4\\n5 3\\n4 1') == '0\\n'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n2 5\\n2 4\\n1 5\\n1 3\\n4 5\\n3 4\\n5 1\\n1 2\\n3 4\\n4 5\\n5 2\\n5 4\\n5 3\\n4 1') == '1\\n'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('7\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == '5\\n'\nassert solution('6\\n1 1 2 2 3\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2') == '4\\n'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('stdin') == 'alvuw'\n\nprint('solution')\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\naz\\nbf\\n') == 'bc'\nassert solution('5\\nafogk\\nasdji\\n') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp\\n') == 'qoztvz'\n\n\n\n'''\n\nn = int(input())\ns = input()\nt = input()\n\ns = s.lower()\nt = t.lower()\n\nl1 = []\nl2 = []\n\nfor i in range(n):\n    for j in range(n):\n        if s[i] < t[j] and i < j:\n            l1.append(s[i])\n        if s[i] > t[j] and i > j:\n            l1.append(t[j])\n        if s[i] == t[j] and i < j:\n            l1.append(s[i])\n\nl1.sort()\nl2 = [x for x in l1 if x!= l1[0]]"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\n\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\n\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n\nprint(solution('''42\npqrstuvwxyz\n'''))\nassert solution('''42\npqrstuvwxyz\n''') == 'pqrstuvwxyz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(solution('''10\nzyxwvutsrqponmlkjihgfedcba\njnrfvbqnkclzswnmpgjqxatdfcdr\n'''))"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('az\\nbf\\n') == 'bc'\nassert solution('5\\nafogk\\nasdji\\n') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp\\n') == 'qoztvz'\nassert solution('1\\n') == ''\nassert solution('9\\n') == ''\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(\"tests passed\")\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"afogk\", \"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\", \"tvqhwp\") == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"afogk\", \"asdji\") == \"qoztvz\"\nassert solution(\"nijfvj\", \"tvqhwp\") == \"qoztvz\"\nassert solution(\"njfvj\", \"tvqhwp\") == \"qoztvz\"\nassert solution(\"njfvj\", \"tvqhwp\") == \"qoztvz\"\nassert solution(\"njfvj\", \"tvqhwp\") == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('az\\nb')('asd') == 'b'\nassert solution('az\\nb')('nijf') == 'nijf'\nassert solution('az\\nb')('afog') == 'alvu'\nassert solution('az\\nb')('nijfvj') == 'tvqhwp'\nassert solution('az\\nb')('tvqhwp') == 'tvqhwp'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\nassert solution(\"5 4\\n20 10 40 30\\n\") == \"NO\\n\"\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n20 10 40 30\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"\n\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 10"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expect\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5') == 'YES\\n1 2 3 4 5'\nassert solution('1\\n5\\n1 2 3 4') == 'YES\\n1 2 3 4'\nassert solution('1\\n5\\n1 2 3 4 5') == 'YES\\n1 2 3 4 5'\nassert solution('1\\n5\\n1 2 3 4') == 'YES\\n1 2 3 4'\n\n\n>>> solution('2\\n4\\n1 2 3 4')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4 5')\n'NO'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n4\\n1 2 3 4')\n'YES\\n1 2 3 4'\n>>> solution('2\\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('1 1\\n1\\n') == 'NO'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"7 5\") == \"NO\"\nassert solution(\"3 5\") == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5 6\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n6 2 4 0 2\\n') == 'YES\\n0 0 0 0 0 1 0 1 0'\nassert solution('5\\n1 2 4 0 2\\n') == 'NO'\nassert solution('6\\n5 6 2 4 0 2\\n') == 'NO'\nassert solution('7\\n5 6 2 4 0 2\\n') == 'NO'\nassert solution('8\\n4 2 3 0 0 4 2 3 0 0\\n') == 'YES\\n1 1 1 1 0 0 0 0 0'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n9\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"\"\"\nYES\n1 0 0 0 0 1 0 1 0 \n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 2 4 0 2\n\"\"\") == \"\"\"\nNO\n\"\"\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 4 0 2\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n5 1 3 6 8 2 9 0 10\\n\") == \"NO\"\nassert solution(\"7\\n1 2 4 0 2 0 2 2 1\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"7\\n2 3 4 1 0 2 0 2 1\\n\") == \"YES\\n0 0 0 0 0 0 0 1 1\"\nassert solution(\"5\\n5 5 1 3 6 8 2 9 0 10\\n\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'\nassert solution('''10\n1 2 4 0 2 3 5 8 10 9\n''') == 'NO'\nassert solution('''1\n1\n''') == 'NO'\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0'\nassert solution('5\\n1 2 4 0 2') == 'NO'\nassert solution('5\\n1 2 4 0 2 3') == 'NO'\nassert solution('5\\n1 2 4 0 2 1') == 'NO'\nassert solution('5\\n1 2 4 0 2 3 2') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n9\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n5\n1 2 4 0 2\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n10\n5 1 3 6 8 2 9 0 10 8 4 7\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n11\n5 1 3 6 8 2 9 0 10 8 4 7 3 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n3\n1 1 0\n\"\"\") == \"YES\""
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n9 5 1 3 6 8 2 9 0 10''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''10\n1 2 4 0 2''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''5\n1 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 3\") == \"\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '''3'''\nassert solution('''10 2 3 7''') == '''0'''\nassert solution('''100 51 51 51''') == '''0'''\nassert solution('''1234 1 100 199''') == '''1134'''\nassert solution('''1000000000 1 1 1000000000''') == '''0'''\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n100 50 50 50\\n1000000000 1 1 1000000000') == '3'\nassert solution('1\\n100 50 50 50\\n1000000000 1 1 1000000000') == '0'\nassert solution('1\\n100 50 50 50\\n1000000000 1 1 1000000000') == '1134'\nassert solution('1\\n100 50 50 50\\n1000000000 1 1 1000000000') == '0'\nassert solution('1\\n1 1 1 1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('2\\n10 1 2 1\\n100 200 101 200\\n1 1 1 1 1') == '0\\n0\\n0'\nassert solution('3\\n10 1 2 3\\n100 200 100 200\\n1 1 1 1 1') == '0\\n0\\n0'\nassert solution('4\\n10 1 2 3 4\\n100 200 100 200\\n1 1 1 1 1\\n1 1 1 1 1') == '0\\n0\\n0\\n0'\nassert solution('5\\n10 1 2 3 4 5\\n100 200 100 200\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n1 3 2 6\n1 1 1 1\n1134 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n2 3 4 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '1134'\nassert solution('''3\n10 1 2 4\n10 1 1 1\n100 10 1 100''') == '2'\nassert solution('''10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom typing import Tuple\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\") == \"3\\n0\\n1134\\n0\"\n\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\nprint(solution(\"\"\"1\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\"), \"\\n\")\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''2\n10 1 4 1\n10 1 4 1\n''') == '2'\nassert solution('''3\n10 1 4 1\n10 1 4 1\n10 1 4 1\n''') == '3'\nassert solution('''4\n10 1 4 1\n10 1 4 1\n10 1 4 1\n10 1 4 1\n''') == '3'\nassert solution('''5\n10 1 4 1\n10 1 4 1\n10 1 4 1\n10 1 4 1\n10 1 4 1\n''') == '5'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1\\n2') == '3'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '3'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '3'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\nassert solution('3\\n1 2 3 4\\n4 3 2 1\\n2 3 4 5\\n1 3 2 4') == '2'\nassert solution('2\\n2 1 1 1\\n2 1 1 1\\n2 1 1 1') == '1'"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nprint('Test success!')"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nassert solution('28') == '121645100408832000'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nprint(\"All set? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == ''\nassert solution('''ababababab''') == 'b'\nassert solution('''ababababab''') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''abcde''') == ''\nassert solution('''abc''') == ''\nassert solution('''abcd''') == 'a'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('ab') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''15 3\ncccaabababaccbc''') == \"cccbbabaccbc\"\nassert solution('''15 9\ncccaabababaccbc''') == \"\"\nassert solution('''1 1\nu''') == \"\"\nassert solution('''2 3\nabcabcdab''') == \"cab\"\nassert solution('''3 3\nccccc''') == \"ccccc\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('aaaa') == ''\nassert solution('abcde') == 'abcde'\nassert solution('aaabccc') == 'aaccbc'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaab') == 'a'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"cccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"cccccc\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"aaaa\") == \"\"\nassert solution(\"abab\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccaabababaccbc') == ''\nassert solution('cccaabababaccbc') == ''\nassert solution('cccaabababaccbc') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\"\n\nn,k = map(int,input().split())\ns = input()\nr = [s[i] for i in range(n) if s[i]!= 'a']\nfor i in range(k):\n    if 'b' in r:\n        r.remove('b')\n    elif 'c' in r:\n        r.remove('c')\n    elif 'd' in r:\n        r.remove('d')\n    elif 'e' in r:\n        r.remove('e')\n    elif 'f' in r:\n        r.remove('f')\n    elif 'g' in r:\n        r.remove('g')\n    elif 'h' in r:\n        r.remove('h')\n    elif 'i' in r:\n        r.remove('i')\n    elif 'j' in r:\n        r.remove('j')\n    elif 'k' in r:\n        r.remove('k')\n    elif 'l' in r:\n        r.remove('l')\n    elif'm' in r:\n        r.remove('m')\n    elif 'n' in r:\n        r.remove('n')\n    elif 'o' in r:\n        r.remove('o')\n    elif 'p' in r:\n        r.remove('p')\n    elif 'q' in r:\n        r.remove('q')\n    elif 'r' in r:\n        r.remove('r')\n    elif's' in r:\n        r.remove('s')\n    elif 't' in r:\n        r.remove('t')\n    elif 'u' in r:\n        r.remove('u')\n    elif 'v' in r:\n        r.remove('v')\n    elif 'w' in r:\n        r.remove('w')\n    elif 'x' in r:\n        r.remove('x')\n    elif 'y' in r:\n        r.remove('y')\n    elif 'z' in r:\n        r.remove('z')\n    else:\n        break\nprint(\"\".join(r))"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbdabcbdabacbd') == 'abcbdabcbdabacbd'\nassert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('u') == 'u'\n\n\n\n-----Solution-----\n\n'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccaabababaccbc') == 'cccccc'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"5 3\n4 2 1 3 2\"\"\") == \"8\"\nassert solution(\n\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"4\"\nassert solution(\n\"\"\"9 1\n4 1\n8 1\n9 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"6\"\nassert solution(\n\"\"\"8 1\n9 1\n8 1\n9 1\n1 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"3\"\nassert solution(\n\"\"\"9 1\n8 1\n9 1\n8 1\n9 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"3\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '20'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"3 6\\n2 3 1 3 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"20\"\nassert solution(\"4 6\\n2 4 1 3 2\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 0 2 0\") == \"1\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 5\") == \"1\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"1 2 1 2 1\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"5 1\") == \"2\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''1 1\n1 2\n''') == '1'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nprint(solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n'''))"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n1\\n2\\n1\\n5\\n2\\n3\\n1\\n5\\n2') == '20'\nassert solution('1\\n5\\n1\\n2\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2') == '20'\nassert solution('1\\n5\\n1\\n2\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2') == '20'\nassert solution('1\\n5\\n1\\n2\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2') == '20'\nassert solution('1\\n5\\n1\\n2\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2\\n3\\n1\\n5\\n2') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6') == '8'\nassert solution('4 2 1 3 2') == '20'\nassert solution('4 3') == '8'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n.*...\\n.*...\\n.*...\\n.*...\\n.....\\n') == '-1'\nassert solution('4 4\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n') == '3'\nassert solution('6 5\\n..****\\n.*****.\\n.*****.\\n.*****.\\n.*..**.\\n.*.*.*.*\\n') == '3'\nassert solution('6 4\\n*..**\\n**.**\\n.*.*.\\n.*.*.\\n.*.*.\\n') == '3'\nassert solution('5 4\\n.*.\\n**.*\\n.*.*\\n.*.*\\n.*.*\\n') == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n*.*\n.*.\n*.*''') == '-1'\nassert solution('''5 5\n.**.\n*.*\n.*.\n.*.\n.....\n''') == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '3'\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '3'\nassert solution(\n'''5 5\n*.*\n.*.\n*.*\n.*.\n.....''') == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution(\n'''\n6 6\n.*.*\n.*.*\n.*.*\n.*.*\n....*\n....*\n....*\n''') == '3'\nassert solution(\n'''\n5 5\n.*.*\n.*.*\n.*.*\n.*.*\n....*\n....*\n....*\n''') == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n\n-----My Analysis-----\n\nThe solution follows a quite simple pattern:\n\n- For each star, we will put an integer on the grid equal to the sum of the star size. This is the number of stars in that row or column.\n\n- For each star, we have four possible directions to go in, one from each corner. We have to determine the number of directions to go in to reach the other side of the star.\n\n- If we find that one of the directions doesn't reach the other side, we know that the star is either overlapping or overlapping with the other star.\n\n- If we find that all directions do, we know that the star is not overlapping with any other star.\n\n- If we have more than one star, we know that there is no way to draw the grid.\n\n- If we have two stars, we know that there is no way to draw the grid.\n\n- If we have three stars, we know that we can draw the grid as follows:\n\n    - Add an additional star on the grid that we already know is completely inside the grid. This means the number of stars in the previous row is equal to the number of stars in the previous column. This is the number of stars in the current row or column.\n\n    - Add an additional star that is completely inside the grid, but at the edges of the grid. This means the number of stars in the previous row is equal to the number of stars in the previous column plus the number of stars in the current row.\n\n    - Add an additional star that is completely inside the grid, but at the center of the grid. This means the number of stars in the previous row is equal to the number of stars in the previous column plus the number of stars in the current row plus the number of stars in the current column.\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '-1'\nassert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3'\nassert solution('6 8\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...') == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    stdin = '''6 8\n    ....*...\n    ...**...\n    ..*****.\n    ...**...\n    ....*...\n    ........\n    ''') == '3'\n\n\nassert solution(\n    stdin = '''5 5\n    .*...\n    .*...\n    .*...\n    .*...\n    .....\n    ''') == '-1'\n\nassert solution(\n    stdin = '''3 3\n    *.*\n    .*.\n    *.*\n    ''') == '-1'\n\nassert solution(\n    stdin = '''3 3\n    .**.\n    .*.\n    .*.\n    ''') == '-1'\n\nassert solution(\n    stdin = '''3 3\n    ....*...\n    ....*...\n    ....*...\n    ''') == '3'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"-1\"\"\", \"Error\"\n\nassert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == \"3\", \"Error\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n\"\"\") == \"-1\", \"Error\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n\"\"\") == \"-1\", \"Error\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\n\n\"\"\") == \"-1\", \"Error\""
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('   ') == ''\nassert solution(' \\n') == ''\nassert solution('   \\n') == ''\nassert solution(' \\n\\n') == ''\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''576'''\n) == 'Yes'\nassert solution(\n'''575'''\n) == 'Yes'\nassert solution(\n'''9'''\n) == 'No'\nassert solution(\n'''987654321'''\n) == 'Yes'\nassert solution(\n'''1234'''\n) == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(575) == 'Yes'\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(2000)\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"945\") == \"Yes\"\n\nassert solution(\"575\") == \"Yes\"\nassert solution(\"100\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('21474474148128') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('947') == 'No'\nassert solution('999') == 'Yes'\nassert solution('913') == 'No'\nassert solution('90') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"971\") == \"No\"\nassert solution(\"971\") == \"No\"\nassert solution(\"99\") == \"Yes\"\nassert solution(\"999\") == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''575''') == 'Yes'\nassert solution('''2''') == 'No'\nassert solution('''987654321''') == 'Yes'\nassert solution('''0''') == 'No'\nassert solution('''1209''') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('575') == \"Yes\"\nassert solution('555') == \"No\"\nassert solution('a') == \"Yes\"\nassert solution('100') == \"No\"\nassert solution('1000') == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 3') == 'Bob'\nassert solution('2 4') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('1 10') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 7') == 'Bob'\nassert solution('5 9') == 'Draw'\nassert solution('7 8') == 'Alice'\nassert solution('8 9') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(8, 6) == \"Alice\"\nassert solution(8, 4) == \"Bob\"\nassert solution(12, 6) == \"Draw\"\nassert solution(7, 7) == \"Draw\"\nassert solution(9, 9) == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('3 1') == 'Bob'\nassert solution('1 1') == 'Draw'\nassert solution('7 7') == 'Draw'\nassert solution('13 2') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('5 8') == 'Bob'\nassert solution('6 6') == 'Draw'"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('4 5') == 'Draw'\nassert solution('4 5') == 'Alice'\nassert solution('7 8') == 'Bob'\nassert solution('9 8') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 2') == 'Draw'\nassert solution('2 6') == 'Bob'\nassert solution('9 6') == 'Alice'\nassert solution('3 3') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 10') == 'Bob'\nassert solution('3 3') == 'Draw'\nassert solution('1 2') == 'Alice'\nassert solution('12 13') == 'Bob'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('c,b,a') == 'c b a'\nassert solution('x,y,z,w') == 'x y z w'\nassert solution('m,n,o,p,q,r,s,t,u,v,w,x,y,z') =='m n o p q r s t u v w x y z'\nassert solution('r,u,n,o,g,r,a,s,n,t,o,p,u,a,r,e,e,n,t,e,r,n') == 'r u n o g r a s n t o p u a r e e n t e r n'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('h') == 'h'\nassert solution('h,ee,ll,oo') == 'h ee ll oo'\nassert solution('h,ee,ll,oo,') == 'h ee ll oo'\nassert solution('h,ee,ll,oo,') == 'h ee ll oo'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('h,ew,l,el,y,e,ew,el,o,n,e,y,d,o,w') == 'h e w l e l y d o w'\nassert solution('h,ew,l,el,y,e,ew,el,o,n,e,y,d,o,w,u') == 'h e w l e l y d o w u'\nassert solution('h,ew,l,el,y,e,ew,el,o,n,e,y,d,o,w,u,i,o,n,e') == 'h e w l e l y d o w u i o n e'\nassert solution('h,ew,l,el,y,e,ew,el,o,n,e,y,d,o,w,u,i,o,n,e,u') == 'h e w l e l y d o w u i o n e u'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('dolphin,dolphin,dolphin') == 'dolphin dolphin dolphin'\nassert solution('do,noth,learn') == 'do not learn'\nassert solution('x,y,z') == 'x y z'\nassert solution('dolphin,dolphin,dolphin') == 'dolphin dolphin dolphin'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.replace(\" \",\",\")\n\"\"\""
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('hello,world,hello,world,hello,world') == 'hello hello hello world world world'\nassert solution('one,two,three,four') == 'one two three four'\nassert solution('one,two,three,four,five') == 'one two three four five'\nassert solution('one,two,three,four,five,six') == 'one two three four five six'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('a,b,c') == 'a b c'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy,yeee\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy,yeee,ye\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy,yeee,ye,yea\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy,yeee,ye,ye,yea\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a,b,c,d,e') == 'a b c d e'\nassert solution('a,b,c,d,e,f') == 'a b c d e f'\nassert solution('x,y,z,a,b,c,d,e,f') == 'x y z a b c d e f'\nassert solution('x,y,z,a,b,c,d,e,f,g') == 'x y z a b c d e f g'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"abc,def,ghi,jkl,mno,pqrs,tuv,wxyz,\") == \"abc def ghi jkl mno pqrs tuv wxyz\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,,\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"1,2,3,4,5,6,7,8,9,0,\") == \"1 2 3 4 5 6 7 8 9 0\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1 1\") == \"1\\n1\"\nassert solution(\"3 3\\n1 2\\n-1 -1\\n2 0\\n-2 0\\n0 1\") == \"2\\n1\"\nassert solution(\"4 3\\n1 -1\\n-1 2\\n2 1\\n0 2\") == \"1\\n2\"\nassert solution(\"7 3\\n-2 2\\n-1 -1\\n2 0\\n-2 0\\n1 2\\n3 0\") == \"1\\n2\\n3\"\nassert solution(\"7 7\\n4 0\\n-2 0\\n-1 -1\\n3 0\\n-2 -3\\n-1 0\\n0 3\") == \"2\\n3\\n4\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\n\"\"\"\n\nfrom sys import stdin\nfrom collections import deque\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n-1 0\n-1 0''') == '1\\n1'\nassert solution('''2 1\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 1\n2 0\n0 0\n-1 0\n1 0\n1 1''') == '2\\n1'\nassert solution('''2 1\n2 0\n0 0\n-1 0\n1 0\n1 1\n1 1\n1 1\n1 1''') == '1\\n1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n'\n) == '2\\n1\\n'\nassert solution(\n    '4 3\\n-10 9 -3\\n1 7 2 4\\n-1 7 -4\\n2 4 -5\\n-1 7 -4\\n-1 7 -4\\n'\n) == '2\\n1\\n'\nassert solution(\n    '5 5\\n1 0 0 0 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n'\n) == '5\\n2\\n'\nassert solution(\n    '10 10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1'\nassert solution('''2 2\n2 0\n2 0\n-1 0\n1 0''') == '1'\nassert solution('''2 2\n2 0\n1 1\n-1 1\n1 1''') == '1'\nassert solution('''10 10\n1 1\n-10 10\n-10 10\n0 0\n5 0\n0 0\n0 5\n5 0\n0 5\n5 0\n0 5\n5 0\n0 5\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0 0\n5 0\n0"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1'\nassert solution('1 10\\n1 1\\n1 2\\n1 4\\n1 8\\n1 16\\n1 32\\n1 64\\n1 128\\n1 256\\n1 512\\n1 1024\\n1 2048\\n1 4096\\n1 8192\\n1 16384\\n1 32768\\n1 65536\\n1 131072\\n1 262144\\n1 524288\\n1 1048576\\n1 2097152\\n1 4194304\\n1 8388608\\n1 16777216\\n1 33554432\\n1 67108864\\n1 134217728\\n1 268435456\\n1 536870912\\n1 1073741824\\n1 2147483648\\n1 4294967296\\n1 8589934592\\n1 17179869184\\n1 34359738368\\n1 68719476736\\n1 137438953472\\n1 274877906944\\n1 549755813888\\n1 1099511627776\\n1 219902325555\\n1 439804651135\\n1 879609302299\\n1 175921860444\\n1 351843720888\\n1 703687441776\\n1 1407374883553\\n1 28147497671073\\n1 562949953421375\\n1 1125899906842624\\n1 2251799813685247\\n1 4503599627370496\\n1 8630371101222971\\n1 17179869184662927\\n1 351843720888661679\\n1 70368744177664803\\n1 14073748835531775\\n1 281474976710734464\\n1 56294995342137968\\n1 1125899906842624') == '2\\n1'\nassert solution('1 10\\n1 1\\n1 2\\n1 4\\n1 8\\n1 16\\n1 32\\n1 64\\n1 128\\n1 256\\n1 512\\n1 1024\\n1 2048\\n1 4096\\n1 8192\\n1 16384\\n1 32768\\n1 65536\\n1 131072\\n1 262144\\n1 524288\\n1 1048576\\n1 2097152\\n1 4194304\\n1 8388608\\n1 16777216\\n1 33554432\\n1 67108864\\n1 134217728\\n1 268435456\\n1 536870912\\n1 1073741824\\n1 2147483648\\n1 4294967296\\n1 8589934592\\n1 17179869184\\n1 34359738368\\n1 68719476736\\n1 137438953472\\n1 274877906944\\n1 549755813888\\n1 1099511627776\\n1 219902325555\\n1 439804651135\\n1 879609302299\\n1 175921860444\\n1 351843720888\\n1 703687441776\\n1 1407374883553\\n1 28147497671073\\n1 562949953421375\\n1 1125899906842624\\n1 2251799813685247\\n1 4503599627370496\\n1 8630371101222971\\n1 17179869184662927\\n1 351843720888661679\\n1 70368744177664803\\n1 14073748835531775\\n1 281474976710734464\\n1 56294995342137968\\n1 1125899906842624') == '2\\n1'\nassert solution('2 10\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1\\n2'\nassert solution('2 10\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1\\n2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\"\nassert solution(\"2 2\\n2 0\\n0 0\\n1 0\\n2 0\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"2 3\\n1 2\\n2 1\\n2 1\\n3 1\\n1 3\") == \"2\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"2 3\") == \"1\\n2\"\nassert solution(\"2 3\\n2 0\") == \"2\\n1\"\nassert solution(\"2 3\\n2 0\\n0 0\") == \"1\\n2\"\nassert solution(\"2 3\\n2 0\\n0 -1\") == \"1\\n2\"\n\"\"\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n1 1') == '1\\n1'\nassert solution('1 1\\n0 0\\n0 0') == '1\\n1'\nassert solution('2 2\\n0 0\\n0 0\\n-1 0') == '1\\n1\\n'\nassert solution('2 2\\n-1 0\\n0 0') == '1\\n1\\n'\nassert solution('2 2\\n1 0\\n0 0') == '1\\n1\\n'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2'\n\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1'\n\nassert solution('''2 2\n2 0\n0 0\n0 0\n-1 0\n1 0''') == '1'\n\nassert solution('''2 1\n2 0\n0 0\n-1 0\n1 0''') == '2'\n\nassert solution('''2 1\n2 0\n0 0\n0 0\n-1 0\n1 0''') == '1'"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '21'\nassert solution('4') == '34'\nassert solution('5') == '55'\nassert solution('6') == '66'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(2) == 14\nassert solution(3) == 18\nassert solution(4) == 22\nassert solution(5) == 28\nassert solution(6) == 36\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == 14\nassert solution(3) == 18\nassert solution(4) == 22\nassert solution(5) == 25\nassert solution(6) == 28\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == 14\nassert solution('3') == 28\nassert solution('4') == 56\nassert solution('5') == 145\nassert solution('6') == 246\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(123) == 789\nassert solution(2) == 14\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(123) == 1489\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"21\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"25\"\nassert solution(\"6\") == \"36\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('10') == '355'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == 14\nassert solution(3) == 14\nassert solution(4) == 14\nassert solution(5) == 14\nassert solution(6) == 14\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 3\nassert solution(2) == 5\nassert solution(3) == 7\nassert solution(4) == 9\nassert solution(5) == 11\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"14\""
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#."
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.\\n#.#\\n#.#\\n#.\\n#.\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#.#\\n#.\\n#.\\n#."
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('#.#') == 'Yes'\nassert solution('#.#') == 'No'\nassert solution('#.#\\n#.#') == 'No'\nassert solution('#.#\\n#.#\\n#.#') == 'Yes'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 4\") == \"10\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 3 2\") == \"3\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\n\nprint(solution(stdin))\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 1 1') == '0'\nassert solution('1 2 3') == '5'\nassert solution('1 3 2') == '2'\nassert solution('2 3 1') == '2'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"3 3 4\") == \"10\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"3 4 5\") == \"6\"\nassert solution(\"2 2 3\") == \"2\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '53'\nassert solution('1 5 2') == '53'\nassert solution('1 5 3') == '5'\nassert solution('1 4 5') == '5'\nassert solution('1 5 1') == '5'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 5 2''') == '53'\nassert solution('''1 5 2''') == '53'\nassert solution('''5 5 5''') == '50'\nassert solution('''1 1 1''') == '0'\nassert solution('''5 2 4''') == '3'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 4 2') == '29'\nassert solution('1 5 2') == '53'\nassert solution('1 5 1') == '5'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1 1 2\n''') == '53'\n\nassert solution(\n'''3 3 3\n''') == '333'\n\nassert solution(\n'''3 4 4\n''') == '333'\n\nassert solution(\n'''6 6 6\n''') == '666'\n\nassert solution(\n'''8 2 2\n''') == '72'"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"53\"\nassert solution(\"1 5 2\") == \"53\"\nassert solution(\"10 2 -5 1\") == \"10\"\nassert solution(\"1 -2 -3\") == \"-7\"\nassert solution(\"1 2 3\") == \"6\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '53'"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\nn = int(input())\ntotal = 0\nfor i in range(1, n + 1):\n    price = int(input())\n    if i % 2 == 0:\n        total += price / 2\n    else:\n        total += price\nprint(total)\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n4980\n7980\n6980\n'''\n) == '15950'\n\nassert solution(\n'''\n5\n5\n5\n5\n5\n'''\n) == '1250'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"3\\n\"\nassert solution(\"3\\n2\\n1\") == \"5\\n\"\nassert solution(\"2\\n1\\n1\") == \"3\\n\"\nassert solution(\"2\\n1\\n2\") == \"3\\n\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '1'\nassert solution('3\\n100\\n1\\n2\\n') == '60000'\nassert solution('10\\n25\\n4\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n') == '1123743'\nassert solution('10\\n25\\n4\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n') == '1123743'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n5\\n') == '10'\nassert solution('3\\n5\\n9\\n') == '25'\nassert solution('4\\n7\\n17\\n23\\n') == '120'\nassert solution('5\\n8\\n12\\n14\\n20\\n') == '160'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''3\n4260\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n3460\n34"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"3\\n4980\\n7980\\n6980\\n\") == \"15950\"\nassert solution(\n\"2\\n4980\\n7980\\n\") == \"15900\"\nassert solution(\n\"5\\n4500\\n4500\\n4500\\n4500\\n4500\\n\") == \"45750\"\nassert solution(\n\"4\\n4980\\n7980\\n6980\\n\") == \"15900\"\nassert solution(\n\"3\\n4980\\n7980\\n6980\\n\") == \"15900\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('1\\n100\\n99\\n98\\n97\\n96\\n95\\n94\\n93\\n92\\n91\\n90\\n89\\n88\\n87\\n86\\n85\\n84\\n83\\n82\\n81\\n80\\n79\\n78\\n77\\n76\\n75\\n74\\n73\\n72\\n71\\n70\\n69\\n68\\n67\\n66\\n65\\n64\\n63\\n62\\n61\\n60\\n59\\n58\\n57\\n56\\n55\\n54\\n53\\n52\\n51\\n50\\n49\\n48\\n47\\n46\\n45\\n44\\n43\\n42\\n41\\n40\\n39\\n38\\n37\\n36\\n35\\n34\\n33\\n32\\n31\\n30\\n29\\n28\\n27\\n26\\n25\\n24\\n23\\n22\\n21\\n20\\n19\\n18\\n17\\n16\\n15\\n14\\n13\\n12\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n0\\n-1\\n-2\\n-3\\n-4\\n-5\\n-6\\n-7\\n-8\\n-9\\n-10\\n-11\\n-12\\n-13\\n-14\\n-15\\n-16\\n-17\\n-18\\n-19\\n-20\\n-21\\n-22\\n-23\\n-24\\n-25\\n-26\\n-27\\n-28\\n-29\\n-30\\n-31\\n-32\\n-33\\n-34\\n-35\\n-36\\n-37\\n-38\\n-39\\n-40\\n-41\\n-42\\n-43\\n-44\\n-45\\n-46\\n-47\\n-48\\n-49\\n-50\\n-51\\n-52\\n-53\\n-54\\n-55\\n-56\\n-57\\n-58\\n-59\\n-60\\n-61\\n-62\\n-63\\n-64\\n-65\\n-66\\n-67\\n-68\\n-69\\n-70\\n-71\\n-72\\n-73\\n-74\\n-75\\n-76\\n-77\\n-78\\n-79\\n-80\\n-81\\n-82\\n-83\\n-84\\n-85\\n-86\\n-87\\n-88\\n-89\\n-90\\n-91\\n-92\\n-93\\n-94\\n-95\\n-96\\n-97\\n-98\\n-99\\n-100\\n') == '15950'\nassert solution('5\\n100\\n200\\n300\\n400\\n500\\n') == '15950'\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '15950'\nassert solution('4\\n10\\n100\\n100\\n99\\n') == '15995'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n        \"3\\n4980\\n7980\\n6980\"\n        ) == \"15950\"\n\nassert solution(\n        \"4\\n4980\\n7980\\n6980\\n7500\"\n        ) == \"12100\"\n\nassert solution(\n        \"5\\n4980\\n7980\\n6980\\n7500\\n13000\"\n        ) == \"19980\"\n\nassert solution(\n        \"6\\n4980\\n7980\\n6980\\n7500\\n13000\\n21980\"\n        ) == \"28100\"\n\nassert solution(\n        \"7\\n4980\\n7980\\n6980\\n7500\\n13000\\n21980\\n29200\"\n        ) == \"35800\""
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\""
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('16\\n13\\n4\\n10\\n11\\n') == '4'\nassert solution('16\\n13\\n4\\n10\\n11\\n') == '4'\nassert solution('16\\n13\\n4\\n10\\n11\\n') == '4'\nassert solution('16\\n13\\n4\\n10\\n11\\n') == '4'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC Don\\nARC Curry\\nAGC Pasta\\nAPC Ramen\\nATC Hanbagu\\n\") == 215\nassert solution(\"29\\n20\\n7\\n35\\n120\") == 215\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n\"\"\"\n29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n\"\"\"\n29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n\"\"\"\n29\n20\n7\n35\n120\n\"\"\"\n) == \"215\"\n\nassert solution(\n\"\"\"\n29\n20\n7\n35\n120\n\"\"\"\n) == \"215\""
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n118\\n0\\n0\\n0\\n0\\n0\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n118\\n0\\n0\\n0\\n0\\n0\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n118\\n0\\n0\\n0\\n0\\n0\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\\n118\\n0\\n0\\n0\\n0\\n0\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == float(input)"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n3\") == \"1/3\"\nassert solution(\"3\\n1\\n4\") == \"1/4\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"1/100\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 30\") == \"7.5\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 30\") == \"7.5\"\nassert solution(\"10 40\") == \"14.25\"\nassert solution(\"10 50\") == \"25.0\"\nassert solution(\"10 60\") == \"35.5\"\nassert solution(\"10 70\") == \"45.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 30\") == \"7.5\"\nassert solution(\"100 100\") == \"10.0\"\nassert solution(\"1000 1000\") == \"100.0\"\nassert solution(\"1000 1\") == \"0.25\"\nassert solution(\"10 1\") == \"0.1\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('2 10 30') == '7.5'\nassert solution('10 30 10') == '2.0'\nassert solution('10 30 10 30') == '3.5'\nassert solution('10 30 10 30 30') == '10.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0.5'\nassert solution('1 3') == '0'\nassert solution('10 1') == '1'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 30\") == \"7.5\"\nassert solution(\"3 10\") == \"3.1\"\nassert solution(\"3 11\") == \"3.1\"\nassert solution(\"3 10 30\") == \"7.5\"\nassert solution(\"3 10 30 100\") == \"3.1\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''2\n10 30''') == '7.5'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''3\n1 10 30''') == '7.5'\nassert solution('''4\n1 1 1 1''') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n10\n15\n11\n14\n12\n''') == '2'\nassert solution('''\n7 1\n1\n1\n1\n1\n1\n1\n1\n''') == '-1'\nassert solution('''\n10 7\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('2 3\\n15\\n10\\n11\\n14\\n12') == '1'\nassert solution('2 3\\n10\\n15\\n11\\n14\\n13') == '0'\nassert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '1'\nassert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('10\\n15\\n11\\n14\\n12') == '2'\nassert solution('1\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('4\\n10\\n15\\n11\\n14\\n12') == '0'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '-1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 4') == '-1'\nassert solution('3 6') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('10') == '0'\nassert solution('15') == '1'\nassert solution('11') == '-1'\nassert solution('14') == '-2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == 2\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('Z') == 'A'\nassert solution('z') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"B\") == \"A\"\n\"\"\""
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'B'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('A') == 'a'\nassert solution('a') == 'a'\nassert solution('A') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'B'\nassert solution('C') == 'c'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'A'\nassert solution(input()) == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('B') == 'A'\nassert solution('aA') == 'aA'\nassert solution('ab') == 'a'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''2 3''') == '10'\nassert solution('''2 5''') == '0'\nassert solution('''0 0''') == '1'\nassert solution('''4 2''') == '2'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2') == '6'\nassert solution('1 2') == '3'\nassert solution('2 2') == '6'\nassert solution('10 4') == '1'\nassert solution('1000000000 1000000000') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1,1) == 1\nassert solution(3,3) == 0\nassert solution(1,0) == 0\nassert solution(0,0) == 1\nassert solution(0,0) == 1\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 10') == '9'\nassert solution('1 1') == '0'\nassert solution('1 100') == '1'\nassert solution('10000 100') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '0'\nassert solution('''10 3''') == '0'\nassert solution('''1 0''') == '0'\nassert solution('''10 1''') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('2 1') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 1') == ''\nassert solution('0 2') == ''\nassert solution('1 2') == '1'\nassert solution('2 0') == '1'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 2') == '6'\nassert solution('1 1') == '0'\nassert solution('2 2') == '6'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 2') == '6'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2005') == ''\nassert solution('2001') == 'AMBIGUOUS'\nassert solution('2005') == 'YYMM'\nassert solution('2001') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('MAY') == 'MMYY'\nassert solution('MAY') == 'AMBIGUOUS'\nassert solution('09') == 'NA'\nassert solution('09') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1905') == '1905'\nassert solution('01') == None\nassert solution('2099') == None\nassert solution('11') == None\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('01-05-1905') == '01-05-1905'\nassert solution('1905') == '1905'\nassert solution('17-05-1905') == '17-05-1905'\nassert solution('17-05-1900') == '17-05-1901'\nassert solution('17-05-1799') == '17-05-1799'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0105') == 'MMYY'\nassert solution('0519') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('201010') == 'MMYY'\nassert solution('2012076') == 'AMBIGUOUS'\nassert solution('2010331') == 'NA'\nassert solution('2012034') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0101') == 'MMYY'\nassert solution('010101') == 'AMBIGUOUS'\nassert solution('0112') == 'NA'\nassert solution('0101010') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YYMM\"\n\"\"\"\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n\n    def test(self):\n        self.assertEqual(solution(input()), \"YYMM\")"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"0801\") == \"AMBIGUOUS\"\nassert solution(\"1201\") == \"NA\"\nassert solution(\"1601\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0109\") == \"YYMM\"\nassert solution(\"00100\") == \"YYMM\"\nassert solution(\"00010\") == \"YYMM\"\nassert solution(\"00109\") == \"YYMM\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 2') == None\nassert solution('1 2 3') == None\nassert solution('1 2 3 4') == None\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 2\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('5') == 6\nassert solution('100') == 151250\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('3') == ''\nassert solution('4') == ''\nassert solution('100') == ''\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 2\nassert solution('3') == 1\nassert solution('4') == 0\nassert solution('5') == 1\nassert solution('6') == 0\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 2 3') == '2'\nassert solution('2 2 3 4') == '3'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '4'\nassert solution('1000') == '162'\nassert solution('2,3') == '2'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '12'\nassert solution('100') == '24'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '0'\nassert solution('4') == '6'\nassert solution('6') == '12'\nassert solution('10') == '26'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'\nassert solution('2 12') == '12'\nassert solution('11 13') == '23'\nassert solution('8 13') == '13'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 12') == '21'\nassert solution('7 19') == '7'\nassert solution('7 19') == '7'\nassert solution('23 19') == '21'\nassert solution('23 19') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 12''') == \"21\"\nassert solution('''15 12''') == \"19\"\nassert solution('''3 4''') == \"23\"\nassert solution('''24 22''') == \"0\"\nassert solution('''4 6''') == \"5\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 1') == '9'\nassert solution('0 2') == '2'\nassert solution('23 22') == '23'\nassert solution('11 1') == '11'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"21\"\n\n\"\"\"\n\nA,B = map(int,input().split())"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'\nassert solution('3 1') == '8'\nassert solution('0 0') == '23'\nassert solution('11 15') == '12'\nassert solution('11 21') == '14'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"0 2919\") == \"2919\"\nassert solution(\"4 104\") == \"4\"\nassert solution(\"3 6\") == \"3\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 4\") == \"0\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 3') == '3'\nassert solution('2 2') == '2'\nassert solution('1 4') == '-99'\nassert solution('1 3') == '-97'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2919') == '3719'"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719'"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[29:31]\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2919''') == '3719'\nassert solution('''3 1622''') == '3141'\nassert solution('''5 473''') == '567'\nassert solution('''13 1''') == '113'\nassert solution('''29 19''') == '3719'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1 1199') == '1199'\nassert solution('2 3811') == '3811'\nassert solution('2 4999') == '9999'\nassert solution('1 5292') == '5592'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''3 4''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''15 2''') == '4'\nassert solution('''10 32''') == '3'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(11, 2) == 4\nassert solution(10101, 2) == 8\nassert solution(11, 5) == 1\nassert solution(1, 2) == 1\nassert solution(10, 3) == 1\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(11, 2) == \"4\"\nassert solution(43, 3) == \"5\"\nassert solution(1024, 2) == \"32\"\nassert solution(9989, 3) == \"233\"\nassert solution(1234, 9) == \"6\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11 2') == '4'\nassert solution('11 15') == '1'\nassert solution('11 16') == '2'\nassert solution('11 17') == '3'\nassert solution('11 18') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"10010 5\") == \"6\"\nassert solution(\"11 5\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"13 5\") == \"1\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 2') == '4'\n\n'''\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1,2) == 1\nassert solution(10,10) == 1\nassert solution(100,10) == 2\nassert solution(101,10) == 3\nassert solution(1000,10) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(11, 2) == '4'\nassert solution(11, 8) == '1'\nassert solution(100, 16) == '16'\nassert solution(999999999, 2) == '64'\nassert solution(11, -2) == 'ValueError'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 4\nassert solution(4) == 6\nassert solution(5) == 8\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5) == '3'\nassert solution(3) == '2'\nassert solution(10) == '5'\nassert solution(1) == '1'\nassert solution(0) == '0'\n\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '8'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('2') == '1'\nassert solution('7') == '3'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"25\") == \"10\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"2 3\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input().strip()) == \"Yay!\"\n\"\"\"\n\na, b = map(int, input().split())"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 2') == 'Yay!'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Yay!\"\nassert solution(\"2 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"4 4\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('3 3') == 'Yay!'\nassert solution('7 9') == 'Yay!'\nassert solution('5 4') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"15 4\") == \"Yay!\"\nassert solution(\"15 5\") == \"Yay!\"\nassert solution(\"15 6\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('5 4') == 'Yay!'\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nA, B = map(int, input().split())\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"Yay!\"\nassert solution(input(\"\")) == \"Yay!\"\nassert solution(input(\"\")) == \"Yay!\"\nassert solution(input(\"\")) == \"Yay!\"\nassert solution(input(\"\")) == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('5 10') == 'Yay!'\nassert solution('10 10') == 'Yay!'\nassert solution('7 9') == 'Yay!'\nassert solution('7 9') == 'Yay!'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1234567876) == \"34\"\nassert solution(\"1234567876\") == \"34\"\nassert solution(\"123456787\") == \"34\"\nassert solution(\"123456788\") == \"34\"\nassert solution(\"123456789\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"1234567\") == \"34\"\nassert solution(\"12345678\") == \"34\"\nassert solution(\"1234567890\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567890') == '34'\nassert solution('0123456789') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1234567876') == ''\nassert solution('1234567') == ''\nassert solution('1234567876') == ''\nassert solution('123456789') == ''\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345677876') == '34'\nassert solution('12345677865') == '34'\nassert solution('12345677866') == '34'\nassert solution('12345677867') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '0'\nassert solution('1123456789') == '34'\nassert solution('112345678910') == '34'\nassert solution('12345678910') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567654\") == \"34\"\nassert solution(\"0123456789\") == \"34\"\nassert solution(\"1234\") == \"34\"\nassert solution(\"12345\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234\") == \"34\"\nassert solution(\"9999\") == \"34\"\nassert solution(\"123456789\") == \"34\"\nassert solution(\"12384536\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1234567876) == '34'\nassert solution(12345678) == '34'\nassert solution(123456789) == '34'\nassert solution(123456789012345678901234567890123456789012345678) == '34'\nassert solution(12345678901234567890123456789012345678901234567890123456789012345678) == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567890') == '34'\nassert solution('1234567890' * 5) == '34'\nassert solution('999999999999999999999999999999999') == '34'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '''5 3'''\nassert solution('''2''') == '''1 7'''\nassert solution('''7''') == '''12 13'''\nassert solution('''13''') == '''2999999987 2'''\nassert solution('''52''') == '''12 13'''\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '2999999987 2'\nassert solution('''14\n914982237 1 846467569 5212566862 4612156700 1 2070670143 7112442692 9718257596 62499491885 78173887375 88840781462 2333809743 9824507505 15653691542 92408901176 19269279402 65202788291 17255869403 72078825893 99765536891 16747641018 92630748013 98422874545 58185741869 92406180699 70513456037 19897451776''') == '30 2310'\n'''\n\n\n'''\n\nimport sys"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\n\n\n\"\"\"\nfrom collections import Counter, defaultdict\nimport sys\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3\"\"\") == \"\"\"5 3\"\"\"\n\nassert solution(\n\"\"\"2\"\"\") == \"\"\"1 7\"\"\"\n\nassert solution(\n\"\"\"7\"\"\") == \"\"\"12 13\"\"\"\n\nassert solution(\n\"\"\"13 52 0 13 26 52\"\"\") == \"\"\"12 13\"\"\"\n\nassert solution(\n\"\"\"2\"\"\") == \"\"\"1 7\"\"\""
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13'\n\n\n-----\n\n* Note: In the first example $n=3$, $a = [3, 12, 6]$ means the first type of swords has remained in the basement for three people, the second type has remained for 12 people and the third type has remained for 6 people.\n* In the second example $n=2$, $a = [2, 9]$ means that at least one person took one of the two types of swords (the first type).\n* In the third example $n=7$, $a = [13, 52, 0, 13, 26, 52]$ means that at least one person took the first type of the first two types of swords and the second and third types of swords (the first, second and third types of swords).\n\n* Note: Each of the values $a_i$ are guaranteed to be different.\n\n* Note: In the fourth and fifth examples, we don't know the number of people who participated in the theft and how many swords each of them have taken.\n\n* Note: In the sixth example, we do know the number of people who participated in the theft.\n\n* Note: In the seventh example, we do know the number of people who participated in the theft.\n\n* Note: In the eighth and ninth examples, we do know the number of people who participated in the theft and how many swords each of them have taken.\n\n* Note: In the tenth example, we do know the number of people who participated in the theft.\n\n* Note: In the eleventh example, we do know the number of people who participated in the theft.\n\n* Note: In the twelfth example, we do know the number of people who participated in the theft.\n\n* Note: In the thirteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the fourteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the fifteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the sixteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the seventeenth example, we do know the number of people who participated in the theft.\n\n* Note: In the eighteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the nineteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the twentieth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-first example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-second example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-third example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fourth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fifth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-sixth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-seventh example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-eighth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-ninth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-tenth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-eleventh example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-twelfth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-thirteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fourth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fith example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-sixth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-seventhr example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-eight example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-ninth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-tenth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-eleventh example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-twelfth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-thirteenth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fourth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-fifth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-sixth example, we do know the number of people who participated in the theft.\n\n* Note: In the twenty-seventh example, we do know the number of people who participated in the theft."
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3'''\n) == '5 3'\n\nassert solution(\n'''2'''\n) == '1 7'\n\nassert solution(\n'''7'''\n) == '12 13'\n\nassert solution(\n'''13 52 0 13 26 52'''\n) == '2999999987 2'\n\nassert solution(\n'''7'''\n) == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\nassert solution('7\\n13 52 0 13 26 52') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3'''\n) == '5 3'\n\nassert solution(\n'''2'''\n) == '1 7'\n\nassert solution(\n'''7'''\n) == '12 13'\n\nassert solution(\n'''13 52 0 13 26 52'''\n) == '2999999987 2'\n\nassert solution(\n'''7'''\n) == '12 13'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''7\n1 1 1 2 2 3 2''') == '2'\nassert solution('''10\n1 1 1 2 2 3 3 4 4 4''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n3 1 4 1\n''') == '3'\nassert solution(\n'''\n3\n1 1 1\n''') == '1'\nassert solution(\n'''\n5\n1 1 1 2 2\n''') == '2'\nassert solution(\n'''\n1\n1\n''') == '1'\nassert solution(\n'''\n2\n1 1\n''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\nassert solution('''10\n1 1 1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''1\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 4 1\\n') == '1'\nassert solution('4\\n1 3 4 2\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('7\\n1 2 2 1 2 2 3 3\\n') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4\n    3 1 4 1\n    \"\"\") == '3'\n\nassert solution(\n    \"\"\"\n    3\n    1 1 1\n    \"\"\") == '1'\n\nassert solution(\n    \"\"\"\n    5\n    1 1 1 2 2\n    \"\"\") == '2'\n\nassert solution(\n    \"\"\"\n    6\n    3 3 3 3 3 3\n    \"\"\") == '1'\n\nassert solution(\n    \"\"\"\n    10\n    3 3 3 3 3 3 3 3 3 3 3\n    \"\"\") == '1'"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''1 1\n1 1\n''') == '0'\nassert solution('''1 1\n2 1\n''') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\nassert solution('2 2\\n1 2\\n2 3\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '1'\nassert solution('2 0') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 2\\n2 3') == '2'\nassert solution('4 0\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('3 2\\n1 3\\n2 3') == '2'\nassert solution('1 0\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('2 0\\n1 2\\n2 3\\n3 4') == '1'\n\n\n-----"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '2'\nassert solution('0 0') == '1'\nassert solution('3 2') == '2'\nassert solution('1 0') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '2'\nassert solution('''4 3\n1 2\n2 3\n1 4\n2 4\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2 1\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n1 2\\n2 3\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n5\") == \"11\"\nassert solution(\"1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n5\") == \"4\"\nassert solution(\"1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n5\") == \"11\"\nassert solution(\"1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n5\") == \"4\"\nassert solution(\"1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n5\") == \"11\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\n\nassert solution('''5 2\n1 2 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n\nassert solution('''5 2\n1 2 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n\nassert solution('''5 2\n2 1 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n\nassert solution('''5 3\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n3 6\n4 5\n7 8\n7 6\n''') == '5'"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == '4'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n7 4') == '4'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n7 4\\n7 4') == '4'\n\n\n\"\"\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''5 2\n2 1 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''4 1\n1 2 3 4\n1 2\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''5 1\n2 1 2 1 2 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom typing import Tuple, List"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 1'\nassert solution('1 3') == '1 2'\nassert solution('2 3') == '1 1'\nassert solution('1 2 3') == '1 1'\nassert solution('2 3 4') == '1 1'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 3\\n5 7 8 9 10 11\\n5 6 7 8 9 10 11') == '1 1\\n1 7\\n2 2\\n2 8\\n3 1\\n3 7\\n4 3\\n4 9\\n5 1\\n5 7'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n5 7 8 9 10 11') == '1 5\\n2 1\\n2 9999999994\\n3 1\\n3 7\\n4 3\\n4 9\\n5 1\\n5 7'\nassert solution('2 3\\n5 7 8 9 10 11\\n5 6 7 8 9 10 11') == '1 1\\n1 7\\n2 2\\n2 8\\n3 1\\n3 7\\n4 3\\n4 9\\n5 1\\n5 7'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994'\n\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\n5 10000000000\\n5 6 9999999999') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n10 15 12\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"3 5\\n10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994'''\n\nassert solution('''1\n1\n''') == '''1 1'''\n\nassert solution('''3 2\n2 3 5 4\n2 3 4 7 8''') == '''1 2\n1 2\n1 4\n2 3\n2 3\n2 4\n2 4\n2 4'''\n\nassert solution('''3\n1\n1\n1\n''') == '''1 1\n1 1\n1 1\n1 1'''"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 2\\n') == '1 1\\n1 9\\n'\nassert solution('1 2\\n1 2\\n') == '1 1\\n1 9\\n'\nassert solution('3 6\\n10 15 12\\n1 9 12 23 26 37\\n') == '1 1\\n1 9\\n2 2\\n2 13\\n'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994\\n'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('3 6 5 4') == '2 1 3'"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n\n\"\"\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\\n\" + \"RBGRRBRGG\") == \"2\"\nassert solution(\"9\\n\" + \"BBBGBRRR\") == \"2\"\nassert solution(\"9\\n\" + \"BBRRRRGGGGGRR\") == \"6\"\nassert solution(\"13\\n\" + \"BBRRRRGGGGGRR\") == \"6\""
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RBRRRRGGGGGRR') == 'BGRBRBGBGBGRG'\nassert solution('BBBGBRRR') == 'BRBGBRGR'\nassert solution('BBRRRRGGGGGRR') == 'BGRBRBGBGBGRG'\nassert solution('BBBBBBRRRRRRRRRRRR') == 'BGBGBBGBGBGBBGB'\nassert solution('BBBBBBRRRRRRRRRRRR') == 'BGBGBBGBGBGBBGB'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\""
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RBGRRBRGG\\n') == 'RBGRGBRGR'\nassert solution('BBBGBRRR\\n') == 'BRBGBRGR'\nassert solution('BBRRRRGGGGGRR\\n') == 'BGRBRBGBGBGRG'"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('RRG') == 1\nassert solution('RBG') == 2\nassert solution('RGBB') == 1\nassert solution('RBGRB') == 2\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2'\nassert solution('''8\nBBBGBRRR\n''') == '2'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6'"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '9',\n    'RBGRRBRGG',\n])) == '\\n'.join([\n    '2',\n    'RBGRGBRGR',\n])\n\nassert solution('\\n'.join([\n    '8',\n    'BBBGBRRR',\n])) == '\\n'.join([\n    '2',\n    'BRBGBRGR',\n])\n\nassert solution('\\n'.join([\n    '13',\n    'BBRRRRGGGGGRR',\n])) == '\\n'.join([\n    '6',\n    'BGRBRBGBGBGRG',\n])\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 3 4 7 5 6 8\n''') == '4\\n2 3 5 6'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2\\n1 4'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '1\\n1'\nassert solution('''10\n10 9 8 7\n''') == '1\\n1'\nassert solution('''4\n10 9 8 7\n''') == '1\\n1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7''') == ''"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n'''\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4'\nassert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''4\n10 9 8 7''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6'\nassert solution('''9\n6 7 8 3 4 5 9 10''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1\\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\\n\"\nassert solution(\"7\\n4 5 6 3 2 1 7 8 9\\n\") == \"2\\n1 4\\n\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\n\n\n\n-----Time Limit Exceeded\n------\n\nFor large inputs, it is a good idea to take the advantage of the fact that there is a maximum number of elements in a list.\n\nOne approach to this problem is to reduce the list to a smaller sublist.\n\nIn this case, if the list is non-decreasing, the sublist can be checked by scanning only the first $n-1$ elements.\n\nFor example, let the list be $[1, 2, 4, 6, 8, 10]$, then the sublist of length $3$ is $[1, 2, 4]$, and the sublist of length $4$ is $[1, 2, 4, 6]$.\n\nIn general, if the list is non-decreasing, the sublist can be checked by scanning only the first $n-1$ elements. However, scanning from the beginning of the list would not work because the list is non-decreasing.\n\nSo instead, it is necessary to reduce the list to a smaller sublist.\n\nFor example, let the list be $[1, 2, 4, 6, 8, 10]$, then the sublist of length $3$ is $[1, 2, 4]$, and the sublist of length $4$ is $[1, 2, 4, 6]$.\n\nAgain, the sublist can be checked by scanning only the first $n-2$ elements.\n\nIn general, if the list is non-decreasing, the sublist can be checked by scanning only the first $n-1$ elements.\n\nFor example, let the list be $[1, 2, 4, 6, 8, 10]$, then the sublist of length $3$ is $[1, 2, 4]$, and the sublist of length $4$ is $[1, 2, 4, 6]$.\n\nAgain, the sublist can be checked by scanning only the first $n-2$ elements.\n\nIn general, if the list is non-decreasing, the sublist can be checked by scanning only the first $n-1$ elements.\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\"\n\n\"\"\"\nlst = [1, 2, 3]"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('2 3') == 'No'\nassert solution('3 2') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1''') == 'Yes'\nassert solution('''1 3''') == 'Yes'\nassert solution('''3 2''') == 'No'\nassert solution('''2 3''') == 'Yes'\nassert solution('''1 1''') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 2') == 'No'\nassert solution('3 1') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 2\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('2 3') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"11 50\") == \"8\"\nassert solution(\"11 51\") == \"7\"\nassert solution(\"11 52\") == \"5\"\nassert solution(\"11 53\") == \"4\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:5]\n\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''81 58''') == '110'\nassert solution('''0 0''') == '0'\nassert solution('''0 0''') == '0'\nassert solution('''-1 -1''') == '-1'\nassert solution('''-2 -2''') == '-1'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('6 5') == '7'\nassert solution('7 19') == '15'\nassert solution('22 9') == '17'\nassert solution('54 16') == '70'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\""
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5') == '10'\nassert solution('10 15') == '30'\nassert solution('10 15') == '30'\nassert solution('100 22') == '250'\nassert solution('1 22') == '10'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 11') == '12'\nassert solution('1 10 50') == '8'\nassert solution('1 100 1') == '101'\nassert solution('1 100 1 99') == '104'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"6 3\") == \"9\"\nassert solution(\"33 18\") == \"58\"\nassert solution(\"28 13\") == \"16\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"20 10\") == \"10\"\nassert solution(\"20 10\") == \"10\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\n'''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No possible password.\"\nassert solution(\"2\") == \"No possible password.\"\nassert solution(\"22\") == \"No possible password.\"\nassert solution(\"111\") == \"No possible password.\"\nassert solution(\"1\") == \"No possible password.\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '8'\nassert solution('''3''') == '120'\nassert solution('''4''') == '840'\nassert solution('''5''') == '6120'\nassert solution('''6''') == '6010'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'') == ''\nassert solution(\n'1') == ''\nassert solution(\n'2') == ''\nassert solution(\n'10') == ''\nassert solution(\n'20') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"8\"\nassert solution(\"15\") == \"4096\"\nassert solution(\"9\") == \"1024\"\nassert solution(\"24\") == \"6984\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"27\"\nassert solution(\"4\") == \"162\"\nassert solution(\"5\") == \"52926\"\nassert solution(\"6\") == \"370369\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == 'YES'\nassert solution('5') == 'NO'\nassert solution('9') == 'YES'\nassert solution('6') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''2''') == 'NO'\nassert solution('''8''') == 'NO'\nassert solution('''1''') == 'YES'\nassert solution('''9''') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('5') == 'YES'\nassert solution('9') == 'YES'\nassert solution('34') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('7') == 'YES'\nassert solution('10') == 'NO'\nassert solution('13') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789') == 'ABC'\nassert solution('1234567891') == 'ABD'\nassert solution('12345678912') == 'ABCD'\nassert solution('123456789123') == 'ABDCD'\nassert solution('1234567891234') == 'ABDCDD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'ABC'\nassert solution('1') == 'ABD'\nassert solution('2') == 'ABC'\nassert solution('3') == 'ABC'\nassert solution('4') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC999') == 'ABC'\nassert solution('ABC001') == 'ABD'\nassert solution('ABC002') == 'ABD'\nassert solution('ABC003') == 'ABD'\nassert solution('ABC004') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'ABC'\nprint('Test 1 passed!')\n\nassert solution(stdin) == 'ABC'\nprint('Test 2 passed!')\n\nassert solution(stdin) == 'ABD'\nprint('Test 3 passed!')\n\nassert solution(stdin) == 'ABD'\nprint('Test 4 passed!')\n\nassert solution(stdin) == 'ABD'\nprint('Test 5 passed!')\n'''"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('998') == 'ABD'\nassert solution('99') == 'ABD'\nassert solution('98') == 'ABD'\nassert solution('97') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[0:3]\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(999) == 'ABC'"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('A') == 'A'\nassert solution('AA') == 'AA'\nassert solution('AB') == 'AB'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''999''') == 'ABC999'\nassert solution('''998''') == 'ABD998'\nassert solution('''997''') == 'ABD997'\nassert solution('''996''') == 'ABD996'\nassert solution('''995''') == 'ABD995'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n16''') == 'Nay!'\n'''\n----Input/Output----\n\n* Input\n* 1\n* 2\n* 4\n* 8\n* 9\n* 16\n\n* Output\n* 'Yay!', 'Nay!', 'Yay!' or 'Nay!'\n* 'Yay!', 'Nay!', 'Yay!' or 'Nay!'\n* 'Yay!', 'Nay!', 'Yay!' or 'Nay!'\n* 'Yay!', 'Nay!', 'Yay!' or 'Nay!'\n* 'Yay!', 'Nay!', 'Yay!' or 'Nay!'\n\n* Explanation\n* Antenna A cannot communicate with any other antenna.\n* Antenna B cannot communicate with any other antenna if the distance is less than 2, because:\n* The distance between A and B is 2 - 1 = 1\n* The distance between B and A is 2 - 1 = 1\n* The distance between A and C is 4 - 1 = 3\n* The distance between A and D is 8 - 1 = 7\n* The distance between A and E is 9 - 1 = 8\n* The distance between B and C is 4 - 2 = 2\n* The distance between B and D is 8 - 2 = 6\n* The distance between B and E is 9 - 2 = 7\n* The distance between C and D is 8 - 4 = 4\n* The distance between C and E is 9 - 4 = 5\n* The distance between D and E is 9 - 8 = 1\n* And none of them is greater than 15. Thus, the correct output is Yay!.\n'''\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 4 8 9 15\") == \"Yay!\"\nassert solution(\"4 4 4 4 4 4\") == \"Yay!\"\nassert solution(\"4 3 6 8 9\") == \"Yay!\"\nassert solution(\"2 1 2 3 3\") == \"Yay!\"\nassert solution(\"1 1 1 1 1\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16') == 'Failed'\nassert solution('1\\n2\\n4\\n8\\n9\\n17') == 'Failed'\nassert solution('1\\n2\\n4\\n8\\n9\\n18') == 'Failed'\nassert solution('1\\n2\\n4\\n8\\n9\\n19') == 'Failed'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16\\n') == 'Nay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n17\\n') == 'Nay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n18\\n') == 'Nay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n19\\n') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n18\\n') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n17') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n18') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n19') == 'Nay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n13\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n1000\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n1001\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16\\n') == '(there exists a pair of antennas that cannot communicate directly)'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0') == 'Yay!'\nassert solution('0\\n1\\n1\\n1\\n1\\n1\\n1') == '(there exists a pair of antennas that cannot communicate directly)'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n13\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n25\\n\") == \"Yay!\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('pink') == 'pink'\nassert solution('pink') == 'pink'\nassert solution('red') =='red'\nassert solution('red') =='red'\nassert solution('blue') == 'blue'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3200\npink''') == \"pink\"\nassert solution('''3200\nblue''') == \"red\"\n'''\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a\\nabcdefghijklmnopqrstuvwxyz\\n') == 'a\\nabcdefghijklmnopqrstuvwxyz'\nassert solution('a\\nabcdefghijklmnopqrstuvwxyz\\nred\\n') =='red'\nassert solution('a\\nabcdefghijklmnopqrstuvwxyz\\n1234567890\\n') == '1234567890'\nassert solution('a\\nabcdefghijklmnopqrstuvwxyz\\n1234567890\\nred\\n') =='red'\n\nassert solution('a\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\n') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == ''\n\n\"\"\"\n\nn = int(input())\ns = input()\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('3001\\nred') =='red'\nassert solution('3200\\nblack') == 'black'\nassert solution('3001\\nblack') == 'black'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 ') == ''\nassert solution('2') == ''\nassert solution('a') == ''\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3200, 'pink') == 'pink'\nassert solution(3200,'red') =='red'\nassert solution(3200, 'blue') == 'blue'\nassert solution(3200, 'green') == 'green'\nassert solution(3200, 'white') == 'white'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('pink') == 'pink'\nassert solution('red') =='red'\nassert solution('green') == 'green'\nassert solution('yellow') == 'yellow'\nassert solution('blue') == 'blue'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4206\") == \"ARC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"5849\") == \"AGC\"\nassert solution(\"100\") == \"AGC\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1189') == 'AGC'\nassert solution('1199') == 'ABC'\nassert solution('1179') == 'ARC'\nassert solution('1199') == 'ABC'\nassert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"ARC\"\n'''"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'AGC'\nassert solution('1199') == 'ABC'\nassert solution('1199') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == \"ABC\"\nassert solution(\"121\") == \"ARC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"2899\") == \"ARC\"\nassert solution(\"2899\") == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'ABC'\nprint('All test cases passed successfully.')\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1300') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('2899') == 'ARC'\nassert solution('3199') == 'AGC'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(119) == \"991\"\nassert solution(123) == \"131\"\nassert solution(111) == \"111\"\nassert solution(999) == \"999\"\nassert solution(1000) == \"1000\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('119') == '991'\nassert solution('999') == '9999'\nassert solution('123') == '321'\nassert solution('456') == '654'\nassert solution('789') == '879'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('123') == '321'\nassert solution('159') == '19'\nassert solution('999999999') == '99999999'\nprint('All set')\n\n\"\"\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(119) == \"991\"\nassert solution(567) == \"567\"\nassert solution(10) == \"10\"\nassert solution(12) == \"12\"\nassert solution(14) == \"14\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('12') == '21'\nassert solution('11') == '91'\nassert solution('999') == '1299'\nassert solution('123') == '133'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('9') == '9'\nassert solution('999') == '999'\nassert solution('12') == '12'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(119) == \"991\"\n\"\"\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"22\") == \"22\"\nassert solution(\"222\") == \"222\"\nassert solution(\"2234\") == \"2234\"\nassert solution(\"12345\") == \"1234\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(119) == '991'\nassert solution(201) == '211'\nassert solution(1123) == '1239'\nassert solution(1234) == '1234'\nassert solution(1009) == '999'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ac\") == \"abac\"\nassert solution(\"abc\") == \"aabcc\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abac\") == \"abac\"\nassert solution(\"aabcc\") == \"abac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ac') == 'ac'\nassert solution('bccddaaf') == 'bcdaf'\nassert solution('abbaac') == 'abac'\nassert solution('bccdda') == 'bcdaf'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\n\nfor _ in range(T):\n    b = sys.stdin.readline().strip()\n    a = \"\"\n    while len(a) < len(b):\n        a += b[:2]\n        b = b[2:]\n    print(a)\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"aba\"\nassert solution(\"aab\") == \"aab\"\nassert solution(\"aaaaa\") == \"aab\"\nassert solution(\"aaabbb\") == \"aab\"\nassert solution(\"bbaaa\") == \"baa\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\nfrom itertools import combinations\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"bac\") == \"bac\"\nassert solution(\"cccddc\") == \"cccddc\"\nassert solution(\"dddd\") == \"dddd\"\nassert solution(\"abcdef\") == \"abcd\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abac') == 'abac'\nassert solution('ac') == 'ac'\nassert solution('bccddaaf') == 'bcdaf'\nassert solution('zzzzzzzzzz') == 'zzzzzzzzzz'\nassert solution('abcabcabc') == 'abcabcabc'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n2\naaaa\naaaa\n''') == 'aaaa'\nassert solution('''\n1\nab\n''') == 'a'\nassert solution('''\n1000\nqweasdzxcvtgbn\n''') == 'qweasdzxcvtgbn'\nassert solution('''\n2\naba\naba\n''') == 'ab'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''10 2\n20 5\n19 4\n111 2\n999 7\n19 2\n1000 9''') == '0\\n1\\n3\\n333\\n9'\nassert solution('''10 2\n20 5\n19 4\n111 2\n999 7\n19 2\n1000 9''') == '0\\n1\\n3\\n333\\n9'\nassert solution('''10 2\n20 5\n19 4\n111 2\n999 7\n19 2\n1000 9''') == '0\\n1\\n3\\n333\\n9'\nassert solution('''10 2\n20 5\n19 4\n111 2\n999 7\n19 2\n1000 9''') == '0\\n1\\n3\\n333\\n9'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('1 2') == ''\nassert solution('1 3') == '0'\nassert solution('1 4') == '2'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n3\\n3') == '1'\nassert solution('2\\n2\\n5') == '1'\nassert solution('1\\n5\\n7') == '2'\nassert solution('2\\n5\\n7') == '1'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"2 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\n'''"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 11\") == \"4\"\nassert solution(\"10 4\") == \"5\"\nassert solution(\"13 9\") == \"3\"\nassert solution(\"100 13\") == \"333\"\nassert solution(\"123 456\") == \"0\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"2.666666666666667\"\n\n\"\"\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\n'''"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n--- 2.2224897171239-5 seconds ---\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 1 2\\n') == '2.666666666666667'\nassert solution('3 4 1 2\\n') == '2.666666666666667'\nassert solution('1 2 3 4 5\\n') == '0'\nassert solution('0.2 0.2 0.2 0.2 0.2\\n') == '0'\nassert solution('1 2 3 4 5\\n') == '0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n4\") == \"1\"\nassert solution(\"1\\n5\") == \"1\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\nInput\n5 4\n3 4 1 2 3\n\nOutput\n3.333333333333333\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 4 1 2\\n') == '2.666666666666667'\nassert solution('2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n2 16\\n2 17\\n2 18\\n2 19\\n2 20\\n2 21\\n2 22\\n2 23\\n2 24\\n2 25\\n2 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n2 39\\n2 40\\n2 41\\n2 42\\n2 43\\n2 44\\n2 45\\n2 46\\n2 47\\n2 48\\n2 49\\n2 50\\n2 51\\n2 52\\n2 53\\n2 54\\n2 55\\n2 56\\n2 57\\n2 58\\n2 59\\n2 60\\n2 61\\n2 62\\n2 63\\n2 64\\n2 65\\n2 66\\n2 67\\n2 68\\n2 69\\n2 70\\n2 71\\n2 72\\n2 73\\n2 74\\n2 75\\n2 76\\n2 77\\n2 78\\n2 79\\n2 80\\n2 81\\n2 82\\n2 83\\n2 84\\n2 85\\n2 86\\n2 87\\n2 88\\n2 89\\n2 90\\n2 91\\n2 92\\n2 93\\n2 94\\n2 95\\n2 96\\n2 97\\n2 98\\n2 99\\n2 100') == '2.666666666666667'\nassert solution('5 2\\n3 4 1 2 3 4\\n') == '4.5'\nassert solution('3 2\\n1 2 3 4\\n') == '2.666666666666667'\nassert solution('1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100') == '4.5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4 1 2') == '2.666666666666667'\nassert solution('4\\n3 4 1 2') == '2.666666666666667'\nassert solution('4\\n3 3 4 1 2') == '2.666666666666667'\nassert solution('5\\n3 4 1 2 3') == '2.4'\nassert solution('2\\n0 0 0 0') == '0.0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 1 2') == '2.666666666666667'\nassert solution('4 3 1 2') == '2.666666666666667'\nassert solution('3 4 1 2') == '2.666666666666667'\nassert solution('4 3 2 1') == '2.666666666666667'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('no'): 'no' == 'NO'\nassert solution('no'): 'NO' == 'NO'\nassert solution('yes'): 'YES' == 'YES'\nassert solution('yes'): 'YES' == 'YES'\nassert solution('yes'): 'YES' == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n2 3\n3 4''') == \"YES\"\nassert solution('''4 2\n4 1 2 3\n1 3\n4 2\n1 4 3 2 3\n2 4\n1 2 2 4\n1 2''') == \"NO\"\nassert solution('''5 1\n4 2\n2 1 2 3 4\n1 3\n4 2\n1 4 3 2 3\n2 4\n1 2 2 4\n1 2''') == \"NO\"\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(''.join(input().strip() for _ in range(int(input().strip())))) == stdout.strip()\n'''"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3''') == 'YES'\nassert solution('''8\n2 3\n2 3 1 2 3 4 2 3\n3 2\n2 3\n2 3 1 2 3 4 2 3\n1 2\n4 2\n2 3\n2 3 1 2 3 4 2 3\n1 3\n4 2\n2 3\n2 3 1 2 3 4 2 3''') == 'YES'\nassert solution('''6\n3 3\n4 1 3 4 2 3\n1 2\n3 1 2\n4 1 2 3 4\n1 3\n1 2\n4 2\n1 3\n4 2\n4 3 2 1\n1 3\n1 2\n4 2\n4 1 2 3\n1 3\n1 2\n4 2\n2 1 4 3\n1 3\n4 2\n2 1 2 3\n1 3''') == 'YES'\nassert solution('''4\n4 4\n1 2 3 4\n2 3\n3 4\n1 4\n2 4\n3 4\n1 3\n2 1\n3 2\n1 4\n1 3\n4 4\n1 2 3 4\n1 4\n2 3\n2 3\n1 4\n1 3''') == 'YES'\nassert solution('''8\n4 4\n1 2 3 4 2 3\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2\n1 2\n2 1 2\n3 2''') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('foo') == 'NO'\nassert solution('bar') == 'NO'\nassert solution('bar') == 'NO'\nassert solution('bar') == 'NO'\nassert solution('bar') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''6\n2 2\n3 2 1\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''6\n2 2\n3 2 1\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\n\n'''\n\n'''"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''4 1\n3 2\n5 1\n1 2\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''6 2\n6 1\n4 1\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n2 1''') == 'NO'\nassert solution('''1 2\n1 2\n2 1\n2 1\n1 2\n2 1\n1 2\n2 1''') == 'YES'\nassert solution('''1 2\n2 1\n2 1\n1 2\n2 1\n1 2\n2 1\n1 2\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('hpsrbsh') == 'hpsrbsh'\nassert solution('stkr') =='stkr'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"h\") == \"h\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"z\") == \"z\"\nassert solution(\"bab\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"baabbb\") == \"bab\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('o') == 'o'\nassert solution('o'*10) == 'o'*10\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nbaabbb''') == 'bab'\nassert solution('''10\nooopppssss''') == 'oops'\nassert solution('''1\nz''') == 'z'\nprint('tests passed')\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('o') == 'o'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bab') == 'bab'\nassert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nprint('Testcases passed')\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n8 3\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '1'\n\nassert solution(\n'''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\n\nassert solution(\n'''\n5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n\nassert solution(\n'''\n3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '0'\n\nassert solution(\n'''\n4 4\n1 2 1\n2 3 2\n2 4 2\n1 4 2\n1 5 3\n1 1 1\n''') == '1'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '0'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\") == \"1\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_) == output_\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 2 1') == '1'\nassert solution('1 2 2') == '0'\nassert solution('1 4 2') == '1'\nassert solution('1 4 3') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'\nassert solution('''10 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '2'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n1 3') == 0\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == 2\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == 0\nassert solution('8 8\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == 1\nassert solution('9 9\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\\n8 9 1\\n') == 2\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\n\nassert solution(\n    '''4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == '0'\n\nassert solution(\n    '''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '0'\n\nassert solution(\n    '''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '1'\n\nassert solution(\n    '''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '2'"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRRGGGBR') == 'GRG'\nassert solution('RGBRGGB') == 'RGBRGGB'\nassert solution('BGBGRGB') == 'BGBGRGB'\nassert solution('RBGRGBR') == 'BGBGRGB'\nassert solution('RRRRGGGGB') == 'GRG'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3\nBRB\n\"\"\") == \"\"\"\n1\nGRB\n\"\"\"\nassert solution(\n    \"\"\"\n7\nRGBGRBB\n\"\"\") == \"\"\"\n3\nRGBRGBR\n\"\"\"\nassert solution(\n    \"\"\"\n4\nBBBBBB\n\"\"\") == \"\"\"\n4\nBBBBBB\n\"\"\"\nassert solution(\n    \"\"\"\n8\nRBRRBRRRBBRBBRBBBRBB\n\"\"\") == \"\"\"\n3\nRRRRRRRRRB\n\"\"\"\nassert solution(\n    \"\"\"\n8\nBRBBRBRBBBRBBRBBBRBBRBB\n\"\"\") == \"\"\"\n3\nRRRRRRRRRR\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\nBB\n\"\"\") == \"\"\"\n1\nGB\n\"\"\"\nassert solution(\n\"\"\"\n7\nRGGBRBG\n\"\"\") == \"\"\"\n3\nGBRGB\n\"\"\"\nassert solution(\n\"\"\"\n10\nRBRRBGRGBRBGRGBRGRBGB\n\"\"\") == \"\"\"\n0\nRBRRBGRGBRBGRGBRGRB\n\"\"\"\nassert solution(\n\"\"\"\n2\nBRGR\n\"\"\") == \"\"\"\n2\nBRGR\n\"\"\"\nassert solution(\n\"\"\"\n1\nR\n\"\"\") == \"\"\"\n0\nR\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\nassert solution('\\n\\n\\n\\n') == ''\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('RGRB') == ''\nassert solution('RBGRB') == '2'\nassert solution('BGRGRB') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n'''\n\n'''\nExplanation:\n\nFrom the question, we know that we want to change each lamp to a different color, so we need to find a combination of lamps (or more precisely, the subset) that has minimum number of colors.\n\nIn the given example, we have 3 lamps: \"BRB\"\nwe can recolor them to \"GRB\" with 1 color, \"RB\" with 2 colors, and \"R\" with 3 colors.\n\"RB\" has no recolors, so we can recolor only one of them to \"RB\", leaving \"GRB\".\nThen we can recolor the remaining lamps: \"GRB\" will have one color, \"RB\" will have 2, \"R\" will have 3.\nSo the minimum number of recolors is 3.\n\nIn the given example, we have 7 lamps: \"RGBGRBB\", we can recolor them to \"GRB\" with 3 colors, \"RB\" with 2, \"RB\" with 2, and \"R\" with 3.\n\"RB\" and \"RB\" have no recolors, so we can recolor only one of them to \"RB\", leaving \"GRB\" and \"RB\".\nThen we can recolor the remaining 6 lamps: \"GRB\" will have 3 colors, \"RB\" will have 2, \"R\" will have 3.\nSo the minimum number of recolors is 4.\n\nBut what if we have more than one solution? Well, we have to find the most similar lamps, so we can recolor them to a color that is closest to the original color of the lamp.\n\nIn the given example, we have 7 lamps: \"RGBGRBB\", we can recolor them to \"GRB\" with 3 colors, \"RB\" with 2, \"RB\" with 2, and \"R\" with 3.\n\"RB\" and \"RB\" have no recolors, so we can recolor only one of them to \"RB\", leaving \"GRB\".\nThen we can recolor the remaining 6 lamps: \"GRB\" will have 3 colors, \"RB\" will have 2, \"R\" will have 3.\nSo the minimum number of recolors is 4.\n\nThe answer can be found by recursively checking all permutations of the set of unique colors.\n\n'''\n\nimport sys"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"GB\") == \"GB\"\nassert solution(\"RB\") == \"RG\"\nassert solution(\"RR\") == \"R\"\nassert solution(\"RG\") == \"RB\"\nassert solution(\"RBGB\") == \"R\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\nimport sys\nimport os"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\n\nGiven 2 strings, str_1 and str_2, determine if str_2 is a subsequence of str_1.\n\nThe characters of str_1 and str_2 may be the same. A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\nFor example, \"ace\" is a subsequence of \"abcde\".\n\nNote:\n\nstr_1 and str_2 both are lists of strings.\n\nIf str_2 is a subsequence of str_1, return 0.\nIf str_2 is not a subsequence of str_1, return the index (0-based) of the first character that str_2[0] is not a part of.\n\nExample 1:\n\nInput: str_1 = [\"abc\",\"ace\"], str_2 = [\"a\",\"ace\"]\nOutput: 0\nExplanation: The first character 'a' of str_2 is not a part of str_1.\nExample 2:\n\nInput: str_1 = [\"abc\",\"axc\"], str_2 = [\"a\",\"ac\"]\nOutput: 1\nExplanation: The first character 'a' of str_2 is not a part of str_1 because the characters of \nstr_1 and str_2 are different.\nExample 3:\n\nInput: str_1 = [\"abc\",\"adc\"], str_2 = [\"a\",\"ac\"]\nOutput: 2\nExplanation: Because str_2[1] = 'c' and not a part of str_1, we return 2.\n'''\n\n'''\n\nGiven a list of integers and a number K, find two numbers in the list that, when added together, equals K.\n\nInp: [10, 15, 3, 7]\nk = 22\n\nOut: (15, 10)\n'''\n\n'''\n\nGiven a string and a string dictionary, count the number of times each word in the dictionary appears in the string.\n\nWords are given in lower case.\n\nNote: You may assume that all the words in the dictionary are composed of lowercase letters only.\n\nInp:\n\ns = \"Hello World\", dictionary = [\"hello\", \"world\"]\n\nOut: {'world': 1, 'hello': 1}\n\n'''\n\n'''\n\nGiven two strings s and t, determine if they are both one edit distance apart.\n\nNote:\n\nThere are 3 edits(insertion, deletion, and substitution) possible, with the cost of 1 each.\n'''\n\n'''\n\nGiven a 2D board and a word, find if the word exists in the grid.\n\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\n\nFor example,\nGiven board =\n\n[\n  ['A','B','C','E'],\n  ['S','F','C','S'],\n  ['A','D','E','E']\n]\n\nword = \"ABCCED\", -> returns true, \nword = \"SEE\", -> returns true,\nword = \"ABCB\", -> returns false.\n\n'''\n\n'''\n\nGiven an array of numbers nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.\n\nFor example:\n\nGiven nums = [1, 2, 1, 3, 2, 5], return [3, 5].\n\nNote:\nThe order of the result is not important. So in the above example, [5, 3] is also correct.\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?\n'''\n\n'''\n\nGiven a 32-bit signed integer, reverse digits of an integer.\n\nExample 1:\n\nInput: 123\nOutput: 321\nExample 2:\n\nInput: -123\nOutput: -321\nExample 3:\n\nInput: 120\nOutput: 21\nNote:\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [\u2212231,  231 \u2212 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\n\n'''\n\n'''\n\nGiven a sorted array of integers, remove the duplicates in place such that each element appear only once and return the new length.\n\nDo not allocate extra space for another array, you must do this in place with constant memory.\n\nFor example,\nGiven input array nums = [1,1,2],\n\nYour function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.\n'''\n\n'''\n\nGiven a string, find the longest palindromic substring in it.\n\nYou may assume that the maximum length of input string is 1000.\n\nExample 1:\n\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\nExample 2:\n\nInput: \"cbbd\"\nOutput: \"bb\"\n'''\n\n'''\n\nGiven a sorted array and a target value, find the index if the target is found. If not, return the index where it would be if it were inserted in order.\n\nYou may assume no duplicates in the array.\n\nHere are few examples.\n\n[1,3,5,6], 5 \u2192 2\n[1,3,5,6], 2 \u2192 1\n[1,3,5,6], 7 \u2192 4\n[1,3,5,6], 0 \u2192 0\n'''\n\n'''\n\nGiven an unsorted array of integers, find the length of the longest consecutive elements sequence.\n\nYour algorithm should run in O(n) complexity.\n\nExample:\n\nInput: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n'''\n\n'''\n\nGiven a sorted array, find the sum of all numbers between the K1-th and K2-th smallest elements of this array.\n\nExample 1:\n\nInput: [1,2,3,4,5], K1=3, K2=4\nOutput: 9\nExplanation: 3-4 = [1, 2, 3, 4]\nExample 2:\n\nInput: [1,2,3,4,5], K1=2, K2=4\nOutput: 12\nExplanation: 2"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n50000000 BTC''') == '480000.0'\nassert solution('''2\n10000 JPY\n10000000 BTC''') == '480000.1'\nassert solution('''2\n10000 JPY\n80000000 BTC''') == '480000.8'\nassert solution('''2\n10000 JPY\n90000000 BTC''') == '480000.9'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2\n10000 JPY\n0.10000000 BTC\") == '48000.0'\n\"\"\"\n) == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''3\n10000 JPY\n30000 JPY\n100000 JPY''') == '100000.0'\nassert solution('''4\n10000 JPY\n30000 JPY\n100000 JPY\n50000 JPY''') == '100000.0'\n'''\n\nimport sys\nsys.path.append('..')\nfrom util import time_it\n\n@time_it()\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n2.1234567 JPY\\n2.1234568 BTC\\n2.1234569 JPY\\n') == '21654.75'\nassert solution('1\\n100000 JPY\\n') == '100000'\nassert solution('1\\n100000.0 BTC\\n') == '100000'\nassert solution('1\\n10000 JPY\\n') == '10000'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000000 JPY\n100.00000000 BTC''') == '80000000.0'\nassert solution('''10\n10000000 JPY\n0.0100000000 BTC''') == '0.0600000000'\nassert solution('''100\n10000000 JPY\n0.0100000000 BTC''') == '0.0100000000'\nassert solution('''100\n10000000 JPY\n0.00100000000 BTC''') == '0.0100000001'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.010000000 BTC') == '20000.0'\nassert solution('3\\n13000 JPY\\n0.10000000 BTC\\n10000000 JPY\\n0.010000000 BTC') == '50000.0'\nassert solution('3\\n30000 JPY\\n0.10000000 BTC\\n10000000 JPY\\n0.010000000 BTC') == '70000.0'\nassert solution('3\\n30000 JPY\\n0.10000000 BTC\\n10000000 JPY\\n0.010000000 BTC') == '70000.0'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[stdin.rfind(\"\\n\") - 3]\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n') == '3'\nassert solution('4 3\\n') == '2'\nassert solution('1 1\\n') == '0'\nassert solution('5 4\\n') == '3'\nassert solution('5 5\\n') == '2'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3'\nassert solution('2 2') == '1'\nassert solution('5 2') == '2'\nassert solution('100 2') == '98'\nassert solution('99 1') == '99'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '3'"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '3'\nassert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('1 3') == '0'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\nprint('Passed')\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 5\") == \"0\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ip cc\") == \"icpc\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ip cc') == 'icpc'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('pqr') == 'prq'\nassert solution('abc') == 'abc'\nassert solution('tuv') == 'tuv'\nassert solution('xyz') == 'xyz'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\nn = input()\nx = map(int, input())\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AB') == 'Yes'\nassert solution('BA') == 'Yes'\nassert solution('ABA') == 'Yes'\nassert solution('BABA') == 'No'\nassert solution('ABBA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''ABB''') == 'No'\nassert solution('''ABB''') == 'Yes'\nassert solution('''ABA''') == 'No'\nassert solution('''ABA''') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('BAA') == 'No'\nassert solution('BAB') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABAB') == 'No'\nassert solution('ABBA') == 'Yes'\nassert solution('ABABABABABABABBABBABABABABABABBABABABBABABBABABABABABBABABABBABABABBABABABABABABBABABABABABABABABBABABABABABABABABABABABABABABABABABAA') == 'Yes'\nassert solution('ABBA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('ABC') == 'No'\nassert solution('AB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"CBA\") == \"No\"\nassert solution(\"CA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"BA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\nassert solution(\"ABB\") == \"Yes\"\nassert solution(\"ABBC\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('ABBA') == 'No'\nassert solution('ABBA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"BBB\") == \"Yes\"\nassert solution(\"ABAB\") == \"Yes\"\nassert solution(\"AABAA\") == \"Yes\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RR') == 2\nassert solution('RRS') == 2\nassert solution('RRSS') == 1\nassert solution('RRRSS') == 2\nassert solution('RRSRS') == 3\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"3\"\nassert solution(\"RRSR\") == \"2\"\nassert solution(\"RRSRS\") == \"1\"\nassert solution(\"RRRS\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == 2\nassert solution(\"RRR\") == 0\nassert solution(\"R\") == 0\nassert solution(\"RS\") == 1\nassert solution(\"RRRRRRRRRRRRRRRRRRRRR\") == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"RRRSS\") == 0\nassert solution(\"RRRSRS\") == 1\nassert solution(\"RRSRSRS\") == 1\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('RR') == ''\nassert solution('RS') == '1'\nassert solution('RRR') == '2'\nassert solution('RRS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRR\") == 1\nassert solution(\"RRS\") == 2\nassert solution(\"SRS\") == 0\nassert solution(\"RRRS\") == 0\nassert solution(\"RSRS\") == 1\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"S\") == 0\nassert solution(\"RS\") == 0\nassert solution(\"RS\") == 0\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"SRS\") == 0\nassert solution(\"RRSS\") == 2\nassert solution(\"RSRS\") == 0\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 3 4\") == \"4 3 5\"\nassert solution(\"5 1 7\") == \"7 1 5\"\nassert solution(\"6 5 5\") == \"5 6 5\"\nassert solution(\"7 6 7\") == \"7 6 7\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\nassert solution('2 3 4') == '2 3 1'\nassert solution('4 3 2') == '2 3 4'\nassert solution('1 1 2') == '1 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\nprint(solution('1 2 3'))"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4\") == \"3 1 2\"\nassert solution(\"5 6 7\") == \"5 6 7\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 2 3\n'''\n) == '3 1 2'\n\nassert solution(\n'''\n0 0 0\n'''\n) == '0 0 0'\n\nassert solution(\n'''\n2 3 1\n'''\n) == '3 1 2'\n\nassert solution(\n'''\n7 8 9\n'''\n) == '9 8 7'\n\nassert solution(\n'''\n-23 -24 -25\n'''\n) == '25 24 23'"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3''') == '3 1 2'\nassert solution('''1 2 3''') == '3 1 2'\nassert solution('''1 2 3''') == '3 1 2'\nassert solution('''1 1 1''') == '1'\nassert solution('''5 1 2''') == '1 2 5'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 1 2 3\"\nassert solution(\"3 2 1 4\") == \"4 3 2 1\"\nassert solution(\"2 5 5\") == \"5 2 5\"\nassert solution(\"8 9 1\") == \"1 9 8\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"10 10 10\") == \"10 10 10\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"10 10 10\") == \"10 10 10\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 2 7\") == \"7 5 2\"\nassert solution(\"5 2 7\") == \"7 5 2\"\nassert solution(\"7 2 5\") == \"5 7 2\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 1000') == '550'\nassert solution('20 50') == '550'\nassert solution('30 200') == '1150'\nassert solution('30 1000') == '550'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"30 100\") == \"100\"\nassert solution(\"30 5\") == \"50\"\nassert solution(\"30 10\") == \"100\"\nassert solution(\"30 5\") == \"50\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''30 100''') == '100'\nassert solution('''30 10''') == '50'\nassert solution('''30 17''') == '50'\nassert solution('''30 10''') == '50'\nassert solution('''30 12''') == '50'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-++\") == \"0\"\nassert solution(\"+-++\") == \"2\"\nassert solution(\"++-+++\") == \"3\"\nassert solution(\"+-++\") == \"0\"\nassert solution(\"++-+++\") == \"3\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++-++\") == \"0\"\nassert solution(\"+-++-++\") == \"0\"\nassert solution(\"++-++-++-++\") == \"1\"\nassert solution(\"+-++-++-++-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"+-++\") == '2'\nassert solution(\"-++-\") == '-1'\nassert solution(\"+-++-\") == '-2'\nassert solution(\"-++-++\") == '-3'\nassert solution(\"+-++-++\") == '-4'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('+') == '0'\nassert solution('+-++') == '2'\nassert solution('+-++-++') == '3'\nassert solution('-++-++-++') == '1'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\nassert solution('++++') == '2'\nassert solution('+++++') == '2'\nassert solution('++++++') == '2'\nassert solution('-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+-++') == '2'\nassert solution('+') == '1'\nassert solution('-') == '0'\nassert solution('++') == '2'\nassert solution('+-+++-+++-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-++') == '1'\nassert solution('+---+-++') == '3'\nassert solution('++---+--++-') == '0'\nassert solution('++---+--++-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++-++\") == \"0\"\nassert solution(\"++--++\") == \"3\"\nassert solution(\"+--++-++\") == \"2\"\nassert solution(\"-++-++-++-++\") == \"5\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('+-++') == None\nassert solution('+--+') == None\nassert solution('+-++') == None\nassert solution('-++-') == None\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+\") == \"1\"\nassert solution(\"-\") == \"0\"\nassert solution(\"-++\") == \"0\"\nassert solution(\"++-\") == \"2\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Heisei'\n\n\"\"\""
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == Heisei\nassert solution('2019/02/29') == TBD\nassert solution('2019/03/01') == Heisei\nassert solution('2019/06/30') == Heisei\nassert solution('2019/07/01') == Heisei\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Heisei\"\n\"\"\""
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/01/01\") == \"TBD\"\nassert solution(\"2019/12/31\") == \"TBD\"\nassert solution(\"2019/03/30\") == \"Heisei\"\nassert solution(\"2019/03/31\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/01/01') == 'Heisei'\nassert solution('2019/02/29') == 'TBD'\nassert solution('2019/03/31') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/31') == 'Heisei'\nassert solution('2019/02/29') == 'TBD'\nassert solution('2019/01/31') == 'Heisei'\nassert solution('2019/01/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/30\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"Heisei\"\nassert solution(\"2019/05/31\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"Heisei\"\nassert solution(\"2019/07/31\") == \"Heisei\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n\") == \"14\\n\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\\n\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\\n\"\n\"\"\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/maximum_problems.txt') == '6'\n\nprint('Test passed')\n'''"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337\\n') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution(\n'''3\n1337 1337 1337\n''') == '3'"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\nassert solution('1337 1337 1337') == '3'\nassert solution('1337 1337 1337') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2'\nassert solution('1 2 3 2 1 3 2') == '2'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('1 2 3 4 1 4 2 3 3 1 1 2 3 3 4 1 1 2 3') == '2'\nassert solution('3 3 3 3 1 1 1 1 1 3 3 3 3 3 1 1 1 3 3 3') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"10 4\") == \"3\""
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, k = map(int, stdin.readline().split())\n\nids = [int(x) for x in stdin.readline().split()]\n\nm = 0\n\nfor _ in range(n):\n    if ids[-1] not in ids[:-1]:\n        m += 1\n        ids.remove(ids[-1])\n    else:\n        ids.remove(ids[-1])\n        ids = [ids[-1]] + ids[:-1]\n\nprint(m)\n\nstdout.write(' '.join(map(str, ids)) + '\\n')\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('6 5') == '3'\nassert solution('7 2') == '2'\nassert solution('2 1') == '1'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution_expected\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2 3 2 1 3 2\\n\") == \"2\"\nassert solution(\"2 3\\n1 2 3\\n\") == \"1\"\nassert solution(\"2 4\\n2 3 3 1 1 2 1 2 2 3 3\\n\") == \"3\"\n\n\n\n\n\n>>>solution(stdin)\n'2'\n\n>>>solution(\"6 5\\n1 2 3 4 1 5 2\\n\")\n'4'\n\n>>>solution(\"5 3\\n1 2 3 4 1 5 2\\n\")\n'2'\n\n\n>>>solution(\"3 3\\n1 2 3\\n\")\n'1'\n\n>>>solution(\"2 2\\n1 2\\n\")\n'1'\n\n\n\n>>>solution(\"6 5\\n1 2 3 4 1 5 2\\n\")\n'4'\n\n>>>solution(\"7 5\\n1 2 3 4 1 5 2 3 4 5\\n\")\n'4'\n\n>>>solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9 1\\n2 3\\n\")\n'2'\n\n>>>solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9 1\\n2 3\\n1 2 3\\n4 5 6\\n7 8 9 1\\n2 3\\n\")\n'3'"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2') == '2\\n2 1'\nassert solution('10 4') == '3\\n1 3 2'\nassert solution('1000000000 2000000000') == '3000000000\\n3000000000 1'\n\"\"\""
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\n\n>>> import os\n>>> import random\n>>> import sys\n>>> sys.path.append(os.path.abspath('..'))\n>>> from utils import *"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"6 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n13\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"6 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n13\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"7 6\\n2 3 5 4 6\\n5\\n4\\n8\\n1\\n11\\n9\\n10\\n12\\n13\") == \"0\\n-1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n1\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\nassert solution('''3 5\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\nassert solution('''6 7\n2 4 8 2 4\n8\n5\n14\n10\n3\n2\n''') == '2\\n-1\\n2\\n2\\n'\nassert solution('''7 8\n2 4 8 2 4\n8\n5\n14\n10\n3\n2\n''') == '2\\n-1\\n2\\n2\\n'\nassert solution('''5 5\n2 4 8 2 4\n8\n5\n14\n10\n3\n2\n''') == '1\\n-1\\n3\\n2\\n'\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\n\n'''\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\nTest 1\nInput\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\nOutput\n1\n-1\n3\n2\n'''\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n5 4\n2 4 8"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '0'\nassert solution('2\\n5\\n5\\n5') == '10'\nassert solution('4\\n9\\n9\\n9\\n9') == '64'\nassert solution('10\\n9\\n9\\n9\\n9\\n9\\n9') == '64'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '6'\nassert solution('2\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == '0'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('3\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == '3'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n1 2 2 5\\n') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 4\\n8 8 8 8 8 8 8 8\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n') == '60'\nassert solution('5 6\\n1 3 3 5 5 7 5 5 7\\n3 2 3 4 5 6 4 6\\n2 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n1 3 3 5 5 7 5 5 7\\n3 2 3 4 5 6 4 6\\n2 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n') == '54'\nassert solution('5 6\\n1 1 1 1 1 1 1 1\\n3 2 3 4 5 6 4 6\\n2 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n1 1 1 1 1 1 1 1\\n3 2 3 4 5 6 4 6\\n2 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n3 4 4 4 4 6 6 6\\n') == '48'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\") == \"0\"\n\n\n-----Hint-----\n\nTheoretically, a greedy approach is enough to solve this problem.\n\nAfter designing the solution, try to think about what are the limitations of the greedy approach.\n\nTry to come up with an optimal solution. If there is a problem, how can you improve the solution?\n\nIf there is a problem, how can you improve the solution?\n\nHint: You can modify the code in the solution function or modify the test to see if the solution works as expected.\n\"\"\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\n\n\"\"\""
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n1 2 2 5\\n2 6 7\\n1 2 3\\n1 2 3\\n\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3 4 5') == \"2\\n1 2 3\\n1 1 2\"\nassert solution('1\\n2 1 1 2') == \"0\\n2 2 2 1\"\nassert solution('1\\n2 1 1 2\\n1 1 1 1') == \"0\\n2 2 2 1\\n2 3 3 2\""
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6 6 6') == '2'\nassert solution('2 4 6 6 6') == '2'\nassert solution('2 8 10') == '2'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''4''') == '''2'''\nassert solution('''3''') == '''2'''\nassert solution('''1''') == '''0'''\nassert solution('''2''') == '''2'''\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''3\n2 8 10\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''7\n2 4 8 12 16 18\n''') == '2'\n\nassert solution('''8\n2 4 8 12 16 18 19 20\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0'\nassert solution('3\\n2\\n1') == '2'\nassert solution('4\\n1\\n1\\n1') == '2'\nassert solution('5\\n2\\n3\\n4\\n5') == '2'\nassert solution('5\\n2\\n3\\n4\\n5\\n5') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''3\n2 8 10\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''\n''') == ''\n\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n') == '0'\nassert solution('2\\n1\\n3\\n') == '2\\n1 2\\n1 1 2'\nassert solution('2\\n3\\n4\\n') == '2\\n1 1 3\\n1 2 2'\nassert solution('1\\n2\\n3\\n') == '2\\n1 2\\n1 1 2'\nassert solution('2\\n4\\n6\\n') == '2\\n1 2 2\\n1 1 2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\n\nassert solution('''10\n
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\"\"\") == \"1\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\"\"\") == \"2\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\"\"\") == \"0\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\"\"\") == \"1\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\"\"\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1''') == '1'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1\n''') == '2'"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input_data/g_26_1') == '1'\nassert solution('input_data/g_26_2') == '2'\nassert solution('input_data/g_26_3') == '0'\nassert solution('input_data/g_26_4') == '1'\nassert solution('input_data/g_26_5') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('111') == '1'\nassert solution('1') == '0'\nassert solution('11100111') == '2'\nassert solution('10101') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1''') == '1'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1''') == '2'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n2 1''') == '0'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1\n00\n2 1"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('0000') == '0'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asd') == ''\nassert solution('1111111') == '1'\nassert solution('1010011') == '1'\nassert solution('10000101') == '0'\nassert solution('10101') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\\n001\") == \"\"\nassert solution(\"5 1\\n10101\") == \"\"\nassert solution(\"2 2\\n00\") == \"\"\nassert solution(\"6 1\\n000000\") == \"\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3\\n4 6 7'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\nassert solution('''11 5\n30 30\n29 29\n28 30\n30 30\n29 29\n28 30\n30 30\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29 29\n29"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7\\n'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5\\n'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6\\n'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''3 1\n1 2\n2 3\n3 3\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\nassert solution('''5 1\n11 10\n9 10\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n1 4 5'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9'''\n) == '3'\n\nassert solution(\n'''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\nOutput\n3\n1 4 5 \n'''\n) == '3'\n\nassert solution(\n'''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\nOutput\n4\n1 3 5 6\n'''\n) == '4'\n\nassert solution(\n'''2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\nOutput\n1\n0\n'''\n) == '2'\n\nassert solution(\n'''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\nOutput\n3\n4 6 7 \n'''\n) == '3'"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12') == '3\\n1 4 5 6'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20') == '3\\n1 4 5 6 7'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30') == '3\\n1 4 5 6 7 8'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200') == '3\\n1 4 5 6 7 8'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200\\n201 202\\n203 204\\n205 206\\n207 208\\n209 210\\n211 212\\n213 214\\n215 216\\n217 218\\n219 220\\n221 222\\n223 224\\n225 226\\n227 228\\n229 230\\n231 232\\n233 234\\n235 236\\n237 238\\n239 240\\n241 242\\n243 244\\n245 246\\n247 248\\n249 250\\n251 252\\n253 254\\n255 256\\n257 258\\n259 260\\n261 262\\n263 264\\n265 266\\n267 268\\n269 270\\n271 272\\n273 274\\n275 276\\n277 278\\n279 280\\n281 282\\n283 284\\n285 286\\n287 288\\n289 290\\n291 292\\n293 294\\n295 296\\n297 298\\n299 300\\n301 302\\n303 304\\n305 306\\n307 308\\n309 310\\n311 312\\n313 314\\n315 316\\n317 318\\n319 320\\n321 322\\n323 324\\n325 326\\n327 328\\n329 330\\n331 332\\n333 334\\n335 336\\n337 338\\n339 340\\n341 342\\n343 344\\n345 346\\n347 348\\n349 350\\n351 352\\n353 354\\n355 356\\n357 358\\n359 360\\n361 362\\n363 364\\n365 366\\n367 368\\n369 370\\n371 372\\n373 374\\n375 376\\n377 378\\n379 380\\n381 382\\n383 384\\n385 386\\n387 388\\n389 390\\n391 392\\n393 394\\n395 396\\n397 398\\n399 400\\n401 402\\n403 404\\n405 406\\n407 408\\n409 410\\n411 412\\n413 414\\n415 416\\n417 418\\n419 420\\n421 422\\n423 424\\n425 426\\n427 428\\n429 430\\n431 432\\n433 434\\n435 436\\n437 438\\n439 440\\n441 442\\n443 444\\n445 446\\n447 448\\n449 450\\n451 452\\n453 454\\n455 456\\n457 458\\n459 460\\n461 462\\n463 464\\n465 466\\n467 468\\n469 470"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''6 1\n7 9\n9 9\n7 9\n7 8\n8 9\n7 9\n''') == '4'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 3') == '0'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n10'\n\nassert solution('''5\n2\n1 2\n1 2\n1 2\n1 2\n2\n2\n2\n2\n2\n2\n2''') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\n\nassert solution('''5\n3\n2 3 4 5\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30 31 10'\n\nassert solution('''3\n3\n10 5 10\n3\n2 6 7''') == '10'\n\nassert solution('''3\n4\n10 9 10\n3\n1 2 3\n''') == '17'\n\nassert solution('''3\n4\n7 5 10\n3\n2 6 7''') == '17'\n\nassert solution('''3\n6\n1 2 3 4 5 6\n3\n1 2 3\n''') == '17'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30 31 10'\nassert solution('''1\n3\n2 2 1\n1\n1 1''') == '2'\nassert solution('''10\n8\n7 8 2 1 2 1 1 1 1 1 1 1\n9\n4 4 4 4 4 4 4 4 4 4 4 4\n4\n2 2 2 2 2 2 2 2 2 2 2 2\n2\n3 3 3 3 3 3 3 3 3 3 3 3\n1\n1 1 1 1 1 1 1 1 1 1 1 1''') == '33'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3 4''') == '30\\n31\\n10\\n'\nassert solution('''3\n3\n1 2 3''') == '0\\n1\\n2\\n'\nassert solution('''3\n5\n1 2 3 4 5''') == '5\\n6\\n7\\n8\\n9\\n'\nassert solution('''3\n8\n1 2 3 4 5 6 7 8 9''') == '9\\n10\\n11\\n12\\n13\\n14\\n15\\n'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 3 2''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3''') == '30'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\nassert solution('''5\n10\n1 2 3 4 5\n5\n1 1 1 1 1\n1 1 1 1 1\n2\n2 2 2 2 2\n2 2 2 2 2\n3\n3 3 3 3 3\n3 3 3 3 3\n4\n4 4 4 4 4\n4 4 4 4 4''') == '36\\n37\\n24\\n23\\n18\\n15\\n10\\n'\nassert solution('''3\n3\n3 3 3\n3 3 3\n1\n1 1 1\n1 1 1\n2\n2 2 2\n2 2 2\n3\n3 3 3\n3 3 3\n4\n4 4 4\n4 4 4\n4 4 4''') == '9\\n10\\n6\\n7\\n4\\n'\nassert solution('''10\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n2\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n') == '1'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n1 2 3 4\n''') == '30'\nassert solution('''3\n5\n10 20 30 50\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''3\n4\n10 60 30 60\n4\n10 5 15 30\n3\n3 4 6\n''') == '30'\nassert solution('''3\n4\n10 60 30 60\n4\n10 5 15 30\n3\n3 4 6\n''') == '30'\nassert solution('''3\n4\n10 60 30 60\n4\n10 5 15 30\n3\n3 4 6\n''') == '30'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\nassert solution('1') == '1'\nassert solution('1 2') == '1'\nassert solution('2') == '2'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4') == '0'\nassert solution('2\\n4') == '2'\nassert solution('2\\n6') == '1'\nassert solution('2\\n6\\n1') == '1'\nassert solution('1\\n4\\n2\\n3') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\") == \"2\\n1\"\nassert solution(\"2\\n1\") == \"1\\n1\"\nassert solution(\"1\\n100\") == \"1\\n1\"\nassert solution(\"2\\n5\") == \"1\\n1\"\nassert solution(\"3\\n7\") == \"1\\n1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\n2\\n1\\n4\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"4\\n2\\n1\\n2\\n1\\n1\\n1\") == \"2\"\nassert solution(\"3\\n2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"  1  2  3  4  5  6  7  8  9 10\") == \"\"\nassert solution(\"2 10 1 20\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string\n\"\"\""
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n') == 1\nassert solution('3\\n') == 2\nassert solution('6\\n') == 1\nassert solution('6\\n') == 1\nassert solution('3\\n') == 1\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n1 2 3 6\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n3 3 5 18''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin'''\n\n'''HackerRank Problem 11: Power in Number\nhttps://www.hackerrank.com/challenges/power-in-number/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays\n\nYou are given a positive integer $n$ and two positive integers $a$ and $b$. You have to compute the result of $a^b$ mod $n$ using bitwise operators:\n\n$a^b$ mod $n$ using bitwise operators can be computed as follows:\n$1^b \\equiv (1 \\rightarrow 0) \\equiv 0^b \\mod n$\n$a \\equiv a \\rightarrow a$\n\nFor example, $5^2 \\equiv 25 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^0 \\equiv 1 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^0 \\equiv 1 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n$5^4 \\equiv 625 \\mod 4$\n\nYou are given that $n$ is a power of $2$. If the integer $n$ is even, then $n$ is a power of $2$ as well.\n\nYour task is to calculate the answer for the given integer $n$.\n\nInput\n\nThe first line of the input contains one integer T denoting the number of test cases. The description of T test cases follows.\n\nThe only line of each test case contains one integer N.\n\nOutput\n\nFor each test case, output a single line containing the answer to the problem.\n\nConstraints\n\n1 \u2264 T \u2264 200\n1 \u2264 N \u2264 1,000,000\n\nExample\n\nInput\n\n5\n2\n4\n8\n16\n64\n\nOutput\n\n2\n1\n0\n0\n1\n'''\n'''\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6''') == 'YES'\nassert solution('''5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''3 3 5 18\n3 3 5 18''') == 'YES'"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nYES\\nNO\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4''') == 'YES'\nassert solution('''1 2 3 6''') == 'NO'\nassert solution('''5 2 6 27''') == 'NO'\nassert solution('''3 3 5 18''') == 'YES'\nassert solution('''1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'NO'\nassert solution('3 3 5 18') == 'YES'\n\n\n-----Answer-----"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n0\\n1') == 'YES\\n0\\n1'\nassert solution('4\\n0\\n2') == 'NO'\nassert solution('5\\n0\\n1') == 'NO'\nassert solution('5\\n0\\n2') == 'NO'\nassert solution('5\\n0\\n3') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n0\\n') == 'YES\\n0'\nassert solution('2\\n2\\n0\\n') == 'YES\\n0\\n0'\nassert solution('2\\n1\\n1\\n') == 'NO'\nassert solution('2\\n2\\n2\\n') == 'YES'\nassert solution('2\\n1\\n1\\n') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7\n7 2 7 3 3 1 4\n\"\"\") == \"\"\"YES\n2\n3 7 \n5\n7 4 3 2 1 \n\"\"\".strip()\n\nassert solution(\"\"\"5\n4 3 1 5 3\n\"\"\") == \"\"\"NO\n\"\"\".strip()\n\nassert solution(\"\"\"5\n1 1 2 1 2\n\"\"\") == \"\"\"NO\n\"\"\".strip()\n\nassert solution(\"\"\"5\n0 1 2 3 4\n\"\"\") == \"\"\"YES\n\"\"\".strip()\n\nassert solution(\"\"\"5\n1 1 2 1 2\n\"\"\") == \"\"\"NO\n\"\"\".strip()"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5 3 1 5 3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES\\n5\\n3 7\\n2 1 4\\n1 3 5\\n'\n\nassert solution('''5\n4 3 1 5 3\n''') == 'NO\\n1\\n0\\n3\\n1 4 3 2\\n'\n\nassert solution('''5\n1 1 2 1 2\n''') == 'YES\\n1\\n1 2 3 4 5\\n'\n\nassert solution('''5\n0 1 2 3 4\n''') == 'NO\\n0\\n0\\n3\\n0 1 4 3 2\\n'\n\nassert solution('''5\n4 3 1 5 3\n''') == 'YES\\n0\\n1 1 2 3 4\\n'"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n4\\n4\\n1') == 'NO'\nassert solution('4\\n4\\n4\\n4\\n2') == 'YES'\nassert solution('5\\n5\\n5\\n5\\n1') == 'NO'\nassert solution('5\\n5\\n5\\n5\\n2') == 'YES'\nassert solution('7\\n7\\n7\\n7\\n3') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 1 2\n''') == 'YES'\nassert solution('''7\n0 1 2 3 4 5 6 7\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 1 5 3') == 'YES\\n1\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n0 1 2 1 2') == 'NO\\n'\nassert solution('5\\n1 1 2 1 2') == 'NO\\n'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n2\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n2\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('1\\n3\\n1\\n') == 'YES'\nassert solution('1\\n4\\n1\\n') == 'NO'\nassert solution('1\\n1\\n2\\n') == 'NO'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"-1\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 4''') == '18'\nassert solution('''7 1 1''') == '18'\nassert solution('''2 1 1''') == '-1'\nassert solution('''4 0 1''') == '-1'\nassert solution('''8 1 1''') == '8'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'\nassert solution('3 2') == '3'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n2 0 0\\n2 1 0\\n3 0 1\\n3 1 1\\n4 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n') == '18'\nassert solution('4 2\\n1 1 1\\n1 0 1\\n2 0 0\\n2 1 0\\n3 0 1\\n4 0 1\\n5 0 0\\n') == '-1'\nassert solution('5 2\\n1 0 0\\n1 1 0\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n3 0 1\\n') == '8'\nassert solution('2 2\\n1 1 1\\n1 0 1\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n5 0 0\\n') == '-1'\nassert solution('3 3\\n1 0 0\\n1 1 0\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n6 0 0\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\nassert solution('''2 1\n1 0\n1 1''') == '2'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 4''') == '18'\nassert solution('''7 1 1''') == '18'\nassert solution('''2 1 1''') == '8'\nassert solution('''4 0 1''') == '8'\nassert solution('''8 1 1''') == '18'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1') == '-1'\n\n\n-----"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"6 0 0\") == \"18\"\nassert solution(\"6 0 0\") == \"18\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\n\nassert solution(\n'''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n\nassert solution(\n'''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n\nassert solution(\n'''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    5 1\n    1 1 2 3 1\n    4 2\n    6 4 8 5\n    2 2\n    1 6\n    3 5\n    5 2 5\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4\n    5 1\n    1 1 2 3 1\n    4 2\n    6 4 8 5\n    2 2\n    1 6\n    3 5\n    5 2 5\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    4\n    5 1\n    1 1 2 3 1\n    4 2\n    6 4 8 5\n    2 2\n    1 6\n    3 5\n    5 2 5\n    \"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"\n    4\n    5 1\n    1 1 2 3 1\n    4 2\n    6 4 8 5\n    2 2\n    1 6\n    3 5\n    5 2 5\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    6\n    1 1 2 3 1 4 1\n    2 2\n    3 3\n    4 4\n    5 5\n    6 6\n    7 7\n    8 8\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin + '1\\n'\n    '1 1 2 3 1\\n'\n    '4 2\\n'\n    '6 4 8 5\\n'\n    '2 2\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 2 5\\n'\n    ) == '6\\n'\n\nassert solution(\n    stdin + '4\\n'\n    '5 1\\n'\n    '1 1 2 3 1\\n'\n    '4 2\\n'\n    '6 4 8 5\\n'\n    '2 2\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 2 5\\n'\n    ) == '2\\n'\n\nassert solution(\n    stdin + '1\\n'\n    '1 1 2 3 1\\n'\n    '4 2\\n'\n    '6 4 8 5\\n'\n    '2 2\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 2 5\\n'\n    ) == '-1\\n'\n\nassert solution(\n    stdin + '5\\n'\n    '1 1 2 3 1\\n'\n    '4 2\\n'\n    '6 4 8 5\\n'\n    '2 2\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 2 5\\n'\n    ) == '7\\n'\n\nassert solution(\n    stdin + '5\\n'\n    '1 1 2 3 1\\n'\n    '4 2\\n'\n    '6 4 8 5\\n'\n    '2 2\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 2 5\\n'\n    '3\\n'\n    '3\\n'\n    '5\\n'\n    ) == '-1\\n'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4') == '2\\n3\\n-1'\nassert solution('2\\n2\\n4\\n5') == '6\\n4\\n-1'\nassert solution('2\\n2\\n3\\n4') == '6\\n-1\\n3'\nassert solution('1\\n1\\n2\\n3\\n4') == '2\\n3\\n-1'\nassert solution('1\\n1\\n2\\n3\\n4') == '2\\n3\\n-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6'\nassert solution('1\\n4\\n1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5') == '7'\nassert solution('1\\n4\\n1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '7'\nassert solution('1\\n4\\n1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n5 2 5') == '7'\nassert solution('1\\n4\\n1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n5 2 5\\n5 2 5') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '3'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\n\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\n\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n\nassert solution('''100\n12345678901234567890123456789012345678901234567890123456789012345678901234567890\n''') == '0'\n\nassert solution('''100\n12345678901234567890123456789012345678901234567890123456789012345678901234567890\n12345678901234567890123456789012345678901234567890123456789012345678901234567890\n''') == '5'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 8 4 15 16 8 16 23 15 16 4 42 23 42''') == '0'\nassert solution('''5\n4 8 4 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 4 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''15\n4 8 4 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''26\n
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 15 16 23''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42''') == '3'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\\\n4 8 15 16 23\n4 8 4 15 16 8 23 15 16 42 23 42\n\"\"\") == \"0\"\nassert solution(\"\"\"\\\n5\n4 8 15 16 23 42\n4 8 4 15 16 8 23 15 16 42 23 42\n\"\"\") == \"5\"\nassert solution(\"\"\"\\\n15\n4 8 4 15 16 8 16 16 1 23 15 16 4 42 2 23 42\n\"\"\") == \"5\"\nassert solution(\"\"\"\\\n12\n4 8 4 4 8 8 8 16 8 16 8 16 1 23 15 16 4 42 2 23 42\n\"\"\") == \"3\"\nassert solution(\"\"\"\\\n15\n4 8 4 4 8 8 8 16 8 16 8 16 1 23 15 16 4 42 2 23 42\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 8 15 16 23\") == \"\"\nassert solution(\"4 8 4 15 16 8 23 15 16 4 42 23 42\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5 2 3 4 6 2\") == \"\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"4\\n4 8 4 15 16 8\") == \"0\"\nassert solution(\"3\\n4 8 4 15 16\") == \"1\"\nassert solution(\"8\\n4 8 4 15 16\") == \"1\"\nassert solution(\"11\\n4 8 4 15 16\") == \"2\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n4 8 15 16 23') == '5'\nassert solution('12\\n4 8 4 15 16 8 22 15 16 42 22 42') == '0'\nassert solution('15\\n
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 2') == '0'\nassert solution('6 1') == '3'\nassert solution('10 9') == '2'\nassert solution('13 42') == '2'\nassert solution('18 4') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n5 5''') == '0'\nassert solution('''13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\n'''\n\n'''\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\"\"\"\nimport unittest\nfrom atcoder.solved.abalone import solution\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000'''), '0')\n        self.assertEqual(solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000'''), '3')\n        self.assertEqual(solution('''6\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000'''), '2')\n        self.assertEqual(solution('''6\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000'''), '1')\n        self."
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('13') == '2'\nassert solution('42') == '3'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('12') == '2'\nassert solution('9') == '1'\nassert solution('0') == '0'\nassert solution('123') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0''') == '0'\nassert solution('''5''') == '0'\nassert solution('''13 42''') == '3'\nassert solution('''18 4''') == '2'\nassert solution('''1337 420''') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '92'\nassert solution('123456789 1000000000') == '9150'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12345') == '12339'\nassert solution('0') == '0'\nassert solution('5') == '15'\nassert solution('54321') == '54306'\nassert solution('12345678901234567890') == '987654321'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"6\\n0 1 2 3 4 5 6\") == \"0\"\nassert solution(\"3\\n2 0 0\") == \"0\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"4\\n2\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"5\\n2\\n1\") == \"2\"\nassert solution(\"3\\n4\\n2\") == \"0\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 7\n7 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339'\nassert solution('''7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '0'\nassert solution('''9 6 3\n8 5 1\n7 4 2\n7 2 1\n7 2 4\n7 2 4\n7 2 4\n7 2 4\n7 2 4\n7 2 4\n7 2 4''') == '6'\nassert solution('''0 4 499999993 9 1000000000\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '6'\nassert solution('''1 4 499999993 9 1000000000\n2 0 4\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '5'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == \"12339\"\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == \"0\"\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == \"15\"\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == \"54306\"\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == \"999999995\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[1]"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5\n''') == '4'\nassert solution('''8 3\n1 2 2 3 2 4 6 10\n''') == '4'\nassert solution('''9 3\n1 2 2 3 2 4 6 7 8 9\n''') == '0'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nassert solution('10 3\\n1 2 2 3 2 4 5 6 7 8 9 10') == '6'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nassert solution('1 2 2 3 2 4 5 6 10') == '6'\nassert solution('8 3\\n1 2 2 3 2 4 6 10') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 3 2 4 10') == '6'\nassert solution('1 2 2 3 2 4 6 10') == '8'\nassert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 2') == '6'\nassert solution('7 3') == '4'\nassert solution('8 3') == '4'\nassert solution('7 2') == '6'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aBC', 2) == 'aBC'\nassert solution('ABC', 1) == 'abc'\nassert solution('ABC', 3) == 'AbC'\nassert solution('ABC', 4) == 'ABC'\nassert solution('ABC', 5) == 'AbC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '3 1',\n    'ABC'\n    ])) == 'aBC'\n\nassert solution('\\n'.join([\n    '3 1',\n    'cba'\n    ])) == 'abc'\n\nassert solution('\\n'.join([\n    '3 1',\n    'ABa'\n    ])) == 'abA'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc', 3, 1) == 'aBC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('ABc') == 'abc'\nassert solution('ABcd') == 'abcd'\nassert solution('ABCD') == 'abcd'\nassert solution('ABCD123') == 'abcd123'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2] + stdin[3].lower()\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.lower()[2]\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\nassert solution('3 2\\nABC') == 'ABc'\nassert solution('3 3\\nABC') == 'AbC'\nassert solution('2 2\\nABC') == 'AaBb'\nassert solution('2 1\\nABC') == 'AaBb'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\nABC\n''') == 'aBC'\nassert solution('''3 1\nABc\n''') == 'aBC'\nassert solution('''3 1\nabc\n''') == 'abc'\nassert solution('''3 1\nABC\n''') == 'ABC'\nassert solution('''3 1\nABCD\n''') == 'ABCD'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution(\n'''6\nkhabarovsk 21\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 41''') == '3\\n4\\n6\\n1\\n5\\n2'\n'''"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"3\\n1\") == \"2\"\nassert solution(\"4\\n1\") == \"2\"\nassert solution(\"5\\n1\") == \"3\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"khabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\"\"\") == \"\"\"3\n4\n6\n1\n5\n2\"\"\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'\n\nassert solution(\n'''10\nkigali 20\nbuenos aires 30\ncosta rica 30\nhuanta 30\nconakry 30\nmadara 30\npuerto rico 30\nmanagua 30\ncapitan morro 30\n''') == '7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'\n\nassert solution(\n'''50\np.l.f.d.a.c.s.i.r.f.c.o.o.f.c.t.a.f.e.o.p.k.a.s.m.e.n.a.s.d.e.d.a.t.c.a.p.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.e.c.d.a.p.c.n.f.e.d.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a.g.e.r.f.c.a.n.g.o.f.e.r.f.c.a.c.b.a."
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''6\n    khabarovsk 20\n    moscow 10\n    kazan 50\n    kazan 35\n    moscow 60\n    khabarovsk 40'''\n) == '3,4,6,1,5,2'\n'''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n'''\nassert solution(\n    '''3\n    khabarovsk 20\n    moscow 10\n    kazan 50\n    '''\n) == '3,4,1'\n'''\n3\nkhabarovsk 20\nmoscow 10\nkazan 50\n'''\nassert solution(\n    '''3\n    khabarovsk 20\n    moscow 10\n    kazan 50'''\n) == '1,3,4'\n'''\n3\nkhabarovsk 20\nmoscow 10\nkazan 50\n'''\nassert solution(\n    '''6\n    khabarovsk 20\n    moscow 10\n    kazan 50\n    kazan 35\n    moscow 60\n    khabarovsk 40'''\n) == '3,4,6,1,5,2'\n'''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n'''\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 20\\nkhabarovsk 35\\nkazan 25\\nkazan 10\\nmoscow 30\\nkhabarovsk 30') == '4\\n6\\n1\\n5\\n2\\n3'\nassert solution('moscow 10\\nkhabarovsk 30\\nkazan 30\\nmoscow 25\\nkhabarovsk 50\\nkazan 35') == '3\\n5\\n6\\n1\\n4'\nassert solution('khabarovsk 35\\nmoscow 35\\nkazan 25\\nkazan 35\\nmoscow 30\\nkhabarovsk 50') == '3\\n4\\n5\\n6\\n1'\nassert solution('moscow 10\\nkhabarovsk 30\\nkazan 50\\nmoscow 25\\nkhabarovsk 35') == '4\\n6\\n1\\n5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('moscow 10') == '1'\nassert solution('khabarovsk 20') == '3'\nassert solution('kazan 50') == '4'\nassert solution('kazan 35') == '6'\nassert solution('moscow 60') == '5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1\") == \"No\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"0 1000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'No'\nassert solution('2 1') == 'No'\nassert solution('2 2') == 'Yes'\nassert solution('100 1') == 'Yes'\nassert solution('101 1') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 900') == 'No'\nassert solution('1 0') == 'Yes'\nassert solution('5 0') == 'Yes'\nassert solution('100 100') == 'No'\nassert solution('10 10') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'Yes'\nprint(solution(input))\nassert solution(input) == 'No'\nprint(solution(input))\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0') == 'No'\nassert solution('0 1') == 'No'\nassert solution('1 0') == 'No'\nassert solution('0 1 0') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 5') == 'No'\nassert solution('100 6') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 50000') == 'No'\nassert solution('1 1000') == 'Yes'\nassert solution('4 1000') == 'Yes'\nassert solution('10 2') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"No\"\nassert solution(\"1 10\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0.145833333333'\nassert solution('2 2') == '0.333333333333'\nassert solution('1 10') == '0.145833333333'\nassert solution('1 1') == '0.5'\nassert solution('1 1000000') == '1.0'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.166666666667'\nassert solution('3 10') == '0.166666666667'\nassert solution('3 10') == '0.166666666667'\nassert solution('1 100') == '0.03125'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('1 50') == '0.145833333333'\nassert solution('2 50') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('5 10') == '0.145833333333'\nassert solution('4 10') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10''') == '0.145833333333'\nassert solution('''3 1''') == '1.0'\nassert solution('''5 1''') == '0.2'\nassert solution('''10 2''') == '0.154545454545'\nassert solution('''10 5''') == '0.135135135135'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.783333333333'\nassert solution('3 10') == '0.388888888889'\nassert solution('5 10') == '0.0952380952381'\nassert solution('10 10') == '0.02380952380952'\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.333333333333'\nassert solution('3 10') == '0.2'\nassert solution('100 30') == '0.0'\nassert solution('1 1') == '1.0'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10''') == '0.145833333333'\nassert solution('''3 4''') == '0.0643568851187'\nassert solution('''100 10''') == '0.42142857142857'\nassert solution('''100 1000''') == '0.01'\nassert solution('''1 10''') == '0.0643568851187'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 10') == '0.145833333333'\nassert solution('10 4') == '0.145833333333'\nassert solution('10 3') == '0.145833333333'\nassert solution('1 10') == '0.145833333333'\nassert solution('10 1') == '0.145833333333'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '1'\nassert solution('WED') == '2'\nassert solution('THU') == '4'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"WED\") == \"3\"\nassert solution(\"THU\") == \"4\"\nassert solution(\"FRI\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"MON\") == 1\nassert solution(\"TUE\") == 2\nassert solution(\"WED\") == 3\nassert solution(\"THU\") == 4\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('WED') == '4'\nassert solution('TUE') == '7'\nassert solution('FRI') == '14'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SUN') == 1\nassert solution('SAT') == 2\nassert solution('MON') == 0\nassert solution('WED') == 3\nassert solution('TUE') == 1\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"1\"\nassert solution(input(\"SUN\")) == \"1\"\nassert solution(input(\"MON\")) == \"2\"\nassert solution(input(\"TUE\")) == \"3\"\nassert solution(input(\"WED\")) == \"4\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[2]\nassert solution(stdin) == stdin[3]\nassert solution(stdin) == stdin[4]\nassert solution(stdin) == stdin[5]\nassert solution(stdin) == stdin[6]\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 10 10') == '10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100'\nassert solution('1 20 10') == '10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 100') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 1 1') == '-1'\n\"\"\""
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 50') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 100 100') == '10250'\nassert solution('1 0 10') == '10'\n\"\"\""
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('1 100 100') == '99'\nassert solution('2 2 2') == '0'\nassert solution('2 4 3') == '0'\n\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n\"\"\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '5'\nassert solution('''1 3 1 1 4''') == '5'\nassert solution('''5''') == '0'\nassert solution('''1 3 2 1 4''') == '4'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n1') == '4'\nassert solution('1\\n3\\n2') == '0'\nassert solution('1\\n3\\n4') == '0'\nassert solution('1\\n3\\n5') == '0'\nassert solution('1\\n3\\n6') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline().strip())\narr = [int(x) for x in stdin.readline().strip().split()]\n\na, b, c = 0, 0, 0\n\nfor i in range(0, n):\n    if i > 0 and arr[i] == arr[i-1] and a == 0:\n        a += 1\n    elif i > 0 and arr[i]!= arr[i-1] and b == 0:\n        b += 1\n    elif i > 0 and arr[i]!= arr[i-1] and c == 0:\n        c += 1"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 1\\n') == '4'\nassert solution('5\\n1 3 2 1 4\\n') == '5'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('7\\n4 1 2 3 4 1 2 3\\n') == '8'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 1 1 4') == '5'\nassert solution('1 3 2 1 4') == '4'\nassert solution('3 4 1 2') == '0'\nassert solution('5 1 3 2 1 4') == '4'\nassert solution('5 1 3 2 4') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'\n\n\"\"\""
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('2\\n4\\n') == '4'\nassert solution('1\\n3\\n') == '0'\nassert solution('3\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '4'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'\nassert solution(\"\"\"5\n1 3 1 1 4\"\"\") == '5'\nassert solution(\"\"\"5\n1 3 2 1 4\"\"\") == '4'\nassert solution(\"\"\"3\n4 1 2\"\"\") == '0'\nassert solution(\"\"\"10\n4 1 2 3 4 5 6 7 8 9\"\"\") == '10'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nYES\\n1 1 1000000000\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nYES\\n1 1 1000000000\\n'"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''YES\n3 2 1\nNO\nNO\nYES\n1 1 1000000000\n3 2 1\nYES\n100 100 100\n'''\n\nassert solution('''1\n1 1 1\n1 1 1\n''') == '''YES\n1 1 1\nYES\n'''\n\nassert solution('''10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '''NO\n1 1 1\n'''\n\nassert solution('''5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '''NO\n'''\n\nassert solution('''2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '''NO\n'''"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 'YES\\n1 1 1000000000\\n'"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 2 3''') == 'YES'\nassert solution('''3\n3 2 3\n100 100 100''') == 'YES'\nassert solution('''3\n3 2 3\n50 49 49''') == 'NO'\nassert solution('''3\n3 2 3\n10 30 20''') == 'NO'\nassert solution('''3\n3 2 3\n1 1000000000 1000000000''') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"x = 1\") == \"\"\nassert solution(\"x = 2\") == \"\"\nassert solution(\"x = 3\") == \"\"\nassert solution(\"x = 4\") == \"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''NO\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''YES\n3 2 1\n1 1 1000000000\n'''\n\nassert solution('''5\n3 2 3\n1 1000000000 1000000000\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''NO\n3 2 1\n1 1 1000000000\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''NO\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"4\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"5\"\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"5 4 5\\n1 2 3 4 1\") == \"0\"\n\n\n-----Best Practice-----"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1''') == '1'\nassert solution('''5 3 3\n1 2 3 1 1''') == '5'\n'''"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.strip().split(' ')]\na = [int(x) for x in stdin.strip().split(' ')]"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\nassert solution('100 1') == '99'\nassert solution('99999 7 2') == '96'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[:-1]\n\n\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\nassert solution('''7 10\nccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccccccccc\ncccc"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\n\n-----Test Plan\n\n1. Run your code with the first three test cases from the judge.\n\n2. Run your code with more test cases of your own creation that verify that your code meets the requirements in the first three test cases.\n\n3. Upload your code to CodeGrade or a similar site to receive a grade.\n\"\"\"\n\nn, k = map(int, input().split())\ns = list(input())\nc = set(input().split())\n\ncount = 0\nfor i in range(n):\n    for j in range(i, n):\n        if s[i] in c:\n            count += j - i + 1\nprint(count)\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 2') == '12'\nassert solution('10 3') == '21'\n\n\n\n'''\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\f a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\nassert solution('7 1\\naaaaaaaa\\nb\\n') == '0'\nassert solution('7 1\\naaaaaaaa\\nb\\n') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 1\\n'\n'aaaaaaa\\n'\n'b\\n'\n'') == '0'\nassert solution('7 3\\n'\n'aaaaaaa\\n'\n'bbbbbb\\n'\n'') == '6'\nassert solution('7 2\\n'\n'abacaba\\n'\n'a b\\n'\n'') == '12'\nassert solution('10 3\\n'\n'aaaaaaa\\n'\n'bbbbbb\\n'\n'') == '21'\nassert solution('7 1\\n'\n'aaaaaaa\\n'\n'b\\n'\n'') == '0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n-1\\n-2') == '2\\n-1\\n6'\nassert solution('4\\n-1 -2 -1 -3\\n4\\n-1 -2 -1 -3') == '2\\n-1\\n6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '6\\n-2999999997'\nassert solution('6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '2\\n-1'\nassert solution('6\\n-1000000000 1 -1000000000 1 -1000000000') == '2\\n-1'\n\n\n-----Test-----\n\nThis test case is expected to pass:\n\n+---------+\n| test1   |\n+---------+\n| 1       |\n+---------+\n| 2       |\n+---------+\n| 2       |\n+---------+\n| 5       |\n+---------+\n| 5       |\n+---------+\n| 1       |\n+---------+\n| -1      |\n+---------+\n| 1       |\n+---------+\n| -1      |\n+---------+\n| -1      |\n+---------+\n| 1       |\n+---------+\n| -1      |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| -1      |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| -1      |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+\n| 1       |\n+---------+"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n7\n-1 -1 -1 -1 -1 -1 -1 -1''') == '-1\\n1\\n1\\n-1\\n-1\\n1\\n-1\\n-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n7\n-1 -1 -1 -1 -1 -1 -1 -1''') == '-1\\n1\\n1\\n-1\\n-1\\n1\\n-1\\n-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n7\n-1 -1 -1 -1 -1 -1 -1 -1''') == '-1\\n1\\n1\\n-1\\n-1\\n1\\n-1\\n-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n2\n3\n-1\n-2\"\"\") == \"2\"\nassert solution(\"\"\"4\n-1 -2 -1 -3\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\"\"\") == \"2\"\nassert solution(\"\"\"1\n-1000000000 1 -1000000000 1 -1000000000\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\"\"\") == \"6\"\nassert solution(\"\"\"1\n-1000000000 1 -1000000000 1 -1000000000\n1\n-1000000000 1 -1000000000 1 -1000000000\"\"\") == \"2999999997\"\nassert solution(\"\"\"1\n-1000000000 1 -1000000000 1 -1000000000\n1\n-1000000000 1 -1000000000 1 -1000000000\"\"\") == \"2999999997\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2'\nassert solution('''4\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '-1'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(expected)\n\"\"\"\nimport sys\nassert (expected == solution(stdin))\nprint(expected)"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-1'\n\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('-1') == '1'\nassert solution('1 2 3 -1 -2') == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n5\n-1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n5\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n5\n1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n5\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n5\n1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n5\\n-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\n'''"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\\n-1\\n6\\n-2999999997\"\nassert solution(\"5\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"10\") == \"6\\n-2999999997\"\nassert solution(\"1 2 3 -1 -2\") == \"2\\n-1\\n6\"\nassert solution(\"4\") == \"1\\n-1\\n6\\n-2999999997\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"3 5\"\nassert solution(\"4 6\") == \"3 2\"\nassert solution(\"8 9\") == \"4 1\"\n\n\n-----Hideous O(n^2) algorithm-----\n\nHere I came up with a greedy algorithm to find the maximum spanning tree.\n\nFirst of all, for each edge $(v, u)$ of the graph we pick the edge that leads to a maximum degree vertex.\n\nSecond, we pick the edges that are incident to the maximum degree vertex and do the same process for the next vertex.\n\nThe algorithm is pretty simple: the time complexity is O(n^2) and space complexity is O(n).\n\n\"\"\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 1') == '2 1'\nassert solution('2 3\\n3 5\\n1 2') == '3 2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nprint('Passed')\n\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4 1\\n1 2\\n1 3\\n1 4'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('5 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8\\n') == '1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 7\\n5 8\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 7\\n5 8') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n\n-----\n\nSuccess\nDetails\nRuntime: 384 ms, faster than 9.37% of Python3 online submissions for Graph Connectivity.\nMemory Usage: 26.1 MB, less than 5.22% of Python3 online submissions for Graph Connectivity.\n\n\"\"\""
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n4 7\n6 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n4 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1 2 3 4 5'\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"0\n40\n41664916690999888\"\"\"\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 1\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10 ** 9)\nn = int(sys.stdin.readline())"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1\n5\n499993\n''') == '0'\nassert solution('''4\n1\n5\n999999\n''') == '40'\nassert solution('''4\n1\n9\n123456789\n''') == '41664916690999888'\nassert solution('''4\n3\n7\n123456789\n''') == '27'\nassert solution('''4\n3\n5\n3456789\n''') == '16'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"0\"\"\") == \"\"\"\"\"\"\nassert solution(\"\"\"4\"\"\") == \"\"\"\"\"\"\nassert solution(\"\"\"6\"\"\") == \"\"\"\"\"\"\nassert solution(\"\"\"8\"\"\") == \"\"\"\"\"\"\nassert solution(\"\"\"1000000000\"\"\") == \"\"\"\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n5''') == '0'\nassert solution('''4\n5\n5\n5\n5\n5\n5''') == '40'\nassert solution('''2\n5\n5\n5\n5\n5\n5\n5''') == '41664916690999888'\nassert solution('''5\n5\n5\n5\n5\n5\n5''') == '41664916690999888'\nassert solution('''3\n5\n5\n5\n5\n5\n5''') == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1\n5''') == '0'\nassert solution('''3\n1\n5\n499993''') == '0'\nassert solution('''3\n2\n4\n44444''') == '3'\nassert solution('''3\n2\n4\n44444''') == '3'\nassert solution('''3\n3\n3\n333''') == '3'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('10\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1\\n1') == '-1'\nassert solution('5\\n1 1 1 1 1') == '-1'\nassert solution('1000\\n
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\n\n-------\n\n* https://www.codewars.com/kata/5754cd607ad2f0130c000008\n\n* https://www.codewars.com/kata/5654d16fbcc3f70ea00000f3\n\n* https://www.codewars.com/kata/5b3c71c0caf6086c800005c6\n\n* https://www.codewars.com/kata/5556e6ac83c096a8f60000b2\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\nassert solution(\"3\\n3 3 3\") == \"3 2 2\"\n\nassert solution(\"2\\n2 1\") == \"1 1\"\n\nassert solution(\"1\\n1\") == \"0\"\n\nassert solution(\"100\\n0\") == \"0\""
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n'''\n\nfrom sys import stdin\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2 3 4 5 6 7 8 9') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1113141516') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1113141517') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1113141518') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1\\n5 3 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1\\n10 10 10 10 10 10 10') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1\\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1\\n
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == None\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n'''assert solution('''9 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n'''assert solution('''14 1 2 3 4 5 6 7 8 9 10 11 12 13 14''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''7 2 1 3 4 5 6 7 8 9 10 11 12 13 14''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''7 2 1 3 4 5 6 7 8 9 10 11 12 13 14''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''1\n1\n1''') == '1 -1'\nassert solution('''2\n2 1\n1''') == '-1'\nassert solution('''3\n1 1 1\n1 1 1''') == '-1'\nassert solution('''4\n3 2 1 1\n1 1 1 1''') == '-1'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == \"NO\"\nassert solution('''64''') == \"YES\"\nassert solution('''32''') == \"YES\"\nassert solution('''97''') == \"YES\"\nassert solution('''2''') == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"64\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"97\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"12345\") == \"NO\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n\n\"\"\""
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n5\\n8\\n2\\n12345') == 'YES\\n2 4 8'\nassert solution('4\\n5\\n8\\n2\\n6') == 'NO'\nassert solution('4\\n5\\n8\\n2\\n7') == 'NO'\nassert solution('4\\n5\\n8\\n2\\n1') == 'YES'\nassert solution('4\\n5\\n8\\n2\\n1123') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == 'YES'\nassert solution('''10\n2\n7\n17\n26\n39\n45\n55\n70\n82\n89\n91\n93\n97\n101\n105\n107\n109''') == 'NO'\nassert solution('''0\n0\n1\n1\n2\n3\n4\n4\n5\n5\n6\n7\n8\n8\n9\n9\n10\n10\n10\n11\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n18\n19\n19\n20\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n50\n51\n51\n52\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n93\n94\n94\n94\n95\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n100''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('64\\n32\\n97\\n2\\n12345') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('64\\n32\\n97\\n2\\n2345') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('64\\n32\\n97\\n2\\n12345') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''\n\n\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''\n\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''\n\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''\n\nassert solution('''64\n32\n97\n2\n12345\n''') == '''YES\n2 4 8\nNO\nNO\nNO\nYES\n3 5 823'''"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\n'''"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"64\") == \"2 4 8\"\nassert solution(\"97\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('baab') == ''\nassert solution('baa') == 'bba'\nassert solution('abaa') == 'baaa'\nassert solution('abb') == 'babb'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ababbb\") == \"ababab\"\nassert solution(\"abaaabbbabaa\") == \"abababababab\"\nassert solution(\"baabaa\") == \"baabaa\"\nassert solution(\"baaaaaaaa\") == \"baaaaaaaa\"\nassert solution(\"abababbabababababab\") == \"abababababababababab\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"baabab\"\nassert solution(\"aaaa\") == \"\"\nassert solution(\"baaab\") == \"bbaab\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''bbbb''') == '2'\nassert solution('''ababab''') == '0'\nassert solution('''aaaaaaaa''') == '1'\nassert solution('''aaaaab''') == '1'\nassert solution('''aaaa''') == '3'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abba') == 'abba'\nassert solution('ababa') == 'ababab'\nassert solution('baba') == 'baaba'\nassert solution('a') == 'a'\nassert solution('ab') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ababab') == \"ba\"\nassert solution('aaaa') == \"a\"\nassert solution('bbaa') == \"a\"\nassert solution('baaab') == \"a\"\nassert solution('abba') == \"ba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"bbbaa\") == \"baab\"\nassert solution(\"aabaaaaa\") == \"baaaaaaa\"\nassert solution(\"aabaabaab\") == \"baab\"\nassert solution(\"bbbb\") == \"baab\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"abbba\") == \"baaabb\"\nassert solution(\"bbbb\") == \"\"\nassert solution(\"bbbbbbbbbbbbbbbbbbbbb\") == \"bbbbbbbbbbbbbbbbbbbbb\"\nassert solution(\"aaaaaaaaaaaaaaaaaa\") == \"aaaaaaaaaaaaaaaaaa\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output\nprint(solution(input_data))\n\"\"\"\n\n\nimport sys\n\ninput_data = sys.stdin.readlines()\n\nn = int(input_data[0])\n\ndata = [0] * n\n\nfor i in range(n):\n    x, y = map(int, input_data[i + 1].split())\n    data[i] = (x, y)\n\ndata = sorted(data, key=lambda x: x[1])\ndata = sorted(data, key=lambda x: x[0])\n\nkey_points = data[0]\n\nfor i in range(1, n):\n    if key_points[1] < data[i][1]:\n        key_points = data[i]\n\nprint(abs(key_points[0]) + abs(key_points[1]))\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('5\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0'\nassert solution('5\\n0 0\\n1 0\\n2 0\\n3 0\\n') == '0'\nassert solution('5\\n0 0\\n1 0\\n2 0\\n3 0\\n') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''10\n2 1\n1 0\n2 0\n3 2\n0 3\n1 1\n4 3\n1 2\n1 2\n4 3\n1 2\n''') == '6'\nassert solution('''15\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n''') == '12'\nassert solution('''15\n4 4\n1 4\n2 3\n3 1\n4 1\n1 2\n2 4\n3 2\n3 1\n3 4\n2 4\n2 3\n1 4\n1 2\n2 1\n''') == '11'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '15'\nassert solution(stdin) == '9'\n\"\"\"\nfrom sys import stdin, stdout\n\nn = int(stdin.readline().strip())\n\ntotal_sum = 0\nfor _ in range(n):\n    x, y = map(int, stdin.readline().strip().split())\n    total_sum += max(abs(x), abs(y))\n\nprint(total_sum)"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"15\"\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n\nassert solution('''\n100\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1\n399 1\n\n''') == '0'"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\\n4 5 6\") == \"9\"\nassert solution(\"5\\n1 1\\n2 0\\n3 2\\n0 3\") == \"15\"\nassert solution(\"1 1\\n2 2\") == \"3\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('3\\n1') == '2'\nassert solution('1\\n3') == '2'\nassert solution('3\\n3') == '1'\nassert solution('3\\n2') == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"1\\n1\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n3') == '2'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A') == 'A'\nassert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('1\\n2') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n3') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n\nprint(\"All Tests past. Now printing solutions.\")\nprint(\"Solution1: \", solution('3\\n1'))\nprint(\"Solution2: \", solution('1\\n3'))\nprint(\"Solution3: \", solution('1\\n1'))\nprint(\"Solution4: \", solution('1\\n1\\n1'))"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('2\\n3') == '2'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '2'\nassert solution('3\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('3\\n3') == '3'\nassert solution('1\\n2') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1''') == '2'\nassert solution('''3\n2''') == '2'\nassert solution('''3\n3''') == '2'\nassert solution('''5\n3\n2\n1\n4\n3''') == '2'\nassert solution('''7\n9\n5\n7\n7\n7\n7\n7''') == '7'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1.000000000000'\nassert solution('1\\n2') == '1.000000000000'\nassert solution('1\\n2\\n3') == '1.000000000000'\nassert solution('1\\n2\\n3\\n4') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(3) == '1.000000000000'\nassert solution(4) == '1.33333333333'\nassert solution(5) == '1.66666667000'\nassert solution(6) == '2.000000'\nassert solution(7) == '2.33333333333'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '1.000000000000'\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '0'\nassert solution('0.5') == '0.5'\nassert solution('2.5') == '1.000000000000'\nassert solution('1.000000000000') == '0'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == '1.000000000000'\nassert solution(1) == '1.000000000000'\nassert solution(2) == '1.000000000000'\nassert solution(3) == '1.000000000000'\nassert solution(4) == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\n\"\"\""
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0.0\"\nassert solution(\"3\") == \"1.000000000000\"\nassert solution(\"10\") == \"3.33333333333\"\nassert solution(\"8\") == \"4.88888888889\"\nassert solution(\"83434\") == \"16.17187414182\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('2') == '0.500000000000'\nassert solution('100') == '3.000000000000'\nassert solution('1000') == '6.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"0\") == \"0.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"3.000000000000\") == \"1.000000000000\"\nassert solution(\"1.000000000000\") == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0.8 1 1.2') == '1.000000000000'\nassert solution('1.1 1.2 1.3') == '1.000000000000'\nassert solution('0.8 0.9 1.1') == '0.9000000000000'\nassert solution('0.1 0.1 1.1') == '0.1000000000000'\nassert solution('1.1 0.1 1.1') == '1.000000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'Hello World'\nassert solution('2') == '4'\nassert solution('1\\n2') == 'Hello World'\nassert solution('2\\n1') == '4'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('A') == 'Hello World'\nassert solution('B') == 'A+B'\nassert solution('3') == 'Invalid input'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '5'\nassert solution('A') == 'Hello World'\nassert solution('B') == '5'\nassert solution('C') == 'False'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == \"Hello World\"\nassert solution(2) == \"2\"\nassert solution(3) == \"5\"\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\nA\\nB') == '4'\nassert solution('1\\n2\\n1\\n2') == '3'\n\"\"\"\n\nimport sys\nsys.path.append('..')\nfrom util import time_it\nfrom operator import add\n\n@time_it\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == \"Hello World\"\nassert solution('2') == \"2+1=3\"\nassert solution('1\\n2') == \"Hello World\"\nassert solution('2\\n1') == \"2+1=3\"\nassert solution('1\\n2\\n3') == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"Hello World\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+1'\nassert solution('2') == '2'\nassert solution('1') == 'Hello World'\nassert solution('2') == '1+1'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1\n\n2\n1\n2\n''') == 'Hello World\\n'\nassert solution('''\n2\n\n2\n1\n2\n''') == '1\\n'\nassert solution('''\n2\n\n2\n2\n2\n''') == '4\\n'\n'''\n-----Solution Overview-----\n\nIn order to get the input from the stdin, we have to use the command'stdin' as follows:  "
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\nassert solution('4 1') == '4444'\nassert solution('2 2') == '2222'\nassert solution('4 3') == '3333'\nassert solution('5 5') == '5555'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3333'\nassert solution('5 4') == '4444'\nassert solution('8 9') == '8999'\nassert solution('5 4') == '4444'\nassert solution('8 9') == '8999'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 12') == '11'\nassert solution('12 11') == '11'\nassert solution('21 1') == '11'\nassert solution('21 4') == '44'\nassert solution('12 2') == '22'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3333'\nassert solution('2 2') == '2222'\nassert solution('3 2') == '2222'\nassert solution('5 5') == '5555'\nassert solution('5 3') == '3333'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3333'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '33'\nassert solution('3 1') == '3'\nassert solution('2 3') == '33'\nassert solution('4 3') == '333'\nassert solution('7 5') == '7'\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333'\nassert solution('4 22') == '223333'\nassert solution('7 3') == '733'\nassert solution('7 2') == '73'\nassert solution('1 2') == '12'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('b') == 'c'\nassert solution('q') == 'p'\nassert solution('w') == 'x'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\nassert solution('C') == 'D'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('c') == 'd'\nassert solution('h') == 'i'\nassert solution('o') == 'p'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"b\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'b'"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oder atc' == 'atcoder') == 'atcoder'\nassert solution('ZpCg' == 'Zpcg') == 'Zpcg'\nassert solution('Oder' == 'Atcoder') == 'AtcoderOder'\nassert solution('ZpCg' == 'Zpcg') == 'ZpcgZpCg'\nassert solution('Oder' == 'Atcoder') == 'AtcoderOder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('oder atc')) == 'atcoder'"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('order atc') == 'atcorder'\nassert solution('a  ') == 'a'\nassert solution('a   ') == 'a'\nassert solution(' a ') == 'a'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"awe\") == \"aw\"\nassert solution(\"awe\") == \"aw\"\nassert solution(\"awe\") == \"awe\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oder atc' == 'atcoder') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('oder') == 'oder'\nassert solution('atc') == 'atc'\nassert solution('atcoder') == 'atcoder'\nassert solution('atcoderod') == 'atcoderod'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[2:] + stdin[0:2]\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[-1]+stdin[0:-1]\nprint('Test 1 passed')\n\nassert solution(stdin) == stdin[-1]+stdin[1:-1]\nprint('Test 2 passed')\n\nassert solution(stdin) == stdin[-1]+stdin[0:-2]\nprint('Test 3 passed')\n\nassert solution(stdin) == stdin[0]+stdin[-1]+stdin[1:-1]\nprint('Test 4 passed')\n\nassert solution(stdin) == stdin[-1]+stdin[0]+stdin[-2]+stdin[1:-1]\nprint('Test 5 passed')\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''1\n1000000''') == '1000000'\nassert solution('''1\n1''') == '1'"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''6\n5 1 2 4 6 3\n''') == '0'\nassert solution('''2\n1000000 1000000\n''') == '1000000'\nassert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''4\n3 2 1 4\n''') == '3'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(0)\n\nassert solution(input()) == str(0)\n\nassert solution(input()) == str(1000000)\n\nassert solution(input()) == str(1000000)\n\nassert solution(input()) == str(1000000)"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nprint(solution('''10\n0 0 0 0 0 0 0 0 0 0'''))\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 5 7 8 2\\n') == '0'\nassert solution('6\\n5 1 2 4 6 3\\n') == '1000000'\nassert solution('2\\n1000000 1000000\\n') == '1000000'\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == ''\nassert solution('''1 5 7 8 2''') == ''\nassert solution('''6''') == ''\nassert solution('''5 1 2 4 6 3''') == ''\nassert solution('''1000000 1000000''') == ''\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''6\n5 1 2 4 6 3\n''') == '1000000'\nassert solution('''2\n1000000 1000000\n''') == '1000000'\nassert solution('''3\n1000000 1000000\n''') == '3000000'\nassert solution('''4\n1000000 1000000\n''') == '4000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''4\n1 1 2 1''') == '1'\nassert solution('''5\n5 1 2 4 6 3''') == '1'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n7\\n8\\n2\\n') == '0\\n'\nassert solution('1\\n5\\n7\\n8\\n2\\n') == '0\\n'\nassert solution('1\\n5\\n7\\n8\\n2\\n') == '0\\n'\nassert solution('1\\n5\\n7\\n8\\n2\\n') == '0\\n'\nassert solution('1\\n5\\n7\\n8\\n2\\n') == '0\\n'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 5 7 8 2\n''') == '0'\nassert solution('''\n6\n5 1 2 4 6 3\n''') == '1000000'\nassert solution('''\n2\n1000000 1000000\n''') == '1000000'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''7 4 2 1''') == '6'\nassert solution('''100''') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"6 2 3 3\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"7 10 50 12 1 8\"\"\"\n) == '6'\n\nassert solution(\n\"\"\"1 1 100 99\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"7 4 2 1\"\"\"\n) == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99\n100''') == '1'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''7 4 2 1''') == '6'\nassert solution('''1 3 5 4 2 7 6''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('100') == '1'\nassert solution('7 4 2 1') == '6'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0 1 2 3'\nassert solution('''4 4\n1 2 3 4\n''') == '3'\nassert solution('''4 4\n0 1 2 3\n''') == '1 2 3 4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n0 1 2 3\") == \"3\"\nassert solution(\"4 2\\n0 1 2 3\\n0 1 2 3\") == \"0\"\nassert solution(\"5 3\\n1 2 3 4 5 6\\n2 1 3 4 5 6\") == \"3\"\nassert solution(\"4 2\\n1 2 3 4\\n1 2 3 4\") == \"0\"\nassert solution(\"6 2\\n1 2 3 4 5 6 7 8\\n3 1 2 3 4 5 6 7 8\") == \"6\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin)\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 3\n1 2 3 4'''\n) == '0\\n1 2 3 4'\nassert solution(\n'''6 3\n3 2 0 6 10 12'''\n) == '3'\nassert solution(\n'''4 2\n0 1 2 3'''\n) == '0\\n0 1 2 3'\nassert solution(\n'''2 4\n3 2 0 1'''\n) == '0\\n0 1 2 3'\nassert solution(\n'''8 2\n0 1 2 3 4 5 6 7 8'''\n) == '3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''2 3\n1 2\n1 5\n''') == '1'\n\nassert solution('''2 3\n1 2\n1 5\n''') == '1'\n\nassert solution('''2 3\n1 2\n2 5\n''') == '1'"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"3 3\\n2 2\\n3 3\\n1 1\") == \"4\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''7 7\n1 3 1 3 1 1 3\n2 4\n2 4\n2 4\n3 4\n3 4\n3 4\n3 4\n3 4\n''') == '6'\nassert solution('''9 9\n1 3 1 3 1 1 3\n2 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n''') == '6'\nassert solution('''7 7\n1 3 1 3 1 1 3\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n''') == '6'\nassert solution('''6 6\n2 3 1 2 1 3\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n3 4\n''') == '6'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 0 2 0') == '8'\nassert solution('2 4') == '20'\nassert solution('3 3') == '36'\nassert solution('1 5') == '35'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\"\n    ) == \"8\"\nassert solution(\n\"\"\"\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\"\n    ) == \"20\"\nassert solution(\n\"\"\"\n5 3\n4 2 1 3 2\n2 3\n1 3\n\"\"\"\n    ) == \"3\"\nassert solution(\n\"\"\"\n5 3\n3 2 1 3 2\n2 3\n1 3\n\"\"\"\n    ) == \"3\"\nassert solution(\n\"\"\"\n4 1\n3 2 1 2\n2 3\n1 3\n\"\"\"\n    ) == \"3\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1') == '4'\nassert solution('1\\n1\\n1') == '3'\nassert solution('3\\n1\\n1') == '5'\nassert solution('1\\n5\\n1\\n1\\n1') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20'\nassert solution('1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"YES\nNO\nNO\nYES\nYES\nYES\n\"\"\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"\nNO\nNO\nYES\nYES\nYES\n\"\"\"\n\nassert solution(\"\"\"\n1\n1\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n1\n\"\"\") == \"\"\"\nYES\n\"\"\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'NO'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''\\\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 5 100 10 100 10 100\n''') == 'NO'\n\nassert solution('''\\\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10 10000 10000 10000 10000\n''') == 'NO'\n\nprint(solution('''\\\n4\n3\n1 1 1 1\n1\n3 3 3 3\n'''))\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution(\n'''\n3\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nassert solution(\n'''\n2\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution(\n'''\n3\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nassert solution(\n'''\n1\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 3 4 5 6 7 8 9') == '3'\nassert solution('1 2 2 1') == '1'\nassert solution('1 2 2 3 4 5 6 7 8 9') == '3'\nassert solution('1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255')\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''10 10 10\n1 2 10\n2 3 9\n3 4 10\n4 5 7\n5 6 4\n6 7 9\n7 8 3\n8 9 6\n9 10 9\n7 5 9\n1 7 5\n1 2 3\n2 3 4\n3 4 5''') == '4'\nassert solution('''20 10 10\n1 2 10\n2 3 9\n3 4 10\n4 5 7\n5 6 4\n6 7 9\n7 8 3\n8 9 6\n9 10 9\n7 5 9\n1 7 5\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31 32\n31 32 33\n32 33 34\n33 34 35\n34 35 36\n35 36 37\n36 37 38\n37 38 39\n38 39 40\n39 40 41\n40 41 42\n41 42 43\n42 43 44\n43 44 45\n44 45 46\n45 46 47\n46 47 48\n47 48 49\n48 49 50\n49 50 51\n50 51 52\n51 52 53\n52 53 54\n53 54 55\n54 55 56\n55 56 57\n56 57 58\n57 58 59\n58 59 60\n59 60 61\n60 61 62\n61 62 63\n62 63 64\n63 64 65\n64 65 66\n65 66 67\n66 67 68\n67 68 69\n68 69 70\n69 70 71\n70 71 72\n71 72 73\n72 73 74\n73 74 75\n74 75 76\n75 76 77\n76 77 78\n77 78 79\n78 79 80\n79 80 81\n80 81 82\n81 82 83\n82 83 84\n83 84 85\n84 85 86\n85 86 87\n86 87 88\n87 88 89\n88 89 90\n89 90 91\n90 91 92\n91 92 93\n92 93 94\n93 94 95\n94 95 96\n95 96 97\n94 97 98\n93 98 99\n92 99 100\n91 100 101\n90 101 102\n89 101 103\n88 101 104\n87 101 105\n86 101 106\n85 101 107\n84 101 108\n83 101 109\n82 101 110\n81 101 111\n80 101 112\n79 101 113\n78 101 114\n77 101 115\n76 101 116\n75 101 117\n74 101 118\n73 101 119\n72 101 120\n71 101 121\n70 101 122\n69 101 123\n68 101 124\n67 101 125\n66 101 126\n65 101 127\n64 101 128\n63 101 129\n62 101 130\n61 101 131\n60 101 132\n59 101 133\n58 101 134\n57 101 135\n56 101 136\n55 101 137\n54 101 138\n53 101 139\n52 101 140\n51 101 141\n50 101 142\n49 101 143\n48 101 144\n47 101 145\n46 101 146\n45 101 147\n44 101 148\n43 101 149\n42 101 150\n41 101 151\n40 101 152\n39 101 153\n38 101 154\n37 101 155\n36 101 156\n35 101 157\n34 101 158\n33 101 159\n32 101 160\n31 101 161\n30 101 162\n29 101 163\n28 101 164\n27 101 165\n26 101 166\n25 101 167\n24 101 168\n23 101 169\n22 101 170\n21 101 171\n20 101 172\n19 101 173\n18 101 174\n17 101 175\n16 101 176\n15 101 177\n14 101 178\n13 101 179\n12 101 180\n11 101 181\n10 101 182\n9 101 183\n8 101 184\n7 101 185\n6 101 186\n5 101 187\n4 101 188\n3 101 189\n2 101 190\n1 101 191\n0 101 192\n-1 101 193\n-2 101 194\n-3 101 195\n-4 101 196\n-5 101 197\n-6 101 198\n-7 101 199\n-8 101 200\n-9 101 201\n-10 101 202\n-11 101 203\n-12 101 204\n-13 101 205\n-14 101 206\n-15 101 207\n-16 101 208\n-17 101 209\n-18 101 210\n-19 101 211\n-20 101 212\n-21 101 213\n-22 101 214\n-23 101 215\n-24 101 216\n-25 101 217\n-26 101 218\n-27 101 219\n-28 101 220\n-29 101 221\n-30 101 222\n-31 101 223\n-32 101 224\n-33 101 225\n-34 101 226\n-35 101 227\n-36 101 228\n-37 101 229\n-38 101 230\n-39 101 231\n-40 101 232\n-41 101 233\n-42 101 234\n-43 101 235\n-44 101 236\n-45 101 237\n-46 101 238\n-47 101 239\n-48 101 240\n-49 101 241\n-50 101 242\n-51 101 243\n-52 101 244\n-53 101 245\n-54 101 246\n-55 101 247\n-56 101 248\n-57 101 249\n-58 101 250\n-59 101 251\n-60 101 252\n-61 101 253\n-62 101 254\n-63 101 255\n-64 101 256\n-65 101 257\n-66 101 258\n-67 101 259\n-68 101 260\n-69 101 261\n-70 101 262\n-71 101 263\n-72 101 264\n-73 101 265\n-74 101 266"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''2 5 1''') == '1'\nassert solution('''5 3 9''') == '3'\nassert solution('''6 2 2''') == '3'\nassert solution('''1 3 1''') == '1'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n\"\"\""
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('1 2 1\\n1 3 1') == '2'\nassert solution('1 2 1\\n2 3 1') == '2'\nassert solution('1 2 1\\n2 3 1\\n2 3 2') == '2'\nassert solution('1 2 1\\n2 3 1\\n2 3 2\\n2 3 3') == '2'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('4\\n2\\n3\\n5') == '1'\nassert solution('3\\n2\\n1') == '2'\nassert solution('7\\n2\\n3\\n5\\n6') == '4'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == \"3\"\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == \"9\"\nassert solution('''9 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == \"9\"\nassert solution('''4 4 4\n1 2 3\n2 1 4\n1 3 2\n2 3 1\n3 1 4\n1 4 2\n2 4 3\n4 1 4\n4 2 1''') == \"3\"\nassert solution('''3 3 3\n1 2 1\n2 1 2\n1 3 1\n2 3 2\n1 3 2\n3 1 2\n2 1 3\n1 1 3''') == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''6 5 4\n1 2 3\n2 4 2\n3 4 1\n4 5 5\n5 1 6\n1 6 2\n6 4 4\n6 5 6\n3 2 1\n2 1 5\n1 3 4\n3 5 2\n3 4 1\n4 1 3\n5 2 2''') == '4'\n\nassert solution('''5 2 4\n2 3 1\n3 1 1\n4 1 1\n4 2 3\n4 3 1\n4 1 2\n4 1 3\n4 3 2\n2 3 4\n3 1 4\n2 1 3\n2 1 4\n1 3 4''') == '2'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '1 1'\nassert solution('2\\n1 1') == '2 1'\nassert solution('2\\n1 1 1') == '2 1'\nassert solution('2\\n1 1 1 1') == '2 1'\nassert solution('2\\n1 1 1 1 1') == '2 1'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n\nassert solution('''7\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n\n\n-----"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''1 5 12 13 2 15''') == '7 2'\nassert solution('''10''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 3 4 2''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150''') == '7486 3'\nassert solution('''15\n1 2 5 129 185 581 1041 1909 1580 8150''') == '7486 3'\nassert solution('''15\n1 2 5 129 185 581 1041 1909 1580 8150''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\nassert solution('5\\n1 2 5 12 13') == '6 3'\nassert solution('4\\n1 1 1 1') == '2 2'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0 1\"\nassert solution(\"2\") == \"0 1\"\nassert solution(\"5\") == \"0 1\"\nassert solution(\"7\") == \"0 1\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 1\") == \"\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n1 1 3 4 2\n\n\"\"\") == \"7 1\"\n\nassert solution(\n\"\"\"\n6\n1 5 12 13 2 15\n\n\"\"\") == \"7 2\"\n\nassert solution(\n\"\"\"\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n\"\"\") == \"7486 3\""
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''5\n1 1 3 4 2\n\n''') == '3 1\\n1 1 1 1 1'\nassert solution(\n    '''6\n1 5 12 13 2 15\n\n''') == '7 2\\n2 2 1 1 2 1'\nassert solution(\n    '''10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1'\n\nassert solution(\n    '''2\n1 2\n\n''') == '2 2\\n2 2'\nassert solution(\n    '''3\n1 2 3\n\n''') == '3 3\\n3 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''10''') == '7486 3'\n\n\n\n'''\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\r\") == \"\"\nassert solution(\"\\r\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n9') == '5'\nassert solution('\\n9') == '1'\nassert solution('1\\n5') == '2'\nassert solution('9\\n1') == '1'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1 2 3 4 5'\nassert solution('2\\n7\\n9\\n9\\n7\\n4\\n7\\n3\\n2\\n1') == '1 2 3 4'\nassert solution('2\\n7\\n9\\n9\\n7\\n4\\n7\\n3\\n2\\n1\\n8\\n7\\n6\\n5') == '1 2 3 4 8 7 6'\nassert solution('9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1 2 3 4 5'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('9') == '9'\nassert solution('999') == '999'\nassert solution('9999') == '9999'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3''') == '2'\nassert solution('''0\n1000\n9999\n9999999999\n99999999999''') == '0'\nassert solution('''2\n4\n5\n6\n7\n8\n9\n9000\n9001\n9003\n9010\n9011\n9012\n9013\n9015\n9016\n9017\n9019\n9017000\n9017001\n9017003\n9017010\n9017011\n9017012\n9017013\n9017015\n9017016\n9017017\n9017019''') == '9017017'\nassert solution('''7\n8\n9\n9000\n9001\n9003\n9010\n9011\n9012\n9013\n9015\n9016\n9017\n9019\n9017000\n9017001\n9017003\n9017010\n9017011\n9017012\n9017013\n9017015\n9017016\n9017017\n9017019''') == '9017017'\nassert solution('''11\n12\n13\n14\n15\n16\n17\n18\n19\n200000\n20000001\n20000003\n20000005\n20000009\n20000011\n20000013\n20000015\n20000017\n20000019\n20000201\n20000203\n20000205\n20000207\n20000209\n20000211\n20000213\n20000215\n20000217\n20000221\n20000223\n20000225\n20000227\n20000229\n20000231\n20000233\n20000235\n20000237\n20000239\n20000241\n20000243\n20000246\n20000248\n20000250\n20000254\n20000256\n20000258\n20000260\n20000262\n20000264\n20000266\n20000268\n20000270\n20000272\n20000274\n20000276\n20000278\n20000280\n20000282\n20000284\n20000286\n20000288\n20000290\n20000292\n20000294\n20000296\n20000298\n20000299\n20000301\n20000303\n20000305\n20000307\n20000309\n20000311\n20000313\n20000315\n20000317\n20000319\n20000321\n20000323\n20000325\n20000327\n20000329\n20000331\n20000333\n20000335\n20000337\n20000339\n20000340\n20000342\n20000344\n20000346\n20000348\n20000350\n20000352\n20000354\n20000356\n20000358\n20000360\n20000362\n20000364\n20000366\n20000368\n20000370\n20000372\n20000374\n20000376\n20000378\n20000380\n20000382\n20000384\n20000386\n20000388\n20000390\n20000392\n20000394\n20000396\n20000398\n20000400\n20000402\n20000404\n20000406\n20000408\n20000409\n20000411\n20000413\n20000415\n20000417\n20000419\n20000421\n20000423\n20000425\n20000427\n20000429\n20000441\n20000443\n20000445\n20000447\n20000449\n20000451\n20000453\n20000455\n20000457\n20000459\n20000461\n20000463\n20000465\n20000467\n20000469\n20000471\n20000473\n20000475\n20000477\n20000479\n20000481\n20000483\n20000485\n20000487\n20000489\n20000491\n20000493\n20000495\n20000497\n20000499\n20000501\n20000503\n20000505\n20000507\n20000509\n20000511\n20000513\n20000515\n20000517\n20000519\n20000521\n20000523\n20000525\n20000527\n20000529\n20000531\n20000533\n20000535\n20000537\n20000539\n20000541\n20000543\n20000545\n20000547\n20000549\n20000550\n20000552\n20000554\n20000556\n20000558\n20000560\n20000565\n20000567\n20000569\n20000570\n20000572\n20000575\n20000578\n20000581\n20000583\n20000585\n20000587\n20000589\n20000591\n20000593\n20000595\n20000597\n20000600\n20000612\n20000614\n20000616\n20000618\n20000619\n20000621\n20000623\n20000625\n20000627\n20000629\n20000630\n20000632\n20000634\n20000636\n20000638\n20000640\n20000652\n20000654\n20000656\n20000658\n20000660\n20000662\n20000665\n20000667\n20000669\n20000670\n20000672\n20000674\n20000676\n20000678\n20000679\n20000681\n20000683\n20000685\n20000687\n20000689\n20000690\n20000692\n20000694\n20000696\n20000698\n20000700\n20000702\n20000704\n20000706\n20000708\n20000709\n2000071\n20000720\n20000722\n20000724\n20000726\n20000728\n2000073\n200007350\n20000763\n20000765\n20000767\n20000779\n20000781\n20000783\n20000785\n20000787\n20000789\n20000791\n20000793\n20000795\n20000797\n20000798\n20000800\n20000801\n20000802\n20000804\n20000806\n20000808\n20000810\n20000812\n20000814\n20000816\n20000818\n20000820\n20000822\n20000824\n20000826\n20000828\n20000830\n20000832\n20000834\n20000836\n20000838\n20000840\n20000842\n20000844\n20000846\n20000848\n20000850\n20000852\n20000854\n20000856\n20000858\n20000860\n20000862\n20000864\n20000866\n20000868\n20000870\n20000872\n20000874\n20000876\n20000878\n20000880\n20000882\n20000884\n20000886\n20000888\n20000892\n20000894\n20000896\n20000897\n20000909\n20000910\n20000912\n20000914\n20000916\n20000918\n20000920\n20000922\n20000924\n20000926\n20000928\n20000930\n20000932\n20000934\n20000936\n20000938\n20000940"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '5'\nassert solution('5\\n') == '6'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '4567891011121314151617181920'\nassert solution('''9\n12\n1\n10\n7\n45\n5\n6\n7\n8\n10\n2\n3\n4\n5\n6\n7\n8\n9\n5\n7\n9\n8\n8\n5\n6\n7\n7\n8\n9\n8\n5\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6\n7\n7\n8\n8\n9\n9\n8\n7\n6"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000') == '1'\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"1 1 1 1 1\"\n\ninput = '''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\nassert solution(input) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\"\"\"\n\nassert solution(\n\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\"\"\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('''5\n5\n5 1 2 4 3\n5\n5 1 2 4 3\n5\n5 1 2 4 3\n5\n5 1 2 4 3\n''') == '0\\n0\\n0\\n0\\n0'\n\nassert solution('''6\n6\n5 1 2 4 3\n5\n5 1 2 4 3\n5\n5 1 2 4 3\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('''6\n6\n3 4 5 1 6 2\n5\n3 4 5 1 6 2\n5\n3 4 5 1 6 2\n5\n3 4 5 1 6 2\n''') == '1\\n1\\n1\\n1\\n1'\nassert solution('''6\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5 6\n5\n1 2 3 4 5 6\n5\n1 2 3 4 5 6\n''') == '1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n\") == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2') == '1 1 1 1 1'\nassert solution('2\\n2\\n1\\n2') == '2 2 2'\nassert solution('2\\n4\\n1 2 3 4\\n2 3 1') == '1 1 1 1 1'\nassert solution('1\\n2\\n1\\n2') == '1 1 1 1 1'\nassert solution('4\\n5\\n1 2 3 4 5\\n2 3 1') == '1 1 1 1 1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n''') == '1 1 1 1 1'\nassert solution('''1\n2\n1\n2\n''') == '3 3 3'\nassert solution('''1\n1\n2\n3\n''') == '2 3 3 2 1'\nassert solution('''1\n4\n1 2 3 4\n2\n2 3 1\n2\n''') == '1 1 1 1'\nassert solution('''1\n5\n1 2 3 4 5\n5\n2 3 1 4 5\n3\n1 3 2 4 5\n4\n1 4 3 2 5\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n2\\n1 2\") == \"1\"\nassert solution(\"1\\n3\\n1 2 3\") == \"2\"\nassert solution(\"1\\n4\\n1 2 3 4\") == \"2\"\nassert solution(\"1\\n7\\n1 2 3 4 5 6 7\") == \"2\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"2\\n3\") == \"0\"\nassert solution(\"2\\n4\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"2\\n1\\n1\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == 1\nassert solution('1\\n1\\n2\\n2\\n') == 1\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 1\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3\\n2\\n1'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '1\\n2\\n1'\nassert solution('''3\n4\n1 2 3 4\n2\n5 4 3 2\n1\n2 1 5\n3\n2 1 3''') == '2\\n5\\n3'\nassert solution('''3\n3\n1 2 3\n3\n1 2 1\n3\n2 1 1''') == '1\\n1\\n2'\nassert solution('''3\n4\n1 2 3 4\n2\n5 4 3 2\n1\n1 1 1 1\n2\n1 1 2\n3\n1 1 1''') == '1\\n1\\n1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"3\\n2\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n5\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\\n5\") == \"5\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"2\\n2\\n2\\n2\"\nassert solution(\"3\\n3\\n3\\n3\\n3\\n3\\n3\") == \"3\\n3\\n3\\n3\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\") == \"4\\n4\\n4\\n4\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\\n5\") == \"5\\n5\\n5\\n5\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n4 5\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('1 2\\n5 4\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('1 2\\n1 2\\n4 5\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('1 2\\n1 2\\n4 5\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('1 2\\n1 2\\n4 5\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n\\n') == '0 0 1 2'\nassert solution('4 2\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\\n') == '5 4 0 5 3 3 9 0 2 5'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2\\n2 1\\n') == '0 0 1 2'\nassert solution('3\\n1 2\\n2 1\\n3 1\\n') == '0 1 2 0'\nassert solution('4\\n1 2\\n2 1\\n3 1\\n4 1\\n') == '0 1 2 0 0'\nassert solution('6\\n1 2 3 4 5 6\\n3 4 1\\n5 4 3\\n1 3\\n4 3\\n1 1\\n2 1\\n5 1\\n') == '2 0 0 4 2 0 1'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n\"\"\""
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n\n\"\"\""
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''6 6\n10 4 10 15\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''6 6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1 2') == '0 0 1 2'\nassert solution('1 2') == '0 1 2'\nassert solution('4 2') == '0 1 2'\nassert solution('5 4 1 5 4 3 7 1 2 5') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('4 6') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n10 8\n2 1\n10 8\n3 5\n5 4\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n10 8\n2 1\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10 10\n''') == '5 4 0 5 3 3 9 0 2 5'\nprint('All Tests Passed Successfully!')\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\nabd\"\nassert solution(stdin) == \"NO\"\n\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\", \"\", \"\") == \"NO\"\nassert solution(\"\", \"1\", \"\") == \"NO\"\nassert solution(\"\", \"2\", \"\") == \"NO\"\nassert solution(\"1\", \"2\", \"\") == \"NO\"\nassert solution(\"2\", \"1\", \"\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"NO\"\n\nInput\n4 2\n2 1 3\n1 3 2\n\nOutput\nYES\nabcd\nfghi\n\nInput\n3 2\n2 2 1\n1 3 2\n\nOutput\nNO\n\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == 'YES'\nassert solution('''5 2\n2 1 4 5\n2 4 1''') == 'NO'\nassert solution('''3 2\n1 2 3\n2 3 1''') == 'YES'\nassert solution('''5 2\n3 1 4 5\n4 5 3''') == 'YES'\nassert solution('''4 2\n4 1 2 3\n2 3 4 1''') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nabb\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\nabcdefghijklmnopqrstuvwxyz\"\n\n\n\n\"\"\"\n\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\n\np, q = [int(x) for x in sys.stdin.readline().split()]\ns = [chr(ord('a') + x - 1) for x in sys.stdin.readline().strip()]"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\nabb\"\n\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 2\n1 2 3\n1 3 2\"\"\") == \"\"\"NO\"\"\"\n\nassert solution(\"\"\"3 3\n1 3 2\n2 1 3\n1 3 2\"\"\") == \"\"\"YES\ncbaabd\nbdcaab\"\"\"\n\nassert solution(\"\"\"4 4\n1 4 3 2\n2 3 1 4\n1 2 3 4\n1 3 2 4\n\"\"\") == \"\"\"NO\"\"\"\n\nassert solution(\"\"\"5 4\n2 4 3 1 5\n1 2 4 3 5\n1 3 4 5 2\n1 4 5 3 2\n2 1 4 3 5\n1 2 3 4 5\"\"\") == \"\"\"YES\nabcdefghijklmnopqrstuvwxyz\"\"\"\n\nassert solution(\"\"\"6 2\n1 2 3 4 5 6\n1 4 5 3 2 6\n1 3 2 4 5 6\n1 5 3 2 4 6\n2 1 4 3 5 6\n1 2 3 4 5 6\"\"\") == \"\"\"YES\nabcdfeghijklmnopqrstuvwxyz\"\"\""
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\nassert solution('3\\n1 4') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\nassert solution('''\n3\n10 10 10\n''') == '64'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n20 10 20''') == '43'\nassert solution('''4\n10 10 10 10''') == '64'\nassert solution('''6\n5 4 5 4 4 5''') == '69'\nassert solution('''2\n1 4''') == '3'\nassert solution('''6\n5 4 5 4 4 5''') == '69'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\n\n\n\"\"\"\nfrom collections import deque, defaultdict\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '''43'''\nassert solution('''4''') == '''64'''\nassert solution('''6''') == '''69'''\nassert solution('''2''') == '''3'''\n\n'''\n\nfrom math import *"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"43\"\nassert solution(\"4\") == \"64\"\nassert solution(\"4 1 2 3\") == \"69\"\nassert solution(\"1 4\") == \"3\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n20 10 20\n''') == '43'\nassert solution(\n'''\n4\n10 10 10 10\n''') == '64'\nassert solution(\n'''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution(\n'''\n2\n1 4\n''') == '3'\nassert solution(\n'''\n3\n1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3\n20 10 20\n'''\n    ) == '43'\n\nassert solution(\n'''\n4\n10 10 10 10\n'''\n    ) == '64'\n\nassert solution(\n'''\n6\n5 4 5 4 4 5\n'''\n    ) == '69'\n\nassert solution(\n'''\n2\n1 4\n'''\n    ) == '3'\n\nassert solution(\n'''\n6\n5 1 5 5 5 5\n'''\n    ) == '64'"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n4 2 5 1 3'''\n) == '3'\n\nassert solution(\n'''5\n4 2 5 1 3'''\n) == '3'\n\nassert solution(\n'''5\n4 2 5 1 3'''\n) == '3'\n\nassert solution(\n'''5\n4 2 5 1 3'''\n) == '3'\n\nassert solution(\n'''5\n4 3 1 2 5'''\n) == '3'"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2 5 1 3\") == \"3\"\nassert solution(\"5 1 4 2 3\") == \"3\"\nassert solution(\"2 4 5 1 3\") == \"3\"\nassert solution(\"2 4 3 1 5\") == \"2\"\nassert solution(\"2 4 3 1 5\") == \"2\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('6\\n6 3 1 4 2 5') == '0'\nassert solution('10\\n9 9 9 9 9 9 9 9 9') == '0'\nassert solution('10\\n6 3 1 4 2 5 9') == '5'\nassert solution('10\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"5\\n4 2 5 1\") == \"3\"\nassert solution(\"5\\n4 2 5 1\") == \"3\"\nassert solution(\"3\\n3 2 1\") == \"1\"\nassert solution(\"5\\n4 2 5 1 3\") == \"3\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 4\") == \"2\"\nassert solution(\"1 4 2\") == \"3\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '9'\nassert solution('10\\n1 2 3 4 5 6 7 8') == '8'\nassert solution('10\\n1 2 3 4 5 6 7') == '7'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '5'\nassert solution('4\\n4\\n4\\n4\\n4') == '0'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1') == '2'\nassert solution('2\\n2\\n1\\n1') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3\\n4 2 5 1 3\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3\\n4 2 5 1 3\\n4 2 5 1 3\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n4 2 4 1 4 2 4''') == '0'\nassert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n2 4 1 4 2 4''') == '0'\nassert solution('''4\n2 2 2 2 2''') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '0'\nassert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '2'\nassert solution('3 3 3 3 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n4 2 4 1 4 2 4''') == '2'\nassert solution('''8\n2 2 4 1 4 3 4 5 4 6''') == '5'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == '0'\nassert solution('''8\n2 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '0'\nassert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '1'\nassert solution('3 3 3 3') == '1'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 3 3 3\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1 1\") == \"3\"\nassert solution(\"4\\n3 3 3 3\") == \"1\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0, 2, 3, 4, 5) == \"1\"\nassert solution(0, 2, 3, 4, 5) == \"1\"\nassert solution(0, 2, 3, 4, 5) == \"1\"\nassert solution(0, 2, 3, 4, 5) == \"1\"\nassert solution(0, 2, 3, 4, 5) == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\nassert solution('''0 2 3 4 5 6''') == '3'\nassert solution('''1 1 1 1 1''') == '0'\nassert solution('''1 1 1 1 1 1''') == '2'\nassert solution('''2 3 3 4 4 4''') == '0'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 3 2 4 5') == '4'\nassert solution('0 4 3 2 5') == '3'\nassert solution('0 3 4 2 5') == '2'\nassert solution('0 4 3 4 2 5') == '5'\n\n'''\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('0 2 0 4 5') == '0'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\nassert stdin == \"0 2 3 4 5\"\n\nprint(\"Test2 passed\")\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 5\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"2 0 0 3 4\") == \"1\"\nassert solution(\"2 0 0 0 4\") == \"0\"\nassert solution(\"2 0 0 0 5\") == \"0\"\nassert solution(\"2 0 0 0 6\") == \"0\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 4 4 2') == '2'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 4 2 3 4') == '2'\nassert solution('0 4 2 3 4') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == \"1\"\nassert solution('0 2 3 4 6') == \"0\"\nassert solution('0 2 3 4 1') == \"3\"\nassert solution('2 3 4 5 6') == \"0\"\nassert solution('3 4 5 6 1') == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 6') == '1'\nassert solution('-1 2 3 4 5') == '-1'\nassert solution('-1 2 -3 4 -5') == '-1'\nassert solution('-1 2 -3 4 -5') == '-1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 5\") == \"0\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"10 5\") == \"5\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(0)\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '0'\nassert solution('2 3') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\nassert solution('3 5') == '0'\nassert solution('2 10') == '5'\nassert solution('2 4') == '2'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 4') == '0'\nassert solution('10 5') == '10'\nassert solution('1000 1000') == '0'\nassert solution('10 14') == '13'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 10 100') == 'No'"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n\"\"\""
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 10 100 2\\n\") == \"Yes\"\nassert solution(\"5\\n1 10 100 2 3 4\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"No\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"Yes\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"Yes\"\n\n-----Benchmark-----\ntimeit: - O(n)\ntimeit < benchmark < timeit: - O(n)\n\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 10 100') == 'Yes'\nassert solution('1 2 3') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"1 10 100\") == \"No\"\nassert solution(\"1 10 100\") == \"No\"\nassert solution(\"1 10 100\") == \"No\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 10 100') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 4') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('3') == 'No'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 1 2') == 'No'\nassert solution('2 3 2') == 'Yes'\nassert solution('2 3 3') == 'Yes'\nassert solution('2 2 1') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('aazzzz') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('gfhbx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'Yes'\nassert solution('aa ab ac ad ae af ag ah ai aj ao ap ar at au auy'.split()) == 'Yes'\nassert solution('aa ab ac ad ae af ag ah ai aj ao ap ar at au auy'.split()) == 'Yes'\nassert solution('aa ab ac ad ae af ag ah ai aj ao ap ar at au auy'.split()) == 'Yes'\nassert solution('aa ab ac ad ae af ag ah ai aj ao ap ar at au auy'.split()) == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('xy') == 'Yes'\nassert solution('xya') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('atlas') == 'No'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('yx') == \"Yes\"\nassert solution('axy') == \"No\"\nassert solution('atcoder') == \"Yes\"\nassert solution('atlas') == \"Yes\"\n\nfrom unittest import TestCase\n\nclass TestSolution(TestCase):\n    def test(self):\n        pass\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('xay') == 'No'\nassert solution('abx') == 'Yes'\nassert solution('abx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('xyz') == 'Yes'\nassert solution('abcdef') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\nabc\nabc\n''') == 'Yes'\n\nassert solution('''\nabc\nabc\n''') == 'Yes'\n\nassert solution('''\nabcd\nabcd\n''') == 'Yes'\n\nassert solution('''\nabc\ncab\n''') == 'Yes'\n\nassert solution('''\nabc\ncab\n''') == 'Yes'"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('xy') == 'Yes'\nassert solution('abcde') == 'Yes'\nassert solution('abcdef') == 'No'\nassert solution('abcdefg') == 'Yes'\nassert solution('xyz') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"a\"\n) == \"Yes\"\nassert solution(\n    \"b\"\n) == \"Yes\"\nassert solution(\n    \"ab\"\n) == \"Yes\"\nassert solution(\n    \"abc\"\n) == \"Yes\"\nassert solution(\n    \"abcd\"\n) == \"Yes\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 4 3') == 'NO'\nassert solution('5 4 6') == 'YES'\nassert solution('5 5 3') == 'YES'\nassert solution('5 5 5') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys\nsys.setrecursionlimit(500000)\n\nA, B, C = map(int, stdin.split())\na = 0\nb = 0\nc = 0\n\nfor i in range(1, B):\n    if i % A == 0:\n        a += i\n\nfor i in range(1, B):\n    if i % C == 0:\n        c += i"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 2') == 'NO'\nassert solution('10 10 10') == 'YES'\nassert solution('3 3 10') == 'NO'\nassert solution('7 5 1') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 8') == 'NO'\nassert solution('7 5 6') == 'NO'\nassert solution('10 3 5') == 'YES'\nassert solution('8 6 6') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('9 2 3') == 'YES'\nassert solution('10 3 5') == 'YES'\nassert solution('10 5 3') == 'YES'\nassert solution('5 2 4') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 5 1\\n') == 'YES'\nassert solution('7 4 1\\n') == 'YES'\nassert solution('7 10 10\\n') == 'YES'\nassert solution('10 4 2\\n') == 'NO'\nassert solution('7 5 1\\n') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5 1') == 'YES'\n\n---38.1%---\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''5 10''') == '25'\nassert solution('''10 10''') == '25'\nassert solution('''100 100''') == '2500'\nassert solution('''1 2''') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 10') == '25'\nassert solution('5 5') == '5'\nassert solution('10 10') == '25'\nassert solution('100 100') == '10000'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''10 5''') == '60'\nassert solution('''5 10''') == '50'\nassert solution('''5 10''') == '50'\nassert solution('''10 10''') == '100'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('10 10') == '50'\nassert solution('2 2') == '1'\nassert solution('10 10') == '50'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2 2'\n) == '1'\nassert solution(\n    '5 5'\n) == '25'\nassert solution(\n    '3 4'\n) == '6'\nassert solution(\n    '1 1'\n) == '1'\nassert solution(\n    '10 9'\n) == '45'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"0.5\"\nassert solution(\"1 1\") == \"0.25\"\nassert solution(\"1 2\") == \"0.25\"\nassert solution(\"2 3\") == \"0.375\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"100 1000\") == 10000\nassert solution(\"2 10\") == 100\nassert solution(\"1000 1000\") == 200000\nassert solution(\"100 10\") == 10000\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 2 3') == '4'\nassert solution('3 1 2') == '4'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nX, Y, Z = [int(x) for x in input().split()]\n\nprint(((X-Y-Z)//(Y+2*Z))+1)\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('8 3 2') == '3'\nassert solution('12 3 1') == '5'\nassert solution('8 3 3') == '4'\nassert solution('3 2 3') == '2'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1\") == \"3\"\nassert solution(\"10 3 2\") == \"5\"\nassert solution(\"13 4 1\") == \"5\"\nassert solution(\"13 4 2\") == \"7\"\nassert solution(\"2 4 2\") == \"4\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 2 3') == '1'\nassert solution('13 2 3') == '3'\nassert solution('100 2 10') == '5'\nassert solution('100 3 2') == '7'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '3'\nassert solution('4 3 2') == '6'\nassert solution('7 3 3') == '10'\nassert solution('10 2 2') == '10'\nassert solution('11 2 1') == '10'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('100 10 2') == '3'\nassert solution('11 3 2') == '0'\nassert solution('13 3 1') == '3'\nassert solution('10 5 2') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == 2\nprint('Test success!')\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3') == '2'\nassert solution('4\\n0 2\\n4 1\\n2 1\\n3 1\\n1 3') == '2'\nassert solution('5\\n0 4\\n4 2\\n2 1\\n3 1\\n1 3') == '2'\nassert solution('5\\n0 5\\n4 2\\n2 1\\n3 1\\n1 3') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('2 1\\n2 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '2'\nassert solution('1 3') == '2'\nassert solution('4 2') == '2'\nassert solution('0 4') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('2\\n0\\n2 0\\n2 0\\n0 1\\n1 2\\n2 1\\n0 2\\n1 3') == '3'\nassert solution('2\\n0\\n1 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 2\\n1 2\\n2 2') == '9'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('2\\n0\\n1') == '2'\nassert solution('3\\n1\\n0\\n1') == '2'\nassert solution('4\\n1\\n0\\n1\\n0') == '4'\nassert solution('5\\n1\\n0\\n1\\n0\\n1') == '4'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[3]\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3') == '7'\nassert solution('2 4') == '7'\nassert solution('3 4') == '8'\nassert solution('2 3') == '8'\nassert solution('2 4 1 3') == '8'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"1 10\\n0 3\") == \"6\"\nassert solution(\"3 10\\n0 3\") == \"6\"\nassert solution(\"3 10\\n0 3\") == \"6\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4\n0 3''') == '7'\nassert solution('''2 4\n0 3''') == '7'\nassert solution('''2 4\n1 1''') == '5'\nassert solution('''2 4\n1 1''') == '5'\nassert solution('''2 4\n1 2''') == '4'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 4\n0 3'''\n) == '7'\n\nassert solution(\n'''5 6\n5 2 3 3 3 1'''\n) == '31'\n\nassert solution(\n'''1 2\n2 1'''\n) == '1'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n0 3\\n') == '7\\n'\nassert solution('2 4\\n0 1\\n') == '5\\n'\nassert solution('2 4\\n0 3\\n') == '7\\n'\nassert solution('2 4\\n0 3\\n') == '7\\n'\nassert solution('2 4\\n0 1\\n') == '5\\n'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 4\\n0 3') == '7'\nassert solution('1 100\\n1 1') == '1'\nassert solution('1 100\\n0 1') == '0'\nassert solution('1 100\\n0 0') == '0'\nassert solution('1 100\\n1 0') == '1'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''2 4\n0 2\n''') == '7'\nassert solution('''2 4\n0 1\n''') == '7'\nassert solution('''2 4\n0 3\n''') == '7'\nassert solution('''3 2\n0 3\n1 1\n1 2\n2 2\n''') == '7'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 105\n? 104\nL 107\n? 106\nL 108\n? 108\nL 109\n? 107\nL 110\n? 110\nL 111\n? 111\nL 112\n? 112\nR 113\n? 114\nR 115\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 105\n? 104\nL 107\n? 106\nL 108\n? 108\nL 109\n? 107\nL 110\n? 110\nL 111\n? 111\nL 112\n? 112\nR 113\n? 114\nR 115\n? 115''') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('2\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('2\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('2\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('L 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '2'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2\\n'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('2\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('3\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('4\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('5\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('input.txt') == '1\\n1\\n2'\nassert solution('input2.txt') == '1\\n1\\n2'\nassert solution('input3.txt') == '1\\n0\\n1'\nassert solution('input4.txt') == '0\\n2\\n1'\nassert solution('input5.txt') == '2\\n0\\n1'\n\n\n-----Hint-----\n\n1. Treat the queries of type $3$ as a stack.\n2. You can solve this problem by treating the queries of type $3$ as a queue.\n\n\"\"\""
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n4 1 5\\n6 7 8') == '1\\n1\\n2'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('L 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 115') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 115') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 115') == '0\\n2\\n1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 12\n? 115\nL 11\n? 100\nR 110\n? 115\nR 12\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 12\n? 115\nL 11\n? 100\nR 110\n? 115\nR 12\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 12\n? 115\nL 11\n? 100\nR 110\n? 115\nR 12\n? 115''') == '0\\n2\\n1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('L 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\nassert solution('L 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000000000000000000\\n') == '72'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000000000000000000\\n2\\n10000000000000000000\\n2\\n100000000000000000000\\n2\\n1000000000000000000000\\n2\\n1000000000000000000000000\\n2\\n1000000000000000000000000000000000000\\n\") == \"4\\n6\\n6\\n-1\\n6\\n72\"\n\"\"\"\nimport sys\nfrom math import log"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n' +\n'5\\n' +\n'3\\n' +\n'1000000000000000000\\n') == '4'\nassert solution('6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n' +\n'6\\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n1\n1''') == '-1'\nassert solution('''1\n1\n2\n3''') == '4'\nassert solution('''1\n1\n2\n2''') == '2'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"YES\"\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"NO\"\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n2\n100\n''') == \"YES\"\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"YES\"\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n2\n100\n''') == \"NO\""
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\"\"\") == \"NO\"\nassert solution(\"\"\"3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n2\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n2\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n2\"\"\") == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n2') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('2\\n3') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\n_\\"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''\n1\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''\n2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''\n1\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''\n2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''4\n2\n0 0\n1 0\n1 1\n1 1\n''') == 'YES'\n\nassert solution('''4\n3\n0 0 0\n1 0 1\n1 1 1\n1 1 1\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n2\n100\n''') == 'YES'"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1 1 2 1') == 'YES'\nassert solution('3\\n3\\n1 1 2\\n2\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('2\\n4\\n1 1 2 1\\n2\\n1 1 2 1\\n1') == 'NO'\nassert solution('2\\n5\\n1 1 2 1 1\\n2\\n1 1 2 1 1\\n1') == 'YES'\nassert solution('2\\n5\\n1 1 2 1 1\\n2\\n1 1 2 1 1\\n1') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"test_input2.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"test_input3.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"test_input4.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"test_input5.txt\", \"r\").read()) == \"NO\"\n\n'''\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n2\n100\n''') == 'YES'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n2\n101\n''') == 'YES'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n101\n''') == 'NO'"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\nbacz') == 0\n\n\n'''\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\nabc\\nabc\") == \"3\\n\"\nassert solution(\"1\\nbac\\naab\") == \"0\\n\"\nassert solution(\"1\\nabcaa\\nbaca\") == \"2\\n\"\nassert solution(\"1\\nabacaba\\nbacabaa\") == \"4\\n\"\nassert solution(\"1\\nabacaba\\nbacabaa\") == \"4\\n\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n\nimport sys"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abacaba\\nbaacaba') == 4\nassert solution('bacabaa\\nbaacaba') == 0\nassert solution('zcabd\\ndbacz') == 0\nassert solution('abcdefgh\\nabcdgfh') == 9\nassert solution('aacaaac\\nacacaca') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\nabacaba\nbacabaa''') == '4'\nassert solution('''5\nzcabd\ndbacz''') == '0'\n'''"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\nabacaba\nbacabaa''') == 4\n\nassert solution('''5\nzcabd\ndbacz''') == 0\n\"\"\""
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\nabacaba\nbacabaa''') == '4'\nassert solution('''5\nzcabd\ndbacz''') == '0'\nassert solution('''8\nqweqwe\nqweqweqwe\nqweqwe''') == '1'\nassert solution('''11\ncgkxzyjdf\nvhfbszpyr\naihnjkeqklv''') == '6'\nassert solution('''41\nqzsxqbxnf\nrjrtzpyglp\ngxzbpvhjhdf''') == '5'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\nabacaba\nbacabaa''') == '4'\nassert solution('''5\nzcabd\ndbacz''') == '0'\nassert solution('''1\na''') == '0'\nassert solution('''1\nb''') == '0'\nassert solution('''8\naabaaabaaabaa''') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 - 2 + 3 = 0'\nassert solution('100 1 4') == '100 - 1 + 4 = 99'\nassert solution('1 1 1000000000') == '1 - 1 + 1000000000 = 9999999997'\nassert solution('1 1 999999999') == '1 - 1 + 999999999 = 0'\n'''"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n'''\n-----Notes-----\n\n-    The answer is $8$ or the number of jumps made by the frog to reach the next position.\n-    Every line should be an independent query.\n-    Every query should be on a new line.\n-    You can assume that the input will always be a valid one.\n-    You can assume that there is a frog on the first line.\n\n'''\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\n\nassert solution('''\\\n6\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n''') == '3\\n0\\n0\\n0\\n0\\n1\\n'\n\nassert solution('''\\\n1\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n''') == '0\\n1\\n0\\n0\\n0\\n0\\n1\\n'\n\nassert solution('''\\\n100\n1 100 2\n1 100 3\n1 100 4\n1 100 5\n1 100 6\n1 100 7\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n1\\n'\n\nassert solution('''\\\n6\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n''') == '3\\n0\\n0\\n0\\n0\\n0\\n1\\n'"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n\nassert solution(\n'''1\n4 3 2\n1 2 1\n1 1 1\n1 1 1\n''') == '2\\n2\\n-1'\n\nassert solution(\n'''2\n4 3 2\n1 1 4\n1 1 4\n1 1 4\n''') == '2\\n2\\n-1\\n2'\n\nassert solution(\n'''3\n7 1 5\n5 1 3\n1 1 1\n1 1 1\n1 1 1\n''') == '2\\n2\\n-1\\n2\\n2'\n\nassert solution(\n'''4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '1\\n1\\n-1\\n1\\n1'"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('3\\n3 2 1\\n1 1 1\\n1 1 1') == '1\\n0\\n-1'\nassert solution('3\\n3 2 1\\n1 1 1\\n1 1 1') == '1\\n0\\n-1'\nassert solution('3\\n3 2 1\\n1 1 1\\n1 1 1') == '1\\n0\\n-1'\nassert solution('3\\n3 2 1\\n1 1 1\\n1 1 1') == '1\\n0\\n-1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '198\\n0\\n1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n0\\n1'\nassert solution('100\\n1\\n1\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 - 2 + 3 = 0'\nassert solution('100 1 4') == '99 - 1 + 4 - 1 = 198'\nassert solution('1 1 1000000000') == '1 - 1 + 1000000000 - 1 = 2999999997'\nassert solution('1 1 999999999') == '1 - 1 + 999999999 - 1 = 0'\nassert solution('1 1 999999999') == '1 - 1 + 999999999 - 1 = 0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 5') == '4'\nassert solution('10 1 4') == '198'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\nassert solution('1 1 999999999') == '1'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('4\\n1') == '2'\nassert solution('5\\n1') == '3'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '3'\nassert solution('2') == '5'\nassert solution('6') == '9'\nassert solution('13') == '13'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('6') == '3'\nassert solution('13') == '14'\nassert solution('14') == '15'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '''1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089'''\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n'''\n    ) == '''1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089'''"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0437 \u0441\u0443\u043c\u043c\u044b \u0441\u0442\u0435\u043f\u0435\u043d\u0435\u0439 \u0442\u0440\u0435\u0445\n\n1 + 2 + 6 = 13\n1 + 3 + 4 = 10\n2 + 3 + 3 = 7\n6 + 4 + 2 = 9\n\n1 + 6 + 9 = 15\n1 + 4 + 5 = 11\n2 + 3 + 4 = 10\n\n1 + 10 + 15 = 25\n\n'''\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\n\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('6') == '2'\nassert solution('13') == '3'\nassert solution('14') == '4'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n\") == \"1\"\nassert solution(\"3\\n1\\n\") == \"3\"\nassert solution(\"2\\n1\\n\") == \"3\"\nassert solution(\"5\\n1\\n\") == \"3\"\nassert solution(\"9\\n1\\n\") == \"3\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 10 8 5 3''') == '70'\nassert solution('''12 8 8 7 2''') == '77'\nassert solution('''12343 43 4543 39 123212''') == '177177'\nassert solution('''1000000000 1000000000 1 1 1''') == '999999999000000000'\nassert solution('''1000000000 1000000000 1 1 1000000000''') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 2 4 1') == '4'\nassert solution('10 11 2 1') == '10'\nassert solution('8 12 9 1') == '1'\nassert solution('100 1000 10000 100') == '0'\nassert solution('10 8 5 3') == '0'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 2 2 1') == '2'\nassert solution('2 1 2 2 1') == '2'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 2 2 1') == '1'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1 2'\nassert solution('1 2 1 3') == '1 2'\nassert solution('2 2 2 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 2 2 3') == '2'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '177177'\nassert solution('1000000000 1000000000 1 1 1') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('input/third.txt') == '10'\nassert solution('input/third2.txt') == '11'\nassert solution('input/third3.txt') == '55'\nassert solution('input/third4.txt') == '10'\nassert solution('input/third5.txt') == '7'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a,b,x,y,n\") == \"a,b,x,y,n\"\nassert solution(\"1 2 3 4 5\") == \"1,2,3,4,5\"\nassert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4') == '10'\nassert solution('1 2 3') == '10'\nassert solution('1 2') == '10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10\"\n\nassert solution(\n'''2\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 'a1b1c'\nassert solution('abc') == 'a1b1c'\nassert solution('ab') == 'a1b'\nassert solution('ab') == 'a1b'\nassert solution('ab') == 'a1b'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n7 4\n9 3''') == '1'\nassert solution('''2 5\n2 1''') == '2'\nassert solution('''9 5\n5 5''') == '0'\nassert solution('''4 3\n1 2\n2 2''') == '2'\nassert solution('''8 2\n2 1''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5') == '3'\nassert solution('1 1') == '0'\nassert solution('1 10') == '1'\nassert solution('10 10') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n') == '0'\nassert solution('2 3\\n') == '1'\nassert solution('10 10\\n') == '0'\nassert solution('2 4\\n') == '2'\nassert solution('7 4\\n') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('3\\n4') == '1'\nassert solution('3\\n5') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\n\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\n\nassert solution('''5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\n\nassert solution('''3\n7 4\n6 4\n5 4\n''') == '2'\n\nassert solution('''3\n1 1\n1 1\n1 1\n''') == '1'"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('3 4\\n100 1\\n6 9\\n3 2\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('3 4\\n10000 1\\n6 9\\n3 2\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('3 4\\n1 1\\n6 9\\n3 2\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('3 4\\n1 1\\n6 9\\n3 2\\n') == '1\\n0\\n2\\n2\\n1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == 1\nassert solution('10 10') == 0\nassert solution('2 4') == 2\nassert solution('7 4') == 1\nassert solution('9 3') == 2\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''22''') == '13'\nassert solution('''9999''') == '90'\nassert solution('''1''') == '1'\nassert solution('''777''') == '66'\n\n\n\n\n\n\"\"\"\nfrom functools import reduce\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n22') == '13'\nassert solution('1\\n9999') == '90'\nassert solution('1\\n777') == '66'\nassert solution('3\\n1') == '3'\nassert solution('3\\n2') == '6'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == '13'\nassert solution('''\n2\n1\n2\n''') == '90'\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '66'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777') == '13'\nassert solution('2\\n22\\n9999\\n1\\n777') == '90'\nassert solution('2\\n22\\n1\\n777') == '1'\nassert solution('2\\n22\\n1\\n1') == '66'\nassert solution('1\\n22\\n1\\n1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '2'\nassert solution('''5''') == '4'\nassert solution('''1''') == '1'\nassert solution('''123456789''') == '123456789'\nassert solution('''1000000''') == '8'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('23') == '1'\nassert solution('222') == '2'\nassert solution('222') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''4\n1\n11\n111\n1''') == '90'\nassert solution('''4\n111\n22\n222\n2''') == '66'\nassert solution('''4\n111\n222\n22\n22''') == '1'\nassert solution('''4\n1\n3\n5\n8\n''') == '4'\n'''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3''') == '1 2 3'\nassert solution('''1\n22\n9999\n1\n777\n''') == '1 2 3'\nassert solution('''2\n22\n9999\n1\n777\n''') == '1 22 2'\nassert solution('''1\n22\n9999\n1\n777\n''') == '1 22 2'\nassert solution('''2\n22\n9999\n1\n777\n''') == '1 22 2'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\n\nassert solution('''2\n11\n22\n33''') == '90'\n\nassert solution('''3\n999\n1\n2''') == '66'\n\nassert solution('''20\n111\n111\n1111\n1\n111\n11\n11\n111\n11\n11\n11\n1\n11\n111\n11\n11\n11\n1''') == '21'\n\nassert solution('''40\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'YES\\n1 1\\n'\nassert solution('2\\n1') == 'NO\\n'\nassert solution('2\\n2') == 'YES\\n2 2\\n'\nassert solution('3\\n1') == 'NO\\n'\nassert solution('5\\n2') == 'YES\\n2 4\\n'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('2\\n2\\n') == 'YES'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('1\\n1\\n2\\n1\\n') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution(\n    '''6\n1 1 2 2 2 1''') == 'NO'\nassert solution(\n    '''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution(\n    '''4\n6\n2 2 2 2 2 2''') == 'YES'\nassert solution(\n    '''2\n6\n2 2 2 2 2''') == 'NO'\n\n'''\n    ) == 'NO'"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\"\n\"\"\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\") == \"NO\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 3\n''') == '5'\nassert solution('''3 -1 0 2\n''') == '6'\nassert solution('''2 -3 -1 5 -4\n''') == '13'"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A = [4,2,3], K = 1') == 5\nassert solution('A = [3,-1,0,2], K = 3') == 6\nassert solution('A = [2,-3,-1,5,-4], K = 2') == 13"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\n\n\n\"\"\"\nfrom typing import List\n\"\"\"\n[4,2,3]\n[3,-1,0,2]\n[2,-3,-1,5,-4]\n\"\"\"\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        index = []\n        for i, n in enumerate(A):\n            if n < 0:\n                index.append(i)\n        for i in index:\n            A[i] = -A[i]\n        if K % 2 == 1:\n            k = K // 2\n            for i in range(k):\n                A[i] = -A[i]\n        return sum(A)"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\n\"\"\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\") == 3\nassert solution(\"1\\n2\\n3\") == 6\nassert solution(\"2\\n-3\\n-1\\n5\\n-4\") == 13\nassert solution(\"1\\n2\\n3\\n4\\n5\") == 30\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == 36\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4,2,3''') == '5'\nassert solution('''3,-1,0,2''') == '6'\nassert solution('''2,-3,-1,5,-4''') == '13'\n\n\n'''\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        for i in range(K):\n            A[i] = -A[i]\n        A.sort()\n        res = 0\n        for a in A:\n            res += a\n        return res\n\n\n\nfrom typing import List\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        if len(A) == 1:\n            return A[0]\n        A.sort()\n        count = 0\n        for i in range(len(A)):\n            if A[i] < 0:\n                count += 1\n        if count >= K:\n            return sum(A)\n        for i in range(len(A)):\n            if A[i] < 0:\n                A[i] *= -1\n        return sum(A)\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 -1 0 2\\n\") == \"6\"\nassert solution(\"3 -1 0 2\\n\") == \"6\"\nassert solution(\"2 -3 -1 5 -4\\n\") == \"13\"\nassert solution(\"2 -3 -1 5 -4\\n\") == \"13\"\nassert solution(\"1 -1\\n\") == \"0\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([\"4\",\"2\",\"3\"]) == 5\nassert solution([\"3\",\"-1\",\"0\",\"2\"]) == 6\nassert solution([\"2\",\"-3\",\"-1\",\"5\",\"-4\"]) == 13\nassert solution([\"2\",\"-3\",\"-1\",\"5\",\"-4\",\"-2\"]) == 13\nassert solution([\"-10\",\"10\"]) == 0\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2 3''') == '6'\nassert solution('''3 -1 0 2''') == '6'\nassert solution('''2 -3 -1 5 -4''') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2\") == \"\"\nassert solution(\"1,2,3\") == \"\"\nassert solution(\"1,2,3,4\") == \"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == False\nassert solution('0') == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''0,2,1,-6,6,-7,9,1,2,0,1'''\n) == True\nassert solution(\n    '''0,2,1,-6,6,-7,9,1,2,0,1'''\n) == False\nassert solution(\n    '''3,3,6,5,-2,2,5,1,-9,4'''\n) == True\nassert solution(\n    '''3,3,6,5,-2,2,5,1,-9,4'''\n) == False\nassert solution(\n    '''3,3,6,-5,-2,2,5,1,-9,4'''\n) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n\n\"\"\"\nimport unittest\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total = sum(A)\n        if total % 3: return False\n        n = total // 3\n        a, b = 0, 0\n        for x in A:\n            a += x\n            if a == b:\n                return True\n            b += x\n        return False\n\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(Solution().canThreePartsEqualSum([0,2,1,-6,6,-7,9,1,2,0,1]), True)\n        self.assertEqual(Solution().canThreePartsEqualSum([0,2,1,-6,6,7,9,-1,2,0,1]), False)\n        self."
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"(-2(1)(4))\"\n) == False\nassert solution(\n    \"(-2(1)(4))\"\n) == False\nassert solution(\n    \"(-2(1)(4))\"\n) == True\nassert solution(\n    \"(-2(1)(4))\"\n) == True\nassert solution(\n    \"(-2(1)(4))\"\n) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([2,3,5,-5,-6,1,0,1,3,5,7,10,2,3]) == True\nassert solution([1,-1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,1,1,1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,-1,1,-1,1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,1,1,1,-1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,1,-1,-1,1,1,1,-1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,-1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"\nassert solution([0, 0, 0, 0]) == \"true\"\nassert solution([]) == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 -1 2 0 1') == False\nassert solution('9 3 6 5 -2 2 5 1 -9 -1 2 0 1') == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 -4') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 -1 2 0 1') == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,0]) == False\nassert solution([-1,2,3,4,5,6,7,8,9,-10]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 -4') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 -4 -8 -7 -6 -5 -2 -1') == True\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split('\\n')[-1]\n\"\"\"\n\nn = int(input())\nl = [input() for i in range(n)]\nprint('\\n'.join(sorted(set(l), key=l.index)))\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\\nvet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\n\nfrom sys import argv\ninput = argv[1]\nlines = [line.rstrip('\\n') for line in open(input)]\nprint(solution(lines))\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bet') == 'bet'\nassert solution('bed') == 'bed'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''3\naaa\nbbb\nccc\n''') == 'aaa'\nassert solution('''2\naaaa\nbbbb\n''') == 'bbbb'\nassert solution('''3\na\nb\nc\n''') == 'a'\nassert solution('''2\na\na\n''') == 'a'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Beat\") == \"beet\"\nassert solution(\"Vet\") == \"vet\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\nassert solution('4\\ntee\\nteet\\nteet\\nteet') == 'tee'\nassert solution('2\\ntee\\ntete') == 'tee'\nassert solution('3\\ntee\\ntete\\nte') == 'tee'\nassert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8') == '8'\nassert solution('6 6') == '12'\nassert solution('2 2') == '4'\nassert solution('1 1') == '0'\nassert solution('8 17') == '44'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8') == '8'\nassert solution('8 4') == '12'\nassert solution('5 4') == '17'\nassert solution('7 3') == '21'\nassert solution('3 5') == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n8\\n') == '8'\nassert solution('3\\n1\\n1\\n1\\n') == '1'\nassert solution('4\\n8\\n1 1 1 1\\n') == '4'\nassert solution('5\\n8\\n1 1 1 1 1\\n') == '6'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '1'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('4 8') == '8'\nassert solution('-1 -2 -3 -4') == '0'\nassert solution('-1 1 1 1 1 1') == '0'\nassert solution('2 3 4 5') == '11'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[1]\n\n\"\"\""
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n4 8') == '8'\nassert solution('10 4\\n4 10') == '16'\nassert solution('5 4\\n4 5') == '20'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8\\n') == '8'\nassert solution('2 3\\n') == '1'\nassert solution('7 11\\n') == '12'\nassert solution('8 11\\n') == '8'\nassert solution('1 7\\n') == '1'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n8''') == '8'\nassert solution('''4\n3 3 3''') == '0'\nassert solution('''2\n4 8''') == '8'\nassert solution('''5\n1 4 5 2 3''') == '0'\nassert solution('''100\n98 98 99 98 96 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8') == '8'\nassert solution('-2 5 -4 4') == '5'\nassert solution('-1 2 -3 -5 -10') == '5'\nassert solution('-1 -1 -1 -1 -1 -1 -1 -1 -1') == '-1'\nassert solution('-1 -1 -1 -1 -1 -1 -1 -1') == '-1'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 4 3\") == \"2\"\nassert solution(\"9 4 3\") == \"7\"\nassert solution(\"5 6 7\") == \"4\"\nassert solution(\"5 4 6 7\") == \"3\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '5\\n1\\n2'\n) == '1'\n\nassert solution(\n    '5\\n3\\n3'\n) == '4'\n\nassert solution(\n    '10000\\n1000000\\n1000000'\n) == '0'\n\nassert solution(\n    '10000\\n100000\\n1000000'\n) == '0'\n\nassert solution(\n    '10000\\n100000\\n100000'\n) == '5'"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100\\n') == '84'\nassert solution('10\\n3\\n1\\n') == '0'\nassert solution('1234\\n3\\n2\\n') == '10'\nassert solution('10\\n10\\n10\\n') == '0'\nassert solution('3\\n1\\n1\\n') == '0'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1234\n150\n100''') == '84'\nassert solution('''1234\n150\n100''') == '84'\nassert solution('''15000\n100\n50\n50''') == '150'\nassert solution('''15000\n100\n50\n50''') == '150'\nassert solution('''1000\n100\n50\n50''') == '100'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1\\n1\\n') == '1'\nassert solution('1234\\n150\\n100\\n') == '84'\nassert solution('8\\n10\\n1\\n') == '4'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n10\\n1\\n') == '9'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"1084\"\nassert solution(\"123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"1456\\n567\\n777\") == \"1\"\nassert solution(\"1124\\n2\\n1\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n1\\n3\\n0\") == \"3\"\nassert solution(\"1\\n1\\n1\\n0\") == \"0\"\nassert solution(\"2\\n2\\n3\\n4\") == \"4\"\nassert solution(\"3\\n3\\n3\\n3\") == \"3\"\nassert solution(\"10\\n10\\n10\\n10\") == \"10\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"10 1\") == \"7\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"7 9\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n''') == '8'\nassert solution('''2 2\n''') == '8'\nassert solution('''4 2\n''') == '0'\nassert solution('''3 4\n''') == '0'\nassert solution('''2 4\n''') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '8'\nassert solution('''4 4''') == '16'\nassert solution('''1000 1000000''') == '10000000000'\nassert solution('''10 20''') == '0'\nassert solution('''10 1000000000''') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\nassert solution('2 3') == '10'\nassert solution('3 5') == '10'\nassert solution('4 6') == '40'\nassert solution('2 10') == '1'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 4\n\"\"\"\n) == \"8\"\nassert solution(\n\"\"\"\n2 2\n\"\"\"\n) == \"8\"\nassert solution(\n\"\"\"\n100 100\n\"\"\"\n) == \"336871480\"\nassert solution(\n\"\"\"\n1000 1000\n\"\"\"\n) == \"367888800\"\nassert solution(\n\"\"\"\n1000 1000\n\"\"\"\n) == \"370057600\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 5') == '13'\nassert solution('1 1') == '1'\nassert solution('10 8') == '60'\nassert solution('9 6') == '105'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 8\nassert solution('3 4') == 28\nassert solution('1000 4') == 6080\nassert solution('1 1000000000') == 0\nassert solution('2 1000') == 0\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\") == \"POSSIBLE\"\nassert solution(\"2 3\\n1 2\\n2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 3\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"2 3\\n1 3\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE'\nassert solution('3 2\\n2 3') == 'POSSIBLE'\nassert solution('3 3\\n1 2\\n2 3') == 'POSSIBLE'\nassert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE'\nassert solution('3 3\\n1 2\\n2 3') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"2 1\\n1 2\") == \"POSSIBLE\"\nassert solution(\"1 2\\n2 1\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 1\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''1 2\n2 3''') == 'IMPOSSIBLE'\nassert solution('''1 1\n1 1''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n1 2''') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3') == 'POSSIBLE'\nassert solution('1 1\\n2 2') == 'POSSIBLE'\nassert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE'\nassert solution('4 4\\n1 3\\n3 2\\n2 4') == 'POSSIBLE'\nassert solution('3 2\\n1 2\\n2 3\\n3 1') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 3\") == \"POSSIBLE\"\nassert solution(\"4 5\") == \"POSSIBLE\"\nassert solution(\"4 5\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr'"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcde') == 'acd'\nassert solution('abcdefg') == 'abcdg'\nassert solution('abcd') == 'abcd'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('abcd') == 'acde'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'acdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\nprint('Test success!')\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\n\"\"\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('atcoderatcoder') == 'acdratcdr'\nassert solution('atcoderatcoderatcoder') == 'acdratcdratcdr'\nassert solution('atcoderatcoderatcoderatcoder') == 'acdratcdratcdratcdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n\"\"\""
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng bgb apple\") == \"NO\"\nassert solution(\"rng rn g b a\") == \"YES\"\nassert solution(\"rng g rng b\") == \"NO\"\nassert solution(\"rng rng b\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\n\nassert solution('rng') == 'NO'\nassert solution('rng') == 'NO'\nassert solution('rng') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('banana ganana') == 'YES'\nassert solution('sai sha') == 'NO'\nassert solution('sai sha') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rngor gorilla apple') == 'NO'\nassert solution('rngg gorilla apple') == 'NO'\nassert solution('rggorgor gorilla apple') == 'NO'\nassert solution('rng gororog gorilla apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng gorilla apple\") == \"NO\"\nassert solution(\"raj sharma\") == \"YES\"\nassert solution(\"raj sharma\") == \"NO\"\nassert solution(\"bunty bunnies\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng ror\") == \"NO\"\nassert solution(\"rng rg\") == \"NO\"\nassert solution(\"rng rg\") == \"NO\"\nassert solution(\"rng r\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\nassert solution('rng rgglgoo apple') == 'YES'\nassert solution('rng rgglgoo apple') == 'NO'\nassert solution('rng rgglgoo aplle') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorila apple') == 'NO'\nassert solution('rng gorilla apple') == 'YES'"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''36\n24''') == 'GREATER'\nassert solution('''2\n3''') == 'LESS'\nassert solution('''8\n8''') == 'EQUAL'\nassert solution('''12\n12''') == 'LESS'\nassert solution('''-2\n-3''') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''36''') == 'GREATER'\nassert solution('''24''') == 'LESS'\nassert solution('''0''') == 'EQUAL'\nassert solution('''12''') == 'LESS'\nassert solution('''100''') == 'GREATER'\nprint('Testcases passed successfully.')\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"LESS\"\nassert solution(input()) == \"EQUAL\"\nassert solution(input()) == \"GREATER\"\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"LESS\"\n\n\"\"\"\n\n\"\"\"\nNotes:\nTest case 1: \n35\n25\n0. 1/2*sqrt(35) is 35\nTest case 2: \n35\n25\n0. 1/2*sqrt(35) is 35\n\n\"\"\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('4') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('24\\n36') == \"GREATER\"\nassert solution('24\\n36') == \"LESS\"\nassert solution('24\\n36') == \"EQUAL\"\nassert solution('24\\n36') == \"EQUAL\"\nassert solution('24\\n36') == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[0]\nprint(solution(stdin))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"36\") == \"GREATER\"\nassert solution(\"24\") == \"LESS\"\nassert solution(\"0\") == \"EQUAL\"\nassert solution(\"13\") == \"LESS\"\nassert solution(\"30\") == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output(input())"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('1\\n1') == 'LESS'\nassert solution('1\\n2') == 'EQUAL'\nassert solution('1\\n2') == 'EQUAL'\nassert solution('1\\n3') == 'LESS'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''10\nabcdefghijklmnopqrstuvwxyz\nqwertyuiop\nasdfghjkl\nzxcvbnm\n''') == '10'\nassert solution('''5\nhello\nworld\n''') == '2'\nassert solution('''1\nm\n''') == '0'\nassert solution('''1\nm\n''') == '0'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\n'''\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\nabc\nxab\nxyz\n1\nab\n''') == '3'\nassert solution('''4\nabc\nxab\nxyz\n1\nab\n''') == '5'\nassert solution('''2\nab\nba\n1\na\n''') == '0'\nassert solution('''10\naba\nbaa\nba\nb\n''') == '1'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('apple') == '1'\nassert solution('orange') == '2'\nassert solution('apple') == '2'\nassert solution('grape') == '3'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == '2'\nassert solution('orange') == '2'\nassert solution('apple') == '2'\nassert solution('grape') == '0'\nassert solution('apple') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"apple\\norange\\napple\\n1\") == \"2\"\nassert solution(\"takahashi\\napple\\ngrape\\n1\\ntakahashi\\ngrape\\n1\") == \"2\"\nassert solution(\"alice\\nalice\\naalice\\n2\\nalice\\nalice\\n1\") == \"0\"\nassert solution(\"alice\\ntakahashi\\naalice\\n2\\nalice\\naalice\\n1\") == \"0\"\nassert solution(\"takahashi\\nalice\\naalice\\n2\\ntakahashi\\ngrape\\n1\\ntakahashi\\ngrape\\n1\") == \"0\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('apple\\norange\\napple\\n') == '2'\nassert solution('atcoder\\n') == '0'\nassert solution('atcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\natcoder\\n') == '0'\nassert solution('atcoder\\n') == '0'\nassert solution('atcoder\\n') == '0'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"$\") == \"$\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"A\") == \"A\"\n\n\"\"\""
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'T'\nassert solution('A') == 'T'\nassert solution('AC') == 'T'\nassert solution('AG') == 'T'\nassert solution('AT') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n\nprint(\"All tests passed successfully.\")\n\n\"\"\"\n\nfrom sys import stdin\n\nb = stdin.readline().strip()"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 2 4 1\") == \"14\"\nassert solution(\"1\\n2 2 2 2 1\") == \"12\""
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1\\n2 2') == '2'\nassert solution('1\\n2\\n1 2\\n3 2') == '3'\nassert solution('4\\n2 3 4 3\\n2 2 2 4\\n3 2 3 3 3\\n1 1 2 3 4') == '7'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 14\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution('''2\n1 1\n''') == '1'\nassert solution('''2\n4 1\n1 1\n''') == '4'\nassert solution('''3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '6'\nassert solution('''3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '9'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n'''\n'''"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 2 2 4\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\") == \"14\"\nassert solution(\"7\\n1 2 2 3 2 1\") == \"28\"\nassert solution(\"8\\n1 2 2 3 2 1 4\") == \"31\"\nassert solution(\"9\\n1 2 2 3 2 1 4 5\") == \"35\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n'''"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"3 2\\n2 2 2\") == \"1\"\nassert solution(\"3 1\\n2 2 2\") == \"2\"\nassert solution(\"10 4\\n
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 2 2\\n') == '1'\nassert solution('3 3\\n2 2 2\\n') == '1'\nassert solution('3 3\\n2 2 2\\n') == '1'\nassert solution('3 5\\n2 2 2 2 2\\n') == '2'\nassert solution('3 5\\n2 2 2 2 2\\n') == '2'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\n\nn, m = map(int, stdin.readline().split())\ncandy_list = list(map(int, stdin.readline().split()))\ncandy_sum = sum(candy_list)"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 2 1') == '1'\nassert solution('1 2 3\\n1 1 3') == '2'\nassert solution('1 2 3 4\\n1 1 3 1') == '2'\nassert solution('1 2 3 4 5\\n1 1 3 1 1') == '3'\nassert solution('2 1\\n2') == '0'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 2 2') == '1'\nassert solution('2 2 2 3') == '1'\nassert solution('3 3') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 2 2\") == \"1\"\nassert solution(\"2 5\\n2 2 2\") == \"2\"\nassert solution(\"3 2\\n2 2 2\") == \"3\"\nassert solution(\"3 2\\n2 3 2\") == \"2\"\nassert solution(\"2 3\\n2 2 3\") == \"0\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 2 2''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5'\nassert solution('''100000000000\n100000000000''') == '1'\n\n\"\"\""
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n\n-----Note-----\nYou can run your code on Codility or other languages.\n\n\"\"\"\n\nstdin = input()\nprint(\"Yes\" if int(stdin.split()[0]) + int(stdin.split()[1]) + int(stdin.split()[2]) == int(stdin.split()[3]) + int(stdin.split()[4]) + int(stdin.split()[5]) else \"No\")\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n'''\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 2 1\\n2 3 2\\n1 2 1') == 'Yes'\nassert solution('1 2 1\\n2 3 2\\n1 2 1') == 'No'\nassert solution('1 2 1\\n2 3 2\\n1 3 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 1') == \"Yes\"\nassert solution('2 1 2') == \"No\"\nassert solution('1 0 1') == \"Yes\"\nassert solution('1 0 1') == \"Yes\"\nassert solution('1 0 1') == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == \"Yes\"\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == \"No\"\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == \"Yes\"\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == \"No\"\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1 0 1\n2 1 2\n1 0 1\n''') == 'Yes'\nassert solution(\n'''\n1 0 1\n2 1 2\n1 1 1\n''') == 'No'\nassert solution(\n'''\n1 0 1\n2 1 2\n2 1 2\n1 0 1\n''') == 'No'\nassert solution(\n'''\n1 0 1\n2 1 2\n2 1 2\n2 1 2\n''') == 'No'\nassert solution(\n'''\n1 0 1\n2 1 2\n1 1 1\n''') == 'Yes'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.replace('ABC', 'ARC')\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\nassert solution(\"ARC\") == \"ARC\"\nassert solution(\"ARC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nprint('Test case passed')\n\n'''"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ABC'\nassert solution('ABC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\n\"\"\"\n\nfrom sys import stdin,stdout\ns = stdin.readline().strip()\nstdout.write(s.swapcase() + '\\n')\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('AB') == 'ARC'\nassert solution('ABB') == 'ARC'\nassert solution('ABC') == 'ARC'\nassert solution('ABCD') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ARC'\nassert solution('ABC') == 'ABC'\nassert solution('ABC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\nassert solution(\"ARC\") == \"ARC\"\nassert solution(\"ARC\") == \"ARC\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('1 10 1') == '5'\nassert solution('1 10 3') == '0'\nassert solution('1 1000 1') == '0'\nassert solution('1 1000 3') == '1'\n\n-----\n**\"c\" (Case)\n- For each test case, print the number of integers between a and b, inclusive, that are divisible by x.\n- Test case format: \"a b x\"\n\"\"\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 8 2''') == '3'\n\n\"\"\"\n\n\"\"\"\nA. Monotonic Number\ntime limit per test1 second(s)\nmemory limit per test256 megabytes(bytes)\ninputstandard input\noutputstandard output\nA positive integer x is monotonic if its digits never decrease. For example, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 and 12 are monotonic while 123, 789, 9089 and 1234 are not.\n\nWrite a program to determine if a number is monotonic or not.\n\nInput\nThe first line contains an integer T, the number of test cases. T test cases follow, each on a new line.\n\nThe only line of each test case contains an integer N.\n\nOutput\nFor each test case, output a line containing the string true if the number is monotonic or false otherwise.\n\nConstraints\n\n 1 \u2264 T \u2264 10\n 0 \u2264 N < 10^18\n\nSample\n\nInput\n     \n3\n     \n123\n     \n1234\n     \n123456789\n     \nOutput\n     \ntrue\n     \ntrue\n     \nfalse\n     \nExplanation\n\nFor the first test case, 123 is monotonic, while 123, 789, 9089 and 1234 are not.\n\nFor the second test case, 1234 is monotonic, while 123, 789, 9089 and 123456789 are not.\n\nFor the third test case, 123456789 is not monotonic.\n\"\"\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 2') == '3' # This one is tricky\nassert solution('4 8 2') == '3' # This one is tricky\nassert solution('2 1 2') == '0'\nassert solution('1 1 2') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('1 1 1') == '0'\nassert solution('1 2 2') == '1'\nassert solution('2 5 2') == '2'\nassert solution('10 10 10') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"1000000000 1000000000 100000000\") == \"100000000\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10000000 1000000000 10000000\") == \"9\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 2') == '3' # same output, but different input\nassert solution('2 7 2') == '3'\nassert solution('2 7 2') == '3'\nassert solution('0 1 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(4, 8, 2) == '3'\nassert solution(10, 1, 10) == '10'\nassert solution(100, 100, 10) == '0'\nassert solution(0, 1000, 3) == '3'\nassert solution(100, 0, 10) == '0'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n\nprint('Test success:)')\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'\nassert solution('21') == 'Christmas Eve Eve Eve Eve Eve'\nassert solution('20') == 'Christmas Eve Eve Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Christmas\"\nassert solution(\"2\") == \"Christmas Eve\"\nassert solution(\"3\") == \"Christmas Eve Eve\"\nassert solution(\"4\") == \"Christmas Eve Eve Eve\"\nassert solution(\"5\") == \"Christmas Eve Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15') == 'L'\nassert solution('25') == 'X'\nassert solution('24') == 'X Eve'\nassert solution('23') == 'X Eve Eve'\nassert solution('22') == 'X Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'\nassert solution('26') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n\"\"\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == ''\nassert solution('27') == ''\nassert solution('100') == 'Christmas'\nassert solution('102') == ''\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == 4\nassert solution('8') == 4\nassert solution('3') == 1\nassert solution('10') == 0\nassert solution('12') == 1\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('6') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('1') == '1'\nassert solution('8') == '2'\nassert solution('3') == '0'\nassert solution('13') == '13'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"55\") == \"4\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"99\"\nassert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '6'\nassert solution('17') == '8'\nassert solution('34') == '10'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('7') == '4'\nassert solution('21') == '5'\nassert solution('123') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('Hello World!') == None\nassert solution('10') == None\nassert solution('123456') == None\nassert solution('9') == None\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:10]\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 7 9 3\") == \"No\"\nassert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 7 9 3\") == \"No\"\nassert solution(\"4 7 9 3\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('8 6 5 4') == 'No'\nassert solution('3 1 1 3') == 'Yes'\nassert solution('6 5 6 2') == 'No'\nassert solution('6 5 7 2') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('5 2 3 4') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('6 3 8 4') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 5') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 7 9 3\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 10 4\") == \"No\"\nassert solution(\"5 7 9 3\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder atcoder contest') == 'ABC'\nassert solution('atcoder atcoder beginner contest') == 'ABC'\nassert solution('atcoder atcoder contest atcoder') == 'ABC'\nassert solution('atcoder atcoder contest atcoder contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder\\nbeginner\\ncontest') == 'ABC'\nassert solution('\\na\\n\\ta\\n\\t\\ta\\n') == 'A'\nassert solution('\\na\\n\\ta\\n\\t\\ta\\n\\n\\t\\ta\\n') == 'A'\nassert solution('\\n\\na\\n\\na\\n') == 'A'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'A'\nassert solution('beginner') == 'BA'\nassert solution('contest') == 'C'\nassert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('hello') == 'HEL'\nassert solution('AtCoder') == 'ATCD'\nassert solution('ACADEMIC') == 'ACC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('cat cat mat') == 'CCT'\nassert solution('a cat cat mat') == 'AAC'\nassert solution('a cat cat mat') == 'AAC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"a b c d e\") == \"ABA\"\nassert solution(\"AtCoder\") == \"ATA\"\nassert solution(\"code\") == \"COD\"\nassert solution(\"codecamp\") == \"CAM\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\nfrom itertools import chain"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 100') == 'No'\nassert solution('50 100 200') == 'No'\nassert solution('50 100 50') == 'No'\nassert solution('50 50 50') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 2') == \"Yes\"\nassert solution('5 1 5') == \"Yes\"\nassert solution('5 1 1') == \"No\"\nassert solution('1 0 2') == \"Yes\"\nassert solution('1 0 1') == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 100 100\") == \"No\"\nassert solution(\"500 1000 2000\") == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(\"50 100 120\") == 'Yes'\nassert solution(\"50 100 120\") == 'No'\nassert solution(\"50 100 120\") == 'Yes'\nassert solution(\"50 100 120\") == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 1 120') == 'No'\nassert solution('0 1 2') == 'Yes'\nassert solution('4 2 2') == 'Yes'\nassert solution('4 1 1') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 500 120') == 'No'\nassert solution('50 500 120') == 'Yes'\nassert solution('50 100 80') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\n\nimport sys\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('30 50 80') == 'No'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('7 9 8 9 7') == '5'\nassert solution('7 9 8 9 7 7') == '5'\nassert solution('7 9 8 9 7 7 7') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '1'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"7 9 8 9\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 8') == '5'\nassert solution('5 4') == '5'\nassert solution('4 8') == '5'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"2 2\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '16'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"8 7\") == \"5\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"3\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'\n\nassert solution('''7 3\n6 7 8 9''') == '5'\n\nassert solution('''8 10\n7 3 4 4 9''') == '4'\n\nassert solution('''10 5\n7 3 4 4 9''') == '4'\n'''"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8') == '5'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"4 3 2 1\") == \"4 2 1 3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"10 9 8 7 6 5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"22 21 18 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\"\"\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('2 3 1') == '2 3 1'\nassert solution('2 3 1 4') == '4 3 1 2'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('5 4 3 2 1') == '1 2 3 4 5'\nassert solution('4 2 1 3') == '4 2 1 3'\nassert solution('3 3 3 3') == '3 3 3 3'\nassert solution('5 3 1') == '1 3 5'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3 4 5 6') == '4 2 1 3'\nassert solution('1') == '1'\nassert solution('2 3 4') == '2 3 4'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''1 1''') == 'Yes'\nassert solution('''1 1''') == 'No'\nassert solution('''100 100''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 10\\n5 2 4\\n') == 'No'\nassert solution('5 10\\n5 2 4 2 6\\n') == 'Yes'\nassert solution('6 10\\n6 2 4 6 3 6\\n') == 'Yes'\nassert solution('8 10\\n6 2 4 6 3 6 6 8\\n') == 'No'\nassert solution('10 10\\n6 2 4 6 3 6 6 8 9 10\\n') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 5\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 9\n4 5 6''') == 'Yes'\nassert solution('''10 9\n2 5 4''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''100 1\n2 4\n4 7 8''') == 'Yes'\nassert solution('''100 5\n2 4\n7 8''') == 'No'\nassert solution('''10 0\n2 4\n7 8''') == 'No'\nassert solution('''10 1\n2 4\n3 5''') == 'No'\n\n'''"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''10 3\n4 5 6'''\n) == 'Yes'\n\nassert solution(\n'''10 4\n4 5 6'''\n) == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 5\n4 5 6''') == 'No'\nassert solution('''10 3\n5 6 1''') == 'No'\nassert solution('''2 1\n2 1''') == 'No'\nassert solution('''10 3\n2 1''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 3\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('10 4') == 'No'\nassert solution('100000 3') == 'Yes'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '7'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '4'\nassert solution('abaab') == '3'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ababab') == '3'\nassert solution('abcxyzxyz') == '6'\nassert solution('aaaaa') == '5'\nassert solution('abababab') == '4'\nassert solution('abcabcab') == '7'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abc') == '3'\nassert solution('abcabc') == '4'\nassert solution('abcabcabc') == '5'\nassert solution('abcabcabcabc') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"xyzxyz\") == 3\nassert solution(\"ababab\") == 4\nassert solution(\"aaaaa\") == 2\nassert solution(\"xyzxy\") == 3\nassert solution(\"abcabc\") == 3\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('abcde') == ''\nassert solution('abababab') == ''\nassert solution('ababab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '3'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '4'\nassert solution('abaabab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('aabababab') == '4'\nassert solution('xyzxyz') == '4'\nassert solution('xyzzzz') == '3'\nassert solution('xyzxyzxyzxyz') == '5'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '6'\nassert solution('abaababaa') == '6'\nassert solution('abaababa') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('bac') == 'bac'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abc') == 'No'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abac') == 'No'\nassert solution('acb') == 'Yes'\nassert solution('baa') == 'No'\nassert solution('abca') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"ab\") == \"No\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"a\") == \"Yes\"\nassert solution(\"aab\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'Yes'\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('baa') == 'Yes'\nassert solution('aba') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(bac) == \"Yes\"\nassert solution(abc) == \"Yes\"\nassert solution(aac) == \"No\"\nassert solution(ab) == \"No\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == \"Yes\"\nassert solution('aab') == \"No\"\nassert solution('cba') == \"Yes\"\nassert solution('acb') == \"No\"\nassert solution('bac') == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bac') == \"Yes\"\nassert solution('bac') == \"No\""
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"Yes\"\nassert solution(\"acb\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"bca\") == \"No\"\nassert solution(\"acb\") == \"Yes\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 1') == '1 1'\nassert solution('1 1 1') == '1 1 1'\nassert solution('1 2 1') == '2 1'\nassert solution('1 2 1 1') == '2 1 1'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == \"646\"\nassert solution('''\n1\n1000000\n1000000\n''') == \"757402647\"\nassert solution('''\n2\n1 3\n4 2\n''') == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('1\\n1000000\\n1000000') == '757402647'"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\n\n'''\nhttps://www.hackerrank.com/challenges/smallest-integer\n'''"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution('''1\n1000000\n1000000''') == '757402647'\nassert solution('''2\n1 3\n4 2''') == '20'\nassert solution('''3\n1 1000000\n1 1000000\n1 1000000''') == '453682688'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution(stdin)\n\"\"\""
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1000000\\n1000000\\n\") == \"757402647\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n8\\n7\\n2\\n4\") == \"646\"\nassert solution(\"1\\n9\\n7\\n2\\n3\") == \"20\"\nassert solution(\"1\\n9\\n7\\n2\\n3\\n4\") == \"20\"\nassert solution(\"1\\n9\\n7\\n2\\n3\\n5\\n4\") == \"20\"\nassert solution(\"1\\n9\\n7\\n2\\n3\\n5\\n6\\n4\") == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 1 4\") == \"17\"\nassert solution(\"7 8 4\") == \"17\"\nassert solution(\"7 5 4\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('6 8 5 1 8 1 1 2 1') == '17'\n\n\n\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m, k = map(int, stdin.readline().split())\nshovels = list(map(int, stdin.readline().split()))\nspecial = list()\n\nfor _ in range(m):\n    x, y = map(int, stdin.readline().split())\n    special.append((x, y))\n\nd = [shovels[0]]\n\nfor i in range(1, n):\n    shovels_i = [shovels[i] + d[0]]\n    for j in range(1, i):\n        shovels_i.append(shovels[i] + d[j])\n    d.append(min(shovels_i))"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('9 2') == '17'\nassert solution('5 1 4') == '17'\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"57\"\nassert solution(\"2\\n2\\n1\") == \"2\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"26\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"45\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2 2\\n3 3\\n4 4') == '4'\nassert solution('3\\n1\\n2\\n1 1\\n2 2\\n1 1\\n2 2\\n1 1') == '3'\nassert solution('7\\n1\\n1 2\\n2 1\\n1 1\\n2 2\\n1 1') == '17'\n\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 4 5''') == '7'\nassert solution('''9 4 8''') == '17'\nassert solution('''5 1 4''') == '17'\nassert solution('''1 1 1 1 1 1 1 1 1 1 1 1''') == '17'\nassert solution('''2 1''') == '2'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n9 7\n5 6\n5 1\n5 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 4 5\") == \"7\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"\nassert solution(\"9 2\") == \"17\"\n\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.readline().split()]\na = [int(x) for x in stdin.readline().split()]\nm += 1\nspecial = []\nfor i in range(m):\n    x, y = [int(x) for x in stdin.readline().split()]\n    special.append((x, y))\ns = []\nfor j in range(n):\n    s.append([float('inf')] * (1 + max(special, key=lambda x: x[0])[0]))\n\nfor i in range(m):\n    s[special[i][0] - 1][special[i][1] - 1] = 0\n    \nfor i in range(n):\n    for j in range(1, min(special[i][1], n - i) + 1):\n        s[i][j] = min(s[i][j], s[i][j - 1] + a[i])\n\nfor j in range(n - k, n):\n    for i in range(1, min(special[j][1], n - j) + 1):\n        s[j][i] = min(s[j][i], s[j][i - 1] + a[j])\n\nprint(min(s[n - k]))\n\n##print(s)\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == 17\n\n'''\n\nimport sys"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 2\\n2 3') == '2'\nassert solution('7 1\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n4 7') == '0'\nassert solution('7 2\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '1'"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n1 2\\n3 4\\n2 3') == '0'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n4 5') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == '1'\n\n\n\n'''\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == 0\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n6 7') == 1\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n6 7') == 2\nassert solution('7\\n1 2\\n2 3\\n4 5\\n5 6\\n1 7') == 1\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n1 6\\n6 7') == 0\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\nassert solution('''7\n1 2\n1 3\n3 2\n3 4\n3 5\n3 6\n3 7''') == '1'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n1 4\n1 5\n4 6\n4 7\n5 7\n''') == '1'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 4\n1 5\n3 4\n3 5\n''') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n7 8\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n7 8\\n8 9\\n9 10\\n10 11\\n') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == \"2\"\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == \"0\"\nassert solution('''7\n1 2\n1 3\n2 4\n3 4\n3 5\n3 6\n3 7\n''') == \"1\"\nassert solution('''7\n1 2\n1 3\n2 3\n2 4\n4 5\n4 6\n6 7\n''') == \"1\"\nassert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n6 7\n1 7\n''') == \"2\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n4 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n4 7\\n') == '2'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7') == '1'\n\n\n-----"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''2 1\n3 2\n1 3\n2 3''') == '1\\n3\\n'\nassert solution('''2 2\n2 3\n1 3\n1 4\n2 4\n2 5''') == '1\\n2\\n3\\n4\\n5'\nassert solution('''2 4\n3 5\n2 4\n2 5''') == '1\\n2\\n3\\n4\\n5'\nassert solution('''1 10\n3 9\n3 9\n1 3\n2 3\n1 2\n1 2''') == '1\\n3\\n6\\n7\\n8\\n9\\n'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n3\\n4') == '5'\nassert solution('1\\n2\\n3\\n4') == '5'\nassert solution('10\\n1000000000\\n1000000000\\n2\\n3\\n4\\n5') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\nYou are given a positive integer $n$ ( $n \\ge 1$ ).\nYou have to find the $k$-th positive integer that is not divisible by $n$. The $k$-th positive integer is the one which is the $k$-th smallest number that is greater than zero and divisible by $n$.\n\nFor example, if $n=4$ and $k=2$, then the $2$-th positive integer that is not divisible by $4$ is $5$.\n\nInput\nThe first line of the input contains a positive integer $n$ ( $2 \\le n \\le 10^9$ ).\nThe second line contains an integer $k$ ( $1 \\le k \\le 10^9$ ).\n\nOutput\nPrint the $k$-th positive integer that is not divisible by $n$.\n\nConstraints\n1 \u2264 $n$ \u2264 $10^9$\n1 \u2264 $k$ \u2264 $10^9$\n\nExample\nInput:\n4\n2\n\nOutput:\n5\n\nNote\nTest input 1\nThe first line contains an integer $n$ ( $2 \\le n \\le 10^9$ ).\nThe second line contains an integer $k$ ( $1 \\le k \\le 10^9$ ).\n\nTest input 2\nThe first line contains an integer $n$ ( $2 \\le n \\le 10^9$ ).\nThe second line contains an integer $k$ ( $1 \\le k \\le 10^9$ ).\n\nTest output\nOutput a single line containing the $k$-th positive integer that is not divisible by $n$.\n\nNote\nTest output is in the correct format: print the $k$-th positive integer which is not divisible by $n$. If there are no such numbers, print the word \"NONE\".\n\nNote\nThe $k$-th positive integer is the one which is the $k$-th smallest number that is greater than zero and divisible by $n$.\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('3 6') == '5'\nassert solution('8 2') == '9'\nassert solution('8 21') == '29'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n'''\n    res = []\n    for _ in range(int(stdin.readline().strip())):\n        n, k = map(int, stdin.readline().split())\n        res.append(k * (k+1) // 2)\n    return '\\n'.join(map(str, res))\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('2\\n3\\n') == '4'\nassert solution('3\\n2\\n') == '1'\nassert solution('5\\n5\\n') == '2'\nassert solution('6\\n2\\n') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"\"\"\n10\n15\n1999999999\n113\n1000000001\n1\n\"\"\"\nassert solution(\n\"\"\"1\n1000000000 1000000000\n2 1\n\"\"\") == \"\"\"\n1999999999\n1\n\"\"\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('1'*100) == '2'\nassert solution('2'*100) == '3'\nassert solution('1'*1000) == '2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n2''') == '1'\nassert solution('''3\n3''') == '1'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2') == '1 2'\nassert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n1 3 2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2'\n\n\"\"\""
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"\"\"\n2\n2 1 \n\"\"\"\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"\"\"\n3\n1 3 2 \n\"\"\"\nassert solution(\n\"\"\"\n5 4\n2 3 3 4 1\n\"\"\") == \"\"\"\n0\n-1 1 -1\n\"\"\"\nassert solution(\n\"\"\"\n10 10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\n1\n1 2 \n\"\"\"\nassert solution(\n\"\"\"\n10 10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\n1\n1 2 \n\"\"\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '2'\nassert solution('2 4 1') == '1'\nassert solution('2 4 1 2 3 1 1 2 3 2') == '2 1'\nassert solution('5 4 1 2 3 4 1') == '3'\nassert solution('5 5 1 1 1 1 1 1 1 1 1') == '1 3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n-- Python 3.9 --"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2''') == '''2'''\nassert solution('''10 4''') == '''3'''\nassert solution('''11 11''') == '''0'''\nassert solution('''10 1''') == '''10'''\nassert solution('''100 2''') == '''10'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"263\"\nassert solution(\"6\") == \"263\"\nassert solution(\"7\") == \"263\"\nassert solution(\"8\") == \"263\"\nassert solution(\"9\") == \"263\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1''') == '263'\n\nprint(solution('''5\n7\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1'''))\nassert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1''') == '263'\nprint(solution('''1\n1\n1\n1\n1\n1'''))\nassert solution('''1\n1\n1\n1\n1\n1''') == '3'\nprint(solution('''1\n1\n1\n1\n1\n1'''))\nassert solution('''1\n1\n1\n1\n1\n1''') == '3'\nprint(solution('''1\n1\n1\n1\n1\n1'''))\nassert solution('''1\n1\n1\n1\n1\n1''') == '3'\nprint(solution('''1\n2\n1\n1\n1\n1'''))\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\n\n\n\"\"\"\n\nfrom typing import List\nimport sys\n\nfrom itertools import permutations\nfrom functools import lru_cache\n\n\n@lru_cache(None)\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == '263'\nassert solution('''1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n2 1\\n1 1\\n2\\n3 3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nassert solution('4\\n1 2\\n2 1\\n1 1\\n2\\n3 3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '272'\nassert solution('5\\n1 2\\n2 1\\n1 1\\n2\\n3 3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '281'\nassert solution('4\\n1 2\\n2 1\\n1 1\\n2\\n3 3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '272'\nassert solution('5\\n1 2\\n2 1\\n1 1\\n2\\n3 3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '281'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == \"263\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n2\\n1 2\\n1 1\\n1 2\\n3\\n1 2\\n3\\n3\\n1 1\\n3 3\\n2 2\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n2\\n1 3\\n1 2\\n2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\"\"\") == \"263\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"dfcbbcfeeedbaea\") == \"eecdff\"\nassert solution(\"abacaba\") == \"cab\"\nassert solution(\"abacab\") == \"cab\"\nassert solution(\"abacaba\") == \"cab\"\nassert solution(\"babab\") == \"bab\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"aaabcd\"\nassert solution(stdin) == \"bddcba\"\n\n\"\"\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('dfcbbcfeeedbaea') == 'dcfbbcfeeedbaeab'\nassert solution('abacaba') == 'abaaba'\nassert solution('abcde') == 'abcde'\nassert solution('123456789') == '123456789'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('843+5-19+48--16') == '2'\nassert solution('aaaabdeeffgghi') == '6'\nassert solution('abcde') == '1'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abcdefghijklmnopqrstuvwxyz''') == '''abcdefghijklmnopqrstuvwxyz'''\nassert solution('''codeforces''') == '''c'''\nassert solution('''foggy''') == '''f'''\nassert solution('''methinks it is like a weasel''') == '''m'''\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == '''abcdefghijklmnopqrstuvwxyz'''\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('codeforces') == 'c'\nassert solution('codeforces') == 'c'\nassert solution('ccc') == 'c'\nassert solution('c') == 'c'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''abcabcabd''') == '3'\nassert solution('''abcabcabd''') == '3'\nassert solution('''abacaba''') == '3'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aaaaa') == 'a'\nassert solution('acccccc') == 'a'\nassert solution('aac') == 'a'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\"\"\"\n) == \"\"\"154873296\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\"\"\"\n\nassert solution(\n\"\"\"154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567323738\n749092528\n755956652\"\"\"\n) == \"\"\"154873296\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n567323738\n755956652\"\"\"\n\nassert solution(\n\"\"\"154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567323738\n755956652\n685835638\"\"\"\n) == \"\"\"154873296\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n567323738\n755956652\"\"\"\n\nassert solution(\n\"\"\"154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567323738\n755956652\n687647693\"\"\"\n) == \"\"\"154873296\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n567323738\n755956652\"\"\"\n\nassert solution(\n\"\"\"154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567323738\n755956652\n685835638\"\"\"\n) == \"\"\"154873296\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n567323738\n755956652\"\"\""
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563'''\n) == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution(\n'''963411197\n8732937578\n8947106008\n837683465\n7890183771\n7240436863\n6778132983\n6912019075\n2900956441'''\n) == '963411197\\n8732937578\\n837683465\\n7890183771\\n7240436863\\n6778132983\\n6912019075\\n2900956441'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''142784906\n584787888\n638854829\n757937271\n992364402\n784872187\n522737180\n289895831\n859211429\n657499195\n''') == '142784906\\n584787888\\n638854829\\n757937271\\n992364402\\n784872187\\n522737180\\n289895831\\n859211429\\n657499195'\nassert solution('''948861586\n479966705\n399769390\n134049452\n797823362\n433757701\n943767188\n476611115\n448438642\n837193850\n869743982''') == '948861586\\n479966705\\n399769390\\n433757701\\n797823362\\n943767188\\n476611115\\n448438642\\n837193850\\n869743982'\nassert solution('''87382939\n674380514\n459934947\n94103739\n517868147\n503537983\n289988460\n999885003\n485592308\n425695487\n''') == '87382939\\n674380514\\n459934947\\n94103739\\n517868147\\n503537983\\n289988460\\n999885003\\n485592308\\n425695487'\nassert solution('''08011927\n900373063\n548575693\n421827036\n883265750\n877803491\n865347177\n053597269\n585948429\n690373874\n''') == '08011927\\n900373063\\n548575693\\n421827036\\n883265750\\n877803491\\n865347177\\n053597269\\n585948429\\n690373874'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"15487329638659271472964183586372514997531462841296835763145798224823\") == \"154873396386592714729641835863725145\"\nassert solution(\"15487329638659271472964183586372514997531462841296835763145798224823\") == \"154873396386592714729641835863725145\"\nassert solution(\"15487329638659271472964183586372514997531462841296835763145798224823\") == \"154873396386592714729641835863725145\"\nassert solution(\"15487329638659271472964183586372514997531462841296835763145798224823\") == \"154873396386592714729641835863725145\"\nassert solution(\"15487329638659271472964183586372514997531462841296835763145798224823\") == \"154873396386592714729641835863725145\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('154873296') == '154873396'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '863725145'\nassert solution('975314628') == '979314628'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('154873296') == '154873396'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '863725145'\nassert solution('975314628') == '979314628'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n'''\n    assert solution('''75612957\n730646496\n290151680\n637262371\n878921666\n777782290\n632334227\n558610839\n628438510\n771419018''') == '756129576\\n730646497\\n290151678\\n637262372\\n878921667\\n777782189\\n632334229\\n558610838\\n628438511\\n771419017'\n    assert solution('''45230086\n752919530\n941666976\n844990826\n858015982\n957507631\n836233421\n932037987\n626764654\n421524969''') == '45230086\\n752919530\\n941666977\\n844990827\\n858015982\\n957507630\\n836233421\\n932037986\\n626764653\\n421524968'\n    assert solution('''392458246\n385947365\n386469377\n396354814\n459060666\n826244810\n192458809\n645488022\n733292943\n761592272''') == '392458246\\n385947363\\n386469376\\n396354814\\n459060666\\n826244810\\n192458808\\n645488022\\n733292943\\n761592271'\n    assert solution('''233209161\n729965669\n743780571\n712859281\n892308868\n988483984\n371098182\n623387436\n221926545\n648968450''') == '233209161\\n729965668\\n743780572\\n712859282\\n892308869\\n988483983\\n371098181\\n623387435\\n221926544\\n648968449'\n    "
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('154873296') == '154873396'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '863725145'\nassert solution('975314628') == '979314628'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('154873296') == '154873396'\nassert solution('386592714') == '336592714'\nassert solution('729641835') == '729645835'\nassert solution('863725149') == '863725145'\nassert solution('975314628') == '979314628'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3 6 8 -1 9 4\""
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '6\\n8\\n4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '8\\n9\\n4'\nassert solution('''1 1\n1''') == '1'\nassert solution('''9 7\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '8'\nassert solution('''9 7\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2 1\"\nassert solution(\"1 2 1\") == \"-1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"1 2 3 4 5\") == \"-1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n5\\n7\\n') == '3\\n4\\n5\\n7'\nassert solution('2\\n2\\n1\\n1\\n2\\n2') == '3\\n3'\nassert solution('2\\n2\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8') == '5\\n7'\nassert solution('2\\n2\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9') == '5\\n7'\nassert solution('2\\n2\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12') == '5\\n7'\n\n\n-----Best Solution-----\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\\n3\\n4\"\nassert solution(\"4\\n5\\n6\\n7\") == \"5\\n6\\n7\"\nassert solution(\"2\\n1\") == \"-1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"-1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('''9 5\n2 1 2 4 5 3 5 6\n2 1\n3 2\n3 4\n3 5\n3 6\n2 2\n1 3\n1 4\n1 5''') == '-1\\n3\\n6\\n3\\n2'\nassert solution('''4 4\n1 2 1 2 3\n2 1\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5''') == '-1\\n-1\\n-1\\n3\\n4'\nassert solution('''4 5\n2 1 1 1 2\n2 1\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5''') == '3\\n4\\n5\\n-1\\n2'\nassert solution('''5 5\n1 2 1 2 3\n2 1\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5\n2 1\n1 2\n1 3\n1 4\n1 5''') == '-1\\n1\\n2\\n-1\\n3'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution('''5\n5 3 2 8\n5 4 2 3\n5 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution('''5\n5 3 2 8\n5 4 2 3\n5 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\n\nassert solution('''5\n5 3 2 8\n5 4 2 3\n10 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'NO'\nassert solution('2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n2\\"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n0') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n0\\n0') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n0\\n0\\n0') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n1\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\nYES\nYES\nNO\nNO\nYES\n\n\"\"\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a b c n') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 1 1 1') == 'NO'\nassert solution('0 0 0 0') == 'YES'\nassert solution('10 10 10 10') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nT = int(input())\n\nfor i in range(T):\n    a, b, c, n = map(int, sys.stdin.readline().split())\n    if a == b == c:\n        print('YES')\n    elif n % a == n % b == n % c:\n        print('YES')\n    else:\n        print('NO')"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'NO'\nassert solution('ab') == 'NO'\nassert solution('ababab') == 'NO'\nassert solution('abcd') == 'NO'\nassert solution('ababcd') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3') == 'NO'\nassert solution('2\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n') == 'YES'\n\n'''\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\n\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3 4 6 5'\nassert solution(stdin) == '9 8 12 6 8'\nassert solution(stdin) == '3 3'\n\n\n\n\"\"\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n\n\n-----"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3 4 6 5'\nassert solution(stdin) == '9 8 12 6 8'\nassert solution(stdin) == '3 3'\nassert solution(stdin) == '9 8 12 6 8'\nassert solution(stdin) == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3 4 6 5'\nassert solution('2 1 5 3 5') == '3 3'\nassert solution('5 1 5 3 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\nassert solution('2 1 1 1 1 2 2 2 2 2 2') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4 4\n1 2 3 4\n\"\"\") == \"\"\"3 4 6 5 \n\"\"\"\n\nassert solution(\n\"\"\"5 5\n2 1 5 3 5\n\"\"\") == \"\"\"9 8 12 6 8 \n\"\"\"\n\nassert solution(\n\"\"\"2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"\"\"3 3 \n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n2 1 3 4\\n2 1 3 4\\n3 1 4 2') == '3 3\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n2 1 3 5 3 5') == '9 8 12 6 8\\n'\nassert solution('3 10\\n1 2 1 1 2 2 2 2 2 2\\n2 1 3 5 3 5') == '9 8 12 6 8\\n'\nassert solution('3 10\\n2 1 1 1 2 2 2 2 2 2\\n2 1 3 5 3 5') == '9 8 12 6 8\\n'\nassert solution('3 10\\n2 1 1 1 2 2 2 2 2 2\\n2 1 3 5 3 5') == '9 8 12 6 8\\n'\n\n\n\"\"\"\n\n\n\n\n\n\n\n\"\"\"\n\n---\n\n## Test your code\n\nRun the code below to test out your solution.\n\"\"\""
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution(\n'''10 4\n1 2\n1 3\n1 4\n2 4\n2 3\n2 1\n1 3\n2 1\n2 3\n2 4\n1 2\n3 4\n2 3\n3 4\n2 1\n3 4\n3 2\n1 4\n4 1\n1 4\n3 4\n3 2\n1 3\n1 2\n1 4\n''') == 'NO\\nYES\\nYES\\nNO'\nassert solution(\n'''10 5\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n4 5\n2 3\n3 4\n1 5\n2 3\n3 4\n1 2\n1 3\n1 4\n1 5\n''') == 'NO\\nYES\\nYES\\nYES'\n\nassert solution(\n'''10 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n3 4\n3 5\n4 6\n5 6\n4 5\n5 6\n4 6\n5 4\n5 6\n5 4\n5 6\n4 5\n5 4\n5 6\n5 4\n5 4\n5 4\n''') == 'YES\\nNO\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution(\n'''10 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n4 5\n4 5\n4 6\n4 5\n4 5\n4 5\n''') == 'YES\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 4') == 'YES'\nassert solution('6 6') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('2 3 4 5') == 'NO'\nassert solution('2 1 5') == 'NO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == '''NO\nNO\nYES\nYES\nYES\nYES\nYES\nNO\nYES\n'''\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 5\n1 2\n1 3\n1 4\n2 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n7 10\n8 9\n9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO\\nYES\\nNO\\nNO\\nNO\\nYES'\n'''\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10''') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 5\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n3 9\n3 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n3 9\n3 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n3 9\n3 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n'''\n\n'''"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\n'''assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO\\nYES\\n1 2\\n3 5\\n5 4\\n1 2\\n'\n'''assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\n'\n\nassert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\nNO\nYES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''4\n4\n1 2 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''4\n4\n1 2 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1 3') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1 1 1') == 'YES'\nassert solution('4') == 'YES'\nassert solution('1 1000 101 1000') == 'YES'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\\\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\\\nNO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\nassert solution(\"\"\"\\\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\\\nNO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\nassert solution(\"\"\"\\\n4\n4\n1 2 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\\\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\nassert solution(\"\"\"\\\n6\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\\\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\n\nassert solution(\"\"\"\\\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"\\\nNO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\n'\nassert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n') == 'NO\\nYES\\n1 2\\n'\nassert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n') == 'NO\\nNO\\n1 2\\n1 3\\n1 4\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"\nYES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n1 3\n1 4\n\"\"\"\nassert solution('''\n2\n3\n1 1 1\n4\n1 1000 101 1000\n2\n1 2 3 4\n''') == \"\"\"\nNO\nYES\n1 2\n1 3\n1 4\n\"\"\"\n'''"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n3') == 'YES\\n1 3\\n3 4\\n4 1\\n1 3\\n1 4'\nassert solution('2 3 4\\n3') == 'NO\\n1 1\\n1 3'\nassert solution('1 2 3 4\\n3') == 'YES\\n1 3\\n3 5\\n5 4'\nassert solution('1 1000 101 1000\\n4\\n1 2 3 4\\n4\\n1 1000 101 1000\\n4') == 'YES\\n1 2\\n1 3\\n1 4\\n3 5\\n4 1\\n4 2\\n4 3\\n4 4\\n3 5'\nassert solution('1 2 3 4\\n3') == 'NO\\n1 1\\n1 3'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\nimport unittest"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000000') == '1000000'\nassert solution('0010000') == '0001000'\nassert solution('1110001') == '0111001'\nassert solution('1111100') == '0011100'\nassert solution('1111100') == '0011100'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"11011010\") == \"01011110\"\nassert solution(\"11011010\") == \"0101111\"\nassert solution(\"11011010\") == \"0011111\"\nassert solution(\"1111100\") == \"0111111\"\nassert solution(\"1111100\") == \"1011110\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00111100') == '00111100'\nassert solution('00111011') == '01101101'\nassert solution('10010010100110110') == '01011010101001110'\nassert solution
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom functools import lru_cache\n\n\n@lru_cache(None)\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('01011110') == '01011110'\nassert solution('010111') == '010111'\nassert solution('0111') == '0111'\nassert solution
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10101010111\") == \"11011010101\"\nassert solution(\"101010101110\") == \"11011010101\"\nassert solution(\"111110001100\") == \"001110001100\"\n\n\n-----"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11011010') == '01011110'\nassert solution('11011010') == '0101111'\nassert solution('11011010') == '0011111'\nassert solution('11011010') == '0111110'\nassert solution('11011010') == '0111111'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('01011110') == '01011110'\nassert solution('11101110') == '0101111'\nassert solution('11011110') == '0101111'\nassert solution('11010101') == '01111010'\nassert solution('11010111') == '01111010'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\nassert solution(\"3\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"3\\n1 2 4\\n\"\nassert solution(\"4\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\nassert solution(\"5\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\nassert solution(\"6\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 1\\n2 3\\n2 1\\n2 3\\n2 1\\n\") == \"2\\n1 2 3\"\nassert solution(\"2 1\\n2 1\\n2 1\\n\") == \"0\"\nassert solution(\"4 1\\n2 1\\n2 1\\n1 2\\n\") == \"2\\n1 2\"\nassert solution(\"5 1\\n2 1\\n2 1\\n1 2\\n1 2\\n\") == \"2\\n1 2\"\nassert solution(\"3 1\\n2 3\\n1 3\\n\") == \"2\\n1 3\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''2 1\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == '3'\nassert solution('''2 1\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == '3'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"3\\n1 2 4\"\nassert solution(\"7 2\") == \"3\\n1 4 7\"\nassert solution(\"7 3\") == \"3\\n1 3 5\"\nassert solution(\"8 3\") == \"3\\n1 2 4\"\nassert solution(\"8 4\") == \"3\\n1 2 4\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n'\n'2 3\\n'\n'3 3\\n'\n'2 3\\n'\n'2 2\\n'\n'2 3\\n'\n'2 3\\n'\n'1 2\\n') == '3'\nassert solution('1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n') == '0'\nassert solution('1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n') == '3'\nassert solution('1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n') == '3'\nassert solution('1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n'\n'1 1\\n') == '3'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '3'\nassert solution('''3 1\n7 8\n8 9\n7 8''') == '4'\nassert solution('''2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\n''') == '2'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\n''') == '0'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''8 1\n4 1\n2 1\n3 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '7'\nassert solution('''10 1\n1 1\n2 1\n3 1\n2 2\n3 2\n3 3\n4 3\n4 4\n3 4\n2 4\n1 4\n1 4\n''') == '3'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''7 2\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3''') == '4'\nassert solution('''7 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''7 1\n29 30\n30 30\n29 29\n28 30\n30 30\n29 30\n''') == '4'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''2\n2 1\n-3 0\n''') == '0'\n'''\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    1 3 2\n    -100 2 3\n''') == '3'\nassert solution('''\n    5\n    2 1 4 3 5\n    2 2 2 3 4\n''') == '19'\nassert solution('''\n    2\n    2 1\n    -3 0\n''') == '0'\nassert solution('''\n    1\n    1\n''') == '0'\nassert solution('''\n    10\n    1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1\n''') == '36'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''2\n1 1\n0 0''') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3 2\\n-100 2 3\\n') == '3'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4\\n') == '19'\nassert solution('2\\n2 1\\n-3 0\\n') == '0'\nassert solution('2\\n2 1\\n-3 0\\n') == '0'\nassert solution('1\\n3 2\\n-100 2 3\\n') == '3'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 2\\n-100 2 3') == '3'\nassert solution('2\\n1 3 2\\n-100 2 3') == '3'\nassert solution('3\\n2 1 4 3 5\\n2 2 2 3 4\\n') == '19'\nassert solution('3\\n2 1\\n-3 0\\n') == '0'\nassert solution('1\\n3 2\\n-100 2 3') == '3'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nprint(solution('''6\n3 4 1 4 1 4\n5 6 -4 -5 -2'''))\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n-1\\n-1\\n') == 0\nassert solution('2\\n1\\n-1\\n-1\\n') == 3\nassert solution('2\\n3\\n2\\n3\\n') == 1\nassert solution('2\\n3\\n2\\n3\\n') == 1\nassert solution('2\\n2\\n2\\n2\\n') == 0\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''10\n9 2 5 4 3 2 5 -1 -3 -5 -2 -6 -7 -8 -9 -10 -3 -4 -5''') == '2265'\n'''\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''4\n5 4 3 2 1\n0 0 0 0 0\n''') == '0'\nassert solution('''7\n9 6 7 5 4 3 2 1\n2 2 2 2 2 2 2 2\n''') == '5'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3 2\\n-100 2 3\\n') == '3'\nassert solution('2\\n1 3\\n-3 0\\n') == '0'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4\\n') == '19'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == str(output)\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '1 3 3'\n'''\n'''"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\nassert solution('1 2\\n1 2') == '0 0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m = [int(x) for x in stdin.readline().split()]\ntree = [tuple(int(x) for x in stdin.readline().split()) for _ in range(n - 1)]\nqueries = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\"\"\") == \"\"\"21 7 15 21 3\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2\\n') == '0 0'\nassert solution('1 2\\n1 3\\n1 3\\n') == '1 2 1 3'\nassert solution('2 3\\n1 2 3\\n2 3 1\\n') == '2 2 1'\nassert solution('3 4\\n1 2 3 4\\n2 4 3 4\\n3 4 2 1\\n4 5 4 3 2 3\\n') == '0 0'\nassert solution('4 5\\n1 2 4 3 3\\n1 3 2 4 5 4 3\\n3 4 1 2 3 5 2 4\\n2 4 3 4 5 4 3\\n') == '3 4 1 2 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\n\n'''\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 '\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''2 2\n1 2\n1 2\n''') == '0 0'\nassert solution('''2 2\n1 2\n2 1\n''') == '1 0'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3') == 'NO'\nassert solution('3\\n2') == 'NO'\nassert solution('2\\n4') == 'YES'\nassert solution('3\\n1') == 'YES'\nassert solution('2\\n2') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4') == \"YES\"\nassert solution('2\\n3\\n4\\n5\\n6') == \"NO\"\nassert solution('1\\n2\\n3\\n4\\n5') == \"YES\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == \"NO\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == \"YES\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n2\\n4\\n4\\n4\\n4\\n3\\n3\\n3\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''3''') == 'YES'\nassert solution('''1 2 2''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''5 5 5 5''') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == 'YES'\nassert solution('2\\n3') == 'NO'\nassert solution('1\\n2\\n2') == 'YES'\nassert solution('3\\n3') == 'YES'\nassert solution('1\\n3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n100') == 'YES'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('2\\n3') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('1\\n0') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n3\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n3\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n4\n''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\nassert solution('1\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1\\n') == 'NO'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('1\\n2\\n3\\n') == 'YES'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('1101') == '12'\nassert solution('1001') == '11'\nassert solution('10101') == '11'"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1010\\n1101') == '12'\nassert solution('4 4\\n1010\\n1101') == '12'\nassert solution('4 5\\n1001\\n10101') == '11'\nassert solution('1 1\\n1010\\n10101') == '0'\nassert solution('1 2\\n1010\\n10101') == '1'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"5 5\") == \"11\"\nassert solution(\"4 5\") == \"11\"\n\n\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\na = int(stdin.readline(), 2)\nb = int(stdin.readline(), 2)\n\nres = a & b\nwhile b!= 0:\n    if b > 0:\n        res += a & b\n        b >>= 1\n    else:\n        b >>= 1\n\nprint(res % (998244353))"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10101') == 11\nassert solution('1010') == 8\nassert solution('1101') == 1\nassert solution('1110') == 1\nassert solution('1111') == 1\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(12)\n\n\"\"\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == '12'\n\nassert solution('''4 5\n1001\n10101\n''') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1010\\n1101') == '12'\nassert solution('4 5\\n1001\\n10101') == '11'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/test_fraud') == 'NO\\nYES\\n4 3 2 5'\nassert solution('inputs/test_fraud2') == 'NO\\nYES\\n1 1 2 2 1'\nassert solution('inputs/test_fraud3') == 'NO\\nNO\\nNO'\nassert solution('inputs/test_fraud4') == 'NO\\nYES\\n1 1 1 2 2 1 1'\nassert solution('inputs/test_fraud5') == 'YES\\n2 4 1 5'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2''') == 'YES'\nassert solution('''2\n4''') == 'NO'\nassert solution('''2\n6''') == 'YES'\nassert solution('''2\n8''') == 'YES'\nassert solution('''2\n10''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2''') == 'NO'\nassert solution('''5\n4''') == 'NO'\nassert solution('''4\n6''') == 'NO'\nassert solution('''8\n10''') == 'NO'\nassert solution('''4\n10''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n3\n4\n5''') == \"YES\\n2 4 1 5\"\nassert solution('''3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14''') == \"NO\\n2 4 1 5\"\nassert solution('''4\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26''') == \"YES\\n2 4 1 5 6 7 8 10 12 14 16 18 20 22 24 26\"\nassert solution('''5\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100\n''') == \"NO\\n2 4 1 5 6 7 8 10 12 14 16 18 20 22 24 26\"\nassert solution('''7\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n''') == \"YES\\n2 4 1 5 6 7 8 10 12 14 16 18 20 22 24 26\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('stdin') == 'NO'\nassert solution('stdout') == 'NO'\nassert solution('y = 5') == 'NO'\nassert solution('-4') == 'NO'\nassert solution('-2') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n''') == 'YES'\nassert solution('''3\n2\n''') == 'NO'\nassert solution('''4\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''3\n4\n''') == 'NO'\nassert solution('''6\n6\n10\n''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2''') == 'YES'\nassert solution('''4\n2''') == 'NO'\nassert solution('''6\n4''') == 'YES'\nassert solution('''8\n6''') == 'YES'\nassert solution('''10\n8''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2') == 'YES\\nNO\\nNO\\nNO'\nassert solution('2\\n2\\n2\\n2\\n2') == 'NO\\nNO\\nNO\\nNO'\nassert solution('3\\n3\\n3\\n3\\n3') == 'NO\\nNO\\nNO'\nassert solution('3\\n3\\n3\\n3\\n3') == 'NO\\nNO\\nNO'\nassert solution('3\\n3\\n3\\n3\\n3') == 'NO\\nNO\\nNO'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5\n1 1 1 1 1''') == '1'\nassert solution('''8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'\nassert solution('''1\n7\n1 1 1 1 1 1 1 1''') == '0'\nassert solution('''2\n7\n1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1''') == '0'"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\nassert solution('''5\n1\n1\n''') == '0'\nassert solution('''1\n1\n''') == '0'\nassert solution('''5\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''9\n9\n1 1 1 1 1 1 1 1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '10'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == ''\nassert solution('2\\n') == ''\nassert solution('3\\n') == ''\nassert solution('4\\n') == ''\nassert solution('5\\n') == ''\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n1\\n1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0\\n'\n\nassert solution(\n'''3\n4\n1 1 2 3\n4\n1 1 1 1 1\n5\n1 1 1 1 1 1 1\n6\n1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1 1 1\n10\n1 1 1 1 1 1 1 1 1 1 1 1\n11\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n12\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '3\\n1\\n0\\n4\\n0\\n'\n\nassert solution(\n'''4\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n1 1 1\n1\n2\n1\n''') == '5\\n1\\n0\\n4\\n0\\n'\n\nassert solution(\n'''6\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n1 1 1\n1\n2\n1\n''') == '5\\n1\\n0\\n4\\n0\\n'\n\nassert solution(\n'''9\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n1 1 1\n1\n2\n1\n''') == '5\\n1\\n0\\n4\\n0\\n'"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"\"\"5\n1\n0\n4\n0\n0\n\"\"\"\n'''"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n3 1 4 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n3\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\nprint('Passed')\n'''"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1 0\\n2 0\") == \"2\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\") == \"3\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\") == \"1\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\") == \"5\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\") == \"5\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n2 3\n3 4\n4 5\n5 6\n1 2\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''1 2\n2 3\n3 4\n4 5\n5 6\n1 2\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''1 2\n1 3\n2 4\n2 3\n3 4\n5 6\n1 2\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''1 2\n1 3\n2 4\n2 3\n3 4\n5 6\n1 2\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '7'\nassert solution('''1 2\n1 3\n2 4\n2 3\n3 4\n5 6\n1 2\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '8'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n4\\n2\\n7\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n4\\n2\\n7\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n4\\n2\\n7\"\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n4\\n2\\n7\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7\\n'\nassert solution('''4\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4\\n2\\n3\\n7\\n'\n\nassert solution('''4\n5\n1 1\n2 2\n3 3\n4 4\n5\n1 1\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7\\n'\nassert solution('''4\n2\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2\\n7\\n'\nassert solution('''4\n2\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2\\n7\\n'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3''') == '4'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3''') == '2'\nassert solution('''3\n2\n1 3\n2 4\n2 3''') == '2'\nassert solution('''4\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\n3\n1 3\n2 4\n2 3''') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''6\n6\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''10\n10\n1 10\n2 9\n2 5\n3 4\n4 4\n6 8\n7 7\n9 6\n10 5\n''') == '6'\nassert solution('''10\n10\n1 10\n2 9\n2 5\n3 4\n4 4\n6 8\n7 7\n9 6\n10 5\n''') == '7'\nassert solution('''10\n10\n1 10\n2 9\n2 5\n3 4\n4 4\n6 8\n7 7\n9 6\n10 5\n''') == '8'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n4\n1 2\n2 4\n3 4\n4 3\n4\n3\n3\n1 2\n2 4\n2 3\n3 4\n5\n1 2\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7'\n\nassert solution('''3\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4\\n7'\n\nassert solution('''3\n6\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n\nassert solution('''3\n6\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '6'\n\nassert solution('''3\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '5'"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"3\"\nassert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"4\"\nassert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"3\"\nassert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"3\"\nassert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"4\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\n'''\nTest cases\n\nNote that the result is displayed by the function `print`, not `return`. In many languages, a return statement is required to end a function.\n\nIn C++, you can use the `return` keyword to end the function.\n\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '''\n5\n60\n1439\n1180\n1\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('23 0') == '60'\nassert solution('23 59') == '1439'\nassert solution('0 1') == '1180'\nassert solution('4 20') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input/27-test-cases/27-test-cases-2.in') == '59', 'Failed 27-test-cases-2.in'\nassert solution('input/27-test-cases/27-test-cases-3.in') == '1180', 'Failed 27-test-cases-3.in'\nassert solution('input/27-test-cases/27-test-cases-4.in') == '60', 'Failed 27-test-cases-4.in'\nassert solution('input/27-test-cases/27-test-cases-5.in') == '1439', 'Failed 27-test-cases-5.in'\nassert solution('input/27-test-cases/27-test-cases-6.in') == '1180', 'Failed 27-test-cases-6.in'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"23 55\") == 59\nassert solution(\"23 0\") == 24\nassert solution(\"0 1\") == 60\nassert solution(\"4 20\") == 1180\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('23 55') == '5'\nassert solution('23 0') == '60'\nassert solution('0 1') == '1439'\nassert solution('4 20') == '1180'\nassert solution('23 59') == '1'\n\n\n\n------- Testcases -------\nThe first test case is:\n23 55\n0 0\n\nThe answer is:\n5\n\nThe second test case is:\n23 0\n0 1\n\nThe answer is:\n60\n\nThe third test case is:\n0 1\n4 20\n\nThe answer is:\n1180\n\nThe fourth test case is:\n23 59\n\nThe answer is:\n1\n\nThe fifth test case is:\n23 59\n\nThe answer is:\n1439\n\"\"\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('test_input_1') == '60'\nassert solution('test_input_2') == '1439'\nassert solution('test_input_3') == '1180'\nassert solution('test_input_4') == '1'\nassert solution('test_input_5') == '0'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''23 55\n0 0\n0 0\n0 0\n0 0''') == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution('''123 45\n23 59\n0 0\n23 59\n0 0\n23 59''') == \"4\\n60\\n1439\\n1180\\n1\"\nassert solution('''123 45\n123 45\n123 45\n123 45\n123 45''') == \"0\\n60\\n1439\\n1180\\n1\"\nassert solution('''123 45\n123 45\n123 45\n123 45\n123 45''') == \"0\\n60\\n1439\\n1180\\n1\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt', 'r')) == open('test_output.txt', 'r').read()\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n-----My Analysis-----"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\nassert solution('''\n10\nLURUDDDDLR\n''') == '4 4'\nassert solution('''\n12\nLRUDRDDDLDRDRDDRDDRURDRUDLDRDRDLDR\n''') == '4 4'\nassert solution('''\n1\nL\n''') == '-1'\nassert solution('''\n2\nRU\n''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_case.txt\", \"r\")) == \"1 4\"\nassert solution(open(\"test_case_2.txt\", \"r\")) == \"1 4\"\nassert solution(open(\"test_case_3.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"test_case_4.txt\", \"r\")) == \"1 4\"\nassert solution(open(\"test_case_5.txt\", \"r\")) == \"3 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('LRUD') == '1 2'\nassert solution('LURD') == '1 4'\nassert solution('RRUDU') == '3 4'\nassert solution('LLDDR') == '-1'\nassert solution('L') == '1 1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    l = r = -1\n    while i < n:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        elif s[i] < s[j]:\n            i += 1\n        else:\n            j -= 1\n    print(i, j)\n    stdout.write('{} {}\\n'.format(l + 1, r + 1))\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('LL') == (1, 1)\nassert solution('UDLRUD') == (0, 4)\nassert solution('RRU') == (0, 1)\nassert solution('UDDLRR') == (1, 1)\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''4\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''4\n4\nLLDDR\n5\nLLDDR''') == '1 4'\nassert solution('''4\n4\nLRUD\n5\nRRUDU\n5\nLLDDR''') == '3 4'\nassert solution('''4\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"LRUD\") == \"1 2\"\nassert solution(\"LURD\") == \"1 4\"\nassert solution(\"RRUDU\") == \"3 4\"\nassert solution(\"LLDDR\") == \"-1\"\nassert solution(\"LRUDLRUDLRLULDRRULRUULLLLLLUUDDDDRRULRUDLRLULDRLRLDUD\") == \"6 5\"\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '3'\nassert solution(input2) == '1'\nassert solution(input3) == '2'\nassert solution(input4) == '0'\nassert solution(input5) == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\n\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n7\n''') == '0'\n\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n7\n''') == '7'\n\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n7\n''') == '7'\n\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n7\n''') == '7'"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0\\n2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n1') == '0'\nassert solution('2\\n3') == '2'\nassert solution('2\\n2') == '1'\nassert solution('3\\n2') == '0'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''5\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''8\n1000000\n1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''8\n1000000\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''8\n1000000\n1 1 1 1 1 1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n7\\n4 2 4 1 4 3 4') == '3'\nassert solution('1\\n7\\n4 2 4 1 4 3 4') == '1'\nassert solution('1\\n7\\n4 2 4 1 4 3 4') == '2'\nassert solution('1\\n7\\n4 2 4 1 4 3 4') == '0'\nassert solution('2\\n10\\n3 2 1 3 1 2 3 1 2') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\"\nassert solution(\"1\\n1337\\n\") == \"0\"\nassert solution(\"5\\n133 16 1 1 1 1\\n1 2\\n1 3\\n2 4\\n2 5\\n5 6\\n5 7\\n5 8\\n\") == \"0\"\nassert solution(\"5\\n133 16 1 1 1 1\\n1 2\\n2 3\\n2 4\\n2 5\\n5 6\\n5 7\\n5 8\\n\") == \"0\"\nassert solution(\"5\\n133 16 1 1 1 1\\n1 2\\n2 3\\n2 4\\n2 5\\n5 6\\n5 7\\n5 8\\n\") == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('8') == '0'\nassert solution('9 4 1 7 10 1 6 5') == '121'\nassert solution('1 2\\n2 3\\n1 4') == '0'\nassert solution('1\\n1337') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1337') == '0'\nassert solution('2\\n1\\n3') == '4'\nassert solution('3\\n7\\n3\\n1') == '2'\nassert solution('4\\n7\\n2\\n1') == '10'\nassert solution('5\\n7\\n2\\n1') == '25'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == solution(example)\n\n'''\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n\n'''\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('8') == 0\nassert solution('9 4 1 7 10 1 6 5') == 121\nassert solution('9 5 1 7 10 1 6 5') == 122\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6\\n18\\n0\\n227\\n8'"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1') == '0'\nassert solution('2\\n2\\n1') == '3'\nassert solution('1\\n1\\n1') == '3'\nassert solution('1\\n2\\n1\\n1') == '5'\nassert solution('2\\n1\\n1') == '7'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n'''\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a\\n4\\n3') == '6'\nassert solution('a\\n4\\n3\\n2\\n1') == '18'\nassert solution('a\\n4\\n3\\n2\\n1\\n1') == '0'\nassert solution('a\\n4\\n3\\n2\\n1\\n1\\n1') == '227'\nassert solution('a\\n4\\n3\\n2\\n1\\n1\\n1\\n1') == '8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 3') == '6'\nassert solution('10 6') == '18'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '0'\nassert solution('5 10') == '227'\nassert solution('20 100 50 20 100500') == '8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n3\\n6\\n1\\n3') == '6'\nassert solution('2\\n3\\n2\\n4\\n2\\n5\\n1\\n2\\n1\\n1\\n1\\n1') == '18'\nassert solution('5\\n3\\n10\\n100\\n50\\n100500\\n10\\n25\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n') == '227'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asd\") == \"\"\nassert solution(\"aaaaa\") == \"\"\nassert solution(\"0102\") == \"\"\nassert solution(\"a0a1\") == \"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('5 2') == '1'\nassert solution('1 2 1 3') == '3'\nassert solution('10 6') == '18'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\n\"\"\""
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import DefaultDict\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\nassert solution('1,2,3') == '1'\nassert solution('1,2,3,4') == '2'\nassert solution('1,2,3,4,5') == '2'\nassert solution('1,2,3,4,5,6') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1,2,3\") == \"1\"\nassert solution(\"1,2\") == \"2\"\n\nimport sys\nsys.stdin = open(\"../../../data/1859_test1.txt\", \"r\")\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('3\\n5\\n1\\n2\\n3') == '4'\nassert solution('3\\n5\\n1\\n2\\n3\\n4') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution([1,2], [1,2,3]) == 2\nassert solution([1,2,3], [1,1]) == 1\nassert solution([1,2,3], [1,2]) == 1\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([1,2], [1,2,3]) == 2\nassert solution([1,2], [1,1]) == 1\nassert solution([1,2,3], [1,2]) == 1\n\nfrom typing import List\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"[1,2,3]\\n[1,1]\") == \"1\"\nassert solution(\"[1,2]\\n[1,2,3]\") == \"2\"\nassert solution(\"[1,2,3]\\n[1,2,3,4]\") == \"2\"\nassert solution(\"[1,2,3,4]\\n[1,2,3,4,5]\") == \"3\"\nassert solution(\"[1,2,3,4,5]\\n[1,2,3,4,5,6]\") == \"4\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n1 2''') == '1'\nassert solution('''1 2\n1 1''') == '2'\nassert solution('''5 10\n1 5\n2 5\n3 5\n4 5\n5 5''') == '3'\nassert solution('''5 10\n1 5\n2 5\n3 5\n4 5\n5 5\n6 5\n7 5\n8 5\n9 5\n10 5''') == '4'\nassert solution('''5 10\n1 5\n2 5\n3 5\n4 5\n5 5\n6 5\n7 5\n8 5\n9 5\n10 5\n11 5\n12 5''') == '5'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1,2,3\") == \"1\"\nassert solution(\"1,2,3,4\") == \"2\"\nassert solution(\"1,2,3,4,5,6\") == \"2\"\nassert solution(\"1,2,3,4,5,6,7\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\nassert solution('2\\n3\\n4\\n5\\n6') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') == '2'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == [1, 3, 3, 1, 1]\nassert solution('10') == [1, 4, 6, 4, 1]\nassert solution('0') == []\nassert solution('2') == [1,1,1,1,1]\nassert solution('3') == [1,3,3,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == []\nassert solution('1') == [[1]]\nassert solution('2') == [[1], [1,1]]\nassert solution('3') == [[1], [1,1], [1,2,1]]"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == [1,3,3,1]\nassert solution('''4''') == [1,4,6,4,1]\nassert solution('''5''') == [1,5,10,10,5,1]\nassert solution('''30''') == [1,30,300,930,900,300,30,1]\nassert solution('''33''') == [1,33,333,1134,1134,333,33,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3') == '1'\nassert solution('12') == '3'\nassert solution('15') == '8'\nassert solution('33') == '138'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == []\nassert solution('0') == []\nassert solution('1') == [1]\nassert solution('2') == [1,1]\nassert solution('3') == [1,2,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == [1,3,3,1]\nassert solution('''7''') == [1,7,21,35,35,21,7,1]\nassert solution('''8''') == [1,8,34,91,98,90,34,8,1]\nassert solution('''33''') == [1,3,3,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2,3,4,5,6,7]) == [1,3,6,10,15,21,28]\n\"\"\""
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == [1,3,3,1]\nassert solution('''1''') == [1]\nassert solution('''2''') == [1,2]\nassert solution('''3''') == [1,3,3,1]\nassert solution('''32''') == [1,3,3,1,3,9,9,3,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\n'''\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        '''\n        O(n) space\n        '''\n        if rowIndex == 0:\n            return [1]\n\n        prev = self.getRow(rowIndex - 1)\n        res = [1]\n        for i in range(len(prev) - 1):\n            res.append(prev[i] + prev[i + 1])\n\n        res.append(1)\n        return res\n        "
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([1, 3, 3, 1]) == [1, 3, 3, 1]\nassert solution([0, 1, 3, 3, 1]) == [0, 1, 3, 6, 10]\nassert solution([3, 3, 3, 3]) == [1, 4, 10, 20, 35]\nassert solution([3, 2, 1]) == [1, 3, 3, 1]\nassert solution([1, 2]) == [1, 2]\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10101') == 3\nassert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\nassert solution('1'*100) == 0\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1110001111111111111111111111101\") == 3\nassert solution(\"101101110111111111111111111101\") == 1\nassert solution(\"1010100101000001010100101010010101\") == 31\nassert solution(\"01010101010101010101010101010101\") == 0\nassert solution(\"0100101010101010101010101010101\") == 0\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0b00000000000000000000000000001011) == 3\nassert solution(0b00000000000000000000000010000000) == 1\nassert solution(0b11111111111111111111111111111101) == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"011011101000010111000001010100100001101010000101101001001010010111101000111100\") == 7\nassert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n'''\n\n'''\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100000000000000000000000000001011\") == 3\nassert solution(\"100000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"01011101110100010101110111100101001\") == 4\nassert solution(\"00000000000000000000000000001011\") == 3\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('11') == 2\nassert solution('101') == 3\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0000000000001011\") == 3\nassert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\nassert solution(\"110001110110111111111111111111111110101011101110111101010101100111100111011110111110110111011101110111011111110111110110111110001110110001011000111011111000110111110111100010110111101010101110111010111111101100011101111001101111000111011101101110111011101110110110111011101110111010110101110110111011101110111011011101110111011101011101101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == \"0\"\nassert solution(1) == \"1\"\nassert solution(2) == \"10\"\nassert solution(3) == \"11\"\nassert solution(4) == \"100\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 4') == '2 4 6'\nassert solution('1 2 3 4') == '1 2 4 7'\nassert solution('2 3 4 1') == '2 3 4 2'\nassert solution('0') == '1'\nassert solution('1 2 3 4') == '1 2 4 5'\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"9,9,9\") == \"1,0,0\"\nassert solution(\"9,9,9,9,9\") == \"1,0,0,0,0\""
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"2\"\nassert solution(\"4\") == \"5\"\nassert solution(\"111\") == \"110\"\nassert solution(\"12345\") == \"12345\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10010\") == \"10101\"\nassert solution(\"123\") == \"124\"\nassert solution(\"12345\") == \"123456\"\nassert solution(\"987654321\") == \"987654322\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"3,5,7\") == \"4,3,2,2\"\nassert solution(\"4,7,3,5,8,9,6\") == \"4,7,3,5,8,9,2\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(solution(\"\")) == 0\nassert solution(solution(\"2\")) == 3\nassert solution(solution(\"9999999999999\")) == 1000000000\nassert solution(solution(\"10000000001001\")) == 10000000000001001\nassert solution(solution(\"1111111111111111\")) == 1000000000000000000000000000000000000000000001\n\n\"\"\"\n\n\"\"\"\nCounting sort solution\n\"\"\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([1,2,3,4,5,6,7,8,9,0]) == [1,2,3,4,5,6,7,8,9,10]\nassert solution([]) == None"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"42\") == \"43\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1234\") == \"12345\"\nassert solution(\"49\") == \"50\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n''') == '''\n1\n2\n3\n4\n'''\n\nassert solution('''\n4\n3\n2\n1\n''') == '''\n4\n3\n2\n2\n'''\n\nassert solution('''\n123\n123\n123\n''') == '''\n123\n123\n124\n'''\n\nassert solution('''\n123456789\n123456789\n123456789\n''') == '''\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n'''\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('4,3,2,1') == '4,3,2,2'\nassert solution('123') == '124'\nassert solution('456') == '457'\nassert solution('1,0,0,0') == '1,0,0,1'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 5') == '8'\nassert solution('3 4') == '7'\nassert solution('2 1') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('-3 1') == '-2'\nassert solution('-1 3') == '-3'\nassert solution('-2 0') == '2'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-3 1') == '4'\nassert solution('3 1') == '4'\nassert solution('-3 5') == '-2'\nassert solution('3 5') == '-2'\nassert solution('-3 5') == '-2'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 3') == '6'\nassert solution('3 -3') == '0'\nassert solution('-3 -3') == '0'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 1') == '4'\nassert solution('3 1') == '4'\nassert solution('3 1') == '4'\nassert solution('1 2') == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == '4'\nassert solution('-1 -2') == '-1'\nassert solution('2 1') == '4'\nassert solution('0 0') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"5 1\") == \"7\"\nassert solution(\"5 1\") == \"7\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"5 1\") == \"7\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n') == '3'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n') == '3'\nassert solution('1 10\\n0 1\\n0 0\\n1 1\\n1 -1\\n') == '1'\nassert solution('1 10\\n0 1\\n0 0\\n1 1\\n1 -1\\n') == '1'\nassert solution('5 10\\n-1 -1\\n-2 -2\\n-3 -3\\n-4 -4\\n-5 -5\\n') == '5'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == '3'\nassert solution('0 5') == '0'\nassert solution('-2 4') == '1'\nassert solution('3 4') == '1'\nassert solution('4 -4') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''5 5\n-2 4\n3 4\n4 -4\n-3 -1''') == '2'\nassert solution('''4 4\n1 1\n3 3\n0 0\n-3 -1''') == '4'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '10'\nassert solution('''10 10\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('5\\n5\\n5\\n5\\n5') == '1'\nassert solution('2\\n1\\n1\\n1') == '2'\nassert solution('5\\n5\\n5\\n5\\n5') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('1 1\\n0 0') == '1'\nassert solution('1 2\\n1 2\\n2 1') == '0'\nassert solution('2 2\\n0 1\\n1 0') == '1'\nassert solution('5 2\\n-1 4\\n3 4\\n1 -4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 4\\n') == '1'\nassert solution('1 1\\n') == '0'\nassert solution('2 2\\n') == '1'\nassert solution('1 2\\n') == '0'\nassert solution('1 1\\n') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''10 1\n-3 2\n-5 -5\n-2 3\n-4 3\n-4 1\n1 3\n-4 -3\n-3 -3\n-4 -1\n3 -3''') == '8'\nassert solution('''1 1\n1 1\n-1 -1\n-1 -1''') == '2'\nassert solution('''10 1\n-3 2\n-5 -5\n-2 3\n-4 3\n-4 1\n1 3\n-4 -3\n-3 -3\n-4 -1\n3 -3''') == '8'\nassert solution('''3 4\n0 0\n-1 -1\n3 3\n2 1\n1 -1\n-3 1\n-3 -1\n-3 -3\n1 3\n0 -1\n1 -3\n3 -2''') == '8'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n12\n'''\n) == 'Yes'\n\nassert solution(\n'''\n4\n'''\n) == 'Yes'\n\nassert solution(\n'''\n39\n'''\n) == 'No'\n\nassert solution(\n'''\n100\n'''\n) == 'No'\n\nassert solution(\n'''\n24\n'''\n) == 'Yes'"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == 'Yes'\nassert solution('''123''') == 'No'\nassert solution('''1234''') == 'Yes'\nassert solution('''666''') == 'Yes'\nassert solution('''2345''') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\nassert solution('11') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(1234) == \"Yes\"\nassert solution(24) == \"No\"\nassert solution(5) == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"27\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1000000\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('121') == 'No'\nassert solution('-121') == 'Yes'\nassert solution('-892') == 'Yes'\nassert solution('-929') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12390\") == \"No\"\nassert solution(\"1240\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('17') == 'No'\nassert solution('29') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('44') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\"\nassert solution(\"3\\n3 5 -1\\n2\\n1\") == \"8\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 5 -1\n\"\"\") == \"\"\"12\n8\n10\"\"\"\n\nassert solution(\"\"\"5\n4 2 -1 -1 1\n\"\"\") == \"\"\"12\n6\n10\n14\n18\n22\n24\"\"\"\n\nassert solution(\"\"\"6\n-1 2 -1 -1 1 -1\n\"\"\") == \"\"\"12\n6\n10\n14\n18\n22\n26\n\"\"\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n2 3 -1') == '12\\n8\\n10\\n8'\nassert solution('3\\n3 5 -1\\n2 3 -1\\n1 2 -1') == '12\\n8\\n10\\n8\\n4'\nassert solution('3\\n3 5 -1\\n2 3 -1\\n1 2 -1\\n4 5 -1') == '12\\n8\\n10\\n8\\n4\\n10'\nassert solution('3\\n3 5 -1\\n2 3 -1\\n1 2 -1\\n4 5 -1\\n3 4 -1\\n2 3 -1\\n1 2 -1\\n4 5 -1') == '12\\n8\\n10\\n8\\n4\\n10\\n8\\n4\\n10\\n8'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('4\\n3 5 -1 4') == '12\\n8\\n10\\n10'\nassert solution('6\\n3 5 -1 4 6 7') == '12\\n8\\n10\\n10\\n10\\n10'\nassert solution('1\\n-1') == '0\\n0'\nassert solution('3\\n3 5 -1') == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('1\\n-1') == '0\\n0'\nassert solution('2\\n1 1') == '1\\n0'\nassert solution('3\\n3 3 -1') == '0\\n0\\n0'\nassert solution('3\\n5 -1') == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n1') == '0\\n1\\n1'\nassert solution('1\\n1') == '0\\n1\\n1'\nassert solution('1\\n0') == '0\\n0\\n0'\nassert solution('1\\n2') == '1\\n3\\n0'\nassert solution('2\\n2') == '0\\n0\\n0'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 5 -1\") == \"12\"\nassert solution(\"2\\n3 5 -1\\n5 4 2\") == \"8\"\nassert solution(\"2\\n3 5 -1\\n5 4 2\\n4 3 3\") == \"10\"\nassert solution(\"1\\n1 1\") == \"0\"\nassert solution(\"4\\n4 1 3 2\") == \"10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 -1\\n5 -1\\n5 -1\") == \"12\"\nassert solution(\"3\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\nassert solution(\"3\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\nassert solution(\"10\\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10\\n\") == \"24\"\nassert solution(\"3\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"8\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"a\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == \"vowel\"\nassert solution('e') == \"vowel\"\nassert solution('i') == \"vowel\"\nassert solution('o') == \"vowel\"\nassert solution('u') == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == \"vowel\"\nassert solution('b') == \"consonant\"\nassert solution('c') == \"vowel\"\nassert solution('d') == \"consonant\"\nassert solution('e') == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''BBBWW''') == '1'\nassert solution('''BBBWWWWWW''') == '0'\nassert solution('''WBBWWWWWW''') == '0'\nassert solution('''WWWWBBWWWW''') == '2'\nassert solution('''WWWWBBWWWWWWW''') == '2'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWWWWWWWWW\") == \"0\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWW\") == \"1\"\nassert solution(\"BBBWWWW\") == \"4\"\nassert solution(\"BBBWWWWW\") == \"3\"\nassert solution(\"BBBBWWWWWWWWW\") == \"0\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == 1\nassert solution('WWBBBB') == 2\nassert solution('WWBBBBWW') == 2\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"WWWWBWWWWW\") == 3\nassert solution(\"WWWWBBWWWWWWWWWW\") == 2\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWBBWWWW\") == \"4\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('BBBWW') == '1'\nassert solution('BBBBBB') == '0'\nassert solution('WWWWWBWWWWWW') == '11'\n'''\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == 1\nassert solution('WWWBBBBWW') == 0\nassert solution('WWWBBBBWWWW') == 1\nassert solution('BBBWWWWWWWW') == 0\nassert solution('WWBBWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('BBBWW') == '1'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBWWW') == '2'\nassert solution('BBBB') == '0'\nassert solution('BBBBWW') == '3'\nassert solution('WWWWBBBWWWWWW') == '4'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('3 21') == 'Yes'\nassert solution('4 25') == 'No'\nassert solution('3 5') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 21') == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 21') == \"Yes\"\nassert solution('2 100') == \"No\"\nassert solution('1 100') == \"No\"\nassert solution('1 2') == \"No\"\nassert solution('1 1') == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('9 49') == 'No'\n'''\n\nimport sys"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\n\nassert solution(\"3 18\") == \"No\"\n\nassert solution(\"1 3\") == \"Yes\"\n\nassert solution(\"2 1\") == \"No\"\n\nassert solution(\"1 1\") == \"Yes\""
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 25') == 'No'\nassert solution('8 11') == 'Yes'\nassert solution('1 22') == 'No'\nassert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('12 1') == 'No'"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\nassert solution('3 1 4 1 5 9') == '4'\nassert solution('2 5 4 6 4') == '1'\nassert solution('2 1 4 1 5 9') == '2'\nassert solution('2 1 4 1 5') == '1'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('3\\n1') == '0'\nassert solution('4\\n1') == '0'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 1 4 1 5 9 2\") == \"\"\nassert solution(\"3 1 4 1 5 9 2\") == \"4\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '2'\nassert solution('5\\n1 4 3 2 1\\n') == '3'\nassert solution('4\\n1 3 2 2\\n') == '4'\nassert solution('3\\n1 2 1\\n') == '1'\nassert solution('2\\n1 1\\n') == '1'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 1 4 1 5 9 2') == '4'\nassert solution('5\\n3 1 4 1 5 9 2') == '2'\nassert solution('6\\n3 1 4 1 5 9 2') == '3'\nassert solution('7\\n3 1 4 1 5 9 2') == '3'\nassert solution('8\\n3 1 4 1 5 9 2') == '3'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 4 1 5 9 2\\n') == '4\\n'\nassert solution('2\\n2 2\\n') == '1\\n'\nassert solution('7\\n3 1 4 1 5 9 2\\n') == '4\\n'\nassert solution('3\\n3 2 1\\n') == '2\\n'\nassert solution('7\\n7 6 5 4 3 2 1\\n') == '6\\n'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4') == '5'\nassert solution('3 2\\n2') == '2'\nassert solution('2 1\\n1') == '1'\nassert solution('1 1\\n1') == '0'\nassert solution('1 3\\n3') == '2'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n4\\n') == '5'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '1'\nassert solution('2\\n1\\n') == '1'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n') == '5'\nassert solution('3\\n1\\n') == '0'\nassert solution('3\\n5\\n') == '0'\nassert solution('3\\n3\\n') == '3'\nassert solution('3\\n2\\n') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3\\n4'\n) == '5'\nassert solution(\n    '1\\n1'\n) == '0'\nassert solution(\n    '1\\n1'\n) == '0'\nassert solution(\n    '2\\n5'\n) == '10'\nassert solution(\n    '4\\n0'\n) == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"3\\n0\") == \"0\"\nassert solution(\"3\\n20\") == \"9\"\nassert solution(\"3\\n5\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\") == \"5\"\nassert solution(\"3\\n4\") == \"8\"\nassert solution(\"3\\n5\") == \"7\"\nassert solution(\"3\\n6\") == \"10\"\nassert solution(\"5\\n5\") == \"10\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4''') == '5'\nassert solution('''3\n1''') == '0'\nassert solution('''8\n25''') == '10'\nassert solution('''1\n1''') == '0'\nassert solution('''4\n1''') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 6 6') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 1') == 'NO'\nassert solution('1 3 1') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4 6''') == 'YES'\nassert solution('''1 2 3''') == 'NO'\nassert solution('''1 2 2''') == 'NO'\nassert solution('''2 2 1''') == 'NO'\nassert solution('''2 1 2''') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 4\") == \"NO\"\nassert solution(\"2 3 6\") == \"YES\"\nassert solution(\"-1 1 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == \"YES\"\nassert solution('2 4 5') == \"NO\"\nassert solution('2 4 6') == \"YES\"\nassert solution('4 5 3') == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"5 10 4\") == \"NO\"\nassert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 5 3\") == \"NO\"\nassert solution(\"2 5 4\") == \"NO\"\nassert solution(\"3 5 3\") == \"NO\"\nassert solution(\"5 5 5\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"4 3 6\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 3 4\") == \"YES\"\nassert solution(\"2 2 2\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"3 4 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"2 2 2\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('09') == 'No'\nassert solution('2909') == 'Yes'\nassert solution('0909') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'No'\nassert solution('999') == 'Yes'\nassert solution('999') == 'No'\nassert solution('999') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(11) == \"No\"\nassert solution(123) == \"Yes\"\nassert solution(1234) == \"No\"\nassert solution(2345) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"29\") == \"No\"\nassert solution(\"29\") == \"No\"\nassert solution(\"29\") == \"Yes\""
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('999') == 'No'\nassert solution('99') == 'Yes'\nassert solution('999') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('9') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('111') == 'No'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(293) == \"Yes\"\nassert solution(293) == \"No\"\nassert solution(29) == \"No\"\nassert solution(109) == \"No\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'\nassert solution('32') == 'No'\nassert solution('15') == 'Yes'\nassert solution('5') == 'No'\nassert solution('9') == 'Yes'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 3 3') == '1'\nassert solution('3 4 4') == '3'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 4') == '1'\nassert solution('5 3 3') == '1'\nassert solution('1 2 4 1') == '2'\nassert solution('1 3 1') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 3 3\n1 2 4''') == '1'\nassert solution(\n'''5 2 3\n1 2 4''') == '-1'\nassert solution(\n'''4 1 2\n1 2 4''') == '-1'\nassert solution(\n'''10 1 2\n1 2 4''') == '-1'\nassert solution(\n'''10 1 2\n1 2 4''') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('5 4 2') == '1'\nassert solution('4 5 2') == '1'\nassert solution('3 4 2') == '3'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'\nassert solution('5 3 3\\n1 2 4\\n1 2 3') == '2'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n1 2 3') == '3'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n1 2 3\\n1 2 3') == '6'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3') == '9'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n\"\"\""
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('4 5 5') == '1'\nassert solution('5 10 10') == '1'\nassert solution('100 100 100') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'\nassert solution('5 3 3\\n1 2 3') == '4'\nassert solution('10 3 4\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('10 5 1\\n1 2 3 4 5 6 7 8 9 10') == '3'\nassert solution('10 5 1\\n1 2 3 4 5 6 7 8 9 10') == '10'\n\"\"\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n.#.\") == \"Yes\"\nassert solution(\"2 2\\n..\\n..\") == \"Yes\"\nassert solution(\"1 1\\n#\") == \"No\"\nassert solution(\"1 1\\n#.\") == \"No\"\nassert solution(\"2 2\\n#.\\n.#\") == \"Yes\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n.#.\") == \"Yes\"\nassert solution(\"2 3\\n...\\n...\\n...\\n...\") == \"No\"\nassert solution(\"4 3\\n.#.\\n.#.\\n.#.\\n.#.\") == \"No\"\nassert solution(\"4 4\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\") == \"Yes\"\nassert solution(\"5 5\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''2 3\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''5 2\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert stdin == '3 3\\n..#\\n.#.\\n.#.\\n.#.'\nprint(solution(stdin))\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('#.\\n#.\\n###') == 'Yes'\nassert solution('#.#\\n###\\n.#.') == 'No'\nassert solution('#.#\\n.#.#\\n.#.#') == 'No'\nassert solution('#.#\\n.#.#\\n.#.#') == 'No'\nassert solution('#.#\\n.#.#\\n.#.#') == 'No'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3\\n\" +\n    \"#.#\\n\" +\n    \"###\\n\" +\n    \"#.#\\n\") == \"Yes\"\nassert solution(\n    \"3 3\\n\" +\n    \".#.\\n\" +\n    \"#.#\\n\") == \"No\"\nassert solution(\n    \"3 3\\n\" +\n    \"###\\n\" +\n    \"#.#\\n\") == \"No\"\nassert solution(\n    \"3 3\\n\" +\n    \"#.#\\n\" +\n    \".#.\\n\" +\n    \"#.#\") == \"Yes\"\nassert solution(\n    \"3 3\\n\" +\n    \"#.#\\n\" +\n    \"###\\n\" +\n    \".#.\\n\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n.#.\\n###\\n.#.') == 'Yes'\nassert solution('3 3\\n.#.\\n###\\n.#.') == 'No'\nassert solution('2 2\\n.#\\n.#') == 'No'\nassert solution('3 3\\n.\\n.\\n') == 'Yes'\nassert solution('3 3\\n.#\\n.#\\n') == 'No'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('#.#'\n    '#.#'\n    '#.#'\n    ) == 'Yes'\nassert solution('#.#'\n    '#.#'\n    '###'\n    ) == 'No'\nassert solution('##..'\n    '##..'\n    '##..'\n    ) == 'No'\nassert solution('#...'\n    '#...'\n    '#...'\n    ) == 'Yes'\nassert solution('##.#'\n    '##.#'\n    '##.#'\n    ) == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 30') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('10 1 1') == 'Yes'\nassert solution('10 30 30') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 10') == 'No'\nassert solution('10 30 5') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 30 10\") == \"No\"\nassert solution(\"100 30 10\") == \"Yes\"\nassert solution(\"100 30 30\") == \"No\"\n\nprint(solution(\"10 30 10\"))\nprint(solution(\"10 30 30\"))\nprint(solution(\"100 30 30\"))\nprint(solution(\"100 30 10\"))\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"100 101 102\") == \"No\"\nassert solution(\"50 50 50\") == \"Yes\"\nassert solution(\"5 5 5\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('10 30 20') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('2 3 1') == 'No'\nassert solution('3 1 2') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n\nassert solution(input()) == 'No'\n\"\"\"\n\na, b, c = map(int, input().split())\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"10 30 10\") == \"No\"\nassert solution(\"100 30 100\") == \"Yes\"\nassert solution(\"100 30 90\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 30') == 'No'\nassert solutionn\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na, b, c = [int(n) for n in stdin.strip().split()]"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 5 5\") == \"Yes\"\nassert solution(\"2 2 2\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"100 100 100\") == \"No\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 4 3 2\") == \"Right\"\nassert solution(\"3 5 2 1\") == \"Balanced\"\nassert solution(\"8 3 9 6\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 8 5 1') == 'Right'\nassert solution('3 8 1 7') == 'Left'\nassert solution('3 1 8 7') == 'Right'\nassert solution('3 1 7 8') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 6 2 2') == 'Right'\nassert solution('3 4 5 5') == 'Left'\nassert solution('3 4 4 5') == 'Balanced'\nassert solution('2 1 2 2') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 7 1\") == \"Left\"\nassert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"3 7 5 9\") == \"Right\"\nassert solution(\"1 2 3 4\") == \"Balanced\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 8 7 1''') == \"Left\"\nassert solution('''3 8 7 2''') == \"Right\"\nassert solution('''3 8 7 3''') == \"Balanced\"\n'''\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"1 2 3 4 5\") == \"Right\"\nassert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 7 1 2\") == \"Right\"\nassert solution(\"3 8 7 1 2 3\") == \"Balanced\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('8 6 5 4') == 'Right'\nassert solution('8 8 8 8') == 'Balanced'\nassert solution('7 1 7 1') == 'Left'\nassert solution('7 1 6 1') == 'Right'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\nassert solution(\n    \"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\nassert solution(\n    \"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\nassert solution(\n    \"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\nassert solution(\n    \"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1'''\n) == \"8\"\nassert solution(\n'''3\n1 1 0 1 0 0 0 1 0 1'''\n) == \"8\"\nassert solution(\n'''3\n1 1 0 1 0 0 0 1 0 1'''\n) == \"8\"\nassert solution(\n'''3\n1 1 0 1 0 0 0 1 0 1'''\n) == \"8\"\nassert solution(\n'''3\n1 1 0 1 0 0 0 1 0 1'''\n) == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2'''\n) == '8'\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2'''\n) == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"data/boolean_constraints.in\", \"r\").read()) == \"1\\n\"\n\"\"\""
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\n\"\"\"\n\n\"\"\"\nSolved\nThis problem is simply a simple integer division\n\"\"\""
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nprint(solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n3 4 5 6 7 8 9 -2 -3 4 -2'))\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n3 4 5 6 7 8 9 -2 -3 4 -2''') == '24'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('299-6650') == 'No'\nassert solution('299-6650A') == 'No'\nassert solution('299-6650-A') == 'No'\nassert solution('299-6650-B') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('-') == 'No'\nassert solution('-1') == 'No'\nassert solution('abc') == 'No'\nassert solution('1-') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('-269-6650') == 'No'\nassert solution('-4-3') == 'No'\nassert solution('-4-3A') == 'No'\nassert solution('-4-3AB') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('109-2436') == 'No'\nassert solution('109-9076') == 'Yes'\nassert solution('109-0987') == 'No'\nassert solution('109-2335') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n269-6650') == 'Yes'\nassert solution('3 4\\n542-8726') == 'No'\nassert solution('3 4\\n-1-2-3') == 'No'\nassert solution('3 4\\n0-6-1') == 'No'\nassert solution('3 4\\n-2-1-0') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4''') == 'Yes'\nassert solution('''-0 3''') == 'No'\nassert solution('''1 2''') == 'No'\nassert solution('''-11-2''') == 'Yes'\nassert solution('''-3-2''') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'Yes'\nassert solution('2696-6650') == 'Yes'\nassert solution('269-6650') == 'No'\nassert solution('-266-6650') == 'No'\nassert solution('266-6650') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n269-6650') == 'Yes'\nassert solution('5 1\\n11223344') == 'No'\nassert solution('3 4\\n1234-988') == 'No'\nassert solution('3 2\\n0222-4455') == 'No'\nassert solution('3 4\\n0222-4455') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"3 4\\n69-6650\") == \"No\"\nassert solution(\"3 4\\n696650\") == \"No\"\nassert solution(\"3 4\\n19-6650\") == \"No\"\nassert solution(\"3 4\\n196650\") == \"Yes\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 6') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"3 2 4\") == \"0\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 1 1\") == \"0\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('2 1 2') == '1'\nassert solution('3 1 6') == '2'\nassert solution('3 4 4') == '1'\nassert solution('3 2 3') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"6 3 2\") == \"2\"\nassert solution(\"3 4 3\") == \"0\"\nassert solution(\"5 2 4\") == \"2\"\nassert solution(\"3 2 6\") == \"1\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 6\") == 1\nassert solution(\"3 2 6\") == 1\nassert solution(\"3 3 1\") == 0\nassert solution(\"3 1 3\") == 2\nassert solution(\"3 1 6\") == 1\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"2 2 3\") == 1\nassert solution(\"2 4 2\") == 2\nassert solution(\"1 1 1\") == 0\nassert solution(\"2 3 3\") == 1\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('3 8 2') == '3'\nassert solution('3 8 2') == '3'\nassert solution('3 8 2') == '3'\nassert solution('3 8 2') == '3'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('1 2 3') == '1\\n2\\n3'\nassert solution('1 1 1') == '1'\nassert solution('10 9 2') == '3\\n4\\n7\\n9\\n10'\nassert solution('10 9 1') == '3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\n\nprint(solution('3 8 2'))\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 1 10') == '3'\nassert solution('10 9 2') == '10\\n9\\n2'\nassert solution('3 4 5') == '3\\n4'\nassert solution('1 100 1') == '1\\n100'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"5 5 7\") == \"3\\n4\\n5\\n6\\n7\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"3 10 3\") == \"1\\n3\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('2 3 2') == '3'\nassert solution('3 1 3') == '3'\nassert solution('1 9 8') == '1'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 3 3 4\") == \"1\"\nassert solution(\"3 9 3\") == \"1\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\n\"\"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 4\") == \"1\\n2\\n4\"\nassert solution(\"10 100 10\") == \"10\"\nassert solution(\"1 1 10\") == \"10\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 8 2''') == '3'\nassert solution('''3 8 2''') == '3'\nassert solution('''10 9 12''') == '11'\nassert solution('''10 9 12''') == '11'\nassert solution('''3 10 12''') == '3'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner\") == \"ABC\"\nassert solution(\"AtCoder\") == \"AB\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[0]\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('aBCDEf') == 'ABCDE'\nassert solution('aBCdeF') == 'ABCD'\nassert solution('aBCDeF') == 'ABCDE'\nassert solution('aBCDE') == 'ABCDE'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"AtCoder Beginner Contest\"\n) == \"ABC\"\nassert solution(\n    \"B\"\n) == \"B\"\nassert solution(\n    \"Be\"\n) == \"B\"\nassert solution(\n    \"Beginner\"\n) == \"AB\"\nassert solution(\n    \"Beginners\"\n) == \"AB\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[0][0] + stdin.split()[1][0]\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AlgoExpert') == 'Ae'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AlgoExpert') == 'Ae'\nassert solution('AtCoder Beginner') == 'Ae'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1 2') == 'YES'\nassert solution('1 2 2') == 'NO'\nassert solution('2 1 2') == 'NO'\nassert solution('1 2 2 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"YES\"\n\nassert solution(input(\"3 5 4\\n\")) == \"YES\"\n\nassert solution(input(\"3 1 4\\n\")) == \"NO\"\n\nassert solution(input(\"3 1 6\\n\")) == \"YES\"\n\nassert solution(input(\"2 2 2\\n\")) == \"YES\""
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 2 4') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"10 0 6\") == \"NO\"\nassert solution(\"1 10 10\") == \"YES\"\n\"\"\"\n\nA, B, X = [int(i) for i in stdin.split()]"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 2 1') == 'NO'\nassert solution('1 1 3') == 'NO'\nassert solution('2 3 1') == 'YES'\nassert solution('3 3 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 2 1') == 'NO'\nassert solution('1 2 5') == 'NO'\nassert solution('3 2 5') == 'NO'\nassert solution('9 6 2') == 'YES'\n\"\"\"\n\nA, B, X = map(int, input().split())\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 4 4') == 'NO'\nassert solution('3 4 3') == 'YES'\nassert solution('3 4 7') == 'NO'\nassert solution('2 2 6') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 4') == 'YES'\nassert solution('2 1 3') == 'NO'\n\"\"\""
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 17') == '83'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 17') == '83'\nassert solution('100 100') == '0'\nassert solution('0 10') == '0'\nassert solution('1 10') == '10'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100 17\") == \"83\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100 17') == '83'"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100 17') == '83'\n\n\"\"\"\nimport sys\n\nX, t = [int(x) for x in sys.stdin.readline().split()]\n\ntotal = X\nfor _ in range(t):\n    total += X * 1.0\n    X += X * 1.0\n\nprint(round(total))"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 17') == '83'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '83'"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 17') == '83'\nassert solution('1000 17') == '1025'\nassert solution('0 17') == '0'\nassert solution('10 17') == '1025'\nassert solution('0 17') == '0'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '83'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('5') == '-1'\nassert solution('-1') == '-1'\nassert solution
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == -1\nassert solution('1000000000 1000000000') == -1\n\n------------------------------------------------------------------------------------------------------------------------\n\nfrom sys import stdin\nfrom functools import reduce"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000000000 1000000000''') == '1000000000000000000'\nassert solution('''1000000000 1000000000''') == '-1'\nassert solution('''1000000000 1000000000''') == '-1'\nassert solution('''1000000000 1000000000''') == '-1'\nassert solution('''1000000000 1000000000''') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1000000000000000000\"\n\"\"\""
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1000000000000000000\") == \"1000000000000000000\"\nassert solution(\"10000000000000000000\") == \"-1\"\nassert solution(\"1000000000000000\") == \"100000000000000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1000000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1000000000000 1000000000000\") == \"1000000000000000000000000000000\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 0\") == \"0\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\n\n'''\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('0') == 'No'\nassert solution('5') == 'No'\nassert solution('2') == 'Yes'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''2018\n998''') == 'No'\nassert solution('''1008\n6''') == 'No'\nassert solution('''4025\n13''') == 'No'\nassert solution('''1000000000\n1000''') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == 'No'\nassert solution('1 0 1 0') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('2 1 1 1') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('E869120 has A 1-yen coins and infinitely many 500-yen coins.\\n'\n'Determine if he can pay exactly N yen using only these coins.\\n'\n'N\\n'\n'A\\n') == 'Yes'\n\nassert solution('2018\\n'\n'218\\n') == 'Yes'\n\nassert solution('2018\\n'\n'218\\n') == 'Yes'\n\nassert solution('826318\\n'\n'180\\n') == 'No'\n\nassert solution('1000\\n'\n'500\\n') == 'No'"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n\"\"\"\nE869120 has A 1-yen coins and infinitely many 500-yen coins.\n\nDetermine if he can pay exactly N yen using only these coins.\n\n-----Constraints-----\n - N is an integer between 1 and 10000 (inclusive).\n - A is an integer between 0 and 1000 (inclusive).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA\n\n-----Output-----\nIf E869120 can pay exactly N yen using only his 1-yen and 500-yen coins, print Yes; otherwise, print No.\n\n-----Sample Input-----\n2018\n218\n\n-----Sample Output-----\nYes\n\nWe can pay 2018 yen with four 500-yen coins and 18 1-yen coins, so the answer is Yes.\n\n\"\"\"\n\nn, a = map(int, stdin.split())"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('1\\n2') == 'No'\nassert solution('100\\n1') == 'No'\nassert solution('10000\\n1') == 'Yes'\nassert solution('8\\n7') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:3] + stdin[3].upper()\n'''\n\nN = int(input())\nA = int(input())"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('2018\\n56') == 'No'\nassert solution('828\\n418') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) =='safe'"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('1 2 3') == 'dangerous'\nassert solution('1 2 4') == 'dangerous'\nassert solution('1 2 4') == 'dangerous'\nassert solution('5 4 1') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('5 1 1') =='safe'\nassert solution('5 5 1') == 'dangerous'\nassert solution('5 5 5') == 'dangerous'\nassert solution('2 4 5') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 6') == \"safe\"\nassert solution('4 3 8') == \"dangerous\"\nassert solution('2 4 6') == \"dangerous\"\nassert solution('3 3 5') == \"safe\"\nassert solution('5 5 4') == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n        '4 3 6') =='safe'\nassert solution(\n        '4 3 8') == 'dangerous'\nassert solution(\n        '4 3 9') == 'dangerous'\nassert solution(\n        '4 3 10') == 'dangerous'\nassert solution(\n        '4 3 11') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('6 3 4') == 'dangerous'\nassert solution('3 3 4') =='safe'\nassert solution('2 3 1') == 'dangerous'\nassert solution('2 3 1') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 6') == 'dangerous'\nassert solution('1 1 1') =='safe'\nassert solution('1 1 1') =='safe'\nassert solution('0 1 1') =='safe'\nassert solution('0 0 1') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3 6') == \"safe\"\nassert solution('5 5 6') == \"dangerous\"\nassert solution('10 5 6') == \"dangerous\"\nassert solution('3 2 1') == \"safe\"\nassert solution('5 4 3') == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) =='safe'\nassert solution(input()) =='safe'\nassert solution(input()) == 'dangerous'\nassert solution(input()) == 'dangerous'\nassert solution(input()) == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 3 2') == 'dangerous'\nassert solution('4 3 3') == 'delicious'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('10000') == '9999'\n'''"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('12') == '12'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(10) == 9\nassert solution(100) == 81\nassert solution(1000) == 729\nassert solution(10000) == 729\nassert solution(100000) == 729\n\n\"\"\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\nassert solution('100000') == '999999'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(10) == 9\n\nassert solution(0) == 0\n\nassert solution(10^10) == 9\n\nassert solution(10^10 + 1) == 10^10\n\nassert solution(10^100) == 9"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('11') == '9'\nassert solution('14') == '16'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('9') == '9'\nassert solution('10') == '9'\nassert solution('15') == '15'\nassert solution('25') == '25'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10''') == ''\nassert solution('''12''') == ''\nassert solution('''0''') == ''\nassert solution('''-1''') == ''\nassert solution('''1000000''') == ''\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n3\\n3\") == \"0\"\nassert solution(\"3\\n3\\n3\") == \"0\"\nassert solution(\"3\\n1\\n3\") == \"3\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n2 3\n1 1\n3 2'''\n) == \"10\"\nassert solution(\n'''4\n2 3\n1 1\n4 3\n2 3'''\n) == \"14\"\nassert solution(\n'''6\n2 3\n1 1\n6 3\n2 3\n1 1\n4 3'''\n) == \"38\"\nassert solution(\n'''10\n2 3\n1 1\n5 3\n2 3\n1 1\n5 3\n2 3\n1 1\n4 3\n2 3\n1 1\n4 3'''\n) == \"83\"\nassert solution(\n'''100\n2 3\n1 1\n5 3\n2 3\n1 1\n5 3\n2 3\n1 1\n4 3\n2 3\n1 1\n4 3\n2 3\n1 1\n4 3\n2 3\n1 1\n5 3\n2 3\n1 1\n4 3\n2 3\n1 1\n4 3\n2 3\n1 1\n5 3\n2 3\n1 1\n4 3'''\n) == \"1208\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''5\n2 3\n1 1\n3 2\n4 2\n1 1''') == \"20\"\nassert solution('''7\n2 3\n1 1\n3 2\n4 2\n1 1\n2 1\n5 1\n1 1''') == \"28\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 3\\n1 1\\n3 2') == '10'\nassert solution('3\\n3 3\\n1 1\\n3 2') == '10'\nassert solution('3\\n3 3\\n1 1\\n3 2') == '10'\nassert solution('4\\n2 3\\n1 1\\n3 2') == '4'\nassert solution('4\\n2 3\\n1 1\\n3 2') == '4'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''4\n8 10\n7 1\n7 2\n8 3\n1 5\n1 4\n1 3\n1 2\n4 2\n1 1\n4 3\n''') == '23'\nassert solution('''2\n1 1\n1 1\n''') == '1'\nassert solution('''4\n9 9\n1 1\n9 7\n1 5\n7 5\n9 9\n1 1\n1 9\n1 1\n1 1\n''') == '15'\nassert solution('''6\n6 6\n1 5\n5 4\n4 3\n3 2\n2 1\n1 1\n''') == '26'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 1\\n3 2\\n\") == \"10\"\nassert solution(\"2\\n3\\n1 1\\n\") == \"10\"\nassert solution(\"1\\n1\\n1 1\\n\") == \"10\"\nassert solution(\"1\\n3\\n2 2\\n\") == \"20\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == \"yes\"\nassert solution('uncopyrightable') == \"yes\"\nassert solution('cope%') == \"no\"\nassert solution('uncopyrightable') == \"yes\"\nassert solution('uncopyrightable') == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == 'no'\nassert solution('uncopyrightableaa') == 'no'\nassert solution('uncopyrightableab') == 'yes'\nassert solution('uncopyrightableabc') == 'yes'\nassert solution('uncopyrightable') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('AbCd') == 'no'\nassert solution('zzz') == 'no'\nassert solution('c') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\nassert solution('uncopyrightable') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('uncopyrightable') == \"no\"\nassert solution('uncopyrightable') == \"no\"\nassert solution('uncopyrightable') == \"no\"\nassert solution('uncopyrightable') == \"no\"\nassert solution('uncopyrightable') == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'yes'\nassert solution('ab') == 'no'\nassert solution('abc') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyzab') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"\nassert solution(\"difficult\") == \"no\"\nassert solution(\"indifficult\") == \"yes\"\nassert solution(\"medicine\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'yes'\nassert solution('asdf') == 'yes'\nassert solution('abcd') == 'no'\nassert solution('asdfasdfasdf') == 'yes'\nassert solution('asdf asdf asdf') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'no'\nassert solution('a') == 'yes'\nassert solution('abc') == 'no'\nassert solution('bac') == 'yes'\nassert solution('cab') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"no\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"yes\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcd\") == \"no\"\nassert solution(\"a\") == \"yes\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\") == \"no\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"EWEWEW\") == \"0\"\nassert solution(\"EWEWWE\") == \"1\"\nassert solution(\"WEEWWE\") == \"1\"\nassert solution(\"WEEWEE\") == \"2\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nWEEWW''') == '1'\nassert solution('''3\nEEEEE''') == '0'\nassert solution('''10\n
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\nWEEWW''') == '1'\nassert solution('''2\nEW''') == '0'\nassert solution('''3\nWWE''') == '1'\nassert solution('''4\nWWE''') == '2'\nassert solution('''10\nEEWWE''') == '9'\n'''\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 1\nassert solution('W') == 0\nassert solution('WEEWW') == 1\nassert solution('WEW') == 0\nassert solution('WE') == 1\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n-----Add your code here before the return-----\n\nfrom sys import stdin"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"WEEEEWE\") == \"1\"\nassert solution(\"WEEWEEEWE\") == \"2\"\nassert solution(\"WEEWEEEWE\") == \"2\"\nassert solution(\"WEEWWEEWEE\") == \"1\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEW') == '1'\nassert solution('WE') == '1'\nassert solution('WE') == '1'\nassert solution('E') == '0'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('WEEWW') == \"1\"\nassert solution('WEEDWEED') == \"2\"\nassert solution('EEWEEN') == \"5\"\nassert solution('NEENEE') == \"0\"\nassert solution('WEENWEENWEENWEEN') == \"3\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEENWE') == '0'\nassert solution('WEENWEENWE') == '3'\nassert solution('WEENWEENWEENWE') == '2'\nassert solution('EEWENEWNEENWEENEWNWE') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWEW') == '1'\nassert solution('WEEEE') == '1'\nassert solution('WEEEEW') == '1'\nassert solution('EEWEENEEEWEEWEE') == '2'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('2 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 1\\n1 1\\n1 1') == '0\\n0\\n0\\n0'\nassert solution('4 5\\n2 3\\n3 1\\n1 4\\n4 5') == '2\\n3\\n1\\n1\\n1'\nassert solution('1 2\\n1 3\\n1 4\\n2 4') == '3\\n2\\n1\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''6 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n3 4\n4 5\n5 6''') == '5\\n4\\n3\\n2\\n1\\n'\nassert solution('''8 2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '3\\n3\\n3\\n2\\n2\\n2\\n'\nassert solution('''8 2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '3\\n3\\n3\\n2\\n2\\n2\\n2\\n'\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n8 10\n9 10\n9 11\n''') == '6\\n6\\n6\\n6\\n6\\n6\\n'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\n'''\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"2\\n2\\n\"\nassert solution(\"4 1\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n1\\n1\\n0\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"2\\n2\\n\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\nassert solution('''4 5\n1 2\n2 3\n1 3\n1 4\n2 4\n''') == '2\\n2\\n2\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 3\n1 4\n2 4\n''') == '2\\n2\\n2\\n1'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 1\n3 1\n''') == '2\\n2\\n2\\n1'\n'''\n\n'''\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == \"2\\n2\\n1\\n1\"\nassert solution('''2 3\n1 2\n1 3''') == \"2\\n1\"\nassert solution('''3 3\n1 2\n2 3\n1 4''') == \"2\\n2\\n1\"\nassert solution('''2 4\n1 2\n2 3\n2 4''') == \"2\\n2\\n1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"3 4\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"3 4\\n1 3\\n2 3\\n1 4\") == \"2\\n2\\n2\\n1\"\nassert solution(\"3 4\\n1 4\\n2 3\\n1 4\") == \"2\\n2\\n2\\n1\"\nassert solution(\"3 4\\n1 3\\n2 3\\n3 4\") == \"2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\n\n\"\"\""
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n1 3\\n2 3') == '2\\n2\\n2\\n1'\nassert solution('1 2\\n2 3\\n2 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n1 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n2 3\\n2 4\\n1 3') == '2\\n2\\n2\\n2'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\nassert solution('''\n5\n3\n5\n5\n5\n''') == '30'\nassert solution('''\n6\n5\n10\n10\n10\n15\n''') == '40'\nassert solution('''\n6\n5\n10\n10\n10\n15\n''') == '40'\nassert solution('''\n6\n5\n10\n10\n10\n15\n''') == '40'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('4\\n5\\n10\\n15\\n') == '30'\nassert solution('3\\n5\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"25\"\nassert solution(\"10\") == \"30\"\nassert solution(\"15\") == \"30\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n5\\n10\\n15\\n') == 25\nassert solution('1\\n1\\n1\\n1\\n') == 1\nassert solution('2\\n1\\n2\\n2\\n') == 2\nassert solution('3\\n1\\n2\\n2\\n') == 2\nassert solution('4\\n1\\n2\\n2\\n3\\n') == 4\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    3\n    5\n    10\n    15\n    '''\n    ) == '25'\n\nassert solution(\n    '''\n    2\n    8\n    10\n    15\n    '''\n    ) == '30'\n\nassert solution(\n    '''\n    3\n    7\n    8\n    10\n    15\n    '''\n    ) == '25'\n\nassert solution(\n    '''\n    1\n    7\n    8\n    10\n    15\n    '''\n    ) == '30'\n\nassert solution(\n    '''\n    2\n    7\n    8\n    10\n    15\n    '''\n    ) == '25'"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 1 1 1 1 1') == '100'\nassert solution('6\\n1 1 1 1 1 1\\n2 2 2 2 2 2 2') == '300'\nassert solution('3\\n5\\n10') == '25'\nassert solution('3\\n5\\n10\\n15') == '25'\nassert solution('3\\n5\\n10\\n15\\n20') == '35'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0\\n0\") == \"0\"\nassert solution(\"2\\n0\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n0\") == \"1\"\nassert solution(\"3\\n4\\n5\\n6\") == \"15\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"3\\n5\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n10\\n15\\n\") == 25\nassert solution(\"2\\n10\\n15\\n\") == 30\nassert solution(\"3\\n5\\n10\\n15\\n\") == 25\nassert solution(\"4\\n5\\n10\\n15\\n\") == 30\nassert solution(\"5\\n5\\n10\\n15\\n\") == 25\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n\"\"\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcde') == 1\nassert solution('aabbca') == 2\nassert solution('aabcde') == 1\nassert solution('aa') == 2\nassert solution('a') == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aabca') == '2'\nassert solution('aaabbbcccaa') == '6'\nassert solution('abcabcabcabc') == '6'\nassert solution('abcabcabc') == '3'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcab\") == 2\nassert solution(\"abc\") == 2\nassert solution(\"\") == 0\nassert solution(\"abcd\") == 1\nassert solution(\"aabbcd\") == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbca') == 2\nassert solution('cabbac') == 3\nassert solution('abcabc') == 1\nassert solution('aaaaaa') == 1\nassert solution('abcdef') == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabbca') == '2'\nassert solution('abccbc') == '3'\nassert solution('abc') == '1'\nassert solution('abcdef') == '2'\nassert solution('abcdffg') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aaabbca') == '2'\nassert solution('aabbcaa') == '3'\nassert solution('aabbcaaab') == '2'\nassert solution('aabbcaaabab') == '4'\nassert solution('aaaaaaa') == '5'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aaabcdd') == '3'\nassert solution('aaacdd') == '3'\nassert solution('aaacdddd') == '3'\nassert solution('aaaaa') == '1'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('aabbca') == 2\nassert solution('aabbcc') == 2\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('aabbcddeefghi') == 26\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabbca') == 2\nassert solution('aabbcaa') == 1\nassert solution('abcdabcd') == 1\nassert solution('abcdabcdabcd') == 1\nassert solution('abcabcabcd') == 2\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aabbca\") == 2\nassert solution(\"aaaaa\") == 1\nassert solution(\"bbbbb\") == 0\nassert solution(\"abcabc\") == 1\nassert solution(\"baaab\") == 2\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunn') == 'Sunny'\n\nprint('Testcase 1: Pass')\nprint('Testcase 2: Pass')\nprint('Testcase 3: Pass')\nprint('Testcase 4: Pass')\nprint('Testcase 5: Pass')\n'''"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunset') == 'Sunny'\nassert solution('Sunshine') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Cloudy') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunnny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"7 17 120\\n\")) == input(\"119\")"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('7 17 120') == '119'\nassert solution('7 17 10') == '10'\nassert solution('7 17 1') == '7'\nassert solution('7 17 0') == '0'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 17 120\") == \"119\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 17 120''') == '119'\nassert solution('''7 17 120''') == '119'\nassert solution('''7 17 120''') == '119'\nassert solution('''4 2 3''') == '3'\nassert solution('''3 3 2''') == '3'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 17 120') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 10 100\") == \"119\"\nassert solution(\"1 10 200\") == \"199\"\nassert solution(\"7 17 120\") == \"119\"\n\"\"\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == 1\nassert solution(\"8 9 10\") == 1\nassert solution(\"2 4 8\") == 4\nassert solution(\"5 5 10\") == 10\nassert solution(\"5 1 2\") == 5\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 17 120\") == \"119\"\nassert solution(\"5 17 120\") == \"119\"\nassert solution(\"3 11 10\") == \"113\"\nassert solution(\"7 17 120\") == \"119\"\nassert solution(\"9 11 9\") == \"122\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 17 120') == '119'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3800'\nassert solution('5 1') == '2700'\nassert solution('5 2') == '5000'\nassert solution('5 4') == '8000'\nassert solution('5 5') == '14000'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 2') == '7200'\nassert solution('2 1') == '7200'\nassert solution('2 2') == '15000'\nassert solution('3 1') == '7200'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\n\"\"\"\n\n\"\"\"\n-----My Solution-----\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1\n''') == '3800'\n\nassert solution('''1 5\n''') == '2800'\n\nassert solution('''2 1\n''') == '1400'\n\nassert solution('''1 2\n''') == '1300'\n\nassert solution('''2 2\n''') == '2200'"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 3') == '2396'\nassert solution('4 6') == '6720'\nassert solution('10 9') == '1008'\nassert solution('99 1') == '9900'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"6000\"\nassert solution(\"1 3\") == \"9000\"\nassert solution(\"1 4\") == \"12000\"\nassert solution(\"1 5\") == \"15000\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1''') == '3800'\nassert solution('''1 2''') == '1900'\nassert solution('''3 2''') == '2800'\nassert solution('''10 3''') == '5800'\nassert solution('''100 3''') == '9000'\n'''\nimport sys\nsys.setrecursionlimit(100000)\nfrom typing import List\nfrom math import factorial\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '3800'\nassert solution('2 1') == '9200'\nassert solution('5 1') == '90400'\nassert solution('8 2') == '129600'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '3800'\nassert solution('''3 1''') == '6600'\nassert solution('''4 2''') == '8600'\nassert solution('''5 2''') == '11200'\nassert solution('''6 2''') == '13200'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == None\nassert solution('ab') == 'c'\nassert solution('aa') == None\nassert solution('abc') == 'd'\nassert solution('abcd') == 'e'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('regularcontest') == None\nassert solution('a') == 'a'\nassert solution('ab') == 'b'\nassert solution('abc') == 'c'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('abcd') == 'a'\nassert solution('abcdd') == 'b'\nassert solution('abcdde') == 'c'\nassert solution('abcde') == 'd'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"b\"\nassert solution(\"aa\") == None\nassert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"a\") == \"a\"\nassert solution(\"z\") == \"a\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('abcd') == None\nassert solution('abc') == None\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('a' * 10) == 'a' * 10\nassert solution('b' * 10) == 'b' * 10\nassert solution('a' * 100) == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'b'"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('A') == None\nassert solution('abc') == None\nassert solution('abd') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"b\"\n\"\"\"\n\nS = stdin.strip()"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"bacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacb"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n4\\n4\\n3') == '4\\n3\\n3\\n4'\nassert solution('1\\n2\\n3\\n4') == '4\\n3\\n3\\n4'\nassert solution('2\\n1\\n1\\n2') == '2\\n1\\n1\\n2'\nassert solution('2\\n1\\n1\\n3') == '2\\n1\\n1\\n2'\nassert solution('1\\n1\\n1\\n2') == '2\\n1\\n1\\n2'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('5\\n2 5 4 3 2') == '4\\n4\\n3\\n4\\n3'\nassert solution('7\\n1 2 3 4 5 6 7') == '1\\n1\\n1\\n1\\n1\\n1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n4 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''7\n8 9 1 2 3 4 5 6''') == '4\\n3\\n3\\n4'\nassert solution('''8\n9 9 9 9 9 9 9 9''') == '4\\n3\\n3\\n4'\nassert solution('''1\n2 2''') == '1'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('3\\n2 4 4 3') == '4\\n3\\n3'\nassert solution('3\\n1 4 2 3') == '3\\n1\\n1'\nassert solution('2\\n1 4 2 3') == '2\\n1\\n1'\nassert solution('2\\n1 1 1 2 3') == '2\\n1\\n1'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2 4 4 3\") == \"3\\n3\\n3\\n4\"\n\"\"\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 4 4 3''') == '''4\n3\n3\n4'''\nassert solution('''1\n1''') == '''1'''\nassert solution('''5\n1 1 2 2 3''') == '''4\n4\n3\n3\n3\n2'''\nassert solution('''1\n3 2 4 4 3''') == '''3\n2\n2\n2\n2\n1'''\nassert solution('''5\n2 4 4 3 1''') == '''2\n2\n2\n2\n2\n2\n'''\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n4 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('3\\n2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('1\\n2\\n3\\n4') == '4\\n3\\n3\\n4'\nassert solution('2\\n4 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('1\\n2\\n3\\n4') == '4\\n3\\n3\\n4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2\\n2\\n2') == '2'\nassert solution('2\\n1 2\\n2\\n2\\n3\\n3\\n3') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''5\n2 4 4 3 2''') == '4\\n3\\n3\\n4\\n4'\n'''\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2 4 4 3\n''') == '4\\n3\\n3\\n4'\n\nassert solution('''1\n1\n''') == '1\\n'\n\nassert solution('''2\n1 1\n''') == '1\\n1'\n\nassert solution('''3\n2 4 4 3\n''') == '4\\n3\\n3\\n4'\n\nassert solution('''4\n2 4 4 3\n''') == '4\\n3\\n3\\n4'"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"4 1 2 4 2 1\") == 4\nassert solution(\"1 1 1 1 1 1\") == 1\nassert solution(\"1 1 1 1 1\") == 1\nassert solution(\"1 1 1 1 1\") == 1\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\\n1\\n1\"\nassert solution(\"6\\n3 1 2 4 2 1\\n\") == \"2\\n2\\n2\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"0\"\nassert solution(\"2\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == '1'\nassert solution('2 1 2 1') == '1'\nassert solution('2 1 2 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 2 2 1') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n3 1 2 4 2 1''') == '2'\nassert solution('''7\n1 1 1 1 1 1 1''') == '1'\nassert solution('''7\n5 1 1 1 1 1 1''') == '5'\nassert solution('''7\n7 1 1 1 1 1 1''') == '0'\nassert solution('''7\n100000 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n1 2 1 1 1') == '1'\nassert solution('6\\n5 4 1 2 1') == '0'\nassert solution('6\\n1 1 1 1 1') == '0'\nassert solution('6\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3') == '2'\nassert solution('3 1 2 4 2 1') == '2'\nassert solution('1 2 4 1 2 1') == '2'\nassert solution('3 1 2 4 2 1') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('2\\n1 2') == '0'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\n\n'''\nA strip is a line of consecutive identical letters. A strip is a contiguous substring of one or more letters.\nThere are three types of strips:\n - Vertical: all letters in a row are the same.\n - Horizontal: all letters in a column are the same.\n - Diagonal: a diagonal strip consists of two diagonally adjacent letters being the same.\nA strip of size k is a vertical, horizontal, or diagonal strip of size k.\n\nThe goal is to find the number of stripes of size k such that no two stripes are adjacent.\n\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers k and n, where k is the size of the strip and n is the number of stripes.\nThe next line contains n space-separated integers A1, A2,..., AN denoting the stripes of size k formed in the test case.\nOutput\nFor each test case, output a single line containing a single integer, the number of stripes of size k such that no two stripes are adjacent.\n\nConstraints\n1\u2264T\u226410\n1\u2264k\u2264105\n1\u2264n\u2264105\n1\u2264Ai\u2264105\n\nSubtasks\nSubtask #1 (100 points): Original constraints\n\nSample Input\n2\n3 2\n1 2 3\n5 2\n4 1 2 3 4\nSample Output\n1\n0\nExplanation\nFor the first test case, the two adjacent stripes of size 3 are in the row 1.\nFor the second test case, no two adjacent stripes are adjacent.\n\n'''\n\nT = int(input())\nfor _ in range(T):\n    k, n = [int(x) for x in input().split()]\n    l = input().strip()\n    l = [int(x) for x in l.split()]\n    ans = 0\n    for i in range(k-1, len(l)):\n        if l[i] == l[i-1]:\n            ans += 1\n    print(ans)\n\n'''\nYou are given a sequence A of N lowercase letters.\nYou will call a strip of these letters a run if the following properties hold:\n- It contains A as a prefix.\n- It contains A as a suffix.\n- It is one or more (and only one) letter short of the string A.\nFor example, \"abc\" is a run because it is a prefix and a suffix and it is a single letter short of \"abc\".\nGiven a string B, a strip of A is a strip of B if and only if there exists a run of A in B.\nFor example, \"cde\" is a strip of \"abc\" if and only if \"ca\" is a strip of \"abc\".\nYou are given a string B.\nYou can perform at most one of the following operations on B:\n - Split B into two non-empty strings A and B', where A is a strip and B is a run.\n - Join A and B' with a hyphen and rearrange the result.\n - Delete all the characters of B from the front of B.\nReturn the lexicographically smallest result which you can obtain from performing any of the above operations on B.\nFor example:\n   1. \"cde\" is a strip, therefore, \"cde\" is the smallest lexicographically smallest string that can be obtained from A by performing the above operations.\n   2. \"abc\" is a run, therefore, \"abc\" is the smallest lexicographically smallest string that can be obtained from A by performing the above operations.\n   3. \"a\" is a short one letter, therefore, \"a\" is the smallest lexicographically smallest string that can be obtained from A by performing the above operations.\n   4. \"c\" is not a strip or a run, therefore, \"c\" is not the smallest lexicographically smallest string that can be obtained from A by performing the above operations.\n\nNote: The string B has at most 100 letters and at least 2 letters.\n\n-----Input-----\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and B.\nThe next line contains N space-separated strings A1, A2,..., AN.\nThe next line contains a single string B.\n\n-----Output-----\nFor each test case, output a single line containing the smallest lexicographically smallest string that can be obtained from A by performing any of the above operations on B.\n\n-----Sample Input-----\n3\n3 1\nabab\nacac\nbc\nSample Output\nabc\naac\nca\nExplanation\nFor the first test case, the three non-empty strips of A are:\n 1. \"ab\", \"a\" and \"b\"\n 2. \"ab\", \"b\" and \"a\"\n 3. \"a\", \"b\", and \"a\"\nThe strip \"a\" is the smallest lexicographically smallest such strip.\nFor the second test case, the strip \"b\" is the smallest lexicographically smallest such strip.\nFor the third test case, the operation \"c\" is not applicable, so the answer is the same as for the second test case, \"aac\".\n'''\n\n'''\nYou are given a sequence A of N lowercase letters.\nYou are also given a sequence B of M lowercase letters.\nYou can perform at most one of the following operations on B:\n - Delete all the characters of B from the front of B.\n - Choose an index i from 0 to n\u22121 and rearrange the letters in B so that all the characters that are not rearranged are still in the same relative order as they were in A.\nReturn the lexicographically smallest string that can be obtained from A after applying the above two operations on B.\nFor example, consider strings A = \"babc\" and B = \"cab\".\nNow we can perform the following two operations on B:\n - Delete all the characters of B from the front of B.\n - Choose an index i = 2 from 0 to n\u22121 and rearrange the letters in B so that all the characters that are not rearranged are still in the same relative order as they were in A.\n Then, A can become \"bac\" and B is \"cab\".\n\nNote: The strings A and B have the same length and the string A is a permutation of string B.\n\n-----Input-----\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and M.\nThe next line contains M space-separated strings B1, B2,..., BM, where Bi is a string of M lowercase letters.\nThe next line contains a single string A.\n\n-----Output-----\nFor each test case, output a single line containing the smallest lexicographically smallest string that can be obtained from A after applying the"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('3\\n7 2\\n2\\n5\\n10\\n') == '10'\nassert solution('3\\n7 2\\n2\\n5\\n10\\n') == '10'\nassert solution('3\\n7 2\\n2\\n5\\n10\\n') == '10'\nassert solution('3\\n7 2\\n2\\n5\\n10\\n') == '10'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '4'\nassert solution('7 3') == '8'\nassert solution('7 1') == '8'\nassert solution('3 5') == '1'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n7 1\n2\n5\n10\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3\n7 3\n2\n5\n10\n\"\"\") == \"16\"\nassert solution(\"\"\"\n3\n7 5\n2\n5\n10\n\"\"\") == \"20\"\nassert solution(\"\"\"\n3\n7 5\n2\n5\n10\n\"\"\") == \"22\"\nassert solution(\"\"\"\n3\n7 5\n2\n5\n10\n\"\"\") == \"26\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\"\nassert solution(\"1\\n2\\n1\") == \"0\"\nassert solution(\"2\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n4\\n1\\n2\\n3\\n5') == 8\nassert solution('3\\n7 1\\n2\\n5\\n10\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n5') == 24\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == 161936\nassert solution('1\\n100\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 31187596\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 31187596\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\"\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import deque"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n2\n2\n100\n\"\"\") == \"2\"\nassert solution(\"\"\"0\n0\n0\n0\n50\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('1\\n1\\n1\\n100\\n') == '1'\nassert solution('1\\n1\\n1\\n10\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A') == ''\nassert solution('AB') == ''\nassert solution('ABC') == ''\nassert solution('ABCD') == ''\nassert solution('ABCDE') == ''\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 50') == 'No possible solutions'\nassert solution('1 2 2 50') == '2'\nassert solution('2 1 3 50') == 'No possible solutions'\nassert solution('2 1 2 50') == '1'\nassert solution('2 2 3 50') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n500\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n2\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"5 1 1\") == \"1\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n10\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n101\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n101\\n\") == \"0\"\nassert solution(\"2\\n2\\n2\\n101\\n\") == \"0\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\\n4\") == \"0\"\nassert solution(\"2\\n2\\n2\\n100\\n16\") == \"0\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 3 5\") == \"No\"\nassert solution(\"3 3 4\") == \"Yes\"\nassert solution(\"2 2 2\") == \"Yes\"\nassert solution(\"100 100 100\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"5 4 3\") == \"Yes\"\nassert solution(\"1 5 2\") == \"No\"\nassert solution(\"3 2 1\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 4') == 'No'\nassert solution('1 5 5') == 'Yes'\nassert solution('-1 -1 -1') == 'Yes'\nassert solution('1 -1 -1') == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('2 1 5') == 'No'\nassert solution('1 2 2') == 'Yes'\nassert solution('-1 -2 -3') == 'No'\nassert solution('-1 -3 -2') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('3 2 1') == 'No'\nassert solution('-1 -2 -3') == 'Yes'\nassert solution('-3 -2 -1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 3 4\") == \"No\"\nassert solution(\"1 2 2\") == \"Yes\"\nassert solution(\"1 4 3\") == \"No\"\nassert solution(\"1 5 5\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 9 2\") == \"No\"\nassert solution(\"-10 -10 1\") == \"Yes\"\nassert solution(\"-10 1 3\") == \"No\"\nassert solution(\"5 6 7\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('100 1 99') == 'Yes'\nassert solution('1 100 3') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"1 1000\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2 1000\\n11\\n5\\n1\") == \"2\"\nassert solution(\"3 1000\\n11\\n5\\n1\") == \"2\"\nassert solution(\"1 1000\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 10\\n2\\n0') == '0'\nassert solution('1 10\\n2\\n0') == '1'\nassert solution('2 10\\n2\\n0') == '1'\nassert solution('2 10\\n1\\n0') == '2'\nassert solution('3 10\\n2\\n0') == '2'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[29:35]\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('4 1000\\n80\\n120\\n90\\n100\\n110\\n120\\n140\\n160\\n180\\n200\\n') == '7'\nassert solution('3 1000\\n0\\n0\\n0\\n') == '0'\nassert solution('3 1000\\n1\\n1\\n1\\n') == '1'\nassert solution('2 10\\n10\\n1\\n') == '1'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('2 2\\n1 1\\n1 1\\n') == '2'\nassert solution('1 0\\n2 1\\n3 3\\n4 4\\n5 6\\n6 7\\n') == '7'\nassert solution('3 2\\n1 1\\n1 1\\n') == '3'\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''3 1000\n1000\n500\n500\n300\n300\n200''') == '5'\nassert solution('''3 1000\n1000\n500\n500\n300\n300\n200\n200\n300\n300\n300\n200\n200\n200\n200\n300\n300\n300\n200\n200\n200\n200\n200\n200\n300\n300\n300\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n300\n300\n300\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"0\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''3 1000\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '6'\nassert solution('''3 1000\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '6'\nassert solution('''3 1000\n200\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '3'\nassert solution('''3 1000\n1000\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '3'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('3 10\\n100\\n100\\n100') == '3'\nassert solution('3 100\\n100\\n100\\n100') == '3'\nassert solution('3 1000\\n0\\n0\\n0') == '0'\nassert solution('0 1\\n1') == '0'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\nassert solution('''1\na\n''') == '1'\nassert solution('''1\nb\n''') == '1'\nassert solution('''1\nb\n''') == '1'\nassert solution('''2\na\nb\n''') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\napple:orange:apple') == \"2\"\nassert solution('1\\n') == \"1\"\nassert solution('3\\na:b:c\\na:b:c\\na:b:c') == \"3\"\nassert solution('5\\na:b:c:d:e\\na:b:c:d:e\\na:b:c:d:e\\na:b:c:d:e') == \"5\"\nassert solution('1\\na:b:c\\na:b:c\\na:b:c') == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\napple\norange\napple\n''') == '2'\nassert solution('''1\nA\n''') == '1'\nassert solution('''10\nasdfghjkl\n''') == '10'\nassert solution('''7\nwxyz\n''') == '7'\nassert solution('''7\nabcdefghijklmnopqrstuvwxyz\n''') == '26'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple\\norange\\napple\\n') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n' + 'a' * 10 + '\\n' + 'a' * 10) == '2'\nassert solution('3\\n' + 'a' * 10 + '\\n' + 'a' * 10 + '\\n' + 'a' * 10) == '3'\nassert solution('2\\n' + 'a' * 10 + '\\n' + 'b' * 10) == '1'\nassert solution('2\\n' + 'a' * 10 + '\\n' + 'a' * 10) == '2'\nassert solution('2\\n' + 'a' * 10 + '\\n' + 'a' * 10) == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == 2\nassert solution('orange') == 2\nassert solution('apple') == 2\nassert solution('orange') == 2\nassert solution('banana') == 3\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\nassert solution('''4\nred\ngreen\nblue\nyellow''') == '3'\nassert solution('''5\nred\ngreen\nblue\nyellow\norange''') == '4'\nassert solution('''6\nred\ngreen\nblue\nyellow\norange\npink''') == '5'\nassert solution('''7\nred\ngreen\nblue\nyellow\norange\npink\npurple''') == '6'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n2') == '2 1'\nassert solution('1\\n1') == '1 1'\nassert solution('1\\n1') == '1 1'\nassert solution('10\\n1 10 10 10 10 10 10 10 10 10 10') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('3200 3200 3200 3200') == '3 3'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''\n4\n2200 1100 2200 2200\n''') == '0 1'\nassert solution('''\n4\n2000 2000 2000 2000\n''') == '1 1'\nassert solution('''\n4\n1000 2000 1000 2000\n''') == '2 0'\nassert solution('''\n4\n1 1 1 1\n''') == '0 0'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n100 1000 1200 1400''') == '1 1'\nassert solution('''10\n2999 599 4999 7999 9999''') == '3 3'\nassert solution('''10\n2000 2000 2000 2000 2000 2000 2000''') == '4 3'\nassert solution('''10\n5 4 3 2 1''') == '2 3'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n4\n2100 2500 2700 2700\n''') == '2 2'\n\nassert solution('''\\\n5\n2500 2500 2500 2500\n''') == '2 1'\n\nassert solution('''\\\n1\n3\n''') == '1 0'\n\nassert solution('''\\\n1\n2000 2000 2000 2000\n''') == '1 1'\n\nassert solution('''\\\n3\n2100 2500 2700 2700\n2800 2800 2800 2800\n''') == '2 2'"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"2 2\n\"\"\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 30 30\") == \"2 2\"\nassert solution(\"1\\n0 1\") == \"1 1\"\nassert solution(\"2\\n0 2\") == \"2 2\"\nassert solution(\"1\\n1 1\") == \"1 1\"\nassert solution(\"2\\n1 2\") == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2\n2100 2500 2700 2700\n'''\n    ) == '2 2'\n\nassert solution(\n'''\n3\n1440 1440 1500 1500\n'''\n    ) == '1 1'\n\nassert solution(\n'''\n3\n1440 1440 1500 1500\n'''\n    ) == '1 1'\n\nassert solution(\n'''\n4\n1 1 1 1\n'''\n    ) == '2 2'\n\nassert solution(\n'''\n4\n1 2 3 4\n'''\n    ) == '2 2'"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3\n100 1000 300\n'''\n) == '2 2'\nassert solution(\n'''\n4\n4 1000 5000 2000\n'''\n) == '2 2'\nassert solution(\n'''\n5\n10 400 800 1000 1200 1900\n'''\n) == '2 1'\nassert solution(\n'''\n6\n9 400 500 700 750 600\n'''\n) == '3 3'\nassert solution(\n'''\n7\n3 1000 5000 700 500 200 450\n'''\n) == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\n\"\"\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"1500\"\nassert solution(\"xoxx\") == \"1800\"\nassert solution(\"xoxo\") == \"1450\"\nassert solution(\"xoox\") == \"1350\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('oxo') == '900'\nassert solution('oxxo') == '900'\nassert solution('xoo') == '0'\nassert solution('xxo') == '0'\nassert solution('xox') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('o') == '900'\nassert solution('x') == ''\nassert solution('oxo') == '900'\nassert solution('oox') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"0\"\nassert solution(\"oox\") == \"900\"\nassert solution(\"oxxx\") == \"0\"\nassert solution(\"xoxo\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"900\"\nassert solution(\"xoo\") == \"900\"\nassert solution(\"oxo\") == \"900\"\nassert solution(\"oxo\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ooxx') == 900\nassert solution('oxo') == 800\nassert solution('xxx') == 0\nassert solution('ooxx') == 900\nassert solution('oxxo') == 800\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oox') == '900'\nassert solution('oxo') == '900'\nassert solution('xoo') == '900'\nassert solution('ooxx') == '900'\nassert solution('xoxx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"ox\") == \"700\"\nassert solution(\"xx\") == \"700\"\nassert solution(\"x\") == \"700\"\nassert solution(\"xo\") == \"700\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"700\"\nassert solution(\"ooo\") == \"0\"\nassert solution(\"oox\") == \"700\"\nassert solution(\"xox\") == \"0\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('H D') == 'D'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'\nassert solution('H H') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H D\") == \"H\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"4443\") == \"-7-7-7-7=-7\"\nassert solution(\"9869\") == \"+7+7+7+7=7\"\nassert solution(\"1202\") == \"1+2+2+2=7\"\nassert solution(\"1212\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\nassert solution('1234') == '1-1+2+3=7'\n\nassert solution('1235') == '1-1-1+2+3=7'\n\nassert solution('1236') == '1-1-1-1+2+3=7'\n\nassert solution('1237') == '1-1-1-1-1+2+3=7'"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('12345') == '1+2+3+4+5=10'\nassert solution('98765') == '9-7-5+2=8'\nassert solution('987654') == '9-7-5+2=8'\nassert solution('123456') == '1+2+3+4+5+6=15'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('12345') == '1+2+3+5=7'\nassert solution('4321') == '4+3+2+1=7'\nassert solution('99999') == '9+9+9+9=49'\nassert solution('11112') == '1+1+1+1=4'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1+0=1\"\nassert solution(\"1123\") == \"1+1+1+3=7\"\nassert solution(\"12345\") == \"1+2+3+4=7\"\nassert solution(\"12222\") == \"1+2+2+2=7\"\nassert solution(\"12334\") == \"1+2+3+4=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1+2+2+2=7\""
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"2220\") == \"1-2-2-2=7\"\nassert solution(\"9901\") == \"1+9-1-1=7\"\nassert solution(\"99999\") == \"1+9+9-9-9=7\"\nassert solution(\"999999\") == \"1+9+9+9-9-9=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '1+2+2+2=7'\nassert solution(input()) == '1-2+2-2=7'\nassert solution(input()) == '1-2-2+2=7'\nassert solution(input()) == '1+2-2-2=7'\nassert solution(input()) == '1+2-2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n\"\"\"\n\n\"\"\"\nSolution (TLE)\nTime Limit Exceeded\n\"\"\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '2\\n2\\n0\\n0\\n0'\nassert solution('1') == '0'\nassert solution('2') == '2\\n0'\nassert solution('4') == '2\\n0'\nassert solution('6') == '2\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 2 1 3 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 2 3 4 2') == '2\\n2\\n2\\n0\\n0'\nassert solution('5\\n1 2 3 4 5') == '2\\n2\\n2\\n2\\n0'\nassert solution('10\\n6 9 4 5 3 2 1') == '9\\n9\\n8\\n7\\n6\\n5\\n5\\n5\\n5\\n5'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 3 4') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 2 3 4') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 1 2 3 4') == '2\\n2\\n0\\n0\\n0'\nassert solution('3 1 2 3 4') == '2\\n2\\n1\\n1\\n0'\nassert solution('5 1 2 3 4') == '2\\n2\\n1\\n1\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\n\"\"\"\nHint: You may want to store the information in a hashmap instead of a list.\n\nComplexity:\nTime: O(N)\nSpace: O(N)\n\n\"\"\""
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 1 1') == '3\\n1\\n0\\n0\\n0'\nassert solution('1 1 1 1') == '3\\n1\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('5') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 1 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 1') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2') == '2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\""
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('100000000000000') == ''\nassert solution('10000000000000001') == '1'\nassert solution('1000000000000000000000000') == '1'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '3'\nassert solution('1234') == '3'\nassert solution('12345') == '4'\nassert solution('123456') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''6''') == '3'\nassert solution(\n'''2''') == '1'\nassert solution(\n'''10''') == '5'\nassert solution(\n'''500''') == '240'\nassert solution(\n'''1000''') == '500'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('4') == None\nassert solution('6') == None\nassert solution('42') == None\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('2') == 2\nassert solution('2 0') == 2\nassert solution('2 3') == 3\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0''') == '3'\nassert solution(\n'''1''') == '3'\nassert solution(\n'''2''') == '3'\nassert solution(\n'''3''') == '3'\nassert solution(\n'''4''') == '3'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1118) == 'Yes'\nassert solution(1680) == 'No'\nassert solution(8887) == 'Yes'\nassert solution(1234) == 'No'\nassert solution(0) == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1100') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('1101') == 'No'\nassert solution('1110') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"No\"\nassert solution(\"11\") == \"No\"\nassert solution(\"1118\") == \"Yes\"\nassert solution(\"111899\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1118') == \"Yes\"\nassert solution('1111') == \"No\"\nassert solution('1111') == \"Yes\"\nassert solution('123456789') == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1113\") == \"No\"\nassert solution(\"111111\") == \"Yes\"\nassert solution(\"110111\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000') == 'No'\nassert solution('1118') == 'Yes'\nassert solution('999') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('1111') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n\nassert solution(input()) == 'Yes'\n\nassert solution(input()) == 'Yes'\n\nassert solution(input()) == 'Yes'\n\nassert solution(input()) == 'Yes'"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"11001\") == \"No\"\nassert solution(\"1122\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\nassert solution(\"111111111\") == \"No\"\nassert solution(\"11100\") == \"Yes\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 2 4 4') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('4 4 4 4') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n'''\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n5') == '3'\nassert solution('1\\n5\\n2\\n4') == '3'\nassert solution('1\\n5\\n2\\n4\\n3\\n6') == '3'\nassert solution('3\\n1\\n5\\n2\\n4') == '4'\nassert solution('3\\n1\\n5\\n2\\n4\\n3\\n6') == '4'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0 1') == '0'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n3\\n2') == '3'\nassert solution('3\\n3\\n3') == '6'\nassert solution('1\\n1\\n1') == '1'\nassert solution('3\\n6\\n3') == '3'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n2\n1 5\n2 4\n3 6\n''') == '3'\n\nassert solution('''\\\n2\n1 4\n2 3\n3 6\n''') == '2'\n\nassert solution('''\\\n2\n1 8\n2 10\n3 6\n''') == '2'\n\nassert solution('''\\\n2\n1 8\n2 10\n3 7\n''') == '2'\n\nassert solution('''\\\n3\n1 8\n2 10\n3 9\n''') == '4'"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == '<'\nassert solution('A') == '>'\nassert solution('A') == '='\nassert solution('B') == '='\nassert solution('AB') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AB') == '<'\nassert solution('BB') == '>'\nassert solution('BBB') == '='\nassert solution('ABA') == '<'\nassert solution('ABAB') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '<'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"B A\") == \"<\"\nassert solution(\"C D\") == \"=\"\nassert solution(\"D C\") == \"=\"\nassert solution(\"D E\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"=\", \"Assert 1\"\nassert solution(\"B A\") == \">\", \"Assert 2\"\nassert solution(\"B A\") == \">\", \"Assert 3\"\nassert solution(\"B A\") == \"=\", \"Assert 4\"\nassert solution(\"B A\") == \">\", \"Assert 5\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('C D') == '='\n\"\"\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '<'\n\n'''\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\nimport sys\n\nT = int(input())\nfor _ in range(T):\n    X,Y = map(int, input().split())\n    if X > Y:\n        print('>')\n    elif Y > X:\n        print('<')\n    else:\n        print('=')"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"<\"\nassert solution(\"AC\") == \">\"\nassert solution(\"BA\") == \"=\"\nassert solution(\"BA\") == \"=\"\nassert solution(\"AC\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == \">\"\nassert solution(\"A\") == \">\nassert solution(\"AA\") == \">\"\nassert solution(\"Z\") == \"<\"\nassert solution(\"ZZ\") == \"<\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....') == '11211\\n1#2#1'\n'''"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(STDIN_SAMPLE_INPUT) == STDIN_SAMPLE_OUTPUT\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n...\\n.#..\\n....') == '11211\\n1#2#1'\nassert solution('5 5\\n.##...\\n...##.\\n.#..##\\n.#.##.\\n.##.##\\n...###\\n#.#.#.\\n.####\\n') == '111221\\n1#1#2#1\\n111221\\n1#1#2#1'\nassert solution('5 5\\n.##...\\n...##.\\n.#..##\\n.#.##.\\n.##.##\\n...###\\n#.#.#.\\n.####\\n') == '111221\\n1#1#2#1\\n111221\\n1#1#2#1'\nassert solution('5 5\\n.##...\\n...##.\\n.#..##\\n.#.##.\\n.##.##\\n...###\\n#.#.#.\\n.####\\n') == '111221\\n1#1#2#1\\n111221\\n1#1#2#1'\nassert solution('5 5\\n.##...\\n...##.\\n.#..##\\n.#.##.\\n.##.##\\n...###\\n#.#.#.\\n.####\\n') == '111221\\n1#1#2#1\\n111221\\n1#1#2#1'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5''') == '''11211'''\nassert solution('''1 2''') == '''1#2#1'''\nassert solution('''9 9''') == '''9 9 9 9 9 9 9 9 9 9 9'''\nassert solution('''4 4''') == '''1#2#1#2#1#2#1#2#1#2#1'''\nassert solution('''10 10''') == '''1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1#2#1'''\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '11211'\nassert solution('1 2') == '1#2#1'\nassert solution('4 5') == '11211'\nassert solution('1 3') == '1#2#1'\nassert solution('2 3') == '11211'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"...\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"...\\n\"\n) == \"1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\"\n\nassert solution(\n    \"...\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"...\\n\"\n) == \"11211\\n1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\"\n\nassert solution(\n    \"...\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"...\\n\"\n) == \"1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\"\n\nassert solution(\n    \"...\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"...\\n\"\n) == \"1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\"\n\nassert solution(\n    \"...\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"..#\\n\"\n    \"#.#\\n\"\n    \"...\\n\"\n) == \"1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\\n11211\\n1#2#1\""
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 5\n.....\n.#.#.\n.....\n\"\"\") == \"\"\"11211\n1#2#1\n11211\n\"\"\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"4 6\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n\") == \"111111\\n11111\\n1#1#1#\\n11111\\n111111\"\nassert solution(\"2 6\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n\") == \"11111\\n11111\"\nassert solution(\"10 10\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n\") == \"111111\\n11111\\n1#1#1#\\n11111\\n111111\"\nassert solution(\"20 19\\n.......\\n....#..\\n..#.#..\\n.#..##..\\n.#...#..\\n.#.###...\\n.####.###\\n#.####.#.\\n##.###...\\n###...#..\\n###.###..\\n######....\\n.#.######.\\n.#.#.#####\\n....##.#..\\n.##.##.###\\n..#.#.#...\\n#.###.####\\n#.###.#...\\n.#.#.###.#\\n#.###.####\\n#.###.#...\\n.#.###.###\\n#.###.####\\n#.###.####\\n#.###.####\\n#.###.####\\n#.###.####\"\n\n\"\"\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 5\n.....\n.#.#.\n.....\n''') == \\\n'''11211\n1#2#1\n11211\n'''\n\nassert solution(\n'''3 5\n.....\n.#.#.\n.....\n''') == \\\n'''11211\n1#2#1\n11211\n'''\n\nassert solution(\n'''3 5\n...#.\n.#.#.\n...#.\n''') == \\\n'''1222\n1#2#1\n1222\n'''\n\nassert solution(\n'''3 5\n.#.#.\n.#.#.\n.#.#.\n''') == \\\n'''1#2#1\n1222\n1#2#1\n1222\n'''\n\nassert solution(\n'''4 4\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''1 2\n.....\n.#..\n.....\n''') == '1#2#1'\nassert solution('''3 4\n####\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 10\n20 30 40 10\n10 10 10 10\n50 50 50 50''') == '5'\nassert solution('''3 4 10\n20 30 40 10\n10 10 10 10\n50 50 50 50''') == '5'\nassert solution('''1 1 4\n1 1 4''') == '1'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\nassert solution(\"80 150 80 150\") == \"3\"\nassert solution(\"10 10 100\") == \"5\"\nassert solution(\"1 1 100\") == \"0\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 4 240\n60 90 120\n80 150 80 150\"\"\") == \"3\"\nassert solution(\n\"\"\"10 10 40\n
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n100 100 100 100') == '8'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n100 100 100 100\\n80 90 90 90') == '4'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\n\n'''"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\\n60 90 120\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n60 30 60 30\") == \"2\"\nassert solution(\"2 2 100\\n100 100\") == \"0\"\nassert solution(\"2 2 100\\n100 100\\n50 50\") == \"1\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == 3\nassert solution('2 3 4') == 1\nassert solution('10 15 22') == 9\nassert solution('20 40 30') == 21\nassert solution('1000000 1000000 1000000') == 1000000\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\nassert solution(\"80 150 80 150\") == \"3\"\nassert solution(\"60 90 60\") == \"0\"\nassert solution(\"60 90 90\") == \"1\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''10 5 2 3''') == '150'\nassert solution('''2 2 5 4 3''') == '3'\nassert solution('''9 2 2 2''') == '6'\nassert solution('''2 1 3 4''') == '8'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"1500 2000 1600 3 2\"\"\"\n) == \"7900\"\n\nassert solution(\n\"\"\"1500 2000 1600 1 2\"\"\"\n) == \"1499\"\n\nassert solution(\n\"\"\"1500 2000 1600 1 2\"\"\"\n) == \"1499\"\n\nassert solution(\n\"\"\"1500 2000 1600 1 2\"\"\"\n) == \"1499\"\n\nassert solution(\n\"\"\"1500 2000 1600 2 2\"\"\"\n) == \"7900\""
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1500 2000 2000 1 1''') == '18000'\nassert solution('''1500 2000 2000 3 1''') == '18000'\nassert solution('''1500 2000 2000 2 1''') == '18000'\nassert solution('''1500 2000 2000 3 1''') == '18000'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1 2 1 2 1') == '2'\nassert solution('500 500 500 500 500') == '50000'\nassert solution('1 2 1 2 1') == '2'\nassert solution('1 100 500 500 500') == '100000'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2000 2500 3500 2 2\") == \"5300\"\nassert solution(\"2000 2500 3500 2 2\") == \"5300\"\nassert solution(\"2000 2500 3500 2 2\") == \"5300\"\nassert solution(\"2000 2500 3500 2 2\") == \"5300\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\n'''\n'''\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '4'\nassert solution('''0''') == '1'\nassert solution('''1''') == '1'\nassert solution('''3''') == '4'\nassert solution('''5''') == '0'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('10') == '2'\nassert solution('14') == '4'\nassert solution('8') == '2'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\nassert solution('7') == '6'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == 4\nassert solution(\"2\") == 2\nassert solution(\"4\") == 4\nassert solution(\"3\") == 4\nassert solution(\"4\") == 4\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('12') == '24'\nassert solution('26') == '10'\nassert solution('100') == '24'"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('3') == 4\nassert solution('10') == 0\nassert solution('34') == 2\nassert solution('88') == 2\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == \"4\"\nassert solution('3') == \"4\"\nassert solution('1') == \"1\"\nassert solution('0') == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '9'\nassert solution('''1000''') == '999'\nassert solution('''1000''') == '999'\nassert solution('''1000000000''') == '999999999'\nassert solution('''999999999999999999''') == '999999999999999999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nassert solution('14') == '13'\nassert solution('16') == '15'\nassert solution('20') == '19'\nassert solution('25') == '23'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"3\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10''') == '9'\nassert solution('''13''') == '11'\nassert solution('''4''') == '2'\nassert solution('''15''') == '5'\n\nassert solution('''9''') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '2'\nassert solution('''4''') == '4'\nassert solution('''9''') == '3'\nassert solution('''14''') == '7'\nassert solution('''55''') == '11'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '9'\nassert solution('10') == '9'\nassert solution('50') == '99'\nassert solution('100') == '999'\nassert solution('1000') == '9999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '9'\nassert solution('12') == '9'\nassert solution('16') == '9'\nassert solution('26') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '9'\nassert solution('''2''') == '1'\nassert solution('''10''') == '9'\nassert solution('''100''') == '9'\nassert solution('''999''') == '9'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10\\n8\\n8\\n6') == '3'\n\"\"\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('10\\n8\\n8\\n6') == '3'\nassert solution('10\\n8\\n8\\n6\\n10') == '3'\nassert solution('10\\n8\\n8\\n6\\n8') == '3'\nassert solution('10\\n8\\n8\\n6\\n10\\n10') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('0') == 0\nassert solution('0,3') == 0\nassert solution('1,2,3,4') == 0\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''5\n10\n8\n8\n6\n5''') == '5'\nassert solution('''2\n10\n10\n10''') == '3'\nassert solution('''1\n100\n''') == '1'\nassert solution('''3\n5\n4\n3\n2''') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\n'''\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1\\n2') == '2'\nassert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('3\\n6\\n8\\n7') == '3'\nassert solution('2\\n1\\n2\\n3') == '2'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\n    \"4\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\n    \"4\\n2\\n2\\n2\\n2\") == \"2\"\nassert solution(\n    \"4\\n3\\n3\\n3\\n3\") == \"3\"\nassert solution(\n    \"4\\n4\\n4\\n4\\n4\") == \"2\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n10\n8\n8\n6\n\n5\n7\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABDEDFGHIJ') == 'DFGHIJ'\nassert solution('QWERTYASDFZXCV') == 'ASDFZXCV'\nassert solution('A') == 'A'\nassert solution('ZZZ') == 'ZZZ'\nassert solution('ABCDE') == 'DE'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == 5\nassert solution(\"ADOBECODEBANC\") == 5\nassert solution(\"ABCDEFG\") == 4\n\"\"\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('asdf') == 1\nassert solution('abcdef') == 2\nassert solution('ABCDEF') == 2\nassert solution('QWERTYASDFZXCV') == 5\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('WEIUYTREWQKASDFZXCV') == '5'\nassert solution('CABFDGJKOPHKYUVWX') == '8'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == '13'\nassert solution('ABDCEIFGGKJLTHKZYXWVUTSRQPONMLKJIHGFEDCBA') == '13'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[7:11]\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\"\"\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\n\n'''\n\nfrom itertools import product\ns = stdin.strip()\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        if s[i:j] == s[i:j][::-1]:\n            print(len(s[i:j]))\n            break"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[7:11]\n'''"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"ASDFZ\"\nassert solution(\"ABABABABA\") == \"ABAA\"\nassert solution(\"ABBB\") == \"ABBB\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"ABDDDD\") == \"ABD\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40''') == '2'\nassert solution('''10\n8 12 40''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '2'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\n'''\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4 4 4') == '2'\nassert solution('4\\n2 2 2') == '4'\nassert solution('3\\n4 4 4') == '2'\nassert solution('3\\n2 2 2') == '4'\nassert solution('10\\n
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 12 40\\n') == '2'\nassert solution('8 11 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 22 40\\n') == '2'\nassert solution('8 22 34 40\\n') == '3'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('5 10 5 9 2') == '0'\nassert solution('5 10 5 9 2') == '0'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n\"\"\"\n\nN = int(input())\nA = [int(x) for x in input().split()]"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('3') == '2'\nassert solution('10 100 1000') == '6'\nassert solution('11 11 11 11 11 11 11 11 11') == '13'\nassert solution('13 13 13 13 13 13 13 13 13') == '15'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('8 12 40') == '2'\nassert solution('1 2 3') == '0'\nassert solution('4 8 6 8') == '2'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('4 10 12 13 18 24') == '3'\nassert solution('4 10 12 13 18 24') == '3'\nassert solution('8 12 40') == '2'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 6\nassert solution(5) == 1\nassert solution(7) == 2\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"6\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 4\nassert solution('3') == 12\nassert solution('5') == 60\nassert solution('7') == 504\nassert solution('10') == 725280\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '3'\nassert solution('100') == '6'\nassert solution('1000') == '24'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '9'\nassert solution('5') == '13'\nassert solution('6') == '23'\nassert solution('7') == '47'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4'\n) == 8\n\"\"\""
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n''') == '6'\nassert solution('''\n5\n''') == '56'\nassert solution('''\n10\n''') == '220'\nassert solution('''\n100\n''') == '56074748'\nassert solution('''\n100\n''') == '769369529775'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == 1\nassert solution(\"2\\n\") == 2\nassert solution(\"3\\n\") == 6\nassert solution(\"4\\n\") == 12\nassert solution(\"5\\n\") == 60\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\n'''\n\n'''\nThe solution is almost similar to the above solution, but it looks more compact.\nWe can use the pow(n,m) function, which gives the n-th power of m, i.e. pow(m,n) is the n-th power of m.\n'''\nn = int(input())\nprint(pow(n,n,10**9+7))\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('3 4') == '5'\nassert solution('10') == '50'\nassert solution('10 9') == '49'\nassert solution('20 100') == '2000'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('5') == '15'\nassert solution('10') == '45'\nassert solution('100') == '550'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6'\n\n\"\"\""
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == int(input())\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '45'\nassert solution('101') == '451'\nassert solution('20') == '45'\nassert solution('200') == '45'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '6'\nassert solution('''1''') == '1'\nassert solution('''2''') == '3'\nassert solution('''6''') == '21'\nassert solution('''300''') == '3687'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '1'\nassert solution('1000') == '1'\nassert solution('6') == '6'\nassert solution('1000000') == '1000000'\nassert solution('10000000') == '10000000'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 6\nassert solution('2') == 2\nassert solution('3') == 6\n\n\"\"\"\n\n\n\"\"\"\n\nREFERENCE:\n - https://www.codewars.com/kata/how-many-candies-does-mr-evi-give\n - https://www.codewars.com/kata/will-you-win\n - https://www.codewars.com/kata/will-you-win-the-day\n - https://www.codewars.com/kata/what-is-the-correct-way-to-find-the-median-of-a-list\n - https://www.codewars.com/kata/how-many-candies-does-mr-evi-give\n\n\"\"\""
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('3\\n1 3') == '0'\nassert solution('3\\n1 3') == '-1'\nassert solution('3\\n1 3') == '-2'\nassert solution('2\\n3 1') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 2') == '1'\nassert solution('2 1 1') == '-1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3''') == '0'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 1') == '2'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('2\\n3 1\\n2 1') == '0'\nassert solution('2\\n1 1\\n1 1') == '0'\nassert solution('2\\n1 1\\n1 1\\n2 1') == '-1'\nassert solution('2\\n1 1\\n1 1\\n1 1') == '-2'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3''') == '2'\nassert solution('''10\n3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n''')\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == 2\nassert solution('3 1') == 2\nassert solution('1 2 3 4 5') == 5\nassert solution('1 2 3 4 5 6 7 8 9 10') == 19\nassert solution('2 2 2') == 0\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('2 2') == '2 0'\nassert solution('2 0') == '0 0'\nassert solution('1 1') == '0 1'\nassert solution('3 3') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample1) == sample2\n\"\"\"\nfrom functools import lru_cache\nfrom typing import List"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m = map(int, stdin.readline().split())\n\nfor _ in range(m):\n    stdin.readline().strip()\n    stdout.write(f'{len(stdin.readline().strip())}\\n')\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"\nassert solution(\"2 2\\n1 WA\\n1 AC\") == \"0 0\\n\"\nassert solution(\"2 1\\n1 AC\") == \"1 0\\n\"\nassert solution(\"2 2\\n1 AC\") == \"1 0\\n\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('1 AC\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '0 0'\nassert solution('1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('1 AC\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '0 0'\nassert solution('1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('2 3') == '2 1'\nassert solution('2 3') == '2 2'\nassert solution('1 2') == '0 1'\nassert solution('1 1') == '0 0'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('1 10\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n1 AC\\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom datetime import datetime\nfrom functools import reduce\nfrom operator import add\nfrom sys import stdin"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 WA') == '2 0'\nassert solution('1 AC') == '2 1'\nassert solution('2 WA') == '2 2'\nassert solution('2 AC') == '2 3'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 1\") == \"10\"\nassert solution(\"3 1\") == \"10\"\nassert solution(\"3 1\") == \"10\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"5\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\"\"\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"10\\n2\\n3\\n4\") == \"4\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"5\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('3 4') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"4 1 5\") == \"5\"\nassert solution(\"5 1\") == \"10\"\nassert solution(\"10 1 10\") == \"20\"\nassert solution(\"10 1 1 1 1\") == \"40\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 1\") == \"5\" # same output, but a different logic\n\"\"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1\n10\n2\n'''\n    ) == '4'\n\nassert solution(\n'''\n3\n10\n3\n'''\n    ) == '12'\n\nassert solution(\n'''\n10\n10\n2\n'''\n    ) == '20'\n\nassert solution(\n'''\n10\n10\n2\n'''\n    ) == '20'\n\nassert solution(\n'''\n10\n10\n1\n'''\n    ) == '20'"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('1\\n10\\n3') == '7'\nassert solution('1\\n10\\n9') == '16'\nassert solution('1\\n10\\n11') == '18'\nassert solution('2\\n10\\n2') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('1\\n10\\n2\\n5') == '7'\nassert solution('1\\n10\\n2\\n5\\n4') == '9'\nassert solution('1\\n10\\n2\\n5\\n4\\n9') == '12'\nassert solution('1\\n10\\n2\\n5\\n4\\n9\\n6') == '16'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n10\\n2\\n') == '16'\nassert solution('3\\n5\\n2\\n') == '19'\nassert solution('3\\n5\\n2\\n3\\n5\\n2\\n') == '16'\nassert solution('3\\n5\\n2\\n3\\n5\\n2\\n4\\n5\\n2\\n3\\n5\\n2\\n') == '16'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('2\\n10\\n2\\n') == '16\\n'\nassert solution('3\\n10\\n2\\n') == '20\\n'\nassert solution('1\\n1\\n2\\n') == '0\\n'\nassert solution('2\\n1\\n2\\n') == '0\\n'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n2\n''') == '4'\nassert solution('''2\n10\n3\n''') == '6'\nassert solution('''2\n10\n4\n''') == '8'\nassert solution('''3\n10\n5\n''') == '13'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2') == 4\nassert solution('1\\n10\\n2\\n2\\n2') == 16\nassert solution('2\\n10\\n2') == 4\nassert solution('2\\n10\\n2\\n2') == 8\nassert solution('2\\n10\\n2\\n2\\n2') == 12\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('1\\n10\\n2\\n1\\n3\\n2\\n3\\n1\\n1\\n2\\n3') == '32'\nassert solution('1\\n10\\n2\\n1\\n3\\n2\\n3\\n1\\n1\\n2\\n3') == '32'\nassert solution('1\\n10\\n2\\n1\\n3\\n2\\n3\\n1\\n1\\n2\\n3') == '32'\nassert solution('1\\n10\\n2\\n1\\n3\\n2\\n3\\n1\\n1\\n2\\n3') == '32'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n4\\n3\\n2\\n1') == '10'\nassert solution('3\\n2\\n1\\n3\\n2\\n1') == '18'\nassert solution('1\\n3\\n2\\n1') == '3'\nassert solution('2\\n2\\n1\\n1') == '3'\nassert solution('4\\n2\\n1\\n1') == '3'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 3\") == \"2\"\nassert solution(\"1 2 1 3 4\") == \"4\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"10 10 10 10 10\") == \"100\"\nassert solution(\"100 100 100 100\") == \"0\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"520\"\nassert solution(\"2\\n2\\n2\\n2\") == \"520\"\nassert solution(\"1\\n2\\n3\\n4\") == \"6\"\nassert solution(\"4\\n4\\n4\\n4\") == \"40\"\nassert solution(\"1000000\\n1000000\\n1000000\\n1000000\") == \"0\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"100\\n100\\n100\\n100\") == \"0\"\nassert solution(\"100\\n100\\n100\\n100\\n100\") == \"0\"\nassert solution(\"400\\n300\\n200\\n100\") == \"300\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('100\\n100\\n100\\n100') == '600'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('2\\n1\\n1\\n1') == '0'\nassert solution('10\\n1\\n1\\n1') == '6'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('300\\n220\\n420') == '520'\nassert solution('900\\n110\\n160') == '760'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('10\\n10\\n10\\n10') == '100'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '10'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1000\\n0\\n0\\n0\\n') == '0'\nassert solution('30\\n50\\n30\\n30') == '100'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('8\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5\\n5\\n5') == '5\\n5\\n5\\n5'\nassert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\") == \"0\"\nassert solution(\"3\\n3\\n3\\n3\") == \"15\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1'\nassert solution('3\\n2\\n1\\n4') == '2'\nassert solution('4\\n3\\n2\\n1') == '3'\nassert solution('4\\n3\\n2\\n1\\n2') == '4'\nassert solution('10\\n10\\n10\\n10\\n10') == '10'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"0\"\nassert solution(\"1 1 1 0 1\") == \"0\"\nassert solution(\"1 1 1 0 1\") == \"0\"\nassert solution(\"1 1 1 0 1\") == \"0\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"3 4 4 0 2\") == \"0\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"3 4 4 0 2\") == \"0\"\nassert solution(\"3 4 4 0 2\") == \"0\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''3\n2 1 1 0 2''') == '0'\nassert solution('''6\n2 4 4 0 2 0 3''') == '1'\nassert solution('''5\n0 1 2 3 4''') == '4'\nassert solution('''6\n0 1 2 3 4 0 4''') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('1 2 3 4 5') == '0'\nassert solution('2 1 3 4 5') == '0'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n2 4 4 0 2\"\n) == \"4\"\n\nassert solution(\n    \"5\\n2 4 4 0 2\"\n) == \"0\"\n\nassert solution(\n    \"5\\n2 4 4 0 2\"\n) == \"0\"\n\nassert solution(\n    \"5\\n2 4 4 0 2\"\n) == \"0\"\n\nassert solution(\n    \"5\\n1 2 3 4 5\"\n) == \"0\""
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '0'\nassert solution('2 4 4 0 2') == '0'\nassert solution('2 4 4 0 2') == '0'\nassert solution('2 4 4 0 2') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('1 2 2 1') == '0'\nassert solution('5 4 4 0 2') == '0'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '5\\n2 4 4 0 2\\n') == '4'\nassert solution(\n    '2\\n2\\n') == '0'\nassert solution(\n    '10\\n
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 2 5') == '84'"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 2 5''') == '84'\n'''\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4\") == \"84\"\nassert solution(\"9 9 9\") == \"999\"\nassert solution(\"1 100 100\") == \"99\"\nassert solution(\"1 8 9\") == \"99\"\nassert solution(\"1 9 3\") == \"11\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"20 2 5\"\"\") == \"84\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\"\"\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2 3') == ''\nassert solution('2 3 4') == ''\nassert solution('2 3 4 5') == ''\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '84'\nprint('Test passed')"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('300') == 'ABC300'\nassert solution('700') == 'ABC700'\nassert solution('1000') == 'ABC1000'\nassert solution('1200') == 'ABC1200'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABC') == 'ABC'\nassert solution('ABC680') == 'ABC680'\nassert solution('ABC20') == 'ABC20'\nassert solution('ABC123') == 'ABC123'\nassert solution('ABC099') == 'ABC099'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABCD\") == \"ABCD\"\nassert solution(\"ABCDE\") == \"ABCDE\"\nassert solution(\"ABCDEF\") == \"ABCDEF\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC\") == \"ABC000\"\nassert solution(\"ABC\") == \"ABC000\"\nassert solution(\"ABC\") == \"ABC000\"\nassert solution(\"ABC\") == \"ABC000\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ABC100'\n\"\"\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ABC100\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC0') == 'ABC000'\nassert solution('ABC00') == 'ABC000'\nassert solution('ABC000') == 'ABC000'\nassert solution('ABC') == 'ABC000'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC67') == 'ABC68'\nassert solution('ABC400') == 'ABC400'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC333') == 'ABC333'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('A') == 'A0'\nassert solution('ABC') == 'ABC000'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 5') == '5'\nassert solution('5 5') == '5'\nassert solution('5 5') == '5'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '5'\nassert solution('3 5') == '3'\nassert solution('1 5') == '2'\nassert solution('5 5') == '2'\nassert solution('7 5') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''5 3''') == '6'\nassert solution('''5 4''') == '5'\nassert solution('''3 1''') == '4'\nassert solution('''6 3''') == '7'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''4 4\n''') == '4'\nassert solution('''5 5\n''') == '5'\nassert solution('''1 1\n''') == '0'\nassert solution('''1 1\n''') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5') == '5'\nassert solution('4 6') == '5'\nassert solution('1 2') == '1'\nassert solution('4 3') == '4'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == '5'\nassert solution('''2 2''') == '2'\nassert solution('''3 3''') == '3'\nassert solution('''4 4''') == '3'\nassert solution('''5 5''') == '4'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"10 30\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 31\") == \"4\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''1 1\n''') == '0'\nassert solution('''11 11\n''') == '6'\nassert solution('''15 16\n''') == '7'\nassert solution('''15 16\n''') == '8'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n1\\n3\\n') == '-1'\nassert solution('3\\n3\\n1\\n2\\n') == '1'\nassert solution('3\\n3\\n1\\n2\\n') == '1'\nassert solution('3\\n3\\n1\\n1\\n') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '-1'\nassert solution('3 1 2') == '1'\nassert solution('3 2 1') == '-1'\nassert solution('2 1 3') == '2'\nassert solution('2 3 1') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('2\\n2\\n1\\n1\\n') == '-1'\nassert solution('3\\n3\\n1\\n2\\n') == '3'\nassert solution('3\\n1\\n1\\n2\\n') == '-1'\nassert solution('1\\n2\\n2\\n1\\n') == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1\\n2\\n3\\n4\") == 2\nassert solution(\"2\\n1\\n2\") == -1\nassert solution(\"3\\n1\\n2\") == 2\nassert solution(\"4\\n1\\n2\") == 1\nassert solution(\"10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 4\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n3\n1\n2\n\"\"\") == 2\nassert solution(\"\"\"5\n3\n1\n2\n3\n4\n5\n6\n\"\"\") == -1\nassert solution(\"\"\"2\n2\n1\n1\n\"\"\") == -1\nassert solution(\"\"\"1\n1\n\"\"\") == -1\nassert solution(\"\"\"1\n\"\"\") == -1\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nfrom typing import List\n\nMAX_BUTTONS = 10**5\n\nclass Button:\n    def __init__(self, number: int) -> None:\n        self.number = number\n        self.lightened = False\n\n    def lighten(self) -> None:\n        self.lightened = True\n\n    def is_lightened(self) -> bool:\n        return self.lightened"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"-1\"\nassert solution(\"3\\n3\\n2\\n2\\n\") == \"3\"\nassert solution(\"3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"3\"\nassert solution(\"3\\n3\\n2\\n3\\n\") == \"-1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == 2\nassert solution('2\\n2\\n1\\n1\\n') == -1\nassert solution('2\\n2\\n1\\n1\\n') == -1\nassert solution('2\\n2\\n1\\n1\\n') == -1\nassert solution('2\\n2\\n1\\n1\\n') == -1\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n') == '2'\nassert solution('2\\n3\\n') == '1'\nassert solution('1\\n3\\n2\\n3\\n') == '2'\nassert solution('2\\n3\\n2\\n3\\n') == '2'\nassert solution('2\\n1\\n2\\n1\\n') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n6\n2\n6\n''') == '1'\nassert solution('''\n3\n2\n2\n2\n''') == '1'\nassert solution('''\n2\n1\n''') == '0'\nassert solution('''\n2\n1\n1\n1\n''') == '2'\nassert solution('''\n3\n3\n1\n2\n2\n2\n2\n2\n2\n2\n''') == '4'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '2'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '2'\nassert solution('2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '2'\nassert solution('2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\\n4\\n2\\n1\") == \"3\"\nassert solution(\"5\\n2\\n3\\n4\\n5\\n1\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"5\\n2\\n1\\n2\\n5\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''1000\n4000000\n4000000''') == '0'\nassert solution('''100\n222222\n1''') == '3'\nassert solution('''1000\n111\n11\n111\n''') == '5'\nassert solution('''1000\n111\n11\n1111\n''') == '0'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '2'\nassert solution('5\\n5') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n2\\n6') == '1'\nassert solution('6\\n6\\n6') == '0'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n2') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1'\nassert solution('5 2') == '1'\n\"\"\""
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 3') == '2'\nassert solution('3 2') == '1'\nassert solution('6 1') == '4'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('1 1 2 2 5') == '1'\nassert solution('1 2') == '1'\nassert solution('5 1') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n1 1 2 1 1') == '1'\nassert solution('5 2\\n1 1 2 1 1') == '1'\nassert solution('5 2\\n1 1 2 1 1') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2') == '1'\nassert solution('1 1 2 2 5') == '1'\nassert solution('10 2') == '1'\nassert solution
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('10 1\\n1') == '2'\nassert solution('10 1\\n2') == '3'\nassert solution('10 1\\n3') == '4'\nassert solution('10 1\\n4') == '5'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 3\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n3 1 1\") == \"Yes\"\nassert solution(\"2\\n2 1 1\\n3 1 1\") == \"No\"\nassert solution(\"1\\n1 1 1\\n1 1 1\") == \"No\"\nassert solution(\"3\\n1 1 2\\n3 1 1\") == \"Yes\"\nassert solution(\"3\\n1 1 2\\n3 2 2\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6 1 1\") == \"Yes\"\nassert solution(\"1\\n1 1 1\") == \"Yes\"\nassert solution(\"1\\n1 1 1\") == \"No\"\nassert solution(\"3\\n3 1 2\") == \"Yes\"\nassert solution(\"5\\n2 1 2 3 4\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"2\\n3 1 2\\n6 1 1\") == \"No\"\nassert solution(\"2\\n3 1 2\\n3 1 1\") == \"No\"\nassert solution(\"2\\n3 1 2\\n6 1 1\") == \"No\"\nassert solution(\"2\\n3 1 2\\n3 1 1\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n3 1 2\n6 1 1'''\n) == 'Yes'\nassert solution(\n'''2\n3 1 2\n7 1 1'''\n) == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n0 0 3') == 'Yes'\nassert solution('1 2 3\\n4 4 3') == 'No'\nassert solution('5 7 2\\n1 1 4\\n2 3 4\\n4 5 5') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == \"Yes\"\nassert solution('6\\n6 1 1') == \"Yes\"\nassert solution('2\\n3 1 2') == \"No\"\nassert solution('5\\n5 1 2 3 4') == \"No\"\nassert solution('2\\n2 1 1') == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 1 1\\n\") == \"Yes\"\nassert solution(\"5\\n4 1 2 2 1 1\") == \"No\"\nassert solution(\"2\\n8 1 4 4 1 3\\n1 3 3 4 3 3 1\") == \"Yes\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 10') == '3'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(int(round(eval(input()))))\nprint(solution(input()))\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '4'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 5') == '2'\nassert solution('1 10') == '2'\nassert solution('1 -1') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('2 4') == '2'\nassert solution('2 5') == '3'\nassert solution('1 5') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"1 3\") == \"2\""
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '2'\nassert solution('10 20') == '22'\nassert solution('10 20') == '22'\nassert solution('10 20') == '22'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"-1 -2\") == \"-2\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 7') == '4'\nassert solution('3 7') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 6') == '0'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 7') == '4'\nassert solution('7 7\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8') == '4'\nassert solution('7 7\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9') == '4'\nassert solution('7 7\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10') == '4'\nassert solution('7 7\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10\\na_11 b_11') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n1 2\\n2 3\\n1 3\\n2 3') == '4'\nassert solution('2 2\\n1 2') == '0'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n6 7') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n7 6') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'\n'''"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('5 4\\n1 3\\n2 3\\n3 4\\n4 5\\n5 4\\n4 3\\n') == '3'\nassert solution('8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 9\\n') == '2'\nassert solution('8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 9\\n1 3\\n') == '2'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\n\nassert solution('''1 2\n1 3\n2 4\n3 4\n1 4\n2 3''') == '1'\n'''"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n3 1\\n1 2\\n2 3') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n7 1\\n') == '4'\nassert solution('5 7\\n1 3\\n2 5\\n3 4\\n4 5\\n5 6\\n6 7\\n7 1') == '4'\nassert solution('5 7\\n1 3\\n2 5\\n3 4\\n4 5\\n5 6\\n6 7\\n7 1\\n1 4\\n') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '2'\nassert solution('''7 7\n1 3\n2 4\n1 4\n2 3\n2 4\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '2'\nassert solution('''4 3\n1 2\n2 3\n3 1\n''') == '2'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"-10 10 -20\") == \"-10\"\nassert solution(\"10 -20 10\") == \"-20\"\nassert solution(\"10 -20 1\") == \"1\"\nassert solution(\"-10 -20 -20\") == \"-20\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 5 5') == '5'\nassert solution('8 5 4') == '8'\nassert solution('3 3 3') == '3'\nassert solution('5 5 5') == '5'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 2 3') == '4'\nassert solution('5 7 5') == '7'\nassert solution('5 6 5') == '6'\nassert solution('-5 -7 -5') == '-6'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n\nassert solution(\"3 5 3\") == \"3\"\n\nassert solution(\"2 1 3\") == \"2\"\n\nassert solution(\"5 3 4\") == \"3\"\n\nassert solution(\"8 6 7\") == \"5\""
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 1 1') == '2'\nassert solution('1 2 1') == '2'\nassert solution('1 2 1') == '2'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 7 7') == '7'\nassert solution('5 7 5') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\n\n\"\"\""
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 7 7') == '7'\nassert solution('5 6 4') == '6'\nassert solution('5 6 2') == '2'\nassert solution('-5 6 2') == '2'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 7 3') == '3'\nassert solution('1 2 1') == '2'\nassert solution('4 3 2') == '1'\nassert solution('5 3 3') == '4'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '112 4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '112 4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '112 4'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 100 1 1 1 1') == '0 0'\nassert solution('1 2 10 10 10 15 200') == '110 0'\nassert solution('1 2 3 1 1 1 1') == '110 0'\nassert solution('1 2 3 2 2 2 1') == '110 0'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque\n\nA, B, C, D, E, F = list(map(int, stdin.split()))"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('2 2 10 10 20 15 200') == '110 10'\nassert solution('1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('abcdef') == 'abcd'\nassert solution('abcdefghi') == 'abcdg'\nassert solution('zzz') == 'zzz'\nprint('All test cases passed successfully.')\n\n'''\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('in') == 'in'\nassert solution('hi') == 'hi'\nassert solution('Hi') == 'Hi'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:2] + \"i18n\"\n\"\"\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"AlgoExpert is the best!\") == \"AlgoeXp\"\nassert solution(\"BAAAB\") == \"BAa\"\nassert solution(\"B\") == \"B\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('helloworld') == 'hello'\nassert solution('abracadabra') == 'abra'\nassert solution('karakulok') == 'kar'\nassert solution('abracadabra') == 'abra'\nprint(solution(input()))\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"toppot\") == \"NO\"\nassert solution(\"toppot\" + \"pot\") == \"YES\"\nassert solution(\"top\" + \"pot\" + \"toppot\") == \"NO\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"NO\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"alot\") == \"NO\"\nassert solution(\"alot\") == \"NO\"\nassert solution(\"man\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pote') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\nassert solution('pot') == 'NO'\nassert solution('top') == 'NO'\n\nassert solution('pot') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''pot\ntop''') == 'YES'\nassert solution('''pot\ntop\ntop''') == 'NO'\nassert solution('''otp\ntop\ntop''') == 'NO'\nassert solution('''otp\ntop\ntop''') == 'NO'\nassert solution('''tut\ntop\ntop''') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot2') == 'NO'\nassert solution('top2') == 'YES'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abcba', 4) == 'b'\nassert solution('abab', 4) == 'b'\nassert solution('abcb', 4) == 'b'\nassert solution('abc', 4) == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc', 4) == 'b'\nassert solution('abc', 5) == ''\nassert solution('ababc', 4) == 'b'\nassert solution('ababc', 5) == ''\nassert solution('ababc', 6) == ''\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aba\", 4) == \"b\"\nassert solution(\"ac\", 2) == \"ac\"\nassert solution(\"abac\", 3) == \"ac\"\nassert solution(\"acac\", 3) == \"acac\"\nassert solution(\"acac\", 4) == \"acac\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ababc', 4) == 'b'\nassert solution('ababc', 1) == 'a'\nassert solution('ababc', 2) == 'ab'\nassert solution('ababc', 3) == 'abc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abb', 4) == 'bb'\nassert solution('abc', 4) == 'b'\nassert solution('abc', 3) == 'bc'\nassert solution('abcd', 4) == 'bd'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a', 1) == 'a'\nassert solution('a', 2) == 'a'\nassert solution('ab', 1) == 'a'\nassert solution('ab', 2) == 'ab'\nassert solution('abc', 1) == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abac', 4) == 'b'\nassert solution('abac', 5) == 'abac'\nassert solution('abac', 6) == 'abac'\nassert solution('abac', 7) == 'abac'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ababc', 4) == 'b'\nassert solution('ababc', 2) == 'ab'\nassert solution('ababc', 1) == 'a'\nassert solution('ababc', 3) == 'abc'\nassert solution('ababc', 5) == 'ababc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a', 1) == 'a'\nassert solution('abc', 4) == 'b'\nassert solution('abc', 3) == 'ab'\nassert solution('abc', 2) == 'ab'\nassert solution('abc', 1) == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ababc', 4) == 'b'\nassert solution('ababc', 3) == 'ab'\nassert solution('ababc', 2) == 'ab'\nassert solution('ababc', 1) == 'a'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 2''') == '9'\nassert solution('''5 4 2''') == '9'\nassert solution('''5 4 2''') == '9'\nassert solution('''3 3 4''') == '6'\nassert solution('''3 3 4''') == '6'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''5 4 2\n2 1 1\n3 3 4''') == \"9\"\nassert solution('''5 4 2\n2 1 1\n3 3 4''') == \"9\"\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 1 1''') == \"9\"\nassert solution('''5 4 2\n2 1 1\n3 3 4\n3 3 2''') == \"8\"\nassert solution('''5 4 2\n2 1 1\n4 1 1''') == \"8\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[-1]\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1\\n3 3 4') == '9'\n\"\"\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n>>> solution(\"\"\"5 4 2\n2 1 1\n3 3 4\n\"\"\")\n9\n\n>>> solution(\"\"\"15 14 1\n15 15 9\n14 14 9\n13 14 9\n12 13 9\n11 14 9\n10 13 9\n9 13 9\n8 14 9\n7 15 9\n6 14 9\n5 14 9\n4 14 9\n3 14 9\n2 14 9\n1 14 9\n\"\"\")\n154\n\"\"\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('3 5 2\\n1 1 2\\n4 2 3') == '12'\nassert solution('10 10 2\\n1 1 3\\n4 2 4') == '23'\nassert solution('10 10 2\\n1 1 3\\n1 1 1\\n4 2 4') == '22'\nassert solution('100000000000 1000000000000 2\\n100000000000 1000000000000 3\\n100000000000 1000000000000 4\\n100000000000 1000000000000 5\\n100000000000 1000000000000 6\\n100000000000 1000000000000 7\\n100000000000 1000000000000 8\\n100000000000 1000000000000 9\\n100000000000 1000000000000 10') == '0'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\nassert solution('3 6 3\\n1 4 2\\n1 3 4\\n') == '21'\n\"\"\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2\") == \"9\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 3 4\") == \"9\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\n6 5 1\n1 10 1\n''') == '''12\n11\n0\n'''\nassert solution(\n'''3\n6 2 3\n2 6 3\n''') == '''12\n4\n2\n'''\nassert solution(\n'''3\n6 5 1\n2 6 2\n''') == '''12\n11\n0\n'''\nassert solution(\n'''3\n6 3 1\n2 6 3\n''') == '''12\n3\n3\n3\n'''\nassert solution(\n'''3\n3 6 2\n2 6 3\n''') == '''3\n4\n2\n'''\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 1\") == \"1\"\nassert solution(\"2\\n2 2 2\") == \"4\"\nassert solution(\"3\\n3 3 3\") == \"7\"\nassert solution(\"4\\n4 4 4\") == \"11\"\nassert solution(\"5\\n5 5 5\") == \"0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5 1') == '12'\nassert solution('1 10 1') == '11'\nassert solution('3 2 2') == '0'\nassert solution('4 2 2') == '0'\nassert solution('8 5 2') == '0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n1') == '4\\n2\\n1\\n1'\nassert solution('2\\n2\\n1\\n1') == '3\\n3\\n0\\n0'\nassert solution('1\\n1\\n1\\n1') == '0\\n0\\n0\\n0'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '2\\n2\\n2\\n2'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''3\n    6 5 1\n    1 10 1'''\n    ) == '12\\n11\\n0'\nassert solution(\n    '''4\n    6 5 1\n    1 10 1\n    4 5 1\n    1 10 1'''\n    ) == '12\\n11\\n0\\n0'\nassert solution(\n    '''4\n    6 5 1\n    1 10 1\n    4 5 1\n    1 10 1'''\n    ) == '12\\n11\\n0\\n0'\nassert solution(\n    '''5\n    6 5 1\n    1 10 1\n    4 5 1\n    1 10 1\n    4 5 1'''\n    ) == '12\\n11\\n0\\n0\\n0'\nassert solution(\n    '''6\n    6 5 1\n    1 10 1\n    4 5 1\n    1 10 1\n    4 5 1\n    1 10 1'''\n    ) == '12\\n11\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n6 5 1\n1 10 1\n\"\"\") == \"12\\n11\\n0\\n\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\n'''\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"3\\n5 0 5\\n1 10 1\\n\") == \"11\\n10\\n9\"\nassert solution(\"3\\n10 0 0\\n1 10 1\\n\") == \"11\\n11\\n10\"\nassert solution(\"3\\n10 0 0\\n1 10 1\\n\") == \"11\\n11\\n10\"\nassert solution(\"3\\n20 0 0\\n1 10 1\\n\") == \"21\\n11\\n10\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n6 5 1\n1 10 1''') == '12\\n11\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n2 10 1''') == '12\\n11\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n2 10 1\n3 10 1''') == '12\\n11\\n0'\nassert solution('''4\n6 5 1\n1 10 1\n2 10 1\n3 10 1\n4 10 1''') == '12\\n11\\n0\\n0'\nassert solution('''6\n6 5 1\n1 10 1\n2 10 1\n3 10 1\n4 10 1\n5 10 1''') == '12\\n11\\n0\\n0\\n0'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('.*.*') == '.*.*'\nassert solution('...') == '.*.*.*.*.*'\nassert solution('*.*.*.*.*.*') == '*.*.*.*.*.*.*.*.*.*.*'\nassert solution
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n.\\n.*\\n.*\") == \"\\n\".join([\".\"] * 2 + [\"*\"] * 2)\nassert solution(\"2 3\\n....\\n.*.\\n.*.*\") == \"\\n\".join([\"*\"] * 3 for _ in range(3))\nassert solution(\"3 4\\n.\\n.*.*\\n.*.*.*\") == \"\\n\".join([\".\"] * 3 for _ in range(3))\nassert solution(\"1 2\\n*\\n*\") == \"\\n\".join([\"*\"] * 2)\nassert solution(\"2 3\\n.*\\n.*.*\") == \"\\n\".join([\"*\"] * 3 for _ in range(3))\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('..*') == '..*'\nassert solution('....*.*') == '.....*.*'\nassert solution
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\".*.\") == \".**.\"\nassert solution(\"*.\\n.**\") == \"**.\"\nassert solution(\"*.\\n.**\\n.**\") == \"**.\\n**.\"\nassert solution(\"**.\\n.**\\n.**\") == \"**.\\n**.\\n**.\"\nassert solution(\"***\\n**\\n.*\\n.**\\n.*\\n**\\n.*\") == \"***\\n**.\\n*.*\\n**.*\\n**.*\\n.*.*\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n.\\n.*') == '.*\\n.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('.**.**...') == '.**.**...'\nassert solutionn.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\n.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\n.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\n.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\n.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"*\"\nassert solution(\"1 2\") == \"*\"\nassert solution(\"2 1\") == \"*\"\nassert solution(\"2 2\") == \"*\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n*.\n.*''') == '''*.\n*.'''\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '4 2\\n.\\n.*\\n.*\\n.*\\n.*') == '\\n.*\\n.*\\n.*\\n.*\\n.*'\nassert solution(\n    '3 3\\n.\\n.*\\n.*\\n.*') == '\\n.*\\n.*\\n.*'\nassert solution(\n    '2 1\\n*\\n.') == '*'\nassert solution(\n    '1 1\\n*\\n*') == '*'\nassert solution(\n    '10 10\\n*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*') == '\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2 2\n*.\n.*\n''') == '.**.\\n.*.*'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"NO\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"YES\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"NO\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\") == \"NO\\n\"\nassert solution(\"2\\n1\\n2\\n2\\n3\") == \"YES\\n\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\"\nassert solution(\"2 6 1 4 5\") == \"NO\"\nassert solution(\"2 6 1 5 4\") == \"YES\"\nassert solution(\"2 6 1 5 4\") == \"NO\"\nassert solution(\"2 6 1 4 5\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 6 1 4 5') == 'YES'\nassert solution('2 6 1 4 4') == 'NO'\nassert solution('1 2 1 3 2 4 3 3 4 4 5 5 5 5 5 5 5 5 5 5 5') == 'YES'\nassert solution('1 2 1 3 2 4 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4') == 'NO'\nassert solution('1 2 1 3 2 4 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n'''\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n1 1 1 1 1\") == \"YES\"\nassert solution(\"5\\n1 2 1 1 1\") == \"NO\"\nassert solution(\"5\\n2 4 3 4 5\") == \"YES\"\nassert solution(\"5\\n2 4 3 5 1\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('2 3') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n1 1 2 3 3\") == \"NO\"\nassert solution(\"5\\n3 3 3 3 3\") == \"YES\"\nassert solution(\"5\\n1 1 1 1 1\") == \"YES\"\nassert solution(\"5\\n4 4 4 4 4\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 3 1\\n4 3 2 3') == 'YES'\nassert solution('2\\n1 2\\n4 3') == 'YES'\nassert solution('3\\n1 2 3\\n2 3 1') == 'YES'\nassert solution('2\\n1 2\\n3 3') == 'NO'\nassert solution('3\\n1 2 3\\n3 2 1') == 'NO'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''2\n2\n1 2\n2\n1 2\n2\n1 2\n''') == '2'\n\nassert solution('''3\n3\n1 3 3\n3\n1 3 3\n3\n1 3 3\n''') == '3'\n\nassert solution('''4\n4\n1 2 2 1 2\n8\n1 2 1 2 2 2 1 1 2\n8\n1 2 2 1 2 1 2\n8\n1 2 1 1 1 1 1\n8\n1 2 2 2 2 2 2 1\n8\n1 1 1 1 1 1 1\n8\n1 2 2 2 2 2 1\n8\n1 2 2 1 2 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 2 2 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n8\n1 2 1 1 1 1 1\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('2\\n10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('3\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('4\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"2\"\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"3\"\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"4\"\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"1\"\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"2\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1 1\n3\n1 3 3''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1 1\n3\n1 3 3''') == '1'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1 1\n3\n1 3 3''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('input') == '3'\nassert solution('input2') == '4'\nassert solution('input3') == '2'\nassert solution('input4') == '1'\nassert solution('input5') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 2 1 2 1 2 1 2\n8\n1 1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '1\\n'\nassert solution('2\\n2\\n') == '2\\n'\nassert solution('2\\n1\\n') == '2\\n'\nassert solution('3\\n3\\n') == '3\\n'\nassert solution('2\\n1\\n1\\n') == '2\\n'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n22 5\\n987 13') == '3'\nassert solution('2\\n10 10') == '1'\nassert solution('3\\n7 3') == '2'\nassert solution('3\\n5 3') == '1'\nassert solution('3\\n5 5') == '0'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n7 3''') == '3'\nassert solution('''1\n5 1''') == '1'\nassert solution('''22 5\n987 13''') == '5'\nassert solution('''7\n7 7''') == '3'\nassert solution('''9\n9 9''') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n'''\n\n'''\nFrom a set of values given by someone, find the minimum and the maximum value.\n\nEg: [1,2,3,4,5]\n\nMinimum = 1, Maximum = 5"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'\n\nassert solution('''7 3\n1 5\n22 5\n987 13\n123 43''') == '1'\n\nassert solution('''7 3\n1 5\n22 5\n987 13\n123 43\n123 43''') == '5'\n\nassert solution('''7 3\n1 5\n22 5\n987 13\n123 43\n123 43\n123 43''') == '77'\n\nassert solution('''7 3\n1 5\n22 5\n987 13\n123 43\n123 43\n123 43''') == '1'"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2\\n100 5') == '3'\nassert solution('2 4\\n3 4\\n100 5') == '1'\nassert solution('2 5\\n1 5\\n100 5') == '2'\nassert solution('2 5\\n1 6\\n100 5') == '5'\nassert solution('1 1\\n1 1\\n100 1') == '1'\n\"\"\"\n\nimport sys\nfrom typing import Tuple\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '1'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n1') == '5'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n1 1') == '77'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n1 1 1') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123') == 3\nassert solution('132') == 1\nassert solution('222') == 2\nassert solution('999') == 2\nassert solution('12345') == 3\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('10\\n5\\n') == '5'\nassert solution('2\\n5\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 2\n7 3\n13 6\n20 10\n''') == '1'\nassert solution('''1\n1 1\n2 2\n2 1\n''') == '2'\nassert solution('''2\n4 4\n2 1\n2 2\n''') == '2'\nassert solution('''3\n6 3\n5 3\n2 2\n1 3\n''') == '2'\nassert solution('''4\n3 4\n1 2\n2 2\n1 1\n''') == '3'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == '0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('codeforce') == '9 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('codeforces') == '9 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('abca') == '1 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('qwertyuioplkjhgfdsazxcvbnm') == '10 1 2 3 5 10 5 9 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\n\nassert solution('''1\n2 2\nasdf\n1 2\nqwertyuioplkjhgfdsazxcvbnm\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"\"\"\\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\"\"\"\n\nassert solution('''\\\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"\"\"\\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\"\"\"\n\nassert solution('''\\\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"\"\"\\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\"\"\"\n\nassert solution('''\\\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"\"\"\\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\"\"\"\n\nassert solution('''\\\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"\"\"\\\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\"\"\""
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    cnt = [0]*26\n    for i in range(len(p)):\n        cnt[ord(s[i])-ord('a')] += p[i]\n    for i in range(len(cnt)):\n        print(cnt[i], end=' ')\n    print()"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n\n\n\"\"\""
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(\"codeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0\"\n\"\"\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"20 10 1 2 3 5 10 5 9 4 11 8 2 7 5 1 10 1 5 2\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36\\n0\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n\nprint(solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6'''))\n\nassert solution('''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0\\n0\\n0\\n0\\n'\n\nassert solution('''6\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0\\n0\\n0\\n0\\n0\\n0\\n'\n\nassert solution('''6\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0\\n0\\n0\\n0\\n0\\n0\\n'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6'''\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6''') == '0\\n36\\n0\\n0\\n0\\n0\\n2'\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6'''\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6''') == '0\\n36\\n0\\n0\\n0\\n0\\n2'\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6'''\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6''') == '0\\n36\\n0\\n0\\n0\\n0\\n2'\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6'''\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6''') == '0\\n36\\n0\\n0\\n0\\n0\\n2'\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 1 5\n3 1 6\n5 1 4\n1 1 1\n3 1 5\n3 1 6\n2 1 3\n1 1 1\n3 1 5\n3 1 6'''\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 10 10\") == \"0\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7''') == '36\\n0\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n'''\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2') == '1'\nassert solution('3 3 3') == '0'\nassert solution('1 2 3') == '3'\nassert solution('1 1 1') == '0'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n'''\n0\n36\n0\n0\n1999999994\n1999999994\n2\n4\n'''\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution(\n'''\n1\n2\n4\n5\n''') == 'NO'\n\nassert solution(\n'''\n2\n6\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n'''\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n4') == 'NO'\nassert solution('1\\n1\\n2\\n3') == 'NO'\nassert solution('1\\n1\\n1\\n2') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n2') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test\").read()) == \"NO\\nYES\\nYES\\nYES\\nYES\\nNO\\n\"\nassert solution(open(\"test1\").read()) == \"YES\\nYES\\nNO\\nYES\\nNO\\nYES\\n\"\nassert solution(open(\"test2\").read()) == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\nassert solution(open(\"test3\").read()) == \"NO\\nYES\\n\"\nassert solution(open(\"test4\").read()) == \"YES\\nYES\\nNO\\n\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES\\n'\n\nassert solution('''\n7\n5\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO\\n'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == 'YES\\n'\n\nassert solution('''6\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == 'NO\\n'\n\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == 'NO\\n'\n\nassert solution('''10\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1''') == 'YES\\n'\n\nassert solution('''10\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1''') == 'NO\\n'"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n'4',\n'11 14 16 12',\n'2',\n'1 8',\n'4',\n'1 1 1 1',\n'4',\n'1 2 5 6',\n'2',\n'12 13',\n'6',\n'1 6 3 10 5 8',\n'6',\n'1 12 3 10 5 8',\n])) == 'YES'\n'''\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n4''') == 'YES'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n''') == 'YES'\nassert solution('''1\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n3\n1 2 2\n2\n1 2\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n1\\n2') == 'YES'\nassert solution('3\\n2\\n1\\n2') == 'YES'\nassert solution('4\\n2\\n1\\n2') == 'YES'\nassert solution('5\\n2\\n1\\n2') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\n\n\"\"\""
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5''') == '13'\nassert solution('''6 6 6\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5''') == '25'\nassert solution('''1 1 1\n1 2 1\n2 3 2\n1 4 2\n1 5 2\n1 6 2\n2 1 2\n2 2 2\n2 3 2\n3 4 2\n3 5 2\n3 6 2\n4 1 1\n4 2 1\n4 3 1\n4 4 1\n4 5 1\n4 6 1\n5 1 1\n5 2 1\n5 3 1\n5 4 1\n5 5 1\n5 6 1\n6 1 1\n6 2 1\n6 3 1\n6 4 1\n6 5 1\n6 6 1\n7 1 1\n7 2 1\n7 3 1\n7 4 1\n7 5 1\n7 6 1\n8 1 1\n8 2 1\n8 3 1\n8 4 1\n8 5 1\n8 6 1\n9 1 1\n9 2 1\n9 3 1\n9 4 1\n9 5 1\n9 6 1\n10 1 1\n10 2 1\n10 3 1\n10 4 1\n10 5 1\n10 6 1\n11 1 1\n11 2 1\n11 3 1\n11 4 1\n11 5 1\n11 6 1\n12 1 1\n12 2 1\n12 3 1\n12 4 1\n12 5 1\n12 6 1\n13 1 1\n13 2 1\n13 3 1\n13 4 1\n13 5 1\n13 6 1\n14 1 1\n14 2 1\n14 3 1\n14 4 1\n14 5 1\n14 6 1\n15 1 1\n15 2 1\n15 3 1\n15 4 1\n15 5 1\n15 6 1\n16 1 1\n16 2 1\n16 3 1\n16 4 1\n16 5 1\n16 6 1\n17 1 1\n17 2 1\n17 3 1\n17 4 1\n17 5 1\n17 6 1\n18 1 1\n18 2 1\n18 3 1\n18 4 1\n18 5 1\n18 6 1\n19 1 1\n19 2 1\n19 3 1\n19 4 1\n19 5 1\n19 6 1\n20 1 1\n20 2 1\n20 3 1\n20 4 1\n20 5 1\n20 6 1\n21 1 1\n21 2 1\n21 3 1\n21 4 1\n21 5 1\n21 6 1\n22 1 1\n22 2 1\n22 3 1\n22 4 1\n22 5 1\n22 6 1\n23 1 1\n23 2 1\n23 3 1\n23 4 1\n23 5 1\n23 6 1\n24 1 1\n24 2 1\n24 3 1\n24 4 1\n24 5 1\n24 6 1\n25 1 1\n25 2 1\n25 3 1\n25 4 1\n25 5 1\n25 6 1\n26 1 1\n26 2 1\n26 3 1\n26 4 1\n26 5 1\n26 6 1\n27 1 1\n27 2 1\n27 3 1\n27 4 1\n27 5 1\n27 6 1\n28 1 1\n28 2 1\n28 3 1\n28 4 1\n28 5 1\n28 6 1\n29 1 1\n29 2 1\n29 3 1\n29 4 1\n29 5 1\n29 6 1\n30 1 1\n30 2 1\n30 3 1\n30 4 1\n30 5 1\n30 6 1\n31 1 1\n31 2 1\n31 3 1\n31 4 1\n31 5 1\n31 6 1\n32 1 1\n32 2 1\n32 3 1\n32 4 1\n32 5 1\n32 6 1\n33 1 1\n33 2 1\n33 3 1\n33 4 1\n33 5 1\n33 6 1\n34 1 1\n34 2 1\n34 3 1\n34 4 1\n34 5 1\n34 6 1\n35 1 1\n35 2 1\n35 3 1\n35 4 1\n35 5 1\n35 6 1\n36 1 1\n36 2 1\n36 3 1\n36 4 1\n36 5 1\n36 6 1\n37 1 1\n37 2 1\n37 3 1\n37 4 1\n37 5 1\n37 6 1\n38 1 1\n38 2 1\n38 3 1\n38 4 1\n38 5 1\n38 6 1\n39 1 1\n39 2 1\n39 3 1\n39 4 1\n39 5 1\n39 6 1\n40 1 1\n40 2 1\n40 3 1\n40 4 1\n40 5 1\n40 6 1\n41 1 1\n41 2 1\n41 3 1\n41 4 1\n41 5 1\n41 6 1\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('5 6 2\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '22'\nassert solution('5 6 2\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '22'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3') == '13'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5') == '22'\nassert solution('2 2 1\\n1 2 2\\n2 1 2') == '2'\nassert solution('7 9 12\\n4 7 9\\n2 4 7\\n1 4 7\\n6 4 7\\n6 7 4\\n6 7 9') == '19'\nassert solution('7 9 12\\n4 7 9\\n2 4 7\\n1 4 7\\n6 4 7\\n6 7 4\\n6 7 9') == '19'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n6\\n1\\n1\\n5\\n2\\n3\\n1\\n5\\n4\\n7\\n6\\n5\\n3\\n3\\n4\\n3\\n2\\n6\\n2\\n3\\n3\\n6\\n4\\n2\\n6\\n6\\n1\\n5\\n1\\n5\\n2\\n6\\n4\\n3\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n5\\n2\\n5\\n4\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n5\\n2\\n5\\n4\\n3\\n2\\n6\\n2\\n5\\n2\\n5\\n4\\n3\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\n6\\n2\\n3\\n1\\n5\\n4\\n2\\"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5 2''') == '22'\nassert solution('''5 5 4''') == '13'\nassert solution('''7 4 2''') == '9'\nassert solution('''8 5 2''') == '9'\nassert solution('''2 2 4''') == '6'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 5\\n1 2 5\\n2 3 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '3 3 3\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5') == '13'\nassert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5\\n5 3\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n' +\n    '1 2\\n1 4\\n3 3\\n3 4\\n3 5"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4 4 4\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n') == '22'\nassert solution('3\\n3 3 3\\n1 2 5\\n2 3 4\\n1 4 3\\n3 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n7\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1 3 9 13 27 6561 19683'\nassert solution(\n'''\n5\n5\n6\n7\n8\n9\n''') == '4 4 6 5'\nassert solution(\n'''\n1\n2\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1 2 4 5'\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1 3 6 9 15 21 36 64'\nassert solution(\n'''\n3\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1 3 6 9 15 21 36 64'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n5\\n7\\n10') == '1\\n3\\n9'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1\\n3\\n7\\n9'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1\\n3\\n7\\n9'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"2 2 2\") == \"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\nassert solution(\"1\\n1\\n2\") == \"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0\") == \"0\\n0\"\nassert solution(\"1\\n1\") == \"0\\n0\"\nassert solution(\"1\\n2\") == \"0\\n0\"\nassert solution(\"1\\n3\") == \"0\\n0\"\nassert solution(\"1\\n4\") == \"0\\n0\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n3\\n1') == '2'\nassert solution('1\\n3\\n2') == '3'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6\\n2\\n1\\n2\\n4\") == \"1\\n2\\n3\\n3\\n5\\n5\"\nassert solution(\"3\\n3\\n3\\n3\") == \"1\\n1\\n1\\n1\"\nassert solution(\"6\\n2\\n6\\n2\\n6\\n6\") == \"2\\n2\\n2\\n2\\n2\\n2\"\nassert solution(\"5\\n2\\n5\\n2\\n5\\n2\") == \"1\\n2\\n2\\n2\\n2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n'''"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''5\n6\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''5\n6\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''6\n6\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''\n8\n6\n1 2 3 4 5 6 7 8\n3\n2 3 1\n6\n4 6 2 1 5 3\n2\n2 4 3 1\n6\n4 6 2 1 5 3\n1\n2 2 2 2\n4 4 4 1 4\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1') == '1 1 1 1 1\\n2 2 2 2 2'\nassert solution('2\\n3\\n1\\n3\\n2\\n1') == '3 3 3 1 1 3\\n1 1 1 1 1'\nassert solution('4\\n4\\n4\\n1\\n3\\n3\\n2\\n2') == '2 2 2 2 2'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1 1 1 1'\nassert solution('5\\n1\\n5\\n5\\n2\\n1') == '1 1 1 1 1\\n1 1 1 1 1'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1'\n\n\n\"\"\"\nimport itertools\n\nn = int(input())\nbook_seq = []\nfor i in range(n):\n    nums = map(int, input().split())\n    book_seq.append(nums)\n\nq = int(input())\nfor _ in range(q):\n    p = list(map(int, input().split()))\n    n = p[0]\n    p = p[1:]\n    dp = [0] * n\n    for i in range(n):\n        dp[i] = p.count(i + 1)\n    print(sum(dp))\n\n\"\"\""
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 1 1'\nassert solution('''3\n5\n4 1 3 2 5\n3\n1 2 4\n1\n2\n5\n3 4 1 2\n5\n4 1 2 3''') == '1 1 1 1 1'\nassert solution('''3\n3\n2 3 1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3'''\n) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution(\n'''10\n5\n1 2 3 4 5 6 7 8 9 10\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n5 3 2 1 4 3'''\n) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n1 1 1 1 1 1 1'''\n\nassert solution(\n'''20\n8\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n5 3 2 1 4 3\n4\n5 3 2 1 4 3\n4\n5 3 2 1 4 3'''\n) == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n3\n3\n1 2 3\n2 3 1\n1\n2 2 1\n3\n2 1 3\n2\n2 2 1\n1\n2\n2 1\n3\n3 1 2\n''') == '''1 1 1 \n3 3 \n2 3 2 1 3\n'''\nprint(solution('''\n9\n9\n1 2 3 4 5 6 7 8 9\n3\n2 3 4\n6 7 8 9\n1 2 3\n2 3 4\n2 3\n2 1 3\n3\n2 1 3\n3\n2 3 4 2 1 3\n2\n2 2 2 2\n1\n2\n2 2\n3\n3 3\n2 3\n2\n2 2\n1\n''')) == '''1 1 1 1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nprint(solution('''\n3\n3\n2 2 3\n2 2\n3\n1 2 1\n2 1 3\n2\n2 2 1\n1\n2\n2 1\n3\n3 1 2\n2\n2 2 2\n1\n''')) == '''1 1 1 \n3 3 \n2 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nprint(solution('''\n7\n7\n2 2 3 3 4 4 5 5 6 7\n3\n2 3 4\n6 7 8 9 10 11 12 13\n3\n2 3 4\n2 3 4 5 6 7 8 9 10\n1\n2 2 2 2 2 2 2\n1\n2\n2 2 2\n3\n3 3\n2 3\n2\n2 2\n1\n''')) == '''1 1 1 \n3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2 3 4\n''') == '5'\nassert solution('''3 5\n0 3 1\n''') == '3'\nassert solution('''5 4\n1 2 3 4 5\n''') == '4'\nassert solution('''2 3\n2 1\n''') == '3'\nassert solution('''3 2\n0 1 2\n''') == '2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1\n1 1\n''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5\n1 5''') == '8'\nassert solution('''3 5\n0 3 1''') == '7'\nassert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\nassert solution('''3 5\n1 5\n-1 2 6 4 0 3 \n''') == '-1'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '5 -2 4 -1 2'\nassert solution('5 2') == '2 0 1 3 4'\nassert solution('4 7') == '4'\nassert solution('5 1') == '0 1 2 3 4'\nassert solution('1 9') == '0 0 1 2 3'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\nassert solution('''4 4\n1 2 3 4\n-1 -2 -3 -4\n''') == '4'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('4\\n3') == '2'\nassert solution('5\\n3') == '2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n\") == \"4\"\nassert solution(\"2\\n1\\n\") == \"0\"\nassert solution(\"3\\n1\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n\") == \"4\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn, m = map(int, stdin.split())\ntrees = list(map(int, stdin.split()))\n\npeople = [0] * m\nfor i in range(m):\n    people[i] = int(stdin.readline())\n\ntrees.sort()"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2\\n\") == \"8\"\nassert solution(\"1 2\\n1 2\\n\") == \"0\"\nassert solution(\"2 1\\n1 2\\n\") == \"2\"\n\nassert solution(\"1 2\\n1 3\\n\") == \"2\"\nassert solution(\"1 2\\n2 3\\n\") == \"2\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n\") == \"NO\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == expected_output\nprint('Passes!')\n\"\"\"\n\nimport sys\n\ninput_ = None\nexpected_output = None\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"\\n\") == \"NO\"\nassert solution(\"2\\n\") == \"NO\"\nassert solution(\"2\\n1 1\\n\") == \"NO\"\nassert solution(\"2\\n1 1\\n1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n2\n1 0\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n3\n3\n1 0\n0 1\n1\n2\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n3\n1 0\n0 1\n1\n1\n\"\"\") == \"NO\""
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES', 'Example 1'\n\nassert solution('''5\n4\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES', 'Example 2'\n\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n2\n4 3\n''') == 'YES', 'Example 3'\n\nassert solution('''5\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES', 'Example 4'\n\nassert solution('''5\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n2\n4 3\n''') == 'NO', 'Example 5'"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"NO\\n\"\n\"YES\\n\"\n\"RUUURRRRUU\\n\"\n\"NO\\n\"\n\"YES\\n\"\n\"RRRRUUU\") == \"YES\"\nassert solution(\"NO\\n\"\n\"YES\\n\"\n\"RUUURRRRUU\\n\"\n\"NO\\n\"\n\"YES\\n\"\n\"RRRRUUU\") == \"RUUURRRRUU\"\nassert solution(\"NO\\n\"\n\"YES\\n\"\n\"RUUURRRRUU\\n\"\n\"NO\\n\"\n\"YES\\n\"\n\"RRRRUUU\") == \"RRRRUUU\"\nassert solution(\"NO\\n\"\n\"YES\\n\"\n\"RUUURRRRUU\\n\"\n\"NO\\n\"\n\"YES\\n\"\n\"RRRRUUU\") == \"RRRRUUU\"\nassert solution(\"NO\\n\"\n\"YES\\n\"\n\"RUUURRRRUU\\n\"\n\"NO\\n\"\n\"YES\\n\"\n\"RRRRUUU\") == \"RRRRUUU\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n\"\"\""
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1'''[1:-1]) == 'YES'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 5') == '1'\nassert solution('1 19') == '10'\nassert solution('10 1') == '0'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''500 4''') == '2128012501878'\nassert solution('''217871987498122 10''') == '899999999999999999'\nassert solution('''100000000000000001 1''') == '899999999999999999'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''500 4''') == '2128012501878'\nassert solution('''217871987498122 10''') == '899999999999999999'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n'''"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1''') == '8'\nassert solution('''1 1''') == '0'\nassert solution('''500 4''') == '2128012501878'\nassert solution('''217871987498122 10''') == '899999999999999999'\nassert solution('''100000000000000001 1''') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1') == '1\\n0\\n1\\n0'\nassert solution('1\\n1\\n1') == '0\\n0\\n0'\nassert solution('1000000001 1') == '1\\n0\\n0\\n0'\nassert solution('100000000000000001 1') == '0\\n0\\n1\\n0'\nassert solution('1000\\n200000\\n1000000') == '2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\n\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\n\nassert solution('''8\n7 150\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '4'\n'''\n\n'''"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n2\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2'\nassert solution(\n'''1\n2\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n5\n1 1 0 1 1\n6\n1 0 0 0"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('0\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('0\\n0\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '0'\nassert solution('5\\n7') == '2'\nassert solution('1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('4\\n1\\n0\\n0\\n1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''5\n5\n0 0 1 0 1 0\n5\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0\\n2\\n2\\n4\\n1'\nassert solution('''5\n5\n0 0 1 0 1 0\n4\n1 0 0\n4\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0\\n2\\n2\\n4\\n1'\nassert solution('''5\n5\n0 0 1 0 1 0\n4\n1 0 0\n4\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0\\n2\\n2\\n4\\n1'\nassert solution('''5\n5\n0 0 1 0 1 0\n4\n1 0 0\n4\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0\\n2\\n2\\n4\\n1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n10\\n8\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == '2'\nassert solution('2\\n1') == '1'\nassert solution('3\\n3') == '0'\nassert solution('5\\n1 1 0 0 1') == '2'\nassert solution('6\\n1 0 0 0 0 1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 1 0 1 0 1') == '2'\nassert solution('3') == '0'\nassert solution('5') == '2'\nassert solution('1 0 0') == '2'\nassert solution('1 1 0 0 1') == '2'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n\nfrom collections import Counter\nfrom itertools import permutations"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cbcacab\\naabcd\\nbaabab') == 'cbcacab'\nassert solution('ccbbaaa\\ncbcaca\\naabab') == 'baabab'\nassert solution('ccbbaaa\\nbaabac\\naabab') == 'baabab'\nassert solution('ccbbaaa\\naabab\\naabab') == 'baabab'\nassert solution('ccbbaaa\\naabab\\naabab') == 'baabab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\") == \"cbcacab\"\nassert solution(\"1\\n7 3\\n4 4\\n6 2\") == \"abcd\"\nassert solution(\"2\\n5 4\\n6 7\\n8 1\") == \"baabab\"\nassert solution(\"1\\n1 1\\n1 1\") == \"a\"\nassert solution(\"1\\n1 1\\n1 1\") == \"a\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a b c a a b') == 'b a b c a'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v x y z') == 'abcd'\nassert solution('xyz') == 'xyz'\nassert solution('x y z') == 'x y z'\nassert solution('x y a z') == 'xyza'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n4 4''') == 'cbcacab'\nassert solution('''2 3\n1 1''') == 'cbcacab'\nassert solution('''6 4\n6 3\n1 1\n1 4\n6 2\n4 4''') == 'cbcacab'\nassert solution('''9 3\n2 6\n3 1\n1 2\n4 4\n4 3\n2 3\n2 2\n1 1\n3 3''') == 'cbcacab'\nassert solution('''7 3\n2 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'cbcacab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\nassert solution('5') == 'e'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2') == 'cbcacab\\nabcd\\nbaabab'\nassert solution('3\\n4 3\\n6 2') == 'bcaabab\\nbaabab\\ncbcacab'\nassert solution('1\\n2 4\\n2 1\\n2 4\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'a'\n\nassert solution('1\\n1 3\\n1 3\\n2 1\\n1 1\\n2 1\\n1 1\\n2 1\\n2 1') == 'a'\n\nassert solution('1\\n2 1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 1') == 'b'"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''3\n7 3\n4 4\n7 2''') == 'cbcab'\nassert solution('''3\n7 3\n4 4\n6 4''') == 'abcd'\nassert solution('''3\n7 3\n7 4\n5 2''') == 'baabab'\nassert solution('''3\n7 3\n5 2''') == 'bcaaba'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cbcaca') == 'cbcacab'\nassert solution('cbcabca') == 'cbcacab'\nassert solution('cbcacab') == 'cbcacab'\nassert solution('cbcabc') == 'cbcacab'\nassert solution('cbcabca') == 'cbcacab'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nprint(solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''))\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nprint(solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''))\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 23 21'\nassert solution('2\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '2 1 2'\nassert solution('2\\n2\\n1\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 45 46'\nassert solution('2\\n2\\n1\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '2 1 2'\nassert solution('2\\n2\\n1\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '2 1 2'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"\n\nassert solution(\n'''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"\n\nassert solution(\n'''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"\n\nassert solution(\n'''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"\n\nassert solution(\n'''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\""
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''2\n3\n1 1 1\n2\n1 1 1\n''') == '6 0\\n1 1 1\\n'\nassert solution('''9\n3\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n10\n1 2 3 4 5 6 7 8 9\n1\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '6'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '27'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '27'\nassert solution('2\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '27'\nassert solution('2\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '27'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == 3\nassert solution(\"1\\n3\\n2\\n\") == 1\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == 6\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == 27\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == 39\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\n'''\n\n'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '1 2 3 4'\nassert solution('1 2') == '1 2'\nassert solution('2 2') == '1 2'\nassert solution('2 3') == '1 2'\nassert solution('2 4') == '1 2'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n\") == \"3\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == ''\nassert solution('3 3') == '2'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''6\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''6\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''6\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''6\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('3 1\\n2 3 4 4 1 2 1 3\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('1 2\\n2 3 4') == '0 2 4'\n\n\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution(\n'''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''10 2\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''10 2\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''10 2\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_stdout\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0 7 13 18 24 35 36 37 40 45'\n\n\"\"\""
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''7 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''3 1\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''7 0\n0 0 0 0 0 0 0 0 0''') == '0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\n\n\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'abb'\nassert solution(stdin) == 'baaab'\nassert solution(stdin) == 'aaaaabaaaaabaaaaaaaa'\n\n\n\n\"\"\""
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ab') == 'a'\nassert solution('abcd') == 'abcd'\nassert solution('abcdef') == 'abcdef'\nassert solution('abcdcdabcdcd') == 'abcdcdabcdcd'\nassert solution('abcdefg') == 'abcdefg'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa\\n'\n\n'''\n\nTesting 5\n\nSubmit 1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb\\nbaaab\\nabb\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa'\nassert solution('''6\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'baaab\\nbbaaa\\nabb\\nbab\\nabab\\nabbab'\nassert solution('''4\n6 4\n7 4\n5 3\n3 2\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asd\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aba\") == \"aba\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('foo\\nbar') == 'f'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '1234'\nassert solution('1\\n1\\n2\\n3') == '3'\nassert solution('3\\n2\\n2\\n1') == '1'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"aaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n\n\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('stdin') == '6\\n1\\n5'\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdfasdf') == ''\nassert solution('asdf') == ''\nassert solution('asdfasdf asdf') == ''\nassert solution('asdfasdf asdf asdf asdf asdf') == ''\nassert solution('asdf asdf') == ''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == '6'\nassert solution(\n\"\"\"\n1\n0\n1000000000\n1000000000\n10\n100000\n\"\"\") == '1'\nassert solution(\n\"\"\"\n2\n8 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n') == '6\\n1\\n5\\n10'\n\"\"\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\n\n'''\n\nimport sys\nimport re"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n1') == '0'\nassert solution('4\\n1') == '0'\nassert solution('10\\n1') == '0'\nassert solution('20\\n1') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(7)\n\n\n\"\"\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n3\\n4\\n7\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('3 3\\n1\\n2\\n1\\n2\\n\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\nassert solution('2 3\\n0\\n1\\n1\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\nassert solution('3 3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''2 2\n0\n0\n''') == '0'\nassert solution('''2 2\n1\n1\n''') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"3\\n3\\n3\\n3\\n3\\n7\"\nassert solution(\"3\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\\n0\\n7\"\nassert solution(\"3\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\\n0\\n7\"\nassert solution(\"3\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\\n0\\n7\"\nassert solution(\"3\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\\n0\\n7\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"9\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n2\\n3') == '0'\nassert solution('0\\n1\\n2\\n3') == '3'\nassert solution('0\\n2\\n1\\n3') == '0'\nassert solution('2\\n2\\n2\\n3') == '0'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''\n\n>>> solution('''4 1 5\n4 9 7\n4 9 7\n4 9 7\n5 8 1\n5 8 1\n5 8 1\n5 8 1\n5 8 1\n5 8 1\n''')\n'1 5 9\\n9 1 5\\n1 5 9\\n9 1 5\\n1 5 9\\n9 1 5\\n1 5 9\\n9 1 5\\n1 5 9\\n1 5 9\\n9 1 5'\n'''\n\n>>> solution('''6 7 5\n6 7 5\n6 7 5\n6 7 5\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n''')\n'7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7'\n'''\n\n>>> solution('''6 7 5\n6 7 5\n6 7 5\n6 7 5\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n7 7 4\n''')\n'7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7\\n7 7 7'\n'''\n\n>>> solution('''5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n5 2 5\n''')\n'5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5'\n'''\n\n>>> solution('''6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9\n6 4 9"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1 2 3\\n4 5 6\\n7 8 9'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''\nassert solution('''5\n5 1 50\n5 20 50\n5 3 8\n9 13 22\n''') == '1 50\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''\nassert solution('''5\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n''') == '1 50\\n1 50\\n1 50\\n1 50\\n1 50'\n'''\nassert solution('''5\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n''') == '1 50\\n1 50\\n1 50\\n1 50\\n1 50'\n'''\nassert solution('''5\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n5 1 50\n''') == '1 50\\n1 50\\n1 50\\n1 50\\n1 50'\n'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 4 7 9\\n') == '1 2 4 7 9'\nassert solution('5 2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n') == '1 2 4 7 9\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('2 2 3\\n') == '2 2 3'\nassert solution('2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2 4') == '1 4 2'\nassert solution('1 2 4 5') == '1 4 5 2'\nassert solution('1 4 3') == '1 4 3'\nassert solution('1 4 3 5') == '1 4 5 3'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1') == '1\\n2'\nassert solution('2\\n1\\n1') == '1\\n2'\nassert solution('1\\n2\\n1\\n2\\n1') == '1\\n2\\n1'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1') == '1\\n2\\n1'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1') == '1\\n2\\n1'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10'\nassert solution('''5 3 8\n9 13 22\n5 10 22''') == '1 10 13 4 19 22 25 16 7'\nassert solution('''8 7 5\n2 1 22\n7 4 6\n5 2 22\n1 10 22\n11 19 22\n12 20 22\n13 22 22\n14 22 22\n15 22 22\n16 22 22\n17 22 22\n18 22 22\n19 22 22\n''') == '1 22\\n22 22\\n14 22 22\\n
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"2 1 3\") == \"1 2 3\"\nassert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"3 3 1 2\") == \"1 2 3\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('2 1 3') == '2 1 3'\nassert solution('3 2 1') == '3 2 1'\nassert solution('3 2 1 4') == '3 2 4 1'\nassert solution('5 3 1 4 2') == '1 2 3 4 5'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7 8 9'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split(' ')))\na.sort()\nfor i in a:\n    print(i, end=' ')\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"2 3 1 4 3 2\") == \"1 2 3 4\"\nassert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"2 3 1 4 3 2\") == \"1 2 3 4\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('2 2 3 3') == '3 2 1'\nassert solution('2 3 1') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 1 2 3 4 4') == '1 1 2 3 4'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('3 1 2') == '1 2 3'\nassert solution('3 3 1 2') == '1 2 3'\nassert solution('2 2 1 1') == '1 2 1 2'\nassert solution('1 2 2 1') == '1 2 2 1'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution(\n'''\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution(\n'''\n1\n2\n2\n3\n3\n4\n4\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1') == 'YES'\nassert solution('2\\n2') == 'YES'\nassert solution('2\\n3') == 'YES'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO\\n'\nassert solution('2\\n3\\n4\\n5\\n') == 'NO\\n'\nassert solution('2\\n2\\n3\\n4\\n5\\n') == 'YES\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO\\n'\nassert solution('2\\n2\\n3\\n4\\n5\\n') == 'YES\\n'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution(\n'''3\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution(\n'''2\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''4\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''3\n4\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n1\\n2\\n1\") == \"YES\"\nassert solution(\"2\\n1\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n3\\n2\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asds') == 'NO'\nassert solution('1 2 2 3 4 2 2 8 8') == 'YES'\nassert solution('2 3 4 2 2 8 8') == 'NO'\nassert solution('3 3 3 3') == 'NO'\nassert solution('5 5 5 5') == 'NO'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n') == '1 2'\nassert solution('2\\n2\\n') == '2 1'\nassert solution('1\\n2\\n') == '2 1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('5\\n10\\n2\\n4\\n6') == '3 1 4 2'\nassert solution('5\\n10\\n2\\n4\\n6\\n7') == '5 3 6 2 4 1'\nassert solution('5\\n10\\n2\\n4\\n6\\n7\\n13') == '5 3 6 2 4 1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('3\\n4') == '-1'\nassert solution('3\\n5') == '2 1'\nassert solution('3\\n6') == '2 3'\nassert solution('3\\n7') == '2 5'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"-1\"\n1 2 3 4 5 6 7 8 9 10 11 12 13\n9 8 7 6 5 4 3 2 1\n\n3 3 2 2\n3 2 3\n2 3 2\n1 3 2\n1 2 3\n2 1 3\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1 1\n1 1 2\n2 1 1\n2 2 1\n2 2 2\n2 2 2\n1 1"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1') == '2 1\\n'\nassert solution('1\\n2\\n3') == '3 2 1\\n'\nassert solution('1\\n3\\n3') == '3 1 3\\n'\nassert solution('2\\n2\\n2') == '-1\\n'\nassert solution('2\\n2\\n4') == '4 2 1\\n'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n10\n4\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2 \\n'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n\nclass Solution:\n    def __init__(self):\n        self.s = []\n\n    def generatePermutation(self, start, end, result):\n        if start == end:\n            self.s.append(self.s[::-1])\n            return\n        for i in range(start, end):\n            self.s[i], self.s[start] = self.s[start], self.s[i]\n            self.generatePermutation(start + 1, end, result)\n            self.s[i], self.s[start] = self.s[start], self.s[i]\n\n    def solve(self, n):\n        if n < 2:\n            print(-1)\n            return\n        self.s = list(range(1, n + 1))\n        self.generatePermutation(0, n, [])\n        for i in self.s:\n            print(i, end=' ')\n        print()\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n2\\n4\\n2\\n2') == '2 6 10 8 4 7 3 1 5 2'\nassert solution('2\\n4') == '3 1 4 2'\nassert solution('4\\n6\\n7\\n13') == '-1'\nassert solution('4\\n6\\n7\\n1') == '-1'\nassert solution('1\\n2\\n3\\n4') == '3 1 4 2'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 5') == '0'\nassert solution('5 3 2 1') == '-1'\nassert solution('7') == '0'\nassert solution('5 3 2 1 4') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution('''4\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n1\\n') == ''\nassert solution('3\\n2') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('a') == -1\nassert solution('a b c') == -1\nassert solution('1 2 3') == 0\nassert solution('4') == -1\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 2 7 6\") == \"-1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\nassert solution(\"1 2\") == \"\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '0'\nassert solution('3\\n1') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"3 2 7 6\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"3 2 7 6\") == \"2\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == \"2 2 2 2 2 1 1 0 2\"\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\n\nassert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n1 4\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == \"0 -1 1 -1\"\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\n\n'''\n- O(n) time\n- O(n) space\n'''\n\n'''\nMaximum number of black vertices\n\nGiven a tree with $n$ vertices and a set of edges of tree, we want to find the maximum number of black vertices for each vertex $v$, where the number of black vertices of a subtree contains the vertex $v$.\n\nExample\n\nThe diagram below shows the maximum number of black vertices for the above tree.\n\n(a) The graph has $n = 9$ vertices and is depicted by the following diagram.\n\n(b) If we choose the subtree with a vertex $v$ as the root, there are two cases:\n\n(c) If $v$ is black, the number of black vertices is equal to the number of black vertices in the left subtree and the number of black vertices in the right subtree.\n\n(d) If $v$ is white, the number of black vertices is equal to the number of black vertices in the right subtree.\n\n(e) If we choose a subtree that contains $v$ as the root, then $v$ is not a black vertex.\n\n(f) The left subtree and the right subtree are both black, so the number of black vertices is the maximum number of black vertices in the left subtree and the maximum number of black vertices in the right subtree.\n\n(g) The right subtree and the left subtree are both black, so the number of black vertices is the maximum number of black vertices in the right subtree and the maximum number of black vertices in the left subtree.\n\n(h) The left subtree and the right subtree are both white, so the number of black vertices is the maximum number of black vertices in the right subtree.\n\n(i) The right subtree and the left subtree are both white, so the number of black vertices is the maximum number of black vertices in the left subtree.\n\n(g) The number of black vertices in the left subtree is $1$ and the number of black vertices in the right subtree is $3$ so the maximum number of black vertices is $3$.\n\n(h) The number of black vertices in the left subtree is $0$ and the number of black vertices in the right subtree is $2$ so the maximum number of black vertices is $2$.\n\n(i) The number of black vertices in the right subtree is $0$ and the number of black vertices in the left subtree is $2$ so the maximum number of black vertices is $2$.\n\n(j) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(k) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(l) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(m) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(n) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(o) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(p) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(q) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(r) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(s) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(t) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(u) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(v) The number of black vertices in the right subtree is $2$ and the number of black vertices in the left subtree is $0$ so the maximum number of black vertices is $2$.\n\n(w) The number of"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\t\\n\") == \"\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n5\n0 0 1 1 0\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n4 5\n''') == '0 -1 1 -1'\nassert solution('''\n2\n0 0 1\n1 2\n''') == '0 -1 1'\nassert solution('''\n3\n0 0 1 1\n1 2\n1 3\n1 4\n2 4\n2 5\n2 6\n''') == '0 -1 1 -1'\nassert solution('''\n10\n0 0 1 1 0 0 0 0 1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n3 6\n4 7\n5 8\n6 9\n7 8\n8 9\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n-----Benchmark-----\n\nThe code above takes less than a millisecond to execute.\n\n------Detection of compiler optimizations------\n\nIf the compiler finds that the inputs are identical, it will compile an optimized version of the program. It is not always possible to avoid this by running a trial program. If the program is faster on the first run, it might have good chances to run an optimized version on the second run.\n\n-----Limitations of this approach-----\n\nThis approach is only guaranteed to work if the compiler optimizations are turned off, otherwise, it is likely to have bugs.\n\n------Efficiency------\n\nThe code above takes almost exactly 30-40% of the time of `solution_1`.\n\n------Alternatives------\n\nCreate a separate function and use it in a solution of a problem."
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n1 1') == '0'\nassert solution('1\\n1 0') == '-1'\nassert solution('2\\n1 0 0') == '1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''\n3\n0 0 1 0\n1 2\n1 3\n''') == '0 -1 1 -1'\n'''\n\nprint(solution('''\n8\n1 1 1 1 1 1 1 1\n2 2\n1 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n'''))\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '''0\n-1\n2\n-1\n-1\n12\n36'''\nassert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '''0\n-1\n2\n-1\n-1\n12\n36'''\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1''') == '''0\n0\n0\n0\n0\n0\n0\n0'''\nassert solution('''1\n1\n2\n1\n1\n1\n1\n1''') == '''0\n0\n0\n0\n0\n0\n0\n0\n0'''\nassert solution('''5\n12\n12\n12\n12\n12''') == '''0\n0\n0\n0\n0\n0\n0\n0'''\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('14') == '4'\nassert solution('16') == '2'\nassert solution('14') == '4'\nassert solution('10') == '2'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 0\nassert solution('2') == -1\nassert solution('3') == 1\nassert solution('12') == 2\nassert solution('12345') == 3\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7''') == '0'\nassert solution('''1''') == '-1'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '-1'\nassert solution('''12''') == '-1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(''.join(input().splitlines())) == str(solution(''.join(input().splitlines())))"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BBBBB') == 'BBBBB'\nassert solution('B') == 'BB'\nassert solution('RRR') == 'RRR'\nassert solution('BGBGBGB') == 'BBGGBGB'\nassert solution('RGGBGGB') == 'RGGBGGB'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"examples/example_1.txt\").read()) == 1\nassert solution(open(\"examples/example_2.txt\").read()) == 3\nassert solution(open(\"examples/example_3.txt\").read()) == 3\nassert solution(open(\"examples/example_4.txt\").read()) == 1\nassert solution(open(\"examples/example_5.txt\").read()) == 0\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"BGGGG\") == 1\nassert solution(\"RBRGR\") == 0\nassert solution(\"BBBRR\") == 3\nassert solution(\"BRGRG\") == 1\nassert solution(\"BRGGB\") == 2\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RGBRGBRGB') == 1\nassert solution('BBBRR') == 0\nassert solution('BRGGR') == 3\nassert solution('GGGRGBGGRG') == 1\nassert solution('RRRBBBBBRRBBRRBBRRBBRBBRRRBBBBBRRRBBBBBBBRBBRRRRRBBBBBBBRBBRRRBRBBBBBRRRBRRBBRRRRRBBBBBRRRBBBBBBBRRBBRBRRRBBBBBBBRRRBRRRRRBBBBBBBRRBBRRRRRBBBBBBBRRRBRRRRRBBBBBBBRRRBRRRRRBBBBBBBRRRBRRRRRBBBBBBBRRRRRRRBBBBBBBRRRBRRRRRBBBBBBBRRRBRRRRRBBBBBBBRRRRRRRBBBBBBBRRRRRRRRBBRRRRRBBBBBBBRRRRRRRRRBBBBBBBRRRRRRRRRBBBBBBBRRRRRRRRRBBBBBBBRRRRRRRRRRBBRRRRRBBBBBBBRRRRRRRRRRBBRRRRRBBBBBBBRRRRRRRRRRBBRRRRRRBBRRRRRRRBBBBBBBRRRRRRRRRRBBRRRRRRBBRRRRRRRBBBBBBBRRRRRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRRBBBBBBBRRRRRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRRRRRBBRRR"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\ns = stdin.readline().strip()\n\nans = 0\n\nfor i in range(n - k + 1):\n    if s[i] == 'R':\n        ans += 1\n    elif s[i] == 'G':\n        ans += 2\n    else:\n        ans += 3\n\nprint(ans)"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RGGGG\") == \"0\"\nassert solution(\"BGGG\") == \"1\"\nassert solution(\"RRRRR\") == \"2\"\nassert solution(\"RBRBR\") == \"1\"\nassert solution(\"GGBBB\") == \"0\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"8\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n\"\"\") == \"3\\n3\\n\"\n\nassert solution(\"\"\"2\n1\n1 1 1 1 1 2 2\n\"\"\") == \"3\\n3\\n\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nimport sys\n\nexpected = \"\"\"7\n7\n3 1 2 3 1\n3\n1 1 1 1 1 2 2\n\"\"\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '6'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '4'\nassert solution('2\\n3\\n3\\n3\\n3\\n3') == '0'\nassert solution('2\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('2\\n3\\n3\\n3\\n3\\n3') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(map(chr, range(ord('A'), ord('Z') + 1)))) == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\"\"\""
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''5\n5\n1 2 4 3 5\n1\n1\n4\n4 3 2 1''') == '1 2 3 4 5'\nassert solution('''4\n5\n1 2 4 3 5\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'\nassert solution('''1\n1\n4\n4 3 2 1''') == '1 4 3 2'\nassert solution('''4\n4\n1 2 4 3\n4\n1 2 4 3''') == '1 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\n\n\n'''\n1. The array is in order, i.e., for each $i$ from $1$ to $n$-1, the element at index $i$ is less than or equal to the element at index $i+1$.\n2. The optimal solution is the array that minimizes the cost of the operation (sum over $i$ of the absolute difference between the element at index $i$ and the element at index $i+1$). This is an optimal solution.\n3. The minimum cost for the operation is the absolute difference between the element at index $i$ and the element at index $i+1$.\n'''\n\n'''\nThe idea is to reverse the input array and do the following:\n\nFirst, find the index of the element that is smaller than its next element. Let's call it `k`. For example, if the array is `[5, 4, 3, 1, 2]`, then the smallest element in the array is `1`, and the next smallest element is `2`. We can get the `k` of `1` by reversing the array, `[2, 1, 3, 4, 5]` and then finding the index `i` of the first element that is larger than `k`. Thus, we get `k` as `1`.\n\nThen we want to swap the `k` and the element that is smaller than `k` at index `i` to get the result. To swap the `k` and the element at index `i`, we need to make sure that the element `i` is the minimum element in the array. For example, if we swap `k` and the element at index `i`, then `[2, 1, 3, 4, 5]` becomes `[1, 5, 4, 3, 2]` and `k` becomes `1`.\n\nFinally, `[1, 5, 4, 3, 2]` is the result.\n\nIn this problem, the array is not in order, so we must find the lexicographically smallest permutation. We can use the binary search algorithm to find the answer.\n'''\n\n'''\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'\nassert solution('''4\n4\n4 3 2 1\n''') == '1 2 3 4\\n1 2 3 4\\n'\nassert solution('''4\n4\n4 3 2 1\n''') == '1 2 3 4\\n1 2 3 4\\n'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4\\n1 2 3 4\\n1\\n1 4 3 2\\n'\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '1 2\\n3 2'\nassert solution('3\\n3\\n3') == '3\\n3\\n3'\nassert solution('1\\n2\\n1') == '1 2\\n1 2'\nassert solution('2\\n2\\n1') == '2\\n1 2'\nassert solution('3\\n1\\n3') == '1 3\\n3 1'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '1 5 2 4 3'\nassert solution('2\\n1\\n1\\n1\\n2') == '1 1 1 2'\nassert solution('3\\n1\\n2\\n3\\n4\\n5') == '1 2 3 4 5'\nassert solution('4\\n1\\n2\\n3\\n4') == '1 3 4 2'\nassert solution('5\\n5\\n5\\n5') == '5 5 5 5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3\\n') == '1\\n3\\n2\\n'\nassert solution('2\\n1\\n2\\n3\\n') == '3\\n1\\n2\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n'\nassert solution('2\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('3\\n1\\n') == 'NO'\nassert solution('4\\n1\\n') == 'YES'\nassert solution('5\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n'''\n) == 'YES'\n\nassert solution(\n'''3\n2\n2 1\n1\n1 2\n'''\n) == 'YES'\n\nassert solution(\n'''3\n3\n1 2 3\n1 3 2\n1 2 3\n'''\n) == 'NO'\n\nassert solution(\n'''4\n4\n1 2 3 4\n1 3 2\n1 3 2\n1 3 2\n'''\n) == 'YES'\n\nassert solution(\n'''4\n4\n1 2 3 4\n1 3 2\n2 1 4 3\n2 1 3 4\n1 2 3 4\n'''\n) == 'YES'"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a b\") == \"\"\nassert solution(\"a b c\") == \"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('input_data.txt', 'r').read()) == open('output_data.txt', 'r').read()\n'''"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'NO\\nYES\\nNO\\nYES\\nYES'\nassert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'NO\\nNO\\nYES\\nNO\\nYES'\nassert solution('1\\n5\\n1 2 3 4 5\\n3\\n1 3 2 4 5\\n5\\n1 2 3 4 5\\n5') == 'YES\\nYES\\nNO\\nNO\\nYES'\nassert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'NO\\nNO\\nNO\\nYES\\nYES'\nassert solution('1\\n5\\n1 2 3 4 5\\n3\\n1 3 2 4 5\\n5\\n1 2 3 4 5\\n5') == 'NO\\nNO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n3\n1 2 3\n5\n1 2 3 4 5''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n5\n1 2 3 4 5\n3\n1 2 3\n5\n1 2 3 4 5''') == 'YES'\nassert solution('''5\n3\n1 2\n3\n1 2\n3\n1 2\n3\n1 2\n3\n1 2\n3''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n5\n1 2 3 4 5\n4\n1 2 3\n5\n1 2 3 4 5''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n2\n3 4 1 5\n''') == 'YES'\nassert solution('''\n1\n1\n1\n''') == 'YES'\nassert solution('''\n6\n5\n1 2 3 4 5\n1\n1 2 3 4\n''') == 'NO'\nassert solution('''\n4\n4\n1 2 3 4\n3\n1 3 2\n4\n1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2 2 1 1 2 2 2 1 1 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1') == 'YES'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 1 1') == 'YES'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n5 3\n1 1\n2 2\n100000 50010\n''') == '5\\n5\\n5\\n5\\n5'\n\nassert solution('''5\n5 3\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n5\\n5\\n5\\n5'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n5\\n5\\n5\\n5'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n5\\n5\\n5\\n5'"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''2\n2 3\n3 4\n4 5\n3\n5 7\n2\n2\n2\n1\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n2\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n2\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n2\n1\n2\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n2\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n2\n1\n1\n2\n1\n2\n2\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n2\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n2\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n2\n2\n2\n1\n2\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n2\n2\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010''') == '5\\n18\\n10\\n6\\n75015\\n75015\\n75015\\n75015\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010''') == '5\\n18\\n10\\n6\\n75015\\n75015\\n75015\\n75015\\n75015\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010''') == '5\\n18\\n10\\n6\\n75015\\n75015\\n75015\\n75015\\n75015\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n100000 50010''') == '5\\n18\\n10\\n6\\n75015\\n75015\\n75015\\n75015\\n75015\\n75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n1\") == \"\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n1 3\\n1 7\\n1 6\\n2 6\\n2 5\\n2 4\\n2 4\\n2 3\\n3 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '8\\n7\\n6\\n5\\n4\\n4\\n3\\n2\\n1'\nassert solution('5\\n1 2\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '4\\n3\\n2\\n1'\nassert solution('6\\n1 2\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '5\\n4\\n3\\n2'\nassert solution('8\\n1 3\\n1 7\\n1 6\\n2 6\\n2 5\\n2 4\\n2 4\\n2 3\\n3 2\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '8\\n7\\n6\\n5\\n4\\n4\\n3\\n2\\n1'\nassert solution('5\\n1 2\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '4\\n3\\n2\\n1'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50999\n''') == '5\\n18\\n10\\n6\\n73993'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50000\n''') == '5\\n18\\n10\\n6\\n87916'\n\nassert solution('''5\n5 2\n100000 50000\n''') == '5\\n87916'\n\nassert solution('''5\n5 2\n100000 50000\n''') == '5\\n87916'"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('2\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('3\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('4\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('100000\\n2147483647') == '2147483647'\nassert solution('1\\n1') == '0'\nassert solution('2\\n100000') == '0'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n10 3''') == 'NO'\nassert solution('''1 2\n3 3''') == 'YES'\nassert solution('''1 2\n1 1''') == 'YES'\nassert solution('''1 2\n1000 1000''') == 'YES'\nassert solution('''1 2\n1000 1000''') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == '''\\\nYES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n'''\n\nassert solution('''\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '''\\\nYES\n1\n3\nNO\n5\n11\n21\n31\n41\n53\n65\n81\n97\n'''\n\nassert solution('''\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '''\\\nYES\n3\nNO\n5\n11\n21\n31\n41\n53\n65\n81\n97\n'''\n\nassert solution('''\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '''\\\nYES\n3\nNO\n5\n11\n21\n31\n41\n53\n65\n81\n97\n'''\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n'''\nSample 1\n\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\nOutput:\nYES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n\nNote:\n\n1 <= k <= 100\n1 <= n <= 10^9\n'''\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''10 3\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''10 3\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''10 3\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''5 3\n1000 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''5 3\n1000000000 9\n''') == 'YES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''5 3\n1000000000 9\n''') == 'NO\\nNO\\nNO\\nNO\\nNO'\n\nassert solution('''1 1 1 1 1 1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('Hello World!') == 'NO'\nassert solution('*&^%$#@!@#$%^&') == 'YES'\nassert solution('111222333444445556666') == 'NO'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n2\\n1\\n') == 'NO'\nassert solution('1\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n1\\n1\\n'\nassert solution('1\\n2\\n1\\n') == '1\\n1\\n1\\n'\nassert solution('1\\n2\\n3\\n') == '1\\n3\\n2\\n'\nassert solution('1\\n2\\n3\\n4\\n') == '1\\n3\\n2\\n4\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '1\\n4\\n5\\n2\\n6\\n3\\n7\\n'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n[1, 3, 4]\n\"\"\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\n'''\nimport sys"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 10 100\") == \"55\"\nassert solution(\"23 34 45\") == \"51\"\n\n\"\"\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n15000000000000000\\n51'\nassert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n9 4 2') == '3\\n2\\n1'\nassert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n9 4 2\\n5 3 1') == '4\\n55\\n15000000000000000\\n51'\nassert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n9 4 2\\n5 3 1\\n2 1 1') == '3\\n2\\n1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''1\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '1\\n55\\n15000000000000000\\n51'\nassert solution('''1\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n123456789012345678901234567890123456789012345678901234567890\n''') == '1\\n55\\n15000000000000000\\n51'\nassert solution('''1\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n123456789012345678901234567890123456789012345678901234567890\n''') == '1\\n55\\n15000000000000000\\n51'\n'''\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 10 100''') == '55'\nassert solution('''10000000000000000 10000000000000000 10000000000000000''') == '51'\nassert solution('''23 34 45''') == '15000000000000000'\nassert solution('''1 3 4''') == '4'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"\"\"4\n55\n15000000000000000\n51\"\"\"\n\nassert solution(\n\"\"\"10\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"\"\"46\n27\n1400000000000000\n15000000000000000\"\"\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n\nassert solution(\n    \"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n\nassert solution(\n    \"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n\nassert solution(\n    \"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n\nassert solution(\n    \"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\") == \"6\\n3\\n5\\n4\\n15\\n10\""
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cbaa') == '2'\nassert solution('abcbac') == '6'\nassert solution('aaebdbabdbbddaadaadc') == '15'\nassert solution('ecbedececacbcbccbdec') == '10'\nassert solution('abcdaaa') == '5'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('abcd') == ''\nassert solution('abcdefghij') == ''\nassert solution('cba') == ''\nassert solution('abcd') == ''\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(TEST_CASES[0]) == SOLUTION_CASES[0]\nassert solution(TEST_CASES[1]) == SOLUTION_CASES[1]\nassert solution(TEST_CASES[2]) == SOLUTION_CASES[2]\nassert solution(TEST_CASES[3]) == SOLUTION_CASES[3]\nassert solution(TEST_CASES[4]) == SOLUTION_CASES[4]\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''3 4\nabca\nabcb\nabc\n''') == '3'\n'''\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a\\nb\\nc\\na\\nc\\na\\nb\\na\\na\\nb\\na\\na\\nb\\na\\na\\na\\na\\na\\na\\na\\nb\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\nb\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"YES\n1 3 5\nNO\nNO\"\"\"\nassert solution(\"\"\"3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"NO\nNO\nYES\"\"\"\nassert solution(\"\"\"3\n5 5\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"NO\nNO\nYES\"\"\"\nassert solution(\"\"\"3\n5 5\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"NO\nNO\nNO\"\"\"\nassert solution(\"\"\"3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\"\"\") == \"\"\"YES\n1 3 5\nNO\nNO\"\"\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asd\") == \"\"\nassert solution(\"asd\\nasd\") == \"\"\nassert solution(\"2 2\\nasd\") == \"\"\nassert solution(\"2 2\\nasd\") == \"\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5''') == 'YES\\n1 3 5'\n\nassert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5''') == 'NO\\n'\n\nassert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5''') == 'NO\\n'\n\nassert solution('''5 3\n5 4\n1 2 3 4 5''') == 'NO\\n'\n\nassert solution('''5 4\n1 2 3 4 5''') == 'NO\\n'"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"1\\n3\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"NO\\nNO\"\nassert solution(\"1\\n3\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"1\\n3\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"NO\\nNO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES\\n1 3 5\\n'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'NO\\n'\n\n\n\n---    \n    def solution(stdin: str) -> str:\n        pass\n\nassert solution(stdin) == 'NO\\n'\n\n\n\n---    \n    def solution(stdin: str) -> str:\n        pass\n\nassert solution(stdin) == 'NO\\n'\n\n\n\n---    \n    def solution(stdin: str) -> str:\n        pass\n\nassert solution(stdin) == 'NO\\n'\n\n\n\n---    \n    def solution(stdin: str) -> str:\n        pass\n\nassert solution(stdin) == 'NO\\n'\n\n\n\n---    \n    def solution(stdin: str) -> str:\n        pass"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n7 18 3 14 1''') == 'YES'\nassert solution('''5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'\n\n\n\n'''\n\n5 5\n1 2 3 4 5\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n1 2 8 4 10 2\n\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n00000010100101000001111010011100\n''') == '964176192'\n\nassert solution(\n'''\n111111111111111111111111111111101\n''') == '3221225471'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('00000010100101000001111010011100') == 964176192\nassert solution('11111111111111111111111111111101') == 3221225471\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"00000000000000000000000000000000\") == \"0\"\nassert solution(\"11111111111111111111111111111111\") == \"3221225471\"\n\"\"\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"11111111111111111111111111111110\") == 2147483647\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\nassert solution('11111111111111111111111111111110') == '-3221225471'\nassert solution('00111001011110000010100101000000') == '964176192'\nassert solution('00111001011110000010100101000010') == '3221225471'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('111111111111111111111111111111101') == '3221225471'\nassert solution('0') == '0'\nassert solution('111111111111111111111111111111111') == '3221225471'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1000000111') == '1000000111'\nassert solution('0') == '0'\nassert solution('111111111111111111111111111111') == '3221225471'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(111) == \"3221225471\"\nassert solution(22) == \"1011001101000001\"\nassert solution(8) == \"10000000100000001\"\nassert solution(5) == \"10101\"\nassert solution(0) == \"0\"\n\n\"\"\""
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(0b11111111111111111111111111111111) == 0b11111111111111111111111111111111\nassert solution(0b11111111111111111111111111111110) == 0b11111111111111111111111111111111\nassert solution(0b11111111111111111111111111111111) == 0b11111111111111111111111111111111\nassert solution(0b11111111111111111111111111111111) == 0b11111111111111111111111111111111\nassert solution(0b11111111111111111111111111111111) == 0b11111111111111111111111111111111\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n\"\"\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == []\nassert solution('1') == [[1]]\nassert solution('2') == [[1], [1, 1]]\nassert solution('3') == [[1], [1, 1], [1, 2, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '[1]'\nassert solution('3') == '[1,1,1]'\nassert solution('5') == '[1,1,2,1,1]'\nassert solution('9') == '[1,1,3,3,1,1,4,6,4,1]'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12345') == []\nassert solution('5') == [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\nassert solution('1') == [[1]]\nassert solution('0') == []\nassert solution('1000000') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == [[1]]\nassert solution(2) == [[1], [1,1]]\nassert solution(3) == [[1], [1,1], [1,2,1]]\nassert solution(4) == [[1], [1,1], [1,2,1], [1,3,3,1]]\nassert solution(5) == [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution('8') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('12') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6, 1], [1, 7, 21, 35, 35, 21, 7, 1], [1, 8, 28, 56, 70, 56, 28, 8, 1], [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('[1]') == '[1]'\nassert solution('[1,1]') == '[1,1]'\nassert solution('[1,2,1]') == '[1,3,3,1]'\nassert solution('[1,3,3,1]') == '[1,4,6,4,1]'\nassert solution('[1,3,3,1,4,6,4,1]') == '[1,5,10,10,5,1]'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == []\nassert solution(\"1\") == [[1]]\nassert solution(\"2\") == [[1], [1, 1]]\nassert solution(\"3\") == [[1], [1, 1], [1, 2, 1]]\nassert solution(\"4\") == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"[1]\"\nassert solution(\"3\") == \"[1]\"\nassert solution(\"1\\n1\") == \"[1]\"\nassert solution(\"1\\n3\") == \"[1]\"\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\nlsdjf\\naflkjsdhflkjsdhf') == ['lsdjf@sf.com', 'lsdjf@sf.com']\nassert solution('2\\nlsdjf\\naflkjsdhflkjsdhf\\nsdfa\\nasdfa') == ['lsdjf@sf.com', 'lsdjf@sf.com', 'asdfa@asdfa.com']\nassert solution('3\\nlsdjf\\naflkjsdhflkjsdhf\\nsdfa\\nasdfa\\n\\nasdfa\\nasdfa') == ['lsdjf@sf.com', 'lsdjf@sf.com', 'lsdjf@sf.com', 'asdfa@asdfa.com', 'asdfa@asdfa.com']\n\n\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == ['2@m.com', '3@m.com', '4@m.com', '5@m.com', '6@m.com', '7@m.com', '8@m.com', '9@m.com'])\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16\\nashleyb93@gmail.com\\nserendipity@gmail.com\\nkevinkumar@gmail.com\\nkevinluz@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictoriy33@gmail.com\\nvictor"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123@abc.com\") == [\"123@abc.com\"]\nassert solution(\"123@abc.com, xyz@abc.com, a.com\") == [\"123@abc.com\", \"xyz@abc.com\", \"a.com\"]\nassert solution(\"abc@123.com\") == []\nassert solution(\"abc@123.com, abc@123.com\") == [\"abc@123.com\", \"abc@123.com\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com', 'abcdefghi@apple.com'])) == ['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com']\nassert solution(''.join(['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com', 'abcdefghi@apple.com'])) == ['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com']\nassert solution(''.join(['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com', 'abcdefghi@apple.com'])) == ['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com']\nassert solution(''.join(['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com', 'abcdefghi@apple.com'])) == ['abcdefghi@gmail.com', 'abcdefghi@yahoo.com', 'abcdefghi@microsoft.com']\n\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a@a.com b@b.com') == ['a@a.com', 'b@b.com']\nassert solution('a@1b.com b@1b.net') == ['b@1b.com', 'b@1b.net']\nassert solution('abc@gmail.com') == ['abc@gmail.com']\nassert solution('abc@gmail.com pqr@gmail.com') == ['abc@gmail.com', 'pqr@gmail.com']\nassert solution('abc@gmail.com.au pqr@gmail.com') == ['abc@gmail.com.au', 'pqr@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"test\") == []\n\nassert solution(\"\") == []\n\nassert solution(\"a@a.com\") == [\"a@a.com\"]\n\nassert solution(\"b@b\") == [\"b@b\"]\n\nassert solution(\"c@c.com\") == [\"c@c.com\"]"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nbarackobama@gmail.com\njimmyfallon@gmail.com\nfranklinfallon@gmail.com\n''') == ['franklinfallon@gmail.com', 'jimmyfallon@gmail.com', 'barackobama@gmail.com']\n\nassert solution('''5\nakshaykushyap@gmail.com\nashvini@gmail.com\nashvini@gmail.com\nashvini@gmail.com\nashvini@gmail.com\n''') == ['ashvini@gmail.com', 'akshaykushyap@gmail.com']\n\nassert solution('''1\npankaj@gmail.com\n''') == ['pankaj@gmail.com']\n\nassert solution('''0\n''') == []\nassert solution('''10\n''') == []\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('', '') == []\nassert solution('', 'a@a.com') == ['a@a.com']\nassert solution('', 'b@b.com') == ['b@b.com']\nassert solution('', 'c@c.com') == ['c@c.com']\nassert solution('', 'd@d.com') == ['d@d.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz''') == ['a@gmail.com', 'b@gmail.com', 'c@gmail.com', 'd@gmail.com', 'e@gmail.com', 'f@gmail.com', 'g@gmail.com', 'h@gmail.com', 'i@gmail.com', 'j@gmail.com', 'k@gmail.com', 'l@gmail.com','m@gmail.com', 'n@gmail.com', 'o@gmail.com', 'p@gmail.com', 'q@gmail.com', 'r@gmail.com','s@gmail.com', 't@gmail.com', 'u@gmail.com', 'v@gmail.com', 'w@gmail.com', 'x@gmail.com', 'y@gmail.com', 'z@gmail.com']\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz''') == []\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\naa\nab\nac\nad\nae\naf\nag\nah\nai\naj\nak\nal\nam\nan\nao\nap\naq\nar\nas\nat\nau\nav\naw\nax\nay\naz''') == ['a@gmail.com', 'aa@gmail.com', 'b@gmail.com', 'ab@gmail.com', 'ac@gmail.com', 'ad@gmail.com', 'ae@gmail.com', 'af@gmail.com', 'ag@gmail.com', 'ah@gmail.com', 'ai@gmail.com', 'aj@gmail.com', 'ak@gmail.com', 'al@gmail.com', 'am@gmail.com', 'an@gmail.com', 'ao@gmail.com', 'ap@gmail.com', 'aq@gmail.com', 'ar@gmail.com', 'as@gmail.com', 'at@gmail.com', 'au@gmail.com', 'av@gmail.com', 'aw@gmail.com', 'ax@gmail.com', 'ay@gmail.com', 'az@gmail.com']\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\naa\nab\nac\nad\nae\naf\nag\nah\nai\naj\nak\nal\nam\nan\nao\nap\naq\nar\nas\nat\nau\nav\naw\nax\nay\naz\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbj\nbk\nbl\nbm\nbn\nbo\nbp\nbq\nbr\nbs\nbt\nbu\nbv\nbw\nbx\nby\nbz''') == ['a@gmail.com', 'aa@gmail.com', 'ab@gmail.com', 'ac@gmail.com', 'ad@gmail.com', 'ae@gmail.com', 'af@gmail.com', 'ag@gmail.com', 'ah@gmail.com', 'ai@gmail.com', 'aj@gmail.com', 'ak@gmail.com', 'al@gmail.com', 'am@gmail.com', 'an@gmail.com', 'ao@gmail.com', 'ap@gmail.com', 'aq@gmail.com', 'ar@gmail.com', 'as@gmail.com', 'at@gmail.com', 'au@gmail.com', 'av@gmail.com', 'aw@gmail.com', 'ax@gmail.com', 'ay@gmail.com', 'az@gmail.com', 'ba@gmail.com', 'bb@gmail.com', 'bc@gmail.com', 'bd@gmail.com', 'be@gmail.com', 'bf@gmail.com', 'bg@gmail.com', 'bh@gmail.com', 'bi@gmail.com', 'bj@gmail.com', 'bk@gmail.com', 'bl@gmail.com', 'bm@gmail.com', 'bn@gmail.com', 'bo@gmail.com', 'bp@gmail.com', 'bq@gmail.com', 'br@gmail.com', 'bs@gmail.com', 'bt@gmail.com', 'bu@gmail.com', 'bv@gmail.com', 'bw@gmail.com', 'bx@gmail.com', 'by@gmail.com', 'bz@gmail.com']\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\naa\nab\nac\nad\nae\naf\nag\nah\nai\naj\nak\nal\nam\nan\nao\nap\naq\nar\nas\nat\nau\nav\naw\nax\nay\naz\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbj\nbk\nbl\nbm\nbn\nbo\nbp\nbq\nbr\nbs\nbt\nbu\nbv\nbw\nbx\nby\nbz''') == []\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == [0, 1, 1, 2, 3, 5, 8, 13]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == [0, 1, 1, 8]\nassert solution(\"10\") == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512]\nassert solution(\"99\") == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512, 927, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 65044435206, 10610209857723, 17167680177565]\nassert solution(\"100\") == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512, 927, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 65044435206, 10610209857723, 17167680177565, 27442909690695, 46136489263161, 72308001616213, 96909120361328, 14801703859649, 233288979591884, 37713398333599, 61074386564288, 986377289051665, 153672456860352, 250354026953737, 41863926603721, 72712127381935]\n\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(6) == [0, 1, 1, 8, 27, 64]\n\nprint(solution(int(input())))"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == [0, 1, 1, 8]\nassert solution('6') == [0, 1, 1, 8, 27, 64]\nassert solution('0') == []\nassert solution('2') == [0, 1]\n\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == []\nassert solution(1) == [1]\nassert solution(2) == [1, 1]\nassert solution(3) == [1, 1, 2]\nassert solution(4) == [1, 1, 2, 3]\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5) == [0, 1, 1, 8, 27]\n\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == [0, 1, 1, 8, 27, 144, 233, 377, 610, 987]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"[1, 1, 2, 3, 5, 8, 13]\""
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '0'\nassert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '1'\nassert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '2'\nassert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n        <name>Harshil</name>\n        <email>harshilgoel@gmail.com</email>\n        </author>\n    <contributor>\n        <name>Pratik Goel</name>\n        <email>pratikgoel@gmail.com</email>\n    </contributor>\n    <id>\n        <updated>2013-12-25T12:00:00</updated>\n        <shortlink>https://hackerrank.com/contests/hackerearth</shortlink>\n        <fulllink>https://hackerrank.com/contests/hackerearth</fulllink>\n    </id>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/contests/hackerearth'/>\n    <title type='text/html'>Contests</title>\n    <link type='text/html' href='http://hackerrank.com/contests/hackerearth'/>\n    <id>\n        <updated>2013-12-25T12:00:00</updated>\n        <shortlink>https://hackerrank.com/contests/hackerearth</shortlink>\n        <fulllink>https://hackerrank.com/contests/hackerearth</fulllink>\n    </id>\n    <description type='text/html'>\n        <p>\n        <b>Description: </b>Contests are one of the most exciting challenges for Hackerearth students. Most of the fun is in solving a problem, which is actually an algorithm. The test case is not limited to a specific language but can have a maximum of two languages.\n        </p>\n        <p>\n        You are given a valid XML document, and you have to print the maximum level of nesting in it. Take the depth of the root as 0.\n        </p>\n        <p>\n        An example is shown below.\n        </p>\n        <p>\n        <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        </feed>\n        </p>\n        <p>\n        Note: The XML document may have multiple root nodes.\n        </p>\n        </description>\n    </feed>\n</entry>\n</feed>\n''') == '3'\nassert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '2'\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\"\"\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\"\"\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 0\n\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 0\n\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type='text'>\\n<!--Optional:-->\\n<text xml:lang='en'> \\n</text>\\n<![CDATA[ \\n<table>\\n<tr><td><b>Table</b></td><td><b>Content</b></td></tr>\\n<tr><td>1</td><td>2</td></tr>\\n<tr><td>3</td><td>4</td></tr>\\n<tr><td>5</td><td>6</td></tr>\\n</table>\\n]]>\\n</content>\\n<encoding format='base64'/>\\n<id>1</id>\\n<updated>2013-12-25T12:00:01</updated>\\n</entry>\\n</feed>\") == 1\n\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type='text'>\\n<!--Optional:-->\\n<text xml:lang='en'> \\n</text>\\n<![CDATA[ \\n<table>\\n<tr><td><b>Table</b></td><td><b>Content</b></td></tr>\\n<tr><td>1</td><td>2</td></tr>\\n<tr><td>3</td><td>4</td></tr>\\n<tr><td>5</td><td>6</td></tr>\\n</table>\\n]]>\\n</content>\\n<encoding format='base64'/>\\n<id>1</id>\\n<updated>2013-12-25T12:00:01</updated>\\n</entry>\\n</feed>\") == 0\n\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type='text'>\\n<!--Optional:-->\\n<text xml:lang='en'> \\n</text>\\n<![CDATA[ \\n<table>\\n<tr><td><b>Table</b></td><td><b>Content</b></td></tr>\\n<tr><td>1</td><td>2</td></tr>\\n<tr><td>3</td><td>4</td></tr>\\n<tr><td>5</td><td>6</td></tr>\\n</table>\\n]]>\\n</content>\\n<encoding format='base64'/>\\n<id>1</id>\\n<updated>2013-12-25T12:00:01</updated>\\n</entry>\\n</feed>\") == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"<a><b/></a>\") == 0\nassert solution(\"<a><b><c/></b></a>\") == 1\nassert solution(\"<a><b><c><d/></c></b></a>\") == 3\nassert solution(\"<a><b><c><d><e/></d></c></b></a>\") == 4\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 0\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 1\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 2\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 0\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 1\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>') == 0\nassert solution('<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>') == 0\nassert solution('<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<id>1</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n<entry>\n<id>2</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n</feed>') == 2\n\nassert solution('<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<id>1</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n<entry>\n<id>2</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n</feed>') == 3\n\nassert solution('<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<id>1</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n<entry>\n<id>2</id>\n<title lang='en'>Algorithms</title>\n<link rel='alternate' type='text/html' href='http://www.hackerrank.com/'/>\n<author>\n<name>Hemant</name>\n</author>\n<updated>2013-12-25T12:00:00</updated>\n<content type='text'>\n<![CDATA[\n<p>This is the first paragraph.\n<h2>Second Heading</h2>\n<p>This is the second.\n<h2>Third Heading</h2>\n<p>This is the third.\n]]>\n</content>\n</entry>\n</feed>') == 0"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<xml><foo/><bar/><foo><bar/></foo></xml>') == 2\nassert solution('<xml><foo/><bar/><foo><bar/></foo></bar></xml>') == 3\nassert solution('<xml><foo/><bar/><foo><bar/><bar/></foo></bar></xml>') == 2\nassert solution('<xml><foo/><bar/><foo><bar/><bar/></foo></bar></xml>') == 3\nassert solution('<xml><foo/><bar/><foo><bar/></foo></bar></xml>') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text/html\">\\n<!--profile picture-->\\n<p>\\n<br>\\n</p>\\n</content>\\n<id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>\\n<!--h1>\\nDeveloper\\n</h1>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n</id>\\n</entry>\\n</feed>') == 0\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text/html\">\\n<!--profile picture-->\\n<p>\\n<br>\\n</p>\\n</content>\\n<id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>\\n<!--h1>\\nDeveloper\\n</h1>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n</id>\\n</entry>\\n</feed>') == 0\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text/html\">\\n<!--profile picture-->\\n<p>\\n<br>\\n</p>\\n</content>\\n<id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>\\n<!--h1>\\nDeveloper\\n</h1>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n</id>\\n</entry>\\n</feed>') == 0\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text/html\">\\n<!--profile picture-->\\n<p>\\n<br>\\n</p>\\n</content>\\n<id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>\\n<!--h1>\\nDeveloper\\n</h1>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n</id>\\n</entry>\\n</feed>') == 0\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text/html\">\\n<!--profile picture-->\\n<p>\\n<br>\\n</p>\\n</content>\\n<id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>\\n<!--h1>\\nDeveloper\\n</h1>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n</id>\\n</entry>\\n</feed>') == 0"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('<a><b><c/></b></a>') == 2\nassert solution('<a>\\n<b>\\n<c/>\\n<d>\\n<e>\\n<f>\\n<g>\\n<h>\\n<i>\\n<j>\\n<k>\\n<l>\\n<m>\\n<n>\\n<o>\\n<p>\\n<q>\\n<r>\\n<s>\\n<t>\\n<u>\\n<v>\\n<w>\\n<x>\\n<y>\\n<z>\\n<A>\\n<B>\\n<C>\\n<D>\\n<E>\\n<F>\\n<G>\\n<H>\\n<I>\\n<J>\\n<K>\\n<L>\\n<M>\\n<N>\\n<O>\\n<P>\\n<Q>\\n<R>\\n<S>\\n<T>\\n<U>\\n<V>\\n<W>\\n<X>\\n<Y>\\n<Z>\\n<0>\\n<1>\\n<2>\\n<3>\\n<4>\\n<5>\\n<6>\\n<7>\\n<8>\\n<9>\\n') == 9\nprint(solution('<a><b><c/></b></a>'))\n\nOutput:\n0\n'''\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"<feed xml:lang='en'> <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>\") == 0\nassert solution(\"<feed xml:lang='en'> <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>\") == 1\nassert solution(\"<feed xml:lang='en'> <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> <entry> <title>Min of me and my wife</title> <link rel='alternate' type='text/html' href='http://google.com/'/> <updated>2013-12-25T12:00:00</updated> </entry> </feed>\") == 2\nassert solution(\"<feed xml:lang='en'> <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> <entry> <title>Min of me and my wife</title> <link rel='alternate' type='text/html' href='http://google.com/'/> <updated>2013-12-25T12:00:00</updated> </entry> <entry> <title>What does the fox say</title> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </entry> </feed>\") == 3\nassert solution(\"<feed xml:lang='en'> <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> <entry> <title>Min of me and my wife</title> <link rel='alternate' type='text/html' href='http://google.com/'/> <updated>2013-12-25T12:00:00</updated> </entry> <entry> <title>What does the fox say</title> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </entry> </feed>\") == 4"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11 13 5\\n22 13 9\\n23 7\\n907 8\\n7 9 8\\n7 8 9\\n9 8 7\\n8 7 9\\n8 7 7\\n9 8 7\") == \"YES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\"\n\n=====Sample Input=====\n4\n907 893 123\n145678901 23\n89101112 456\n89101112 457\n\n=====Sample Output=====\nYES\nNO\nNO\nYES\n\n'''"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n71234567890\") == \"YES\\nNO\\nNO\\nNO\\nNO\\nNO\"\nassert solution(\"1\\n12345678901234567890\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nYES\"\nassert solution(\"2\\n1234567890\") == \"YES\\nNO\"\nassert solution(\"2\\n12345678901234567890\") == \"YES\\nNO\\nNO\"\nassert solution(\"2\\n1234567890 \") == \"YES\\nNO\\nNO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9172690928') == \"YES\"\nassert solution('5678345698') == \"YES\"\nassert solution('1') == \"NO\"\nassert solution('7') == \"NO\"\nassert solution('1234567890') == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 1819 6554') == 'YES'\nassert solution('9 9 9 9 9 9 9 9') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9') == 'NO'\nassert solution('1 7 8 9') == 'YES'\nassert solution('2 8 9') == 'YES'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9085552635\n9091234567\n12345678910\n512345678910\n1234567890''') == \"YES\\nYES\\nNO\\nNO\\nNO\"\nassert solution('''123\n456\n12345678910\n512345678910\n1234567890''') == \"YES\\nNO\\nNO\\nYES\\nNO\"\nassert solution('''789\n123\n56789\n123456789''') == \"YES\\nNO\\nNO\\nYES\"\nassert solution('''12\n34\n56789''') == \"YES\\nNO\\nNO\"\nassert solution('''90855\n526635\n526635\n526635\n526635\n526635\n526635\n526635\n526635\n526635''') == \"YES\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\")\nassert solution(\"123456789\")\nassert solution(\"8491234567\")\nassert solution(\"1234\")\nassert solution(\"12345678\")\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1234567890\n01234567890\n901234567890\n0101234567890\n0101234567891\n010123456789101\n0101234567891010\n010123456789101001\n01012345678910101000\n0101234567891010\n010123456789101000\n0101234567891010000\n01012345678910100000\n01012345678910100000000\n0101234567891010000000\n01012345678910100000000000\n01012345678910100000000000000\n''') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\n\nassert solution('''\n73423478\n\n73423478\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n73423478\n73423478\n\n73423478\n73423478\n73423478\n\n73423478\n\n7"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('777777') == 'YES'\nassert solution('766666') == 'NO'\nassert solution('9777777') == 'NO'\nassert solution('999999') == 'NO'\nassert solution('1234567') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('712345678') == 'YES'\nassert solution('912345678') == 'YES'\nassert solution('7123456789') == 'YES'\nassert solution('71234567890') == 'YES'\nassert solution('1234567890') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['7777777777', '9999999999'])) == 'NO\\nNO'"
    }
]